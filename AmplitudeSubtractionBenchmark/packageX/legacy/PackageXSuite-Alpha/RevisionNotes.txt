Package-X 3.0 Alpha Revision Notes

----- September 14, 2020 -----

- k.PolVecE[k,_] and k.PolVecEC[k,_] are no longer automatically replaced with 0.
- Bug fixes in AmplitudeInnerProduct
- AmplitudeInnerProduct with "OptimizeExpression"->True now produces a block of code for more efficient numerical evaluation.

----- September 19, 2020 -----

- FermionLineReduce now has attribute Listable.
- LoopIntegrate[num,{},{}] now correctly returns num.

- Contract now takes option DiracAlgebra->True.
- Contract now works with Inactive[LoopIntegrate]

----- September 26, 2020 -----

- LoopRefine with setting Part->UVDivergent can now return UV divergent parts of 5- and higher point functions (PVX).

----- October 12, 2020 -----

- FermionLineTranspose now accepts a template in the second argument against which all FermionLineProduct objects in input is transformed.

- Added documentation page for FermionLineTranspose.

----- December 13, 2020 -----

- Fixed a bug in LoopRefine for the setting Part->Discontinuity
- Fixed a bug in ContinuedDiLog

----- December 18, 2020 -----

- Fixed a bug in D0Expand affecting ScalarD0IR12

----- January 18, 2021 -----

- Fixed a bug causing a crash when Package-X is initialized on a date after January 1, 2021.

----- January 7, 2021 -----

- Fixed a bug due to an inconsistency in Arg in Mathematica 12.0 and later that caused machine precision and arbitrary precision evaluation of ScalarD0 to return inconsistent results for three non-vanishing internal masses.

----- Feb 3, 2021 -----

- Fixed a bug causing error messages to be issued on initialization (with Get["X`"] or << X`) in Mathematica 12.2 or later.

----- June 7, 2021 -----

- Functionality of PVReduce is now built into Package-X, and available as LoopReduce.  Delete PVReduce.wl from your system since it no longer works correctly as of this version.  LoopReduce[expr] algebraically reduces scalar loop functions in 'expr' to a set of basis functions.

----- July 8, 2021 -----

- Fixed a bug in FermionLineTranspose that caused unwanted transpositions of FermionLine objects when a template with equal momenta were given.

----- December 10, 2021 -----

- Fixed a bug in FermionLineReduce that occasionally generated error messages when the input contained a Levi-Civita symbol.

----- June 21, 2021 -----

- Fixed a bug in LoopRefine existing since version 2.1 that caused the reduction of single-scale IR divergent tensor PVD functions to return an incorrect result.

- AmplitudeInnerProduct now supports 'truncated' amplitudes with free indices.

Notebook[{
Cell[BoxData[GridBox[{
   {Cell["COLLIERLINK SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"See Also \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"CollierCompile\"\>":>
       Documentation`HelpLookup[
       "paclet:CollierLink/ref/CollierCompile"], "\<\"SeparateUV\"\>":>
       Documentation`HelpLookup[
       "paclet:CollierLink/ref/SeparateUV"], "\<\"UVDiv\"\>":>
       Documentation`HelpLookup[
       "paclet:CollierLink/ref/UVDiv"], "\<\"Export\"\>":>
       Documentation`HelpLookup["paclet:ref/Export"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"More About \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"CollierLink\"\>":>
       Documentation`HelpLookup["paclet:CollierLink/guide/CollierLink"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"URL \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"CollierLink/ref/CollierCodeGenerate\"\>":>
       None, "\<\"Copy Mathematica url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["CollierLink/ref/CollierCodeGenerate"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/mathematica/CollierLink/ref/\
CollierCodeGenerate.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web url\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
            "http://reference.wolfram.com/mathematica/", 
             "CollierLink/ref/CollierCodeGenerate", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell["CollierCodeGenerate", "ObjectName",
 CellID->1224892054],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["CollierCodeGenerate",
        BaseStyle->"Link",
        ButtonData->"paclet:CollierLink/ref/CollierCodeGenerate"], "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["x", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["x", "TI"], 
           StyleBox["2", "TR"]], ",", "\[Ellipsis]"}], "}"}], ",", 
        StyleBox["expr", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     " \[LineSeparator]generates source code that defines a function with \
arguments ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["i", "TI"]]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     " to evaluate ",
     Cell[BoxData[
      StyleBox["expr", "TI"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     " using the COLLIER library."
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       ButtonBox["CollierCodeGenerate",
        BaseStyle->"Link",
        ButtonData->"paclet:CollierLink/ref/CollierCodeGenerate"], "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["x", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["x", "TI"], 
           StyleBox["2", "TR"]], ",", "\[Ellipsis]"}], "}"}], ",", 
        RowBox[{
         ButtonBox["Module",
          BaseStyle->"Link",
          ButtonData->"paclet:ref/Module"], "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SubscriptBox[
             StyleBox["y", "TI"], 
             StyleBox["1", "TR"]], ",", 
            SubscriptBox[
             StyleBox["y", "TI"], 
             StyleBox["2", "TR"]], ",", "\[Ellipsis]"}], "}"}], ",", 
          StyleBox["expr", "TI"]}], "]"}]}], "]"}]], "InlineFormula",
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     "\[LineSeparator]generates source code with local variables ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["y", "TI"], 
       StyleBox["i", "TI"]]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {None, {None}}, 
   "RowsIndexed" -> {}}},
 CellID->982511436],

Cell[CellGroupData[{

Cell["Details", "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellGroupingRules->{"SectionGrouping", 50},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       Cell[
        BoxData[
         ButtonBox[
          FrameBox[
           StyleBox[
            RowBox[{"MORE", " ", "INFORMATION"}], "NotesFrameText"], 
           StripOnInput -> False], Appearance -> {Automatic, None}, BaseStyle -> 
          None, ButtonFunction :> (FrontEndExecute[{
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], All, ButtonCell], 
             FrontEndToken["OpenCloseGroup"], 
             FrontEnd`SelectionMove[
              FrontEnd`SelectedNotebook[], After, CellContents]}]& ), 
          Evaluator -> None, Method -> "Preemptive"]]]], "NotesSection", 
      CellSize -> {5000, Inherited}], 
     FEPrivate`If[
      FEPrivate`Or[
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 
      TextData[
       ButtonBox[
        Cell[
         TextData[{
           Cell[
            BoxData[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[24]]]], "Details and Options"}], "NotesSection", 
         CellSize -> {5000, Inherited}], Appearance -> {Automatic, None}, 
        BaseStyle -> None, ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& ), Evaluator -> 
        None, Method -> "Preemptive"]], None]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 14, Inherited]]},
 CellID->1925690730],

Cell[CellGroupData[{

Cell[TextData[{
 "All arguments ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["x", "TI"], 
   StyleBox["i", "TI"]]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " and numerical quantities in ",
 Cell[BoxData[
  StyleBox["expr", "TI"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " are assumed double complex type."
}], "Notes",
 CellID->1067943069],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CollierCodeGenerate",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCodeGenerate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " recognizes a limited set of Wolfram Language symbols.  As of this version, \
the following symbols are supported:"
}], "Notes",
 CellID->1853025596],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], Cell[TextData[ButtonBox["Functions",
     BaseStyle->"Link",
     ButtonData->"paclet:tutorial/SomeMathematicalFunctions"]], "TableText"], 
    Cell[TextData[{
     Cell[BoxData[
      ButtonBox["Plus",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Plus"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     ", ",
     Cell[BoxData[
      ButtonBox["Times",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Times"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     ", ",
     Cell[BoxData[
      ButtonBox["Power",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Power"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     ", ",
     Cell[BoxData[
      ButtonBox["Log",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Log"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     ", ",
     Cell[BoxData[
      ButtonBox["Conjugate",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Conjugate"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     ", ",
     Cell[BoxData[
      ButtonBox["Re",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Re"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     ", ",
     Cell[BoxData[
      ButtonBox["Im",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Im"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     ", ",
     Cell[BoxData[
      ButtonBox["Abs",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Abs"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     ", ",
     Cell[BoxData[
      ButtonBox["Arg",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Arg"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]]
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[TextData[ButtonBox["Constants",
     BaseStyle->"Link",
     ButtonData->"paclet:tutorial/MathematicalConstants"]], "TableText"], 
    Cell[TextData[Cell[BoxData[
     ButtonBox["I",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/I"]], "InlineFormula",
     ShowStringCharacters->False,
     FontFamily->FEPrivate`If[
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
       Inherited]]], "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell[TextData[ButtonBox["Numbers",
     BaseStyle->"Link",
     ButtonData->"paclet:tutorial/TypesOfNumbers"]], "TableText"], Cell[
    TextData[{
     Cell[BoxData[
      ButtonBox["Integer",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Integer"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     ", ",
     Cell[BoxData[
      ButtonBox["Real",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Real"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     ", ",
     Cell[BoxData[
      ButtonBox["Complex",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Complex"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     ", ",
     Cell[BoxData[
      ButtonBox["Rational",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Rational"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]]
    }], "TableText"]}
  }]], "2ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True}}}},
 CellID->54365696],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CollierCodeGenerate",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCodeGenerate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " recognizes ",
 Cell[BoxData[
  ButtonBox["PVA",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/PVA"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData[
  ButtonBox["PVB",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/PVB"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData[
  ButtonBox["PVC",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/PVC"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData[
  ButtonBox["PVD",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/PVD"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData[
  ButtonBox["PVX",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/PVX"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    ButtonBox["Derivative",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Derivative"], "[", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "]"}], "[", 
   ButtonBox["PVB",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/PVB"], "]"}]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", and appropriately inserts calls to COLLIER library functions ",
 StyleBox["TN_cll", "InlineCode"],
 " and ",
 StyleBox["DB_cll", "InlineCode"],
 " in the source code."
}], "Notes",
 CellID->909200036],

Cell[TextData[{
 "Typically, the output of ",
 Cell[BoxData[
  ButtonBox["LoopIntegrate",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/LoopIntegrate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", suitably manipulated, is supplied as the input ",
 Cell[BoxData[
  StyleBox["expr", "TI"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ".  Since ",
 Cell[BoxData[
  ButtonBox["LoopIntegrate",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/LoopIntegrate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " gives a result valid for any value of the kinematic variables, the \
resulting code may be evaluated with complex internal masses."
}], "Notes",
 CellID->124145037],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CollierCodeGenerate",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCodeGenerate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " has attributes ",
 Cell[BoxData[
  ButtonBox["HoldAll",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/HoldAll"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ".  Use ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["CollierCodeGenerate",
    BaseStyle->"Link",
    ButtonData->"paclet:CollierLink/ref/CollierCodeGenerate"], "[", 
   RowBox[{"\[Ellipsis]", ",", 
    RowBox[{
     ButtonBox["Evaluate",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Evaluate"], "[", 
     StyleBox["expr", "TI"], "]"}]}], "]"}]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to evaluate ",
 Cell[BoxData[
  StyleBox["expr", "TI"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " symbolically before generating code."
}], "Notes",
 CellID->1963247742],

Cell["The following options can be given:", "Notes",
 CellID->2055355401],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "Constants", 
    RowBox[{"{", "}"}], Cell[
    "variables declared as constants", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<ExpressionOptimization\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "whether to optimize the input expression", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<InlineExternalDefinitions\>\"", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "whether to insert ",
     Cell[BoxData[
      ButtonBox["OwnValues",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/OwnValues"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     " of symbols"
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<Language\>\"", "\"\<Fortran\>\"", 
    Cell["language in which source code is written", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<FunctionName\>\"", 
    "\"\<generatedFunction\>\"", Cell[
    "name of exported function", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<VariableNames\>\"", 
    ButtonBox["Automatic",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Automatic"], Cell[
    "how variables are named in source code", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<Externals\>\"", 
    RowBox[{"{", "}"}], Cell["\<\
additional code generation rules for variables whose definitions are external\
\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<PreambleLines\>\"", 
    RowBox[{"{", "}"}], Cell["\<\
addtional lines of code to be inserted before function definition\
\>", "TableText"]},
   {Cell["      ", "TableRowIcon"], "\"\<PostambleLines\>\"", 
    RowBox[{"{", "}"}], Cell["\<\
addtional lines of code to be inserted after function definition\
\>", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, None, None, None, None, None, None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{
  "Rows" -> {{True, True, True, True, True, True, True, True, True, True}}}},
 CellID->865025879],

Cell[TextData[{
 "The option ",
 Cell[BoxData["Constants"], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " should be given as a list of rules of the form ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      StyleBox["sym", "TI"], 
      StyleBox["1", "TR"]], "\[Rule]", 
     SubscriptBox[
      StyleBox["val", "TI"], 
      StyleBox["1", "TR"]]}], ",", 
    RowBox[{
     SubscriptBox[
      StyleBox["sym", "TI"], 
      StyleBox["2", "TR"]], "\[Rule]", 
     SubscriptBox[
      StyleBox["val", "TI"], 
      StyleBox["2", "TR"]]}], ",", "\[Ellipsis]"}], "}"}]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 "."
}], "Notes",
 CellID->2003212317],

Cell[TextData[{
 "Possible settings for ",
 Cell[BoxData["\"\<VariableNames\>\""], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " are ",
 Cell[BoxData[
  ButtonBox["Automatic",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Automatic"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " or ",
 Cell[BoxData["Verbatim"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", or a length-three list of ",
 Cell[BoxData[
  ButtonBox["Automatic",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Automatic"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " or ",
 Cell[BoxData["Verbatim"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to individually control names of arguments, local variables, and constants."
}], "Notes",
 CellID->1894382621],

Cell[TextData[{
 "The option ",
 Cell[BoxData["\"\<Externals\>\""], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 "  should be given as a list of rules of the form ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      StyleBox["sym", "TI"], 
      StyleBox["1", "TR"]], "\[Rule]", "\"\<name1\>\""}], ",", 
    RowBox[{
     SubscriptBox[
      StyleBox["sym", "TI"], 
      StyleBox["2", "TR"]], "\[Rule]", "\"\<name2\>\""}]}], "}"}]], 
  "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 "."
}], "Notes",
 CellID->12339057],

Cell[TextData[{
 "The options ",
 Cell[BoxData["\"\<PreambleLines\>\""], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData["\"\<PostambleLines\>\""], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " should be given as a list of strings."
}], "Notes",
 CellID->1584795258]
}, Open  ]],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "EXAMPLES", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "PrimaryExamplesSection", CellSize -> {5000, Inherited}], 
     FEPrivate`If[
      FEPrivate`Or[
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 
      TextData[
       ButtonBox[
        Cell[
         TextData[{
           Cell[
            BoxData[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[24]]]], "Examples", "  ", 
           Cell["(10)", "ExampleCount"]}], "PrimaryExamplesSection", 
         CellSize -> {5000, Inherited}], BaseStyle -> None, 
        Appearance -> {Automatic, None}, Evaluator -> None, Method -> 
        "Preemptive", ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], None]], 
    None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 14, Inherited]]},
 CellTags->"PrimaryExamplesSection",
 CellID->358055173],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->584113717],

Cell["\<\
Fortran code to evaluate the scalar 3-point function using the COLLIER \
library:\
\>", "ExampleText",
 CellID->1497377261],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"qSq", ",", "m"}], "}"}], ",", 
   RowBox[{"PVC", "[", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "qSq", ",", "m", ",", 
     "m", ",", "m"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1128869257],

Cell[BoxData["\<\"!!**********************************************************\
*****************!!\\n!! This code was automatically created using Package-X \
v2.1.0 CollierLink    !!\\n!!  routine CollierCodeGenerate[] by Hiren H. \
Patel, and requires the        !!\\n!!  Fortran library COLLIER v1.1 by A. \
Denner, S. Dittmaier, L. Hofer        !!\\n!!  for numerical evaluation.      \
                                          !!\\n!!-----------------------------\
----------------------------------------------!!\\n!!  Language: Fortran      \
            Creation date: Aug-15-2017 20:22      !!\\n!!  Function name: \
generatedFunction   Arguments (2): {qSq,m}                !!\\n!!  Author: \
hhpatel                                                          !!\\n!!  \
Initialization requirement: Init_cll(3,0,'')                             \
!!\\n!!***********************************************************************\
****!!\\n\\n  DOUBLE COMPLEX FUNCTION generatedFunction(inputVar1, inputVar2)\
\\n    \\n    USE COLLIER\\n    IMPLICIT NONE\\n    \\n    DOUBLE COMPLEX, \
INTENT(IN) :: inputVar1  ! qSq\\n    DOUBLE COMPLEX, INTENT(IN) :: inputVar2  \
! m\\n    \\n    !Allocate memory for calculated results of \
Passarino-Veltman,\\n    !   coefficient functions, and their UV divergent \
parts\\n    DOUBLE COMPLEX :: pvx1(1), pvx1uv(1)  ! \
PVC[_,_,_,0,0,qSq,m,m,m]\\n    \\n    !Evaluation code\\n    CALL \
TN_cll(pvx1,pvx1uv,(/DCMPLX(0d0,0d0),DCMPLX(0d0,0d0),inputVar1/),(/(inputVar2*\
*2),(inputVar2**2),(inputV&\\n&ar2**2)/),3,0)\\n    generatedFunction = \
pvx1(1)\\n  \\n  END FUNCTION\"\>"], "Output",
 ImageSize->{582, 433},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->1809396463]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "Options",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(7)", "ExampleCount"]
  }], "ExampleSection"],
  $Line = 0; Null]], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1763164232],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "\"ExpressionOptimization\"",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->451882987],

Cell[TextData[{
 "By default, the input expression is optimized by ",
 Cell[BoxData["Experimental`OptimizeExpression"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", which makes abbreviations for common subexpressions, and storing them as \
local variables:"
}], "ExampleText",
 CellID->738111618],

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rootS", ",", "m"}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"rootS", "^", "2"}], "/", 
     RowBox[{"m", "^", "2"}]}], "+", 
    RowBox[{"PVB", "[", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"rootS", "^", "2"}], ",", "m", ",", "m"}], "]"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1858633194],

Cell["Turn off optimization:", "ExampleText",
 CellID->708250486],

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"rootS", ",", "m"}], "}"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"rootS", "^", "2"}], "/", 
     RowBox[{"m", "^", "2"}]}], "+", 
    RowBox[{"PVB", "[", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"rootS", "^", "2"}], ",", "m", ",", "m"}], "]"}]}], ",", 
   RowBox[{"\"\<ExpressionOptimization\>\"", "\[Rule]", "False"}]}], 
  "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1805217051]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "\"Externals\"",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1295186717],

Cell["\<\
Additional rules for code generation can be provided for symbols and \
functions, whose definitions may be provided from an external source:\
\>", "ExampleText",
 CellID->918618152],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", "t", "}"}], ",", 
   RowBox[{
    FractionBox["\[Alpha]", 
     RowBox[{"16", 
      SuperscriptBox["\[Pi]", "2"]}]], 
    RowBox[{"PVC", "[", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "t", ",", "me", ",", 
      "me", ",", "me"}], "]"}]}], ",", 
   RowBox[{"\"\<Externals\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"me", "\[Rule]", "\"\<mass_el\>\""}], ",", 
      RowBox[{"\[Alpha]", "\[Rule]", "\"\<coup_em\>\""}], ",", 
      RowBox[{"\[Pi]", "\[Rule]", "\"\<pi\>\""}]}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1447162314],

Cell[BoxData["\<\"!!**********************************************************\
*****************!!\\n!! This code was automatically created using Package-X \
v2.1.0 CollierLink    !!\\n!!  routine CollierCodeGenerate[] by Hiren H. \
Patel, and requires the        !!\\n!!  Fortran library COLLIER v1.1 by A. \
Denner, S. Dittmaier, L. Hofer        !!\\n!!  for numerical evaluation.      \
                                          !!\\n!!-----------------------------\
----------------------------------------------!!\\n!!  Language: Fortran      \
            Creation date: Aug-19-2017 11:59      !!\\n!!  Function name: \
generatedFunction   Arguments (1): {t}                    !!\\n!!  Author: \
hhpatel                                                          !!\\n!!  \
Minimum initialization requirement: Init_cll(3,0,'')                     \
!!\\n!!-----------------------------------------------------------------------\
----!!\\n!!  Required external definitions:                                   \
        !!\\n!!    mass_el, coup_em, pi                                       \
            !!\\n!!***********************************************************\
****************!!\\n\\n  DOUBLE COMPLEX FUNCTION \
generatedFunction(inputVar1)\\n    \\n    USE COLLIER\\n    IMPLICIT NONE\\n  \
  \\n    DOUBLE COMPLEX, INTENT(IN) :: inputVar1  ! t\\n    \\n    !Allocate \
memory for calculated results of Passarino-Veltman,\\n    !   coefficient \
functions, and their UV divergent parts\\n    DOUBLE COMPLEX :: pvx1(1), \
pvx1uv(1)  ! PVC[_,_,_,0,0,t,me,me,me]\\n    \\n    !Local variables\\n    \
DOUBLE COMPLEX :: localVar1  ! optVar1\\n    DOUBLE COMPLEX :: localVar2  ! \
optVar2\\n    DOUBLE COMPLEX :: localVar3  ! optVar3\\n    \\n    !Evaluation \
code\\n    localVar1 = (pi**2)\\n    localVar2 = (16.d0*localVar1)\\n    \
localVar3 = (1/(localVar2))\\n    CALL \
TN_cll(pvx1,pvx1uv,(/DCMPLX(0d0,0d0),DCMPLX(0d0,0d0),inputVar1/),(/(mass_el**\
2),(mass_el**2),(mass_el**2&\\n&)/),3,0)\\n    generatedFunction = \
((coup_em*localVar3)*pvx1(1))\\n  \\n  END FUNCTION\"\>"], "Output",
 ImageSize->{581, 568},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->1877523297]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "\"FunctionName\"",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1308906627],

Cell["Choose a custom name for the exported function:", "ExampleText",
 CellID->103278107],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", "m", "}"}], ",", 
   RowBox[{"PVA", "[", 
    RowBox[{"0", ",", "m"}], "]"}], ",", 
   RowBox[{"\"\<FunctionName\>\"", "\[Rule]", "\"\<scalarTadpole\>\""}]}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1592291239],

Cell[BoxData["\<\"!!**********************************************************\
*****************!!\\n!! This code was automatically created using Package-X \
v2.1.0 CollierLink    !!\\n!!  routine CollierCodeGenerate[] by Hiren H. \
Patel, and requires the        !!\\n!!  Fortran library COLLIER v1.1 by A. \
Denner, S. Dittmaier, L. Hofer        !!\\n!!  for numerical evaluation.      \
                                          !!\\n!!-----------------------------\
----------------------------------------------!!\\n!!  Language: Fortran      \
            Creation date: Aug-15-2017 20:22      !!\\n!!  Function name: \
scalarTadpole       Arguments (1): {m}                    !!\\n!!  Author: \
hhpatel                                                          !!\\n!!  \
Initialization requirement: Init_cll(1,0,'')                             \
!!\\n!!***********************************************************************\
****!!\\n\\n  DOUBLE COMPLEX FUNCTION scalarTadpole(inputVar1)\\n    \\n    \
USE COLLIER\\n    IMPLICIT NONE\\n    \\n    DOUBLE COMPLEX, INTENT(IN) :: \
inputVar1  ! m\\n    \\n    !Allocate memory for calculated results of \
Passarino-Veltman,\\n    !   coefficient functions, and their UV divergent \
parts\\n    DOUBLE COMPLEX :: pvx1(1), pvx1uv(1)  ! PVA[_,m]\\n    \\n    \
!Evaluation code\\n    CALL TN_cll(pvx1,pvx1uv,(/(inputVar1**2)/),1,0)\\n    \
scalarTadpole = pvx1(1)\\n  \\n  END FUNCTION\"\>"], "Output",
 ImageSize->{572, 379},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->980911532]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "\"InlineExternalDefinitions\"",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->2118683768],

Cell[TextData[{
 "By default, variables defined in the current ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " session are not passed into the argument of ",
 Cell[BoxData[
  ButtonBox["CollierCodeGenerate",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCodeGenerate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ":"
}], "ExampleText",
 CellID->1553621305],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"me", "=", "0.511"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", "s", "}"}], ",", 
   RowBox[{"PVB", "[", 
    RowBox[{"0", ",", "0", ",", "s", ",", "me", ",", "me"}], "]"}]}], 
  "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->728884301],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CollierCodeGenerate", "::", "unksymb"}], "MessageName"], ":", 
  " ", "\<\"An unknown \[NoBreak]\\!\\(\\\"symbol\\\"\\)\[NoBreak], \
\[NoBreak]\\!\\(me\\)\[NoBreak], was found when generating code. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:CollierLink/ref/CollierCodeGenerate\
\\\", ButtonNote -> \
\\\"CollierLink`CollierCodeGenerate::unksymb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellLabel->"During evaluation of In[1]:=",
 CellID->106039791],

Cell[BoxData["$Failed"], "Output",
 ImageSize->{54, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->1946823974]
}, Open  ]],

Cell[TextData[{
 "Set ",
 Cell[BoxData[
  RowBox[{"\"\<InlineExternalDefinitions\>\"", "\[Rule]", 
   ButtonBox["True",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/True"]}]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to specify that ",
 Cell[BoxData[
  ButtonBox["OwnValues",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/OwnValues"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " of symbols should be inlined during code generation:"
}], "ExampleText",
 CellID->1904964387],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", "s", "}"}], ",", 
   RowBox[{"PVB", "[", 
    RowBox[{"0", ",", "0", ",", "s", ",", "me", ",", "me"}], "]"}], ",", 
   RowBox[{"\"\<InlineExternalDefinitions\>\"", "\[Rule]", "True"}]}], 
  "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->253179434],

Cell[BoxData["\<\"!!**********************************************************\
*****************!!\\n!! This code was automatically created using Package-X \
v2.1.0 CollierLink    !!\\n!!  routine CollierCodeGenerate[] by Hiren H. \
Patel, and requires the        !!\\n!!  Fortran library COLLIER v1.1 by A. \
Denner, S. Dittmaier, L. Hofer        !!\\n!!  for numerical evaluation.      \
                                          !!\\n!!-----------------------------\
----------------------------------------------!!\\n!!  Language: Fortran      \
            Creation date: Aug-15-2017 20:22      !!\\n!!  Function name: \
generatedFunction   Arguments (1): {s}                    !!\\n!!  Author: \
hhpatel                                                          !!\\n!!  \
Initialization requirement: Init_cll(2,0,'')                             \
!!\\n!!***********************************************************************\
****!!\\n\\n  DOUBLE COMPLEX FUNCTION generatedFunction(inputVar1)\\n    \\n  \
  USE COLLIER\\n    IMPLICIT NONE\\n    \\n    DOUBLE COMPLEX, INTENT(IN) :: \
inputVar1  ! s\\n    \\n    !Allocate memory for calculated results of \
Passarino-Veltman,\\n    !   coefficient functions, and their UV divergent \
parts\\n    DOUBLE COMPLEX :: pvx1(1), pvx1uv(1)  ! PVB[_,_,s,0.511,0.511]\\n \
   \\n    !Evaluation code\\n    CALL \
TN_cll(pvx1,pvx1uv,(/inputVar1/),(/(0.511d0**2),(0.511d0**2)/),2,0)\\n    \
generatedFunction = pvx1(1)\\n  \\n  END FUNCTION\"\>"], "Output",
 ImageSize->{572, 379},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->582095457]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "\"PreambleLines\", \"PostambleLines\"",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->671272749],

Cell["Add some wrapper code around the generated function:", "ExampleText",
 CellID->981472092],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"qSq", ",", "m"}], "}"}], ",", 
   RowBox[{"PVC", "[", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "qSq", ",", "m", ",", 
     "m", ",", "m"}], "]"}], ",", 
   RowBox[{"\"\<PreambleLines\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<MODULE mymodule\>\"", ",", "\"\<\>\"", ",", "\"\<IMPLICIT NONE\>\"",
       ",", "\"\<CONTAINS\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
   RowBox[{"\"\<PostambleLines\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\>\"", ",", "\"\<END MODULE\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1332021467],

Cell[BoxData["\<\"!!**********************************************************\
*****************!!\\n!! This code was automatically created using Package-X \
v2.1.0 CollierLink    !!\\n!!  routine CollierCodeGenerate[] by Hiren H. \
Patel, and requires the        !!\\n!!  Fortran library COLLIER v1.1 by A. \
Denner, S. Dittmaier, L. Hofer        !!\\n!!  for numerical evaluation.      \
                                          !!\\n!!-----------------------------\
----------------------------------------------!!\\n!!  Language: Fortran      \
            Creation date: Aug-15-2017 20:23      !!\\n!!  Function name: \
generatedFunction   Arguments (2): {qSq,m}                !!\\n!!  Author: \
hhpatel                                                          !!\\n!!  \
Initialization requirement: Init_cll(3,0,'')                             \
!!\\n!!***********************************************************************\
****!!\\n\\nMODULE mymodule\\n\\nIMPLICIT NONE\\nCONTAINS\\n\\n  DOUBLE \
COMPLEX FUNCTION generatedFunction(inputVar1, inputVar2)\\n    \\n    USE \
COLLIER\\n    IMPLICIT NONE\\n    \\n    DOUBLE COMPLEX, INTENT(IN) :: \
inputVar1  ! qSq\\n    DOUBLE COMPLEX, INTENT(IN) :: inputVar2  ! m\\n    \\n \
   !Allocate memory for calculated results of Passarino-Veltman,\\n    !   \
coefficient functions, and their UV divergent parts\\n    DOUBLE COMPLEX :: \
pvx1(1), pvx1uv(1)  ! PVC[_,_,_,0,0,qSq,m,m,m]\\n    \\n    !Evaluation \
code\\n    CALL \
TN_cll(pvx1,pvx1uv,(/DCMPLX(0d0,0d0),DCMPLX(0d0,0d0),inputVar1/),(/(inputVar2*\
*2),(inputVar2**2),(inputV&\\n&ar2**2)/),3,0)\\n    generatedFunction = \
pvx1(1)\\n  \\n  END FUNCTION\\n\\nEND MODULE\"\>"], "Output",
 ImageSize->{572, 525},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->1704930714]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "\"VariableNames\"",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(2)", "ExampleCount"]
  }], "ExampleSubsection"],
  $Line = 0; Null]], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->320033107],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  RowBox[{"\"\<VariableNames\>\"", "\[Rule]", "Verbatim"}]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to preserve all variable names:"
}], "ExampleText",
 CellID->979593394],

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pSq", ",", "m0", ",", "m1"}], "}"}], ",", 
   RowBox[{"PVC", "[", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "pSq", ",", "m0", ",", 
     "m1", ",", "0"}], "]"}], ",", 
   RowBox[{"\"\<VariableNames\>\"", "\[Rule]", "Verbatim"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1491089013],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1337279446],

Cell[TextData[{
 "Preserve argument names (",
 Cell[BoxData["t"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData["m"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ") and local variable names (",
 Cell[BoxData["threeptfn"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData["twoptfn"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 "), but allow names of declared constants to be automatically generated."
}], "ExampleText",
 CellID->772124169],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", ",", "m"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"threeptfn", "=", 
        RowBox[{"PVC", "[", 
         RowBox[{
         "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "t", ",", "m", ",",
           "m", ",", "m"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"twoptfn", "=", 
        RowBox[{"PVB", "[", 
         RowBox[{"0", ",", "0", ",", "t", ",", "0", ",", "m"}], "]"}]}]}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      SuperscriptBox["g", "2"], 
      RowBox[{"(", 
       RowBox[{"twoptfn", "+", 
        RowBox[{"t", "*", "threeptfn"}]}], ")"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Constants", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"g", "\[Rule]", "0.178"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<VariableNames\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Verbatim", ",", "Verbatim", ",", "Automatic"}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->413757163],

Cell[BoxData["\<\"!!**********************************************************\
*****************!!\\n!! This code was automatically created using Package-X \
v2.1.0 CollierLink    !!\\n!!  routine CollierCodeGenerate[] by Hiren H. \
Patel, and requires the        !!\\n!!  Fortran library COLLIER v1.1 by A. \
Denner, S. Dittmaier, L. Hofer        !!\\n!!  for numerical evaluation.      \
                                          !!\\n!!-----------------------------\
----------------------------------------------!!\\n!!  Language: Fortran      \
            Creation date: Aug-15-2017 20:23      !!\\n!!  Function name: \
generatedFunction   Arguments (2): {t,m}                  !!\\n!!  Author: \
hhpatel                                                          !!\\n!!  \
Initialization requirement: Init_cll(3,2,'')                             \
!!\\n!!***********************************************************************\
****!!\\n\\n  DOUBLE COMPLEX FUNCTION generatedFunction(t, m)\\n    \\n    \
USE COLLIER\\n    IMPLICIT NONE\\n    \\n    DOUBLE COMPLEX, INTENT(IN) :: \
t\\n    DOUBLE COMPLEX, INTENT(IN) :: m\\n    \\n    !Allocate memory for \
calculated results of Passarino-Veltman,\\n    !   coefficient functions, and \
their UV divergent parts\\n    DOUBLE COMPLEX :: pvx1(7), pvx1uv(7)  ! \
PVC[_,_,_,0,0,t,m,m,m]\\n    DOUBLE COMPLEX :: pvx2(4), pvx2uv(4)  ! \
PVB[_,_,t,0,m]\\n    \\n    !Local variables\\n    DOUBLE COMPLEX :: \
threeptfn\\n    DOUBLE COMPLEX :: twoptfn\\n    \\n    !Constants\\n    \
DOUBLE COMPLEX, PARAMETER :: constVar1 = DCMPLX(0.178d0,0d0)  ! g\\n    \\n   \
 !Evaluation code\\n    CALL \
TN_cll(pvx1,pvx1uv,(/DCMPLX(0d0,0d0),DCMPLX(0d0,0d0),t/),(/(m**2),(m**2),(m**\
2)/),3,2)\\n    threeptfn = pvx1(6)\\n    CALL \
TN_cll(pvx2,pvx2uv,(/t/),(/DCMPLX(0d0,0d0),(m**2)/),2,2)\\n    twoptfn = \
pvx2(1)\\n    generatedFunction = ((constVar1**2)*(twoptfn+(t*threeptfn)))\\n \
 \\n  END FUNCTION\"\>"], "Output",
 ImageSize->{571, 647},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->122211481]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "Applications",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSection"],
  $Line = 0; Null]], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->258228157],

Cell[TextData[{
 "Create code to evaluate the transverse part of the electromagnetic \
polarization function using the COLLIER library, and where the running EM \
coupling ",
 Cell[BoxData[
  RowBox[{"\[Alpha]EM", "[", "qSq", "]"}]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " is drawn from an external source."
}], "ExampleText",
 CellID->64451167],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PiEM", "=", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Alpha]EM", "[", "qSq", "]"}], 
     RowBox[{"4", "\[Pi]"}]]}], 
   RowBox[{"SeparateUV", "[", 
    RowBox[{
     RowBox[{"Transverse", "[", 
      RowBox[{"LoopIntegrate", "[", 
       RowBox[{
        RowBox[{"Spur", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Gamma]", ".", "k"}], "+", 
           RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
          SubscriptBox["\[Gamma]", "\[Mu]"], ",", 
          RowBox[{
           RowBox[{"\[Gamma]", ".", 
            RowBox[{"(", 
             RowBox[{"k", "+", "p"}], ")"}]}], "+", 
           RowBox[{"m", " ", "\[DoubleStruckOne]"}]}], ",", 
          SubscriptBox["\[Gamma]", "\[Nu]"]}], "]"}], ",", "k", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"k", "+", "p"}], ",", "m"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "m"}], "}"}]}], "]"}], "]"}], "/.", 
     RowBox[{
      RowBox[{"p", ".", "p"}], "\[Rule]", "qSq"}]}], "]"}]}]}]], "Input",
 CellLabel->"In[1]:=",
 CellID->530794094],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"PVA", "[", 
        RowBox[{"0", ",", "m"}], "]"}]}], "+", 
      RowBox[{"2", " ", "qSq", " ", 
       RowBox[{"PVB", "[", 
        RowBox[{"0", ",", "0", ",", "qSq", ",", "m", ",", "m"}], "]"}]}], "+", 
      RowBox[{"8", " ", 
       RowBox[{"PVB", "[", 
        RowBox[{"1", ",", "0", ",", "qSq", ",", "m", ",", "m"}], "]"}]}]}], 
     ")"}], " ", 
    RowBox[{"\[Alpha]EM", "[", "qSq", "]"}]}], 
   RowBox[{"4", " ", "\[Pi]"}]]}]], "Output",
 ImageSize->{502, 32},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->854264416]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"qSq", ",", "m"}], "}"}], ",", 
   RowBox[{"Evaluate", "[", "PiEM", "]"}], ",", 
   RowBox[{"Constants", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Pi]", "\[Rule]", 
      RowBox[{"N", "[", "\[Pi]", "]"}]}], "}"}]}], ",", 
   RowBox[{"\"\<FunctionName\>\"", "\[Rule]", "\"\<emPol\>\""}], ",", 
   RowBox[{"\"\<Externals\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]EM", "\[Rule]", "\"\<alphaEM\>\""}], "}"}]}], ",", 
   RowBox[{"\"\<PreambleLines\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<USE HEPCOUPLING !hypothetical module containing alphaEM\>\"", ",", 
      "\"\<IMPLICIT NONE\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->2041023922],

Cell[BoxData["\<\"!!**********************************************************\
*****************!!\\n!! This code was automatically created using Package-X \
v2.1.0 CollierLink    !!\\n!!  routine CollierCodeGenerate[] by Hiren H. \
Patel, and requires the        !!\\n!!  Fortran library COLLIER v1.1 by A. \
Denner, S. Dittmaier, L. Hofer        !!\\n!!  for numerical evaluation.      \
                                          !!\\n!!-----------------------------\
----------------------------------------------!!\\n!!  Language: Fortran      \
            Creation date: Aug-15-2017 20:29      !!\\n!!  Function name: \
emPol               Arguments (2): {qSq,m}                !!\\n!!  Author: \
hhpatel                                                          !!\\n!!  \
Minimum initialization requirement: Init_cll(2,2,'')                     \
!!\\n!!-----------------------------------------------------------------------\
----!!\\n!!  Required external definitions:                                   \
        !!\\n!!    alphaEM                                                    \
            !!\\n!!***********************************************************\
****************!!\\n\\nUSE HEPCOUPLING !hypothetical module containing \
alphaEM\\nIMPLICIT NONE\\n\\n  DOUBLE COMPLEX FUNCTION emPol(inputVar1, \
inputVar2)\\n    \\n    USE COLLIER\\n    IMPLICIT NONE\\n    \\n    DOUBLE \
COMPLEX, INTENT(IN) :: inputVar1  ! qSq\\n    DOUBLE COMPLEX, INTENT(IN) :: \
inputVar2  ! m\\n    \\n    !Allocate memory for calculated results of \
Passarino-Veltman,\\n    !   coefficient functions, and their UV divergent \
parts\\n    DOUBLE COMPLEX :: pvx1(2), pvx1uv(2)  ! PVA[_,m]\\n    DOUBLE \
COMPLEX :: pvx2(4), pvx2uv(4)  ! PVB[_,_,qSq,m,m]\\n    \\n    !Local \
variables\\n    DOUBLE COMPLEX :: localVar1  ! optVar1\\n    \\n    \
!Constants\\n    DOUBLE COMPLEX, PARAMETER :: constVar1 = \
DCMPLX(3.141592653589793d0,0d0)  ! Pi\\n    \\n    !Evaluation code\\n    \
localVar1 = (1/(constVar1))\\n    CALL \
TN_cll(pvx1,pvx1uv,(/(inputVar2**2)/),1,2)\\n    CALL \
TN_cll(pvx2,pvx2uv,(/inputVar1/),(/(inputVar2**2),(inputVar2**2)/),2,2)\\n    \
emPol = ((-1.d0/4.d0)*localVar1*((-4.d0*pvx1(1))+(2.d0*inputVar1*pvx2(1))+(8.\
d0*pvx2(3)))*alphaEM(inputVar1))\\n  \\n  END FUNCTION\"\>"], "Output",
 ImageSize->{587, 660},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->625845235]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[TextData[{
   "Possible Issues",
   "\[NonBreakingSpace]\[NonBreakingSpace]",
   Cell["(1)", "ExampleCount"]
  }], "ExampleSection"],
  $Line = 0; Null]], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1305812373],

Cell[TextData[{
 "Mathematical constants ",
 Cell[BoxData[
  ButtonBox["Pi",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Pi"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData[
  ButtonBox["E",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/E"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " are not part of any Fortran standard, and are not recognized by ",
 Cell[BoxData[
  ButtonBox["CollierCodeGenerate",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCodeGenerate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ":"
}], "ExampleText",
 CellID->1326303305],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", "s", "}"}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"16", 
      SuperscriptBox["\[Pi]", "2"]}]], 
    RowBox[{"PVB", "[", 
     RowBox[{"0", ",", "0", ",", "s", ",", "0", ",", "0"}], "]"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->934907905],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CollierCodeGenerate", "::", "unksymb"}], "MessageName"], ":", 
  " ", "\<\"An unknown \[NoBreak]\\!\\(\\\"symbol\\\"\\)\[NoBreak], \
\[NoBreak]\\!\\(\[Pi]\\)\[NoBreak], was found when generating code. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:CollierLink/ref/CollierCodeGenerate\
\\\", ButtonNote -> \
\\\"CollierLink`CollierCodeGenerate::unksymb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellLabel->"During evaluation of In[1]:=",
 CellID->1504417381],

Cell[BoxData["$Failed"], "Output",
 ImageSize->{54, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->270462689]
}, Open  ]],

Cell["Declare them as constants:", "ExampleText",
 CellID->566033888],

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", "s", "}"}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"16", 
      SuperscriptBox["\[Pi]", "2"]}]], 
    RowBox[{"PVB", "[", 
     RowBox[{"0", ",", "0", ",", "s", ",", "0", ",", "0"}], "]"}]}], ",", 
   RowBox[{"Constants", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Pi]", "\[Rule]", 
       RowBox[{"N", "[", "\[Pi]", "]"}]}], ",", 
      RowBox[{"\[ExponentialE]", "\[Rule]", 
       RowBox[{"N", "[", "\[ExponentialE]", "]"}]}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->661040841],

Cell["Or declare them as externally defined variables:", "ExampleText",
 CellID->307282697],

Cell[BoxData[
 RowBox[{"CollierCodeGenerate", "[", 
  RowBox[{
   RowBox[{"{", "s", "}"}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"16", 
      SuperscriptBox["\[Pi]", "2"]}]], 
    RowBox[{"PVB", "[", 
     RowBox[{"0", ",", "0", ",", "s", ",", "0", ",", "0"}], "]"}]}], ",", 
   RowBox[{"\"\<Externals\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Pi]", "\[Rule]", "\"\<myPi\>\""}], ",", 
      RowBox[{"\[ExponentialE]", "\[Rule]", "\"\<myE\>\""}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1567723398]
}, Closed]],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "SEE ALSO", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "SeeAlsoSection", CellSize -> {5000, Inherited}], 
     FEPrivate`If[
      FEPrivate`Or[
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 
      TextData[
       ButtonBox[
        Cell[
         TextData[{
           Cell[
            BoxData[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[24]]]], "See Also"}], "SeeAlsoSection", 
         CellSize -> {5000, Inherited}], BaseStyle -> None, 
        Appearance -> {Automatic, None}, Evaluator -> None, Method -> 
        "Preemptive", ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], None]], 
    None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 14, Inherited]]},
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   ButtonBox["CollierCompile",
    BaseStyle->"Link",
    ButtonData->"paclet:CollierLink/ref/CollierCompile"],
   FontFamily->FEPrivate`If[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
     "Verdana"]]], "InlineFormula",
  ShowStringCharacters->False],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["SeparateUV",
    BaseStyle->"Link",
    ButtonData->"paclet:CollierLink/ref/SeparateUV"],
   FontFamily->FEPrivate`If[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
     "Verdana"]]], "InlineFormula",
  ShowStringCharacters->False],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["UVDiv",
    BaseStyle->"Link",
    ButtonData->"paclet:CollierLink/ref/UVDiv"],
   FontFamily->FEPrivate`If[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
     "Verdana"]]], "InlineFormula",
  ShowStringCharacters->False],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  StyleBox[
   ButtonBox["Export",
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Export"],
   FontFamily->FEPrivate`If[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
     "Verdana"]]], "InlineFormula",
  ShowStringCharacters->False]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "MORE ABOUT", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "MoreAboutSection", CellSize -> {5000, Inherited}], 
     FEPrivate`If[
      FEPrivate`Or[
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 
      TextData[
       ButtonBox[
        Cell[
         TextData[{
           Cell[
            BoxData[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[24]]]], "Related Guides"}], "MoreAboutSection", 
         CellSize -> {5000, Inherited}], BaseStyle -> None, 
        Appearance -> {Automatic, None}, Evaluator -> None, Method -> 
        "Preemptive", ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], None]], 
    None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 14, Inherited]]},
 CellID->38303248],

Cell["", "SectionHeaderSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]],

Cell[TextData[ButtonBox["CollierLink",
 BaseStyle->"Link",
 ButtonData->"paclet:CollierLink/guide/CollierLink"]], "MoreAbout",
 CellID->1051491182],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Links", "RelatedLinksSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
      TextData[
       ButtonBox[
       "RELATED LINKS", BaseStyle -> None, Appearance -> {Automatic, None}, 
        Evaluator -> None, Method -> "Preemptive", 
        ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], 
      "RelatedLinksSection", CellSize -> {5000, Inherited}], 
     FEPrivate`If[
      FEPrivate`Or[
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 
      TextData[
       ButtonBox[
        Cell[
         TextData[{
           Cell[
            BoxData[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[24]]]], "Related Links"}], "RelatedLinksSection", 
         CellSize -> {5000, Inherited}], BaseStyle -> None, 
        Appearance -> {Automatic, None}, Evaluator -> None, Method -> 
        "Preemptive", ButtonFunction :> (FrontEndExecute[{
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], All, ButtonCell], 
           FrontEndToken["OpenCloseGroup"], 
           FrontEnd`SelectionMove[
            FrontEnd`SelectedNotebook[], After, CellContents]}]& )]], None]], 
    None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 14, Inherited]]},
 CellID->1584193535],

Cell["", "SectionHeaderSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]],

Cell[TextData[ButtonBox["COLLIER",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://collier.hepforge.org"], None}]], "RelatedLinks",
 CellID->1038487239],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->FEPrivate`If[
  FEPrivate`Or[
   FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"], 
   FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"]], 
  "CollierCodeGenerate - Wolfram Mathematica", "CollierCodeGenerate"],
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "CollierLink", ButtonData -> "paclet:CollierLink/guide/CollierLink", 
         BaseStyle -> {"Link", "DockedLinkTrail"}], 
        Cell[">", "DockedLinkTrailSeparator"]}]}}, ColumnAlignments -> Left], 
  "Metadata" -> {
   "built" -> "{2017, 11, 23, 13, 37, 9.661938}", 
    "history" -> {"1.0", "", "", ""}, "context" -> "CollierLink`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "CollierLink Symbol", "language" -> "en", "paclet" -> "CollierLink", 
    "status" -> "None", "summary" -> 
    "CollierCodeGenerate[{x_1, x_2, ...}, expr] generates source code that \
defines a function with arguments x_i to evaluate expr using the COLLIER \
library.CollierCodeGenerate[{x_1, x_2, ...}, Module[{y_1, y_2, ...}, expr]] \
generates source code with local variables y_i.", "synonyms" -> {}, "title" -> 
    "CollierCodeGenerate", "titlemodifier" -> "", "windowtitle" -> 
    "CollierCodeGenerate", "type" -> "Symbol", "uri" -> 
    "CollierLink/ref/CollierCodeGenerate"}, "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion -> "6.0",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "6.0", 
  StyleDefinitions -> "Default.nb"]
]


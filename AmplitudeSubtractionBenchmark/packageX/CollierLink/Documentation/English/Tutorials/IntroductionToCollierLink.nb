Notebook[{
Cell[BoxData[GridBox[{
   {Cell["COLLIERLINK TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"More About \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"CollierLink\"\>":>
       Documentation`HelpLookup[
       "paclet:CollierLink/guide/CollierLink"], "\<\"Package-X\"\>":>
       Documentation`HelpLookup["paclet:X/guide/PackageX"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"Functions \[RightGuillemet]\"\>",
        StripOnInput->False], {"\<\"CollierCompile\"\>":>
       Documentation`HelpLookup[
       "paclet:CollierLink/ref/CollierCompile"], "\<\"CollierLinkOptions\"\>":>
       Documentation`HelpLookup[
       "paclet:CollierLink/ref/CollierLinkOptions"], "\<\"Conjugate\"\>":>
       Documentation`HelpLookup["paclet:ref/Conjugate"], "\<\"LoopRefine\"\>":>
       Documentation`HelpLookup["paclet:X/ref/LoopRefine"], "\<\"Part\"\>":>
       Documentation`HelpLookup[
       "paclet:X/ref/LoopRefine#883568301"], "\<\"PVA\"\>":>
       Documentation`HelpLookup["paclet:X/ref/PVA"], "\<\"PVB\"\>":>
       Documentation`HelpLookup["paclet:X/ref/PVB"], "\<\"PVC\"\>":>
       Documentation`HelpLookup["paclet:X/ref/PVC"], "\<\"PVD\"\>":>
       Documentation`HelpLookup["paclet:X/ref/PVD"], "\<\"PVX\"\>":>
       Documentation`HelpLookup["paclet:X/ref/PVX"], "\<\"SeparateUV\"\>":>
       Documentation`HelpLookup[
       "paclet:CollierLink/ref/SeparateUV"], "\<\"SetCollierLinkOptions\"\>":>
       Documentation`HelpLookup[
       "paclet:CollierLink/ref/SetCollierLinkOptions"], "\<\"UVDiv\"\>":>
       Documentation`HelpLookup["paclet:CollierLink/ref/UVDiv"]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox["\<\"URL \[RightGuillemet]\"\>",
        StripOnInput->
         False], {"\<\"CollierLink/tutorial/IntroductionToCollierLink\"\>":>
       None, "\<\"Copy Mathematica url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["CollierLink/tutorial/IntroductionToCollierLink"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web url\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/mathematica/CollierLink/\
tutorial/IntroductionToCollierLink.html"], StandardForm]], "Input", 
              TextClipboardType -> "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web url\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
            "http://reference.wolfram.com/mathematica/", 
             "CollierLink/tutorial/IntroductionToCollierLink", ".html"]], 
           None}]}]},
       Appearance->None,
       MenuAppearance->Automatic]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell["Introduction to CollierLink", "Title",
 CellID->509267359],

Cell[TextData[{
 "CollierLink extends the analytic capabilities of ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X by supplying a fast and stable numerical implementation of \
Passarino-Veltman functions provided by the COLLIER library."
}], "Text",
 CellID->1534169418],

Cell[TextData[{
 "This tutorial illustrates how to use CollierLink.  To make the most of \
CollierLink, it is recommended that you are fairly experienced with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", and have used ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X before.  Although not necessary, it is also helpful to have prior \
experience with using the COLLIER library."
}], "Text",
 CellID->1649300204],

Cell[CellGroupData[{

Cell["Numerical evaluation of Passarino-Veltman functions", "Section",
 CellID->1322120367],

Cell[TextData[{
 "Normally, the Passarino-Veltman functions ",
 Cell[BoxData[
  ButtonBox["PVA",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/PVA"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData[
  ButtonBox["PVB",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/PVB"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData[
  ButtonBox["PVC",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/PVC"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData[
  ButtonBox["PVD",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/PVD"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData[
  ButtonBox["PVX",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/PVX"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " in ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X do not numerically evaluate.  Instead they must be turned into analytic \
expressions by ",
 Cell[BoxData[
  ButtonBox["LoopRefine",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/LoopRefine"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " before they can be evaluated.  When CollierLink is initialized, the \
COLLIER library is loaded into the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " runtime, and definitions are added to the Passarino-Veltman functions so \
they can be numerically evaluated."
}], "Text",
 CellID->623980582],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["PVA",
      BaseStyle->"Link",
      ButtonData->"paclet:X/ref/PVA"], "[", 
     RowBox[{
      StyleBox["r", "TI"], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["0", "TR"]]}], "]"}], Cell[TextData[{
     "numerically evaluates ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox[
         StyleBox["A",
          FontWeight->"Bold",
          FontSlant->"Plain"], 
         UnderscriptBox[
          UnderscriptBox[
           RowBox[{
            RowBox[{"0", "..."}], "0"}], "\[UnderBrace]"], 
          RowBox[{"2", "r"}]]], "(", 
        SubscriptBox["m", "0"], ")"}], TraditionalForm]], "InlineMath"],
     " with the COLLIER library."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["PVB",
      BaseStyle->"Link",
      ButtonData->"paclet:X/ref/PVB"], "[", 
     RowBox[{
      StyleBox["r", "TI"], ",", 
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["1", "TR"]], ",", 
      StyleBox["s", "TI"], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["0", "TR"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["1", "TR"]]}], "]"}], Cell[TextData[{
     "numerically evaluates ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox[
         StyleBox["B",
          FontWeight->"Bold",
          FontSlant->"Plain"], 
         RowBox[{
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"0", "..."}], "0"}], "\[UnderBrace]"], 
           RowBox[{"2", "r"}]], " ", 
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"1", "..."}], "1"}], "\[UnderBrace]"], 
           SubscriptBox["n", "1"]]}]], "(", 
        RowBox[{
         RowBox[{"s", ";", 
          SubscriptBox["m", "0"]}], ",", 
         SubscriptBox["m", "1"]}], ")"}], TraditionalForm]], "InlineMath"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     RowBox[{
      ButtonBox["PVB",
       BaseStyle->"Link",
       ButtonData->"paclet:X/ref/PVB"], "'"}], "[", 
     RowBox[{
      StyleBox["r", "TI"], ",", 
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["1", "TR"]], ",", 
      StyleBox["s", "TI"], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["0", "TR"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["1", "TR"]]}], "]"}], Cell[TextData[{
     "numerically evaluates ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        FractionBox["d", 
         RowBox[{"d", " ", "s"}]], 
        RowBox[{
         SubscriptBox[
          StyleBox["B",
           FontWeight->"Bold",
           FontSlant->"Plain"], 
          RowBox[{
           UnderscriptBox[
            UnderscriptBox[
             RowBox[{
              RowBox[{"0", "..."}], "0"}], "\[UnderBrace]"], 
            RowBox[{"2", "r"}]], " ", 
           UnderscriptBox[
            UnderscriptBox[
             RowBox[{
              RowBox[{"1", "..."}], "1"}], "\[UnderBrace]"], 
            SubscriptBox["n", "1"]]}]], "(", 
         RowBox[{
          RowBox[{"s", ";", 
           SubscriptBox["m", "0"]}], ",", 
          SubscriptBox["m", "1"]}], ")"}]}], TraditionalForm]], "InlineMath"],
     
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["PVC",
      BaseStyle->"Link",
      ButtonData->"paclet:X/ref/PVC"], "[", 
     RowBox[{
      StyleBox["r", "TI"], ",", 
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["2", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["12", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["2", "TR"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["0", "TR"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["2", "TR"]]}], "]"}], Cell[TextData[{
     "numerically evaluates ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox[
         StyleBox["C",
          FontWeight->"Bold",
          FontSlant->"Plain"], 
         RowBox[{
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"0", "..."}], "0"}], "\[UnderBrace]"], 
           RowBox[{"2", "r"}]], " ", 
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"1", "..."}], "1"}], "\[UnderBrace]"], 
           SubscriptBox["n", "1"]], " ", 
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"2", "..."}], "2"}], "\[UnderBrace]"], 
           SubscriptBox["n", "2"]]}]], "(", 
        RowBox[{
         SubscriptBox["s", "1"], ",", 
         SubscriptBox["s", "12"], ",", 
         RowBox[{
          SubscriptBox["s", "2"], ";", 
          SubscriptBox["m", "0"]}], ",", 
         SubscriptBox["m", "1"], ",", 
         SubscriptBox["m", "2"]}], ")"}], TraditionalForm]], "InlineMath"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["PVD",
      BaseStyle->"Link",
      ButtonData->"paclet:X/ref/PVD"], "[", 
     RowBox[{
      StyleBox["r", "TI"], ",", 
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["2", "TR"]], ",", 
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["3", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["2", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["3", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["4", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["12", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["23", "TR"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["0", "TR"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["2", "TR"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["3", "TR"]]}], "]"}], Cell[TextData[{
     "numerically evaluates ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox[
         StyleBox["D",
          FontWeight->"Bold",
          FontSlant->"Plain"], 
         RowBox[{
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"0", "..."}], "0"}], "\[UnderBrace]"], 
           RowBox[{"2", "r"}]], " ", 
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"1", "..."}], "1"}], "\[UnderBrace]"], 
           SubscriptBox["n", "1"]], " ", 
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"2", "..."}], "2"}], "\[UnderBrace]"], 
           SubscriptBox["n", "2"]], 
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"3", "..."}], "3"}], "\[UnderBrace]"], 
           SubscriptBox["n", "3"]]}]], "(", 
        RowBox[{
         SubscriptBox["s", "1"], ",", 
         SubscriptBox["s", "2"], ",", 
         SubscriptBox["s", "3"], ",", " ", 
         RowBox[{
          SubscriptBox["s", "4"], ";", 
          SubscriptBox["s", "12"]}], ",", 
         RowBox[{
          SubscriptBox["s", "23"], ";", 
          SubscriptBox["m", "0"]}], ",", 
         SubscriptBox["m", "1"], ",", 
         SubscriptBox["m", "2"], ",", 
         SubscriptBox["m", "3"]}], ")"}], TraditionalForm]], "InlineMath"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["PVX",
      BaseStyle->"Link",
      ButtonData->"paclet:X/ref/PVX"], "[", 
     RowBox[{
      StyleBox["r", "TI"], ",", 
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["2", "TR"]], ",", "\[Ellipsis]", ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["01", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["12", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["23", "TR"]], ",", "\[Ellipsis]", ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["0", "TR"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["2", "TR"]], ",", "\[Ellipsis]"}], "]"}], Cell[TextData[{
     "numerically evaluates the general Passarino-Veltman function ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox[
         StyleBox["X",
          FontWeight->"Bold",
          FontSlant->"Plain"], 
         RowBox[{
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"0", "..."}], "0"}], "\[UnderBrace]"], 
           RowBox[{"2", "r"}]], " ", 
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"1", "..."}], "1"}], "\[UnderBrace]"], 
           SubscriptBox["n", "1"]], " ", 
          UnderscriptBox[
           UnderscriptBox[
            RowBox[{
             RowBox[{"2", "..."}], "2"}], "\[UnderBrace]"], 
           SubscriptBox["n", "2"]], "\[Ellipsis]"}]], "(", 
        RowBox[{
         SubscriptBox["s", "01"], ",", 
         SubscriptBox["s", "12"], ",", 
         SubscriptBox["s", "23"], ",", 
         RowBox[{"\[Ellipsis]", ";", 
          SubscriptBox["m", "0"]}], ",", 
         SubscriptBox["m", "1"], ",", 
         SubscriptBox["m", "2"], ",", "\[Ellipsis]"}], ")"}], 
       TraditionalForm]], "InlineMath"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     RowBox[{
      ButtonBox["UVDiv",
       BaseStyle->"Link",
       ButtonData->"paclet:CollierLink/ref/UVDiv"], "[", 
      StyleBox[
       RowBox[{"PV", 
        StyleBox["x", "TI"]}]], "]"}], "[", 
     RowBox[{
      StyleBox["r", "TI"], ",", "\[Ellipsis]"}], "]"}], Cell["\<\
numerically evaluates the UV divergent polynomial of the Passarino-Veltman \
function.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->2096742444],

Cell["\<\
Passarino-Veltman functions that can be numerically evaluated with \
CollierLink.\
\>", "Caption",
 CellID->1891092685],

Cell[CellGroupData[{

Cell["\<\
After loading CollierLink, the Passarino-Veltman functions can be directly \
evaluated.\
\>", "MathCaption",
 CellID->836781195],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CollierLink`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2058623809]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "When all arguments of the Passarino-Veltman function are numerical, an \
appropriate call to the COLLIER library subroutine ",
 StyleBox["A_cll", "InlineCode"],
 ", or ",
 StyleBox["B_cll", "InlineCode"],
 ", or ",
 StyleBox["C_cll", "InlineCode"],
 ", or ... is made."
}], "MathCaption",
 CellID->1638857184],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PVB", "[", 
  RowBox[{"0", ",", "1", ",", "6.5", ",", "0", ",", "1.0"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->27378752],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.31279728058920286`"}], "-", 
  RowBox[{"1.1246529913738608`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{143, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[1]=",
 CellID->1820309489]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PVC", "[", 
  RowBox[{
  "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "6.5", ",", "1.0", ",", 
   "1.0", ",", "1.0"}], "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->582139104],

Cell[BoxData[
 RowBox[{"0.22642727739565383`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.13653601478776356`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{144, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[2]=",
 CellID->1973703260]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Numerical evaluation of the derivative of B functions calls the subroutine ",
 StyleBox["DB_cll", "InlineCode"],
 ":"
}], "MathCaption",
 CellID->697355677],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PVB", "'"}], "[", 
  RowBox[{"0", ",", "0", ",", "5.4", ",", "1.0", ",", "1.0"}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1276517521],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.3364870958443829`"}], "+", 
  RowBox[{"0.42318007459707246`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{143, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->582733773]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PVB", "'"}], "[", 
  RowBox[{"0", ",", "2", ",", "5.4", ",", "1.0", ",", "1.0"}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->2099181848],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.07506692523496007`"}], "+", 
  RowBox[{"0.13322335681759687`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{158, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->1238543860]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Numerical evaluation of the UV divergent polynomial with ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X, and with the COLLIER library:"
}], "MathCaption",
 CellID->422727383],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LoopRefine", "[", 
   RowBox[{
    RowBox[{"PVB", "[", 
     RowBox[{"1", ",", "0", ",", "s", ",", "m", ",", "m"}], "]"}], ",", 
    RowBox[{"Part", "\[Rule]", "UVDivergent"}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "\[Rule]", "5.4"}], ",", 
    RowBox[{"m", "\[Rule]", "1.0"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UVDiv", "[", "PVB", "]"}], "[", 
  RowBox[{"1", ",", "0", ",", "5.4", ",", "1.0", ",", "1.0"}], 
  "]"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->903221805],

Cell[BoxData[
 FractionBox["0.04999999999999997`", "\[Epsilon]"]], "Output",
 ImageSize->{38, 32},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->1852632747],

Cell[BoxData[
 RowBox[{"0.04999999999999997`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{71, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[6]=",
 CellID->833180976]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "When CollierLink loaded, the COLLIER library is initialized with ",
 StyleBox["init_cll(6,6,'')", "InlineCode"],
 ". This allocates sufficient memory for the evaluation of Passarino-Veltman \
functions of up to rank 6 and with up to 6 denominator factors."
}], "Text",
 CellID->285736073]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setting and Getting Parameters", "Section",
 CellID->524732799],

Cell[TextData[{
 "The COLLIER library provides a number of global parameters which influence \
the numerical evaluation of Passarino-Veltman functions, and can be modified \
with ",
 Cell[BoxData[
  ButtonBox["SetCollierLinkOptions",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/SetCollierLinkOptions"]], 
  "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 "."
}], "Text",
 CellID->1917820803],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["CollierLinkOptions",
      BaseStyle->"Link",
      ButtonData->"paclet:CollierLink/ref/CollierLinkOptions"], "[", "]"}], 
    Cell["get the current values of global parameters.", "TableText"]},
   {
    RowBox[{
     ButtonBox["SetCollierLinkOptions",
      BaseStyle->"Link",
      ButtonData->"paclet:CollierLink/ref/SetCollierLinkOptions"], "[", 
     RowBox[{
      StyleBox["name", "TI"], "\[Rule]", 
      StyleBox["value", "TI"]}], "]"}], Cell[
    "set new values for global parameters.", "TableText"]}
  }]], "DefinitionBox",
 CellID->1472708643],

Cell["Getting and setting parameters of the COLLIER library.", "Caption",
 CellID->2065131226],

Cell[BoxData[GridBox[{
   {Cell["parameter name", "TableHeader"], Cell[
    "default value", "TableHeader"], ""},
   {"\"\<MaxRank\>\"", "6", Cell["\<\
highest rank for which Passarino-Veltman functions can be numerically \
evaluated \
\>", "TableText"]},
   {"\"\<Mode\>\"", "1", Cell["\<\
branch of COLLIER library to use for numerical evaluation.  1=COLI, 2=DD, \
3=both branches\
\>", "TableText"]},
   {"\"\<InvEpsUV\>\"", "0.0", Cell[TextData[{
     "numerical value of ultraviolet ",
     Cell[BoxData[
      FormBox[
       RowBox[{"1", "/", "\[Epsilon]"}], TraditionalForm]], "InlineMath"],
     " poles"
    }], "TableText"]},
   {"\"\<MuUV\>\"", "1.0", Cell[TextData[{
     "value of 't Hooft mass parameter ",
     Cell[BoxData[
      FormBox["\[Mu]", TraditionalForm]], "InlineMath"],
     " in logarithms associated with ultraviolet divergences."
    }], "TableText"]},
   {"\"\<InvEpsIR\>\"", 
    RowBox[{"{", 
     RowBox[{"0.0", ",", "0.0"}], "}"}], Cell[TextData[{
     "numerical values of infrared {",
     Cell[BoxData[
      FormBox[
       RowBox[{"1", "/", "\[Epsilon]"}], TraditionalForm]], "InlineMath"],
     ", ",
     Cell[BoxData[
      FormBox[
       RowBox[{"1", "/", 
        SuperscriptBox["\[Epsilon]", "2"]}], TraditionalForm]], "InlineMath"],
     
     "} poles"
    }], "TableText"]},
   {"\"\<MuIR\>\"", "1.0", Cell[TextData[{
     "value of 't Hooft mass parameter ",
     Cell[BoxData[
      FormBox["\[Mu]", TraditionalForm]], "InlineMath"],
     " in logarithms associated with infrared divergences."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 CellID->209845909],

Cell[TextData[{
 "Some of the global parameters settable by ",
 Cell[BoxData[
  ButtonBox["SetCollierLinkOptions",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/SetCollierLinkOptions"]], 
  "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 "."
}], "Caption",
 CellID->712044189],

Cell[TextData[{
 "The option ",
 Cell[BoxData["\"\<MaxRank\>\""], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " specfies the highest rank for which the Passarino-Veltman functions can be \
numerically evaluated.  To calculate higher rank Passarino-Veltman functions, \
set ",
 Cell[BoxData["\"\<MaxRank\>\""], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to a higher number."
}], "Text",
 CellID->1690086924],

Cell[CellGroupData[{

Cell[TextData[{
 "The default ",
 Cell[BoxData["\"\<MaxRank\>\""], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " is 6:"
}], "MathCaption",
 CellID->1016767973],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PVB", "[", 
  RowBox[{"0", ",", "6", ",", "5.4", ",", "1.0", ",", "4.3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PVB", "[", 
  RowBox[{"0", ",", "7", ",", "5.4", ",", "1.0", ",", "4.3"}], 
  "]"}]}], "Input",
 CellLabel->"In[7]:=",
 CellID->1291943032],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.39231878217955224`"}], "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{107, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[7]=",
 CellID->1516133070],

Cell[BoxData[
 RowBox[{"PVB", "[", 
  RowBox[{"0", ",", "7", ",", "5.4`", ",", "1.`", ",", "4.3`"}], 
  "]"}]], "Output",
 ImageSize->{156, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[8]=",
 CellID->1755035835]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Raise ",
 Cell[BoxData["\"\<MaxRank\>\""], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to 7 to evaluate higher rank Passarino-Veltman functions:"
}], "MathCaption",
 CellID->1792453134],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetCollierLinkOptions", "[", 
   RowBox[{"\"\<MaxRank\>\"", "\[Rule]", "7"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PVB", "[", 
  RowBox[{"0", ",", "6", ",", "5.4", ",", "1.0", ",", "4.3"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"PVB", "[", 
  RowBox[{"0", ",", "7", ",", "5.4", ",", "1.0", ",", "4.3"}], 
  "]"}]}], "Input",
 CellLabel->"In[9]:=",
 CellID->859223022],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.39231878217955224`"}], "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{107, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[10]=",
 CellID->1820840358],

Cell[BoxData[
 RowBox[{"0.34587137372588206`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{100, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[11]=",
 CellID->1221927156]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The COLLIER library offers two independent numerical implementations of the \
Passarino-Veltman functions: the COLI branch programmed by Ansgar Denner, and \
the DD branch programmed by Stefan Dittmaier.  When CollierLink is \
initialized, the COLI branch is active by default, but it may be changed by \
toggling the ",
 Cell[BoxData["\"\<Mode\>\""], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " setting at any time during the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " runtime."
}], "Text",
 CellID->162080243],

Cell[CellGroupData[{

Cell["\<\
Evaluate the Passarino-Veltman functions using the COLI branch and the DD \
branch:\
\>", "MathCaption",
 CellID->1537117840],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"COLI", " ", "branch"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetCollierLinkOptions", "[", 
     RowBox[{"\"\<Mode\>\"", "\[Rule]", "1"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PVC", "[", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "3.2", ",", "0", ",", "0", ",", "1.", ",", 
     "1.", ",", "1."}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"DD", " ", "branch"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetCollierLinkOptions", "[", 
     RowBox[{"\"\<Mode\>\"", "\[Rule]", "2"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PVC", "[", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "3.2", ",", "0", ",", "0", ",", "1.", ",", 
     "1.", ",", "1."}], "]"}]}]}]], "Input",
 CellLabel->"In[12]:=",
 CellID->111263470],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.7661114270706861`"}], "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{107, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[13]=",
 CellID->799528879],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.766111427070687`"}], "-", 
  RowBox[{"3.097700159597168`*^-17", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{178, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[15]=",
 CellID->876690074]
}, Open  ]]
}, Open  ]],

Cell["\<\
This feature is useful to internally crosscheck the numerical implementations \
of the Passarino-Veltman functions in the COLLIER library.\
\>", "Text",
 CellID->1592856915],

Cell[CellGroupData[{

Cell[TextData[{
 "Once a setting has been modified with ",
 Cell[BoxData[
  ButtonBox["SetCollierLinkOptions",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/SetCollierLinkOptions"]], 
  "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", all further numerical evaluations will be carried out with these settings \
until they are changed again.  ",
 "To check the current settings, use ",
 Cell[BoxData[
  RowBox[{
   ButtonBox["CollierLinkOptions",
    BaseStyle->"Link",
    ButtonData->"paclet:CollierLink/ref/CollierLinkOptions"], "[", "]"}]], 
  "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ":"
}], "Text",
 CellID->797777426],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CollierLinkOptions", "[", "]"}]], "Input",
 CellLabel->"In[16]:=",
 CellID->17548801],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"MaxDenominators\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"MaxRank\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"Mode\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"InvEpsUV\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"MuUV\"\>", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\<\"InvEpsIR\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", "0.`"}], "}"}]}], ",", 
   RowBox[{"\<\"MuIR\"\>", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\<\"SmallMasses\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"ReqAcc\"\>", "\[Rule]", "1.`*^-8"}], ",", 
   RowBox[{"\<\"RitMax\"\>", "\[Rule]", "14"}]}], "}"}]], "Output",
 ImageSize->{545, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[16]=",
 CellID->474655595]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computations with CollierLink", "Section",
 Deletable->True,
 CellID->614290137],

Cell[TextData[{
 "In this section, the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "\[Rule]", "\[Gamma]\[Gamma]"}], TraditionalForm]], 
  "InlineMath"],
 " partial width is constructed and evaluated with CollierLink to illustrate \
a typical workflow.  The integrals are set up with ",
 Cell[BoxData[
  ButtonBox["LoopIntegrate",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/LoopIntegrate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", and all kinematic conditions are applied, as is typical for calculations \
with ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X.  However, instead of calling ",
 Cell[BoxData[
  ButtonBox["LoopRefine",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/LoopRefine"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", the expression is manipulated at the level of Passarino-Veltman \
functions, and ultimately numerically evaluated directly."
}], "Text",
 CellID->1554614033],

Cell[CellGroupData[{

Cell["Load CollierLink:", "MathCaption",
 CellID->225986307],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CollierLink`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1400773853]
}, Open  ]],

Cell[CellGroupData[{

Cell["On shell and kinematic relations:", "MathCaption",
 CellID->982614050],

Cell[BoxData[
 RowBox[{
  RowBox[{"onShell", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"p", ".", "p"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"p\[Prime]", ".", "p\[Prime]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"p", ".", "p\[Prime]"}], "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox["mH", "2"]}]}], ",", 
     RowBox[{
      RowBox[{"q", ".", "q"}], "\[Rule]", 
      SuperscriptBox["mH", "2"]}], ",", 
     RowBox[{
      RowBox[{"p", ".", "q"}], "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox["mH", "2"]}]}], ",", 
     RowBox[{
      RowBox[{"p\[Prime]", ".", "q"}], "\[Rule]", 
      RowBox[{
       FractionBox["1", "2"], 
       SuperscriptBox["mH", "2"]}]}], ",", 
     RowBox[{
      SubscriptBox["p", "\[Mu]"], "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["p\[Prime]", "\[Nu]"], "\[Rule]", "0"}], ",", 
     RowBox[{
      SubscriptBox["q", "\[Mu]"], "\[Rule]", 
      SubscriptBox["p\[Prime]", "\[Mu]"]}], ",", 
     RowBox[{
      SubscriptBox["q", "\[Nu]"], "\[Rule]", 
      SubscriptBox["p", "\[Nu]"]}]}], "}"}]}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1613036143]
}, Open  ]],

Cell["W boson contributions:", "Text",
 CellID->2025233314],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3U+rI12eJ/bwn8uT3mW+glRl7k3C8wZkk0VvE7uS3mqqpp5tX8qGZKCH
kVf9NC7whaahn1WroVfJML6zbCcNMjZ00+Tigrtrl6Cq2szGye2FwTAernUe
HT2PUvecUIQU0omQPoJP1ZP3KkInJF0pzjnf+J2f/PyP/rtv/vOqqv6HJ8v/
+e/+xbv/5le/+hf/6r//L5f/+G//1f/4y5//F8v/+H/+s6r6//6rqgo/fHh4
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAGLSrr548W3oXvV/6nLlf+P3HpYcN4d/vSh8DAAAA
AAAAAAAAnJOrr5683cj2fd7K7q2939rmXeZ+m8K+Xpc+PgAAAAAAAAAAABi6
Bpm9tXfx/qHu34cW2wVflz5OAAAAAAAAAAAAOBdXXz35piazF3J+L5Y+xX9/
G/69se3bjd9t+1T62AAAAAAAAAAAAOCchHV7E3m9jzHv9yn+94vMti9q1gN+
W/rYAAAAAAAAAAAA4FzEun2P1vKNOb/3e27/fT3A0scGAAAAAAAAAAAA5yJT
3+9DyPs13P5tJu/XaHuO4+Xz0WRpunS99LR0ewAAAAAAAAAAADhMZj3ez7k1
fBPbv8jk/T6VPrZL9fL56GbpYcOsg32G7OA8elX6GAEAAAAAAAAAAC7J1VdP
vs5k9d613E9qHw+lj+8SvXw+Gm1l/YL5gfvczg/elz5OAAAAAAAAAACASxJy
fZnafs9a7kferyfi+r3beb/bA/b3NLE/ry0AAAAAAAAAAMAJXX315EMip/dd
y31Yz7dHQrYvkc+7PmB/b7quFwgAAAAAAAAAAEBzoYZfJqf3uuV+cmsCfyx9
jJcorLWbyOe9OmB/22v5BtPSxwkAAAAAAAAAAHAprr568raLmnyZ/bSuE8jh
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
ncl9BSete1/l85azIz5eX17zeaId98fK/PXoNU/V2Tvmez33ms9P/ZoDwD6u
9ljD8erHa5ZD5u9RnQYAhiMzl9WqLl/iu+RTn+bvd8xj/d+Zn5/smr2upMbd
SrcJgGEK+by2/cSNbXM1/t7F36/nVXtbI75mXqHOolrV153GDODR15YCjmOf
sbKhaZD1e5q7X+m2AzSx/Lz6OvH59nHrPrl6rq9LtBn6LJE/+k+ZftH4iG14
U9MX66z/FR8nlQE6yZquifbk1lkNOhvDjo+Ty33NCr3vcvmvTnOe1aqOYu41
P3nfPrzPTtWeHr7mqXV9g2nHj5PL+hX5OweAfVyla9ZnM3wbWb+PfcpyALCf
zHx+4/n3q8fru/cqC95gHuu/zvxucHP0mfGPcel2ATA8mbxe47ruV+laKXtf
W1BC1ax+RRN3vo9hWK5+XNNir8/Avmua9Yv3HW3/vnT7DxXnT2/i3Oa4dHuA
48icjz46B71K121tVNcaLkXMgW33c/63TAbt2Gvs5vpp94dm3+Jx5mrpBSet
dbbVtlw26SHmo0YH7n+ceT07z9bt0bZcHu2+i3O5HX3/ScHjzuVbO8m+xfdU
717z+He4qHmvH9yuKp8jLfp3DgBtNLnGbeO+zzaygR9k/QDOQ2Y+v9FnfMj1
bc2FDS3rl6tZcV+67fuI4zL6pwAcJNNP/LzHflLXFATflT7Gppa3/6tmDLiJ
RRfzD8DpdPUZ2Fdtsn6ZbW5KH8OhEvOHo9JtArqXORd9dH3r1ePrWFuNjcEl
CJmnVA6qJoN21POFmvzXug82abm/pzHzlcvTFc19bbSzLvN3H49htMc+657P
olm/jdcnl0sL5vv0u+N7ePu8sG+veepvb+/3etznaACveZP3eus2VvW51l68
5gDQVItr3F5sZP1c2wZwJtrkvhPbbubA13VfB5f1i/d9tfX7een276NKX2s7
Ld0uAIYl00/cqx949eWamOFc4ZvSx7dLHPu+rh6vV9VWJ9edA6fV5Wdg3+yT
9Yvbbdb462zNuBLiZ7x5PThzccyq8fWtV+k1kM5qHXc4RCYT9TT+bpzpD42O
3Ka6OnzrTNAs5qXGW9s+je2+rvJrh/byXGFHDmqzL3q9fdxbxz7dkXvqRe5r
q927XqtFPK5xqt3xPPBNfF/seg779JpPGhz3TTy25OsV3zeTBs9hn17zXe/1
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
Yj/qbPvM0ET8O0v9bYxKt62NTB9pfsD+XrXpIy1/d92XGukxv/d+Y3z3/WZ2
b/nfr2MG8EP897vMuPCz0scChzAX0r3M+Nm4dLs46DVNnWfPSrcLAABYCdej
xevSmvZt55fWt61WWb9dWb3w++tdY55xX28y/d9Hfad9x1DjPEpdm8963qI6
fd4vmD40vIW1e9vU6etSqBHYYq3f+alfO+iT+Jm9nZlelG5XnTBv1WZdqQb7
u07s77b0cQJAE4nz4WnpNl262FfLXZOW6rfOl26rH6+jm7fo/yyqVSYw9MFf
bbThaWzHddx33T7uqx5f6wHHUuXHwm5Kt62tTB9pfsD+Un2k7P5C/yneZ1zy
edjK7n0O2b7M/Z7FzN+7rWzg2sfSrynsS87veBLnd9YwH7jMHEvQ23VPAADg
EsSc33TpvkXOb1y63adWM765drvv2H/c97TBXMc6S5h9nOrHHGGT+gZhnuRs
s37x+Uj1RccneOzZQ4vbv/13/75I7i+sG9yi1t/0BM8b9FL8jB7U/FZqnapQ
o++A/d0m9mdcD4BBSHyPT0u3iR/6r7Mj9nnmoX/coj2jqr6ev8wfFyfzN3o/
xPGkTB9pvue+nmbW8p3uePxiNdKvVmv3bq7bG9bsfbFjm7cxE5gaI/629GsK
bZkLOa4qXQ92WrpddPLa5s6Rvb4AAHBi+rbNVfVZv0VX+bE4t7CrpsB2/m++
oWlthOAiMhpVubxfMHtoefvHf/rNw5/86a8ffvb2D3e+huE+4b6hRuBvf/f7
R/sKPws5wlDHL+T66vYV7tfwZm6LixM/m1Ofr6PSbcsJ9SIS806LA/d5n9in
zwQAei8z73gR/aGhiP22eYv+7C6hnz45oD2jmvYMMucE+6jyedzGOdq+yPSR
Dsn7zTL7Sz434ecla6TH9Xs/tcn6xe2e1YwVvz12u6FL5kKOr1rVKig1Fs9x
X9u6ObJb58cAAHAay77qZGnRsG8b7je4cbwu1Yzzz47Rj6lWa/C2ye61EY7l
YvIZPZjbmz0ccAv5v1B/b1P4WdtbWLc3ZPrqcn8NM3/zhx68rnBKme+AWel2
1Qk1JRLzTnu3OeT6EvsrVpcCANqoVvXPzTsOQOy/NalVn8vhzbp8bat0jefA
unSctTinnx0LK92+fWT6SN/bY1+T3L5ya/Vu1EufnPrYY9Zvu0bf1y22z40Z
Pyv9ukIbDdfvvZPz21/q3Kl0m+j09R3VzFuFn1/0PCIAABxb7LM2zflNSre3
tJrx/dmRH7fpGr9tcn4X2d/qwdh0WPOzF7eQ+ws1AQ/M/E0eevC6wilU+XoW
o9JtqxNqVCTmnSYH7O+6y/wgAJxSlV57Sv2JnovZv+t4Pjavvqxpv/73LPab
x0dsxyRzPjgt/Rxx3uK40Jv4Hg/v91RNnfDz23ifTq7trFb1NheZ9/3dUD8/
M32k1n2ljazffSZDOE5sMyp1zVQm6/eu5T5S48YfS7+m0NbyfTsyF3Jc1eOs
+KJ0m+j8NX61Y85qPtRzBQAA6LtYt74u53evb7tSpWvDnTwvFucX2qzz+0N/
Os5/XEw9v8zztz0mXqImVchahsftxS2sAZyq9Rd+1qB+4OKhB68rHFuVz/pN
S7dtl8wc1uiA/d22mROL98/+HgBOKZFbWZRuE8NSpa8DDPOco9Jt4/zEjN8+
Y0DrcaCbfd6b1e51tQeb9Qtqsn7BYmnnsW3k+0LW71X82X2DvN86azg95TGH
9Xq31vANPuyxn9T48belX1PYR6LGn5xfhxLfI/PSbeIor3Pd2r7r8+SLnpMC
AIBjWPZfn8ZMXyrnF7KAgx2761pmnPO2cJvGca7hpvqxpsGm8LuJ/tQXz1mq
nkeJWofhbyu8f3pxC7m+VObvZ2//sMnmk4cevLZwDHHMKpf1m5du3y5hfqmL
Naq29rk9h5XND27Uruj9cwXA+Yv9p6LXb3EeMuMDs9Lt4nzEnN9iz5xfrr7O
dd340MYYU92c/Tlk/ZJ9pC13NX2ccfz9F1m/+Ls3W/u53dp21iZT2KVQgy8x
/vui5T6+zuT93pZ+XWEfGzX+wlzIden2nJvE99i8dJs46uudmneR+QMAgCPa
qvEn55eQmRe6H/L45qWq0nUa5wXbNF4Kj1/8FjJ/qf74X/7VX+/atOTzB0cT
P/tzc12DmOPKrCk1P2B/rxL7y9ZJ3Vj7d1r6uQCATEarxLU/DNzyNjJGwDHE
91bqs6prd9WP14pu5zHq3JR+jg6V6SOFmuQ3mZ9Po1nM6W3+7tHffGI/87h9
MiN4CqH+XiKj12od37ift4n9fC79msIhlu/hsbmQ40h8h0xLt4mjv+Z1Y6ky
fwAAcASxVv2Nvm1aZqx1Urpd7P16psayx4XbFR6/eL2/kO3bfm5C3b/7+3/e
tenooQevLZcrZnnDmNJ0wyT+bNRyX2GbWc0c12DGpzbWiuoq73edmgOruf96
7d9x6ecCgMtWpa/hWpRuF8OVOV+clG4Xw1WtavrdN8jcLeI41c1G32eWGbvq
yqIH4yadyPSRJvF3o5jXWyTus87qzXb1b2INwGRfLFc38FhyGb2lZ3vsK5Ub
fF/6NQX6J3PurYbihYjnJrkx1VHp9gEAAJehSl+3vyjdLg56TSeZses+5F1H
S2HsY/6w/+1uabY0jcL194umG//8F7981BdvUOPPeA0nFT+br1vMaS3iHNgk
jjk+3djXqzi3dlPtrm1xN6Rxqcwc1fyA/aXmvaY19/9+7d/SzwMAVOk6E85h
2VtmrCB7HQTUyYxTbPdnrpv0Raofr19qkh1s0o+alH5+upTpIz16XkPtvpjb
W9v53O/YR+vtDxUyfTHbd3Btv7i/1JrAe+0LOG+ZvNcgrp2ls/dA7txmXrpt
AADAZYjjqa7ZPzOZTM+8dLsSxg+rLN30YZUBTLmJvw/3rcssht8vHnbcfvu7
3z/qh//0p3+wazPzWpxEnFeddTBvtY/bqh+54EbinFJneb/MuldBch3E8PNd
9f8A4BQy842LIX2v00/V4xzpfek2MTw7sn7hs2q8536fxn3ftuz33Mdtzm69
80wfaVG6Xcdy9dWT7zqs7fcisa/g69LHCfRPYuzdOdIFqjnHcd0VAABwdFW6
dpR5oYGr0msKBLPSbTuy8N4Nx1h7+6PrXz16bv7xn35Tt4kxG44qzlWVyvkt
hjjXVZPPW+yxr1x2MLtW78ZavpPSzwUAl6tmjmlSum0MX5XOko5Kt4vh2JH1
m3b8WOP4nr2JY12bws/D9a7j0s/JMWX6SLPS7TqGmnzevrX93qWyg6WPE+if
zLj7rHS7KPZ+SNXTuDfHBgAAHFuiL6JO0ZmIY9ypMfW7C+hvzh9qbn/z4W8f
PS9/9ud/UbdJuFmTgaOI44RdrEW1T85vOtTPg1DHryajN2qxn1frdXk3Mnw/
yGwzir8P2w3y+QNg+GpyNPPSbeM8hGtCEu+vcel2MQzL26tMP+fe++g4Mn2k
Sel2HUOmtl/wYs/9fUrs633p4wT6p0rXTxjcdbQc/T0xLd0uAADgfMWx1+1+
iFrjZyTT11yPr09Kt++IRg+rmnzZ209+8uKL5+Tnv/hl3d3DbdyD4+LM1MzT
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
v5W7lri/69zt1kURj12Y5i4XkI/8B4O2pfwHIxJibZ70iQY47yQWi9Xz+D79
uLY+3lnkQNuKfdol5iumasNJ7np1rPuHxPzeru/5LHedMnzWf37PijOYHzjA
Z706zzx3vQDgGBL91tZ+VmQN3FH2Fzk1tTHZqk3eJ573MvR7P5Xx/QKejCmw
nyKdi2+vmL8ivV/wL3LXHxhG2byn1SJ3+TYS17yzGL8CgGMKv5nLnmPFZzM3
Apyfhni/LxnLVO3vu2yJbTm5vOd1iX7SLHe5gHwS11z5D/q1ofwHI5WINZoP
cN5Ybrpph+PmA8Y+1eOgJrnbu6He1f3L3YHqvvf7ecB6V3Nvu+bza1N9Bk82
9u2An/XKya7TOfBn/e6U33MA2FeIQXvSR+1w3PtLX4cV1q5tr1ur1qy9bjnm
YyRO8qLjJQ+t4R5535i/Dx3uJae56w8M4xxi/or4GtyT7csDQG5F/7i/zbzQ
LHfZgXFpiIPIPt62KsN1S8xftb/vyc6jJfpJi9zlAvIp5T/Yt/3kPxixIp6L
r1r/NNnzvLNYLE5LObruX3sX+mkbXY+r6nVya6WL9f67u9S7T92X+8yPHaje
b4tu+d3uQ/kXxXr+bxH+/13HY2e561qr94ui27jEpt7Xod7z8N/Lju22995n
B6j7rMfndbve23XvcvxJvecAMJQQf9Zr7XDop33f6s+9y12PDO32bqsNOsX6
bbVdanw0+xjuWBXp/Nd79ec63Iv+49x1B4ZTrnNXpK7hV7nLV4mMa9zlLhMA
nLpiHffXN4fAJuffyca4AOejjOeNal2Pe8TyfQhxfU1xfyfRJ4opns593+cu
E5CH/Ad7tZ38BxciMZ9yO8B56+OWlUXkeW1xX5u+2Iem+KVwnnnidU8yFqhh
LmvjJsxLNcZthbZZtLTjyeS76zDXVr2HV0VL3GmxjhOtzrVsOd88d51DeV9E
7lPrn/XrLu9Tx8/7/Qm9522f9Z/f8Y7n+tDhfPIiADA6ifHETy3HfO3anxuj
EOtX76N2jnlsGBeVu/6AWu71qnv/6Y7nbeqH/Kfc9QaGU673s2qK+ZvlLmPi
WjfNXS4AOAdhbqBtjDg199BpDB4gZtWX+HzqcRCr8rxt6Q/9zH1e7ri/767H
dVHE8+TMcrcpcHzyH+zcbvIfXJDQL4rFiS32PO800Z+abT2nKdbvPsQz9b5n
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
4v8DxvwJLw==
    "], {{0, 501}, {2556, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{542.6109375000001, Automatic},
  ImageSizeRaw->{2556, 501},
  PlotRange->{{0, 2556}, {0, 501}}]]]], "Text",
 CellID->111399637],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"wBos1", "=", 
   RowBox[{"LoopIntegrate", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[DoubleStruckG]", 
       RowBox[{"\[Rho]1", ",", "\[Rho]2"}]], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[DoubleStruckG]", 
         RowBox[{"\[Rho]2", ",", "\[Nu]2"}]], "-", 
        RowBox[{
         SubscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "q"}], ")"}], "\[Rho]2"], 
         RowBox[{
          SubscriptBox[
           RowBox[{"(", 
            RowBox[{"k", "-", "q"}], ")"}], "\[Nu]2"], "/", 
          SuperscriptBox["mW", "2"]}]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Nu]3", ",", "\[Nu]2"}]], 
         SubscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], "k"}], "+", "q", "+", "p"}], ")"}], 
          "\[Nu]"]}], "+", 
        RowBox[{
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Nu]2", ",", "\[Nu]"}]], 
         SubscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "p\[Prime]", "-", "q"}], ")"}], "\[Nu]3"]}], "+", 
        RowBox[{
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Nu]", ",", "\[Nu]3"}]], 
         SubscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "p", "+", "p\[Prime]"}], ")"}], "\[Nu]2"]}]}], 
       ")"}], "*", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[DoubleStruckG]", 
         RowBox[{"\[Nu]3", ",", "\[Mu]3"}]], "-", 
        RowBox[{
         SubscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "p"}], ")"}], "\[Nu]3"], 
         RowBox[{
          SubscriptBox[
           RowBox[{"(", 
            RowBox[{"k", "-", "p"}], ")"}], "\[Mu]3"], "/", 
          SuperscriptBox["mW", "2"]}]}]}], ")"}], "*", "\[IndentingNewLine]", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Mu]1", ",", "\[Mu]3"}]], 
         SubscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], "k"}], "+", "p"}], ")"}], "\[Mu]"]}], "+", 
        RowBox[{
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Mu]3", ",", "\[Mu]"}]], 
         SubscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], "p"}], "+", "k"}], ")"}], "\[Mu]1"]}], "+", 
        RowBox[{
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Mu]", ",", "\[Mu]1"}]], 
         SubscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "+", "p"}], ")"}], "\[Mu]3"]}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[DoubleStruckG]", 
         RowBox[{"\[Mu]1", ",", "\[Rho]1"}]], "-", 
        RowBox[{
         SubscriptBox["k", "\[Mu]1"], 
         RowBox[{
          SubscriptBox["k", "\[Rho]1"], "/", 
          SuperscriptBox["mW", "2"]}]}]}], ")"}]}], ",", "k", ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "mW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "-", "p"}], ",", "mW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "-", "q"}], ",", "mW"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wBos2", "=", 
   RowBox[{"wBos1", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "\[Rule]", "p\[Prime]"}], ",", 
      RowBox[{"p\[Prime]", "\[Rule]", "p"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "\[Nu]"}], ",", 
      RowBox[{"\[Nu]", "\[Rule]", "\[Mu]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wBos3", "=", 
   RowBox[{"LoopIntegrate", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[DoubleStruckG]", 
       RowBox[{"\[Rho]1", ",", "\[Rho]2"}]], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[DoubleStruckG]", 
         RowBox[{"\[Rho]2", ",", "\[Nu]1"}]], "-", 
        RowBox[{
         SubscriptBox[
          RowBox[{"(", 
           RowBox[{"k", "-", "q"}], ")"}], "\[Rho]2"], 
         RowBox[{
          SubscriptBox[
           RowBox[{"(", 
            RowBox[{"k", "-", "q"}], ")"}], "\[Nu]1"], "/", 
          SuperscriptBox["mW", "2"]}]}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Mu]1", ",", "\[Nu]"}]], 
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Nu]1", ",", "\[Mu]"}]]}], "-", 
        RowBox[{"2", 
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Mu]1", ",", "\[Nu]1"}]], 
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Mu]", ",", "\[Nu]"}]]}], "+", 
        RowBox[{
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Mu]1", ",", "\[Mu]"}]], 
         SubscriptBox["\[DoubleStruckG]", 
          RowBox[{"\[Nu]1", ",", "\[Nu]"}]]}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[DoubleStruckG]", 
         RowBox[{"\[Mu]1", ",", "\[Rho]1"}]], "-", 
        RowBox[{
         SubscriptBox["k", "\[Mu]1"], 
         RowBox[{
          SubscriptBox["k", "\[Rho]1"], "/", 
          SuperscriptBox["mW", "2"]}]}]}], ")"}]}], ",", "k", ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "mW"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "-", "q"}], ",", "mW"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"wTotal", "=", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", 
      SuperscriptBox["e", "2"], 
      SuperscriptBox["mW", "2"]}], "v"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"wBos1", "+", "wBos2", "+", "wBos3"}], "/.", "onShell"}], 
     ")"}]}], "//", "Simplify"}]}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->355990275],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "v"], 
  RowBox[{"2", " ", 
   SuperscriptBox["e", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "\[Nu]"], " ", 
      SubscriptBox["p\[Prime]", "\[Mu]"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"PVB", "[", 
         RowBox[{"0", ",", "0", ",", "0", ",", "mW", ",", "mW"}], "]"}], "-", 
        
        RowBox[{"PVB", "[", 
         RowBox[{"0", ",", "0", ",", 
          SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "1", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["mH", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["mH", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"4", " ", "\[ScriptD]", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"4", " ", "\[ScriptD]", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["mH", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"4", " ", "\[ScriptD]", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["\[DoubleStruckG]", 
       RowBox[{"\[Mu]", ",", "\[Nu]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["mH", "2"]}], " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "mW", ",", "mW"}], "]"}]}], 
        "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[ScriptD]"}], ")"}], " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["mH", "4"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["mH", "2"], " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["mH", "4"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["mH", "4"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["mH", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"8", " ", "\[ScriptD]", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 ImageSize->{579, 275},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[5]=",
 CellID->336023166]
}, Open  ]]
}, Open  ]],

Cell["Top quark contribution:", "Text",
 CellID->1077350662],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
MKF+Pnok8s+u/kXm3+uC7U7NMWXedufa4wfaUOZaBst909c27Ofn9iq/St3+
LHObIK+XjA7XWdhq9wmAnklOTfDM9/zH2n0FtEX5a9f8ZVvntTN9sGUanZ3f
djz+qoPHtWUandUUjNz15Fp9zs3xq+0Yc6n8nLf+movsme2mw3FrPeczx+PO
Ohz7JvPY1G4AAPTahPr56AnP7Orp9WSJf1Amw0o9hmRZF+RYGBPHtQyF1ypY
8qvzUObnls2vzH2mqdtstMfgYsmwWj8WBxCuiaMmuM93fGAsCrKrvf++o77c
cjx+6/O/I3s9OTnX3cl1O47jrHUHj+vKkTo5r5+TaXSRmdq+N3bynJv9ns1S
nh6vKz7ny46ec839bvs772TcAAC0ZUL9fAQu2tX8s333zVpF5jo+yzHqusJj
siYrRsFx/vNRwX3upK5teBJSfaoq+ZXlvmvtcbg4zoMEWfcQQLvMtQTZ97nH
jvd1ailgdCK/7EpjjoTt/HZr9c3MY84d4+7sO0TkXpto1eJjuur5dboeV2TP
71rNNAJ5zm3fW8W85ccN4Tm3ncNodf5bznM+63LsAAA0yVE/ivr5CEJUIbtK
3Td7rLqu8PisyYrBc5z/3Hs4ydQFNHO2HmXrVYWiTn5l7r+fi7XUHouLORfD
tZUA5D3rJOc9z5VjBTFfFmhTVC670siwXPNTWsmxcs5rd7pGj+nL0tGXxufm
RO78qvNz+pF7XtBVG8eW0a6Onu3x1grPuavOybylx1sF8pzPXOcvWnq8INbi
AgCgaRPq5yNAUY3sKrWN7DHrumJfXN8DV9r7CWiC4/znI/MZ8NDyuyfmd8Fd
11A3v0pt5yLkDEtY3pOC7i+Adjjep5/V/nbkWEFdewA0KfLPrv4igPPbrpqC
cuzR2DyZyJ0ZbdrITjz75HqOVk31KdrN+XLlV0ulcbvWZ5LnorHsMnJnlirX
YkbuzLbRHCvKzyy1nnNbXb9GX+sFz7na3zkAAE1xHNdSPx8qIv/sSq7jmhZs
K3tctK7RL9exxkx7nwF15V3L0CdN5VdmWzOhPaY8oRyXA9A1OawJLu6kfm9b
75Br0zA4kX92tTHHHLMQvtvnnHeufY472mU4rn3Sat1Cj77lZQ1XdZ+LKL8u
/Er5terKNGp/n4vy13bWfs5d14buj+9r5SyRe97Z0+0rP+dtvtZvRO55Z6rP
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
iWhX+8lnHq7c5sycwzxOnc9cRuWui9iaz6XezLvK8lkLa8hyMqeqc7Bs15qx
FhagoOO8yvY5Q82GkYvIsAAAQI+Z4+V0nRGpF3hUcJ8TR50T8UB7TEBTombW
S27DXHvfICyW1+e66ccIJMNiHhaCF+2udcjLnuTc5dz3nKLZ3r62VJack5pq
j7ku1sJyzsGKi76X52zvsWVbrIUFdMC8N++veWu7rnieC9/PGgxbRIYFAAB6
ytQOTB/fFuZX5n43HcfYrIWF3jPnFS8Kzj+SXyEo0XgyLOFsFdbDWin0HwMW
5edXG97D7ca+FlbOHKxHFbd3p8k5XQDcAsqrslba+wbhIMMCAAB9ZPKr7Fwq
7/r4ORkWa2Gh16Ldde3ax5w2ck60tzWi0C4yrF2zZVjfff9D3l22Cv3HQEW7
WlEb17nEiGvhnca+Fpaj7l+dOoKPHNtjLSygAVF4NRqyercmItpFhgUAAPrG
kV+VOkZ2HBezFhZ6z5yDDG0OlvSHdZjhNLIMaxM72tfffHvw9/P5F1+6br5v
nOdBI6LdHF7OJVbAWlgv1PWulTnlzMFiLSygIYHnV3Pt/YPwkGEBAIA+MbVK
svXxS9cpcRwbsxYWBiEKay4W+RUKjSzDkrFZ23b7y8HfkKyRVdBkLhZ/Y6gl
2tWh5VxiBWNfCyunRnelzClnDtZD7bECQ+HIA7RtySTgQoYFAAD6xHGdZ6m1
os08LtbCwmBF4czFkpr61J5CoZFlWMs4p7128vrB39KPP/2cdxdpVwn+1lBJ
zmfGSrtvfcBaWNdPHO+v5xW2dS+n3jff04EGWb57aedXXI8DJzIsAADQFzJP
qok6+45jbeqTYFAi9zX15FcIzsgyLHlMZ/vk088O/p5knSyPtjXbLtufWxXv
h4GI7HN3r7T71ResheVcC6tUfQMzn+uxpV44a9YCLXBkAlrHDFPt/YGwkWEB
AIA+cOVOVY5nHVlY6WtFgdAlbaN0LHpBfoUyRpZhCWez1RMUHnOx9k323Tx+
cV6W5FTHiTPz+63HNlbxbq0troseuMg+B2um3a++YC0s6/fqKmvV7rfz0LIt
1qwFWmD5/sU1bwgSGRYAAAiduS7Tdk1m6TlYZnu2eoSVtgWELNKZi7XSHjf6
Z4QZ1kWc0+7/6t2Dv6033nwr7y5tt028y7TIswYmace8j1f3ykvTW5b8alRz
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
bd3v7pHfXIZNRHYFIDBR8fW5pbTVzwAyrEvL4ztzqVR+9XTukfbz3DXHPCzZ
J5ee97fNe4t97w8AePoZf9zBcdS0gX5etdzPVU/25a0G+vn/+OyPuse/ABqz
jjtsMu8n+/1a6tz5rJFVp8m8Jcd3+06VnT9ly/yqrA9mW1MrnR8G0Jax/t9C
l5Z5O+Pu3Vdf+Nx87eT13J33v/3vjz82n61551ZaqVcD1NXy99u9Wc0+Ljvo
43ok+3JdcDzyn2q/JgHAxnzXCuY930Uzw0oe57ZvljLZ1crb512Pxphfmf1g
qwX4JC/3y9z/yHHsyZpYAOCp4BilKcuafZx1cbzXwL7Mu646lH35esH2/9uI
NTiA0KzjjpqtLp7MKbLlWiJdY7Bu62uGZds3VbI9W0YopMZgIG0Z6/8ttC7a
zZNafP3Nt//EtSNkvlX28/O99z/I3XmL//zvFn2+z7XHDrhEDV/XbtHV3KG6
Vg3sy00H/ZzW7ON/7fF8Les+ZwDQtGhXuyeIcy95lDOsU8tjH9S0M7nLPr8q
rJc3VI7MT+TWXrRsx3qspz0+AOiLqNnrVFxq1cWJdueT2u7jwVrrA92X/57H
MSl1jICwrOOOmquenXDlWJJ7NdH6mGHZ1rC6+VdvVhq/3M+2zwNqy1j/b6E1
0e56mWef49/8yZ86d4Sse5X9/JT1sfLaX/tr/4brc3cTNTDHGmhTtKuV3VZN
BNluI+uNJO0saidvk23KtWq1M5sO9uW8oX35v3rul2UT+wUAmhA1e+6ote9n
yhmWrS7eSeY2kts8duVbY+LI/GQOVqk5aWRYAFCP+YzftHQcJdYNHe+dtdjH
bRPHe2ZftlnzsKl9+WuPx9o0sU8ANGIdd9Rk7SXbd+t9bTxbjhVQrbvOm63+
X5X1q1zZ4bv377fQ68ptGev/LTQu2q23ucp+DpbNsORnrvbTz3/m+qxdNvG5
DgBtMMc2B++PjmMp3s8ABCFq5vxW7Wuc8yhnWNm6eE8yv7+Tuk2puUZDNHm+
Fljaw5LboJYgAAAVlDgmJcsC9K3jjpptLlB6XpIts5Fag2NtTa0RZssO5blo
ao5bQ20Z6/8tNCrarWNpnbOR1z786OOD2//408/O20seljnXK9flTLXHDwA+
yLIA9EnUzPXPF232USvDmtjr4p2nfn8v9fN72s+ltsluPTBb9nSngf0urOuQ
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
X9MqrczaYT1vy1j/b6GUpF00dH5Czo/mroslzZVjiTfefCv++ptvvXd2y+0q
prYggMCRZQFoQtLOPN5HVl32qcMMyzaf6ryp+5rbPBlKnTyZS2YZs9c6Vib3
S895uyS/AgCgv0ocj24Sc+3+AgFYxzT11tTaYT1uy1j/b6GUpK0znyvrGttb
+OykvBwrMvUFP/n0s9wag7KOlszd+vCjj59mX+Lu3Vefzeva/0x+L7eruO6W
ZHKd1cwBgKrIsgDUkbRjj/ePeZd96jDDstXFy10LK3Vf11ysU/P7fcblXWcv
dFUzP0t+dT6UXA8AgLEjywK8rWOaemty7bCetmWs/7dQSsMZlvffomRUHp9t
L+RR2ayqrLcX71SpWUiOBaA3yLIAVBHt6sEUvW9Mu+xThxmWLYPyXrfKkemk
PdB+fhveX7a1w6zrgKXucydVP1D29z3tcQAAgOaRZQGF1jFNvUlelT2mGdFa
WNKWsf7fQimWDGtTc5teNQWlfff9D0/nXFXJo+qQDKxklnUVsz4WgB4hywJQ
luU7YZPfD0vrIsNy1MUrXAvLsh3bXC4xmDWwzDhta4c9G2u2LqDJ9x6Vnd8G
AAD6zRyP5n23TGdZx9r9BTq0jmnqTeoGZo9nRrQWlrRlrP+3UIo5d/nCZ0gD
25V5S145lrTPv/iy8tyqOmROV169wkxbaz9XAFAWWRYAX7bvhClnXfenowyr
8lpYlm09SG3jcohzjaQmom0OltmPD215oPnd4PYFAAAolrSZZ5Ylt5lp9xdA
GCzvG+umtu04pil9HSM6f03Yzlc0UTtvHpdskmVJvb+yWdS+3qDcV9a/kv+X
f8vPfe5bYk7WssvnBgCaQpYFoIh8/8t5b+j8+tiuagmi1HPywPKcMLcKAADk
IssCUEbLGZbtmOZSe8wofE3MLJ8Zi4a2P48rtO32l6e5UjqPypLfSeZVNI9K
fi9rbxXN85JteTbWxgLQW2RZAPIk7Z853hM6fy8gwwpPak2rSmuHAQCAcSPL
AuCj5QzLtr7voNYwHirLZ8VFg9svVVewzfb1N9/mrr/lmWOt4wCeMwCogywL
gE3S/oHlfeAfafSFDCssTa0dBgAAYLKsK7IsADZtZVg56/tSW6IHLK+LTcOP
ITnWVRxIkzlcNXMs1psEMAhkWQDSkvZfWf7+V00/TnKMcCuR+32qSoaV/H6a
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
4WqQZd37l5l5QRiAWb15MdtwlbquQxfp91sPa/jC+ftmV3MLY6vqjMnqIsv6
y1//VreYIXNeDKBtASYv2/5N5n/v4Nx/n2utZsbC0wMZFgAADN9elvWfTuhn
Xuhn0pfZaXPZNLFKXdehy88fxXZbpy4XtdRaG+t+C2tWhSwrzPnXZ44VsrOw
PlfN7WYA7QpwFvJrgD/38Ldgk7mUa9EFGRYAAIxH3g/9H1rqZ64zL2bmIKQD
+T2MPu6fL1LXdQxmj8dyblKXidrCvcDaOdb9FuYYDHlWGCdVlWmFeQjDulgh
gypb5yr8W/hZeM2hcV7hNTW3dY/tB3DW8v7DVU/XZbFca5G6HRgvGRYAAIxP
tv3nmb+22Mfczu7mIDTXPa2Y3a3F0PW9kW3qeo5F/vv9oP1Sl4lGFrsG8wpW
bWENqwZz/z3aQp5VlYk1yLFCnVK3K8DZSJRj7budeY6OI8iwAABgvLLtkw77
mWEOQnOCcLT8GOryXshl6jqOxewun9b3H7cwr+BmN5Ctav2tmjlWqEvqNgU4
K7P+xsnLtWiNDAsAAMZt1t8zlft9zNCPeJq67gzb7C4D7fKYfJG6jmMR6fuv
UpeLo6x3A9nCPINhLsKy38+QcdXYlrv07QlwVgaYYxVtUrcRwyLDAgCA8UvY
F93O7jK0MMbDWC0emN09T9vl8SdHbfZ9FNtvnbpMHC2cbze7AWy3t/8SzbHK
1tcqbKEOqdsS4OyE6/bZ47Uyh2KVun0YFhkWAABMQ8Icq2gzuxt/Yz4QynKT
ttykrtvYyLAmaZXZ7hJvsRzr+z/4YZ23L3bp2xHg7Aw0x9qmbheGR4YFAADT
kedGQ+uLhvJcz/I5CFO3Eb0fk5uOjqt16rqNjTactDCv5vUu4RbGXJWtj/XJ
Hz499Fbr2gEkkm1PZ92vX9rEKnWbMDwyLAAAmJbZMJ+p3LdI3Ub0ejyuOzqO
lqnrNjYyrLOw2N2NzQp51u2u+XaTv3edu8z/rdYW1sAqHmfvvffdQ2/b7tK3
G8DZGlCOtU3dFgyTDAsAAKZnwDnWVeq2Icmx2PZxdJu6XmOT35+SYZ2fsG7W
cvcwk9rsHuZUF/lrqtaXW+5qrr8V5g8sHmuff/HlobdZTxEgsdndGrcp+wmr
1G3AMMmwAABgmmbDeaZy3yJ1u5DkWGw7T71OXaexifT9X6QuF6Oz3h3YQl5V
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
9rKjcl0lbreq/OqkNbxm1WssJc80ZtX51dHrNedtejng77wqvzr6WN/7zquO
p9Tfeex38dWxfsJ+D93bSPqdA0AKkfkvzDdSv/3MNzIgNa73ju5Dlezjn1PX
F+jOkHOsWfm6WPq0cObyXKV4vqpc4zbPvb7eu5Y/q7kY8mv5r/fa62B+tddu
sWf5zioDnLJZsyyrzuvWLZVrWdHfuUjYXrGxYjfHZjglnxHLc5LN8V5xXdba
2lWz6jW2WjmujihTVWZ51db3MSufgyD1dx4rU2iPVvoIs+r5GZN85wCQSmR8
lflG6rWd+UYGatZyljUrf67y36WuJ9CtPMeK3aMMOVaysZgV98pau2cAjEvk
ObPKNW73+gK1spspyfOrYp+mdoZX8ffBs2kTM6ufZVX1OVqdi/hAftD7czYV
9/SvOvisVeSzNomOjbI+Z+vjhA5858sEdY/liauJf+dl9wbu86tWr8EH+Hu+
yOuvrwFAbyLPD5pv5HD9zTcyErOWsqzINfNN6voB3cvO0auK+5Q3qXKsA33a
1p4BBcZj/nhO613VNepefvXVueUukfyqMu8r2UfZ3wXPpk3Y7Pgsq5O/yRXX
AtsE7dJLfrX3mbFMo9dxaLPysWedzXNX9Z33mStU5DirBN95Z58ZKcc2cu3d
SftXfOe93o8otH84xhd9fj4A52tuvpFj2sx8IyM0OzyP+IMsq+T965LXblLX
C+jHSHOs3eyEdSeAcZnXXOM2f+39HAG7PMc6t/zqWeF6/lU7HLEfz6adqVmz
LGvVQ1nKntdb99gemxT31yN9tN7ml6vIcTp9jii//kv9nZflOFdn8J0n+fyK
77yXzDZynunteAPgvM3NN9K0vcw3MnIN+pvb/f5m5Fp1k7o+QH+yc/W64jy+
SVWu2eEca5ef9w7OYTQzNwiM1rzmGrfzh/MJVD67NlVNx6tF9lGWGXo27czU
6Fv8rz2VI7YeU+djsmflY2N6G6MxK8/Prnv43KeRHGfdU72XCb/zsmdDt31d
Qyb8zp9H2rzVeUIrPr/s97yzMX+Fzy7ra6z7qDcANO2/zc03Yr6RiajR33yQ
Zc1kWDBakb91tebOLdnXVUWOdZWqjvl9lNg66kU3ed//Mj8Pbkr6pb30xYH2
zMvXXH1ZeM3+fAJnOV7omGf4Ivspm8+i8d8VpqGib/Gf9ViGsuuAzuY3yz/z
+Szh2JC9ti+73um0DJEcZdvzcVf2nW87/s5XkfZe9ljvWJa07vAzY5ll59lZ
neOu4++87NxmLkEAehF5dtB8I+X1N9/IRFX0N8uu0WRYMDLz6nlcjxp/0GaO
lb1+2WZ9w/2ayPmqqW3q7w5opuRZq28KP3937zWNM5spiOVOx/RtIlnYWY5r
47Vs+y/y+8nB93r+7EXkGqCTHGsWz696XzN4Vv68YbDq6PNi/cdlz/WOzS/X
1Xe+itS71xyn7+98Fp/zoPccJ8HveexY73XdOQDO19x8I03aynwjE5dfC9Yd
w3Dvi9TlBqrl92xjedPR93Cz924q9lurT5e9bpFpvc+f97Nj/U0ZFkxQ5Drz
472fv7/37++nLm+iNnqzJOc7+m9BpH9wltkgw1GRMdy0ea99djePXdl99F7m
NYuUKTav8rrFzwjXWJvI51wmqndsHsltm9/F7O45qdjnpFoXNvadX7X4GbGs
Nkgyb0HF73ko57Klz6ia46H3zBKA8zU330jddjLfyBnJ+2OxfknR/5a6vEC1
yPMa9949Yb9PMzcV+17V2Mer8Vxd1X12l82vZ+XznhxysPzAcFRdrxbOg1+n
LmvCNvqoxTFYzyLn/trr5EJXZvHnWML97ZPGTuT3tcvWQkp+/TCLj0/Z5f27
xYn7f1G1/8Tf+briO1m30K6x/nGyzHLveIx9Jzen5Dn5vqvaNUlmuVe+qt/D
8LOjc8XZXUZW1a7WzgWgNyXPIZpv5HEbmW/kTM3qZVn/KXU5gWqR5zXunTQv
7ik51vxuDNauywxr3+zuGdKL2ev1r/bPb/f/fZm/ZpH6ewOaiYwJelbnmbUT
PrNqnGufDj6PUJE5HTsGq+z5CM+mMRiz6vHYN02zpvx+/qH5ihvts6N6V42Z
2eXt0ihzmd1lV1X9wkHc0z/wnW/z7692OfO2rNpn0vyqwXcevrva46Vmr58B
qzyOUte7xnd+m9djUXNf4Xd8NYuPbRvMsQ7A+Zibb6ROG5lvhHAtt6zos8iw
YOAi5/GgdP3HI/YfsqjbinurpX37+cM1tRap2wkYr3n5un9fR649W3uGamQZ
VtkYrFc535F1L66T21q7QlsO3N++v8d9ld+3fnS9kveDQu5RZ771Ver67pX7
+ezwGPRwLz48u/OiWPe83qu8bQ7t53pI9/Rn1WNz9su8zuu5zLOLxV69L2vU
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
Nw==
    "], {{0, 501}, {1713, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{375.87656250000003`, Automatic},
  ImageSizeRaw->{1713, 501},
  PlotRange->{{0, 1713}, {0, 501}}]]]], "Text",
 CellID->1176720243],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"top1", "=", 
   RowBox[{"LoopIntegrate", "[", 
    RowBox[{
     RowBox[{"Spur", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"k", ".", "\[Gamma]"}], "-", 
        RowBox[{"q", ".", "\[Gamma]"}], "+", 
        RowBox[{"mt", " ", "\[DoubleStruckOne]"}]}], ",", 
       SubscriptBox["\[Gamma]", "\[Nu]"], ",", 
       RowBox[{
        RowBox[{"k", ".", "\[Gamma]"}], "-", 
        RowBox[{"p", ".", "\[Gamma]"}], "+", 
        RowBox[{"mt", " ", "\[DoubleStruckOne]"}]}], ",", 
       SubscriptBox["\[Gamma]", "\[Mu]"], ",", 
       RowBox[{
        RowBox[{"k", ".", "\[Gamma]"}], "+", 
        RowBox[{"mt", " ", "\[DoubleStruckOne]"}]}]}], "]"}], ",", "k", ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "mt"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "-", "p"}], ",", "mt"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "-", "q"}], ",", "mt"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"top2", "=", 
   RowBox[{"top1", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "\[Rule]", "p\[Prime]"}], ",", 
      RowBox[{"p\[Prime]", "\[Rule]", "p"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "\[Nu]"}], ",", 
      RowBox[{"\[Nu]", "\[Rule]", "\[Mu]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"topTotal", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["e", "2"], " ", 
       SuperscriptBox["Qf", "2"], " ", "Nc", " ", "mt"}], "v"]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"top1", "+", "top2"}], "/.", "onShell"}], ")"}]}], "//", 
   "Simplify"}]}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->1923961837],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "v"], 
  RowBox[{"4", " ", 
   SuperscriptBox["e", "2"], " ", 
   SuperscriptBox["mt", "2"], " ", "Nc", " ", 
   SuperscriptBox["Qf", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SubscriptBox["p", "\[Nu]"], " ", 
      SubscriptBox["p\[Prime]", "\[Mu]"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"PVC", "[", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
          SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], "]"}],
         "+", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
            "]"}], "+", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
            "]"}], "+", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
            "]"}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["\[DoubleStruckG]", 
       RowBox[{"\[Mu]", ",", "\[Nu]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["mH", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
          "]"}]}], "-", 
        RowBox[{"8", " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
          "]"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 ImageSize->{571, 105},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[8]=",
 CellID->44031966]
}, Open  ]]
}, Open  ]],

Cell["Hypothetical charged scalar loop:", "Text",
 CellID->906694572],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
11odw/yn2RZ9JfvxAoOWyF5vnJd68XEP396dz6G0mHGatsw3bTIbUv4n5tq6
Zhlz+cZBZd1iRq1tnq8p7zYdUtYt5tpme3i/D+q9Xnu/t83zNeX8xqXbAgBD
s+yHftV1jhoAp+Mivd/exn1IMmWt7zcVHHzPqZjjCxm+2y3GpXIGPV8SAHZx
kd5HMpvXy8wTKL5ub1tDG0MBDq/LOTBx32cXH9d26n0O5OJhbtS/79BXsh8v
MGiZ767Z83Qt1/fO/BX4VPWw5+g+Mn3rrvuc96oe8oyzA7Q75J56fV065rt2
zfSlMn6T0m1r8ZpPz+29Htv+Yg+ZvsG91wGgTzLzkAczBgPAbi7S++19s0U5
qf1Mgq+O1I4nFw/r9G2zRt+6u9KvCwCUlPlcz+b1L9Jzxt6Xbkdb1cPeMHfV
wNYLAA7jIj3/qdWcpZiNrmdG3vU51xfr/KJjP2pUus4A2+pyjl87p7+V64OP
Dphtq7vtY/YnZtsOkWes6+VciphDO2S7b/rYJ4/ZtrsDtvuuj+/12PbpOb7X
AaBvMvOQj7p3IgDlZDLe2+zH+02inKPv8V7L+N3tkO27Lv26AEBJF9vtU5bq
W2a/U8THeFm6rSvVxznoYYxmVtkjBs7WRXr+08Y9LhK5vjd9z4FskeuzHy8w
aJlz/NeJ2z2rndPtcwQ11UOu73ZDXif8/irXr4pZqUm1eT/b+z71zWKdN9V3
Fm/3KKsV230Zb7MpKzYr3d6Or3loz3Vs34u1+4d2j2NOrE05vcm5xddyU5bz
NrbtMrbzSTTu0O5gUrq9a695m7/Pm9i+ccK0RRmL+PfQu0wnAPRF2zlqFx/X
nG+r83pPAJSRGIfvnMe7yO/bV3Qd2OXjT7bM+PXm2gEAlHCR3qescQ5YZpz0
bea2L9uUeUzLY5S4Xr8am/DdAM5I5hyYPJ/V7hPOa6t9eEPf6Cjrl+/Yzq65
PvOggMG7aDHHNY6brM7pj3J/cM5aZLxCRme0RZnTDfmpcQ/aPtmQR5t0zSfF
+8ybns8etHvTaz7v+vpUD1m/2YbMWPF++IbX/D6+b1u/3+N1h03v9UkP2r3p
Nb/rUs9Y3qRqzrPedv37AYBz0XaO2tp9Uus3rK5bvu6aBwGgnNq4eqf1KBLl
pD5PerMPX8z4/b8tx6ruStcXAEqKmf1H/b2W90tl/R/tRRlzM72bE1Y9rCvR
dN1+ts14DTAcmXPgH+eyrp/TYl+oPie26PymDu3clOu7zfz8snTdAXaR+L76
Ye33L2u3GcQ5HY5lQ95n5/1zq+Z1wopmvTZkvKa79hFjXzSX95oVft1zr3nI
aY13LPtFQ/n3Jfve1cMafAdZZy6+15v2N5709DW/37VuG97rNyXbDQB9dZFe
j2/jPoyJ/q+5awADlMlrd75uWZvLXNebPfaWdZm1zPUNYh2K6uP8vivZAgD2
LZPZb5X9b3PfeJvO6wQfS9W8ZsL62NUq61d8PQFgP8J1scR57G08d32Tyj7H
3/V+nb5aGzfl+kL/6UnmNvofwGBdpPcxelP7/Ve1nw/mvA7HUuXXWdsp55R4
nFyO7q7EtdCYP0tlkfa6X3C85pvLVE169prf7Pk1z+Xcbgu1u+k139tcl+oh
P5h7nCLXGRpei/m+XvMN7/Xej88AwDFdbL8Ww/oaTxuzgAD008UW++0lyvgq
UUZvMt8dc329X4eiepjTV+/vF7m+AcDpukjvU9Yq+3+RX7vvdfz9KvvX235k
ld6bt615vA4e8vfjquNeVEB5F3ua/9RXbXJ9tduu96X0PYBBazrHr81R6c1e
FNAXy+OrXK7vQI+Xy/cd5PE21CWVQTpI9qrKr414f+z+ZZVft+7Yr/n0xF/z
XI7w6HvUHvM1j+/1WebxxgVe8xfxOo65TAD0SmYecuNaDHGcZrU204eu+Q8A
+iOT8X63RRnr4/edyjhwG7vm+hal67xJ7F+u93WtFQTA3mSyea37fhfptft6
OQcgp3pYH3ebbF/qWrzPaRiQi/Sa5Cdx/atLri/efrT2+96voRHP3/Nqz+sH
AafhIj3H9Vlmbktv56JACcvj/zt2zq4h6zU+YrtTfcODrqlW5fN9R9uvNNbh
rsBrnuuLj47Y9qtMHQ75mufyfdMevOYHfd9l3ut3x2p34jU/eo4WAJpsMw/5
4uMevuE657PSbQBge5mMd6ex9sRnSfh86MX+ehtyff/n0h8SP5+XrvcmmWzf
Vel6AXAaLtL7lG1c3z1RTmp8NPimdBvbqB7W7vv9jrm+3mdggE/t6xzYRy1y
fdPM/er9qknpdjRJjAXPStcJ6I+L9BzX95m838Z1EOCcZLJO/6E6Qo6+Su8P
enekxx5l8laTIzz2i0w/8yh7zhR+3ueJx54fqd251/zg19+r/Jp5o1N+zavH
+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
BpTvg8Uf55s+2vutdL26CGtFJMaYRjuUN0uUNy3dTgDgtMXxwunamGEu4ycr
A1uoHva5Tv1Nndz1gUw/abpDeamsYLa82uOf3HML50SmDx5U6XV/x6XrBQAA
p8za8WWF+Uxr4xV3Mn29N120PELObpes3rZCRjCs+9fhmPfgeYWiMmNbgxkr
fv509CIxvnS3Y5l3iTLHpdsKAJyHmPFLfUdbNzeeCO1V+T0kBtP/aSvTT9p6
f9zQH8qUl3zuao8/L/1cANsJYyEdM303Mn2cMtk+AAA4Hpm+/oj5vpDnm5Su
C63NFi2PsIZf2IO3RMYvrAcY9vdteUx78LxCEdXjvSSC+9L16uL509FVYnxp
tkN5o9SYVel2AnB+YrZrps90vmKfedaiDzQrXVfou4Zc39Z71PZZpp+0VdYu
rLuXWQMweJG5z3X8vf1PYGBipm8ax0bajKGEsZZx6XoPxdr3u3vf84dDtg8A
AA5vy7XjZfrgsbCXbesjZPzCOn5d9uoNwl694X5/9dd/s/jb3/3dH4Wfhcxg
2Ie36f5hDb/fvP1t22qOe/C8wtFV6fVgZqXr1UVmX6jJDuVNEuWd5HgfAP0U
s/e3a5/P89L1ouh7Iowjzjf0oUal6wl9FTPSqb+bu+pE94/I9JOCTnO5Yq7v
dnXfNnOg1rKAo9LPBdCOTN9hNc3ZKF03Wr+Gsn0AAHAgW2b6RqXrDT0Wrnt3
yvetjpDzC3m7kM8LQn4v+OHVj779d9hPN+T32h7htpvWBgzZwBbH3aLscwpH
tzxenMK4cGb9iK3bENb8S5RnrQkAjiJ+Pt8lPp/npetGeXE8cT33uZJcOwv6
IGaWL+Pcoqacanh/3yxd7eM9Hc+pub+Z+1P+u2lYZ6/1XKi1XN9Nah5U5n7T
IcyRuvjs82dLr5ferV0bfh9+Xrvdl5lryK9KtwH2Zfl+nnTI9N3J9LXXlOkb
6rW4cyXbBwAA+xfnmXXJ9N3I9HFK4rXz1TXzuwNcs54tenKEzGDICO6Y75su
evC6wTHE80MqNzArXbcuwv5PiXGqux3LvGu7zxQA7FPMvdxnvtNOS9eP/qge
9hatf5frdX6G8xXHwDflGZrcxpxfp7X1WuQoTj3Xl+onfdJnCrm9FmWscn3z
1e0T/aXx2v1GtVzh+BDt21XM6r2pXRN+U8/pLf/7Zcz7vY3/fp25lvxF6bbA
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
Z52EWel2chrid+SbyJrWAMDB5PJ42/RRMxnBVv1mOHWpXJV+KcfUw2zfNPGZ
Md9T+aGc5JHK9v3VX/9N7uaro/jrx3DJ9u3f86ejF4lc313pegHDZK4bQDvL
Y+I6BGvviV5dZ4DM97FW38nCms1xzb5n8d+pnOC70m2EU1cdfu2+aek2AgBA
F3GN+dS68p3HMWJ5qbUOtioLTk2V38NGro+j6Ns19wNn+2aLhmP9efjlr37d
dPNwjEs+Vwyba4j79/zp6CqR7ZuVrhcwPOa6AXST6ldGV6XrRpH3w3ztfXBX
uk6ct4bxjuw4RcjyxXGNcL8vaz9/kyjj69JthHNQHW7tvknptgEAQFfLvug3
exzHeJbpM3+573rDUDVcAzffjIM7s2zfdNFwfOc7zz55Hr73/R803TwcNyWf
K4bN+Xr/nj8d3SSyfZPS9QKGxVw3gO1UD3uOpa5LXJauG0d/L6xn++al6wSZ
+RYr39Ru96y2Nt+H9XGMzPfEl6XbB+eg2v/affe+pwAAMEQNWbxtxzFSa9Tb
fwii6mHvmt+bb0Ypy+OqT9fcD5ztmywajpDlW/87ur//Q9NdwuH6D1tJnLNn
pes0dM+fjuaJbN+T0vUChsVcN4DtVA/7Etxmxs1flK4fR30vrO9PYV4cxcX5
G6k5Fznhts/WyvjSWAeUEXN9sz3n+nw/AQBgkDLjGIv1fmyH8t4nyrL/EGct
Xu8Omb67A2X65ProZHlcVw/z6m9KX9M4cLYvtC17/Plf/OWjv6W/+uu/abpL
OO5jucVfR4aleryWxW3pOg3d86ej67Vc37R0nYBhMdcNYDdx3H0917WImT9z
Ls5AuKaQeP2npesFQcz3pfbUbbtPb2rtP2MdcEAHyPStvpeMSrcNAAC20TCO
8XbL8l7uc1wEhi5m+qaZ69zmm8Hi4Nm+IGTxksc//f6fH/1N/emrP8vdvH6E
Mq861CH8jY4zRqVfA44jc13SeOeOwh68IdNnL15gG+a6sY3lMa4e5m6NStcF
+iCT7QrmpevGUV7/9b0BgnHpekHd8vvYq0TG782mcYvMun/GOuAADpTpM98A
AIDBy6wpsMsaBW8z5dl/iLMS+6GHzvTJ9XESjpDtC3sBZY/Uvrwt1u5bHaGe
k8Wn+bxx/Nls6bZtQbGs64U9f09WzAAY8wLoCXPd2Eb1sP51vT82Kl0n6IPM
d92gy5woBqhK7FFRuk6wD3HNP2MdcGAHzPQtYrlyfQAADFpm3tlW/dOGcQz7
D3E2OvZD50v/aof8361cH6fgCNm+yaLhCDm+9b+v73zn2eL+/g9Ndzv0EdYF
nC0ecoLFXyP2o0qvZ2KsE6AQc93oKvNZPi1dL+iLteyr77tnoHpYx3T9Nb8p
XS/Yh7jWn7EOOLA4zrFpfYPp0v/WNddXum0AALCrhnlnW/VPG8YxvindVji0
OMbTNtN3U9XWaarSe5e0yfWZb8ZJOEK2L/ytNB5hH971v7MfXv1o092OdYTn
YrzowWvF7uQBAPrDXDe6ivOz5JagQeLvZFy6Thz09b5LnBetRc9JWH6P+zrx
3e5N6XrBqWmR6XsSbzfqMH7iOzoAACchM+9sq/7p8j5fZcoKXpVuKxxKnJ+c
Gt9JzhOrMvs1Za6FyvVxFo6Q7Qtmi4bjb3/3d8m/tx//5KdNdzv2EZ4Ta3UO
nGwfQD+Y60ZXVXptqnt9M/hU+JuIcxinkT7MiYqv7/p58a50vWBfMvNAtlrf
GcirHu9r9Emmb+22sxbjJ5PSbQIAgH1p2H/o647lhDGR92EMJFPeF6XbCvu2
r0xfrbxJ27JKtx327UjZvjCe1Hj87Oe/GEK+LxzTRQ9eN7Yj2wfQD+a60VWm
/zcpXS+AEqr0HuXW7ONkNMwD6by+M9AsfqbMo2Smr3bbUcPYScgEjku3BwAA
9imzpnznuWe1cr5JlPWudDthn+L889sWGbzs3LKGsu/k+jhHR8r2BaHMxiO1
N2/wve//YHF//4dNdz/mcbt42Gu4+OtHN7J9AP1grhtdZOZi3ZWuF0AJMYOx
vsZSMC9dN9iXzDyQrdZ3BvarSq/dFz6XrBUMAMDJyWTxOmX7wjy11X3C+ga7
jotA31UP+8rsNdNXKzs1XiT7wck7YrZv49p9Ib+Xy/d95zvPFn/+F3+5qYhj
HvcLe/QOSmZti6vS9QI4R+a60UVmHpa1qYCz05DrCz8bla4f7Evmu6KxDuiB
xNp9t9uMxwAAwBDsmu2rrU/wJv47tU6B/Yc4KTG3l8r9hLGeyR7KT40Z7Vwu
9NkRs33B9WLD0ZTvC7773T9Z/PJXv1780+//eVNR397mr/76b77d7zes/ZcS
yvrN299uuy6gfN+AZDLc49L1AjhH5rrRVmZ+17x0vQCCmLUbrzlIviH2Z1K5
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
b9t1nz3K9p3UvZD1lLSfUwAAgCrk+ouSuWai3UdgxJLUs/bP/9k/PZlDrf76
r7W7Nfv2+9+d95m5jFO990Dc1U60bbL+rivfJ2v+ljR5L1v3seBaSVl7i5pH
AADAKThdvzPR7hOA+hzX+my0+wUAGE7FTB/fDwBak8+RHrN9667761G274ml
Hy9oP58AAABF5Nowy3mEQX7HATOSpB61v/u7v7PWhpN/p+k2W7bvX/+rf9XV
5uNU930Qpp68F1z5vtu3X6py90trEZhrJC8Kcn2svQUAAAqR7QOmwTEviLT7
BQDoX41MnxwrirkOFEBbWVv1mO1bdN1fH7J9kuGz9OGx5XaPbH0t8JH266HH
MbsudQ0NqXn4xHE7+fvj/NhSExEAgHZqZPpSMydlrgk0l6Qetfv37p3MPf7F
iy9qd4uWtT//sz+99LxIfcUOW5zqvxdElFl3uWNNmuT7bty4efKd99nnX5Td
dZU5ZPpic0x2sGMgAABgeiy/IVbafQJQT2BfF22r3S8AQL/I9AHQYs7z9pXt
6/yzypNs311LHx6U3OeBI8/3xGzvuvZrocPxuXOU47PVNxQPK4ypbaxe1N4/
AADGJNivGbhlrgkMKkk9apLjy/+2fvNf/kvtbtHS02xfx89LnOq/F46FmWVm
03K/tun+PSbnwC/Mf1dqXz76qnbtvr//+3/4v8wx26JMn/ztPNUfYwAAMAKW
3xKxdp8A1BPY1+NdavcLANAPMn0AfNBTrq+XNcM9yfbZ6vHdqXC/fM6tMA84
RjVqFN41t7/eoL4hax8DAFCCTB+gKkk9arL+bv43dYfrvtJatHy2r+N1kuNU
/73gIt8556aPks+T98zOsg+JIbdbpPt84Mn2/pf/9ce//N/+9+22yqC8+trr
J9+Fkvkranf+8z8UfY/Kdy3r8AIAgErkdwN5IGD8zLG0/Hs51O4XAKBbZPoA
+CSovj5bHb3UkdfO9pks2kk9uQr3e7FuFnDssn18oyCfJ+N4M/PjIeco/310
3ztHf8v7UXvfAADwUVBtvcDjLMJCu8/ARCWpJ00yfPnf07Z1X/MZszK//925
wt4M0yRfJ/XzhNQ8lGykrcnfZSzzY+tRTcQ41X8v9E7OhR++9x68+17poHz9
zbcn34lvLt8qvI9s13Xcg2O2AACgjsC+jlKk3S8A9VjOq+60+wQA6A6ZPgA+
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
zAcZv/4F+2u444rHeLdTzfiNIdsX2NfiFdTsw6Tk1gnJW9fcntzeiyaZQckH
tsz3NTqHZM5J5c9XbRtsZ5Xbxo7zWgAA1BPs69MV1bFKjFVwuYaW8GKuW7IP
Rfmdyut/AnNijn/lj30tu3yMYJ8pXveQy4ttn0/mGEZk/l52XelO43iTY570
dJ1dyzVNkumLtF8rAACMQUC2DwAAAJgdMn79M8dcF0G1mgtbc2x2MuMbeJ7t
M8+P7Vj4bkrPA3DQcb5Pzol502T9Xttnq6zP+933P5TdvVGWV9betZyzqjWO
lm2Q6wMAOJm5xTpgnVXb2CQd5GmOM4BrM5855GtE6Mk+yBxm2Xd/gLHL5jgb
V+3yro9tBc8zfk3r+B3W0Q4bPO6qZNuLIcfdMU/Kz3nWTeqdAwAwZwHZPgAA
AGC2yPgNI6ie8dsFE8n4BR5n+8zxb9c17qxhhUkyn/eu81tiUXObkkHbpJ40
WadXsnz59/TLd14pW+s3SRuMp2UdKVF5DMn1AQCayM0pEpPxmv33R9YuGuZp
mmZwFgPvw4WZU45+nggMQeY2Jce2ZF7Uy2dnsM9fr4LyvG4SdLSOtjnGUfQZ
shhq7C11yQ8uzByIzzEAQC3B/hr95eE3sXZ/FMchsnzHR9r9AgAAADAcMn7D
MMd4y47vHs4XyTHeULvPLfbVy2yfeQ5c19LH2v0D+tRDvk/EmV3qQZMafbb3
9vsffFh0tyRtMJay/q7lfFVY8b7k+gAAjZh8l2v+kJjf4Odjnkc0HJdbQbVr
qbrU6Rjn9uFQw4vrjoCGZP3dCse1BnmPmfd31Pdnc8F3hBhkviHZvUx8hM8x
AEAr5nfx8Xfado4ZP7J9AAAAAA7I+A3DzMOqZPzSoMG6LD7wLdtnjqUXjfla
e8yAIfSU75PvgDj1IOP32edfWN/jP/38i+suSVpzfyXDZ8n1bSved5m734Zc
HwCgjhrziEPebxVcXlt2snO3YF+76rCfsbEOnq+122W2L9LeXwDFpDZfheNb
K+1+dskc+7Bdz7id8uc/AGC6HN9rs8v4ke0DAAAAkNc046fd77Ex87F1jYzf
aPIflmzfruL9jtevsc3bj89Rnhcdmzbn9hYVzuOttccLGFLJOa5dy/WpFpmL
tJsmnxtJZlvnTm8u3zp5n997+77r5rL9Wvtoqbsn1iX3uWZZx/eCNakAAHU5
zum0Jb+XQ+19G3AMw6BdBnCrvQ8AqjHHt5KSY1rJlK5ZDdz5vknlGAEA8xAU
rzs/m4yfYx4YafcLAAAAgL6aGb9Eu79jZc4trWucd4u0+1xhn/LHkuMK+++6
Bq/03NrRebiDqttaao8VoKHnfJ+Qc2Oy/pKcP0rS8pp+W3O7OBNZthemFWsD
7na/pjdu3Dx5v8u/W1pcd98sGT2xKLj9LVOf7/j2tR8XAICDivmzKnb8Hi4c
5zA4zQCKULtvAOqR+nwVrlkdzfWUZQL3+ryhdt8AAKgja9cqzn/kHMFCu789
jkNk2edIu18AAAAA/FEx4xdp93PszLmjVcVcWqjd34r7E7vmmEG9TGPXtsx9
MXcm31d0bivs4XFlm9GRuvUx5P6btKS9/8GHJ+97Wa/X0mqfv5P1dy3ZPut2
zBq8O9bgBQB0yXFepy75HT6ZOlUAUCab3ywqXLu60O5nV8zxpZPPfu1+AQDQ
hJkDzTbjR7YPAAAAQFUFGb9Eu29TEuyvRYtLMn6xdj9b7uOyYoaxa7uxjx3Q
JXN+y3Vea+Pp2lTSp8J8308//3Ly/pe1enMtqfvYv/1NGFpyfSdrjmf/FuVq
9e2o1QcA6FLF81pc4wIAR8z1TZuSfN/a03lQLebYku24S6jdNwAAmpprxo9s
HwAAAIC6LBm/SLtPU3SU8dta5m3n2v1rsU8XFefeSXB57avY3Nc2HmU2U5rL
A10acb6vcH3el++8cvJZkGtNavYtLNm+i6O/S/bvIvd3WcM39GDMAAAT4ji3
wzUuAFDCHNO6KMn3bXqqYz4ocxwl/33AWuwAgNGbW8aPbB8AAACApszx0IV2
P+ZA5p8mnzbac3Im17cpOd8oa8aU5m2C/Xq+C3OcOnGQv50HrDUGlMo+y5dF
57W0++cgnxXOfJ9tXd7vvv/h8OdFk8c0Ob18tk/W3T3PJGT6AABDKvltnbfS
7i8A+KRkDpSa61lHeV3lgTkOc3Lto3a/AADoylwyfmT7AAAAAAB9K8n17UwO
jwweoMisPeVcl0q7fw7OfN/X33x78nnz7/6nr/8hbZjrE7/9Tbi1ZPsurc+b
WZHpAwAMwVzrUreWde26tQAwVbIOxdGaFC6xdj/byNra8n3A8RcAwKRMPeNH
tg8AAAAA0LfAvQ6vnF8MtfsHYG+k+T45LyV9u9R++vmXk8+cv/iLv/xvmj6O
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
9Cn2lVrH48V+VVO5DiK+L5azqd2qdpl3ON672FZNfdWbA6j3u1nzurnq3HXK
MzjL78FVj5cr3teeNcf1PcXXO/0242cO/ZxvimG97vJbj8ecj+GcA0Af+q29
202/FeAAhXxu1N+5+Ostvuuq4bvuW3y+yl3xa9tyxH7wQfbRARi32O+p7q0v
eds/li7ToYv35aHy+aXmm+7j3My8dF3hmMQxm5c4vtzYze3aZ5r6HhvXgR6j
ZV0/xH5OU5u8yhWSiAvsnUMmzg3n5jIXpdsIODzxHtB4zU985n2cE3i51k/q
OTms9jJ6rLXXxvmRWrvl7g+TmmM6drMtYvw2xOZcDVCu3HNC0fi+DbFOd9v0
AWd/Yvxy7Vo0f19D/7k6V1vtHRzbten4Jc/5oum3vm3ZZquxidxv6qpgvd81
lOt+2/GO2SrGL3f9KXrOAaAv/dZebabfCnCgQjo36ovB97UKzXtP3TR87t+5
qyHK0TA2ky0DANTVYlou1/o7/+agKl3GsYnjyYtZu32gurLWHAbSIj7vxWV8
fzW+k9oDo8lkxs6WdX23dL+hPf7Kdb7877v117cpw4a58RvzeUBd+LOO5dU1
v+EzL/eBVnMDxyTOj6zHwbe+z+1z3I7yZh1j/BpinQbbQzXGFd3k4ooKtVNT
rNNgcXcbnpG2iqHboky5vZfvh3xmO8BznluvX52f84G/5+nAznnumnC1r99W
iXoDwDb0Wzu3l34rwAFLXKN3Ho/QNb4vznX9qr1nPkQ5Zvn1h1VfeZDvAOD4
ZOL4UuQa31Kc17pqObfVqHRd4Fgtr3VfmsZuwiqf6ct181t9XCys1s/mrqmP
petWoC2b8pz/jn2i89g/Sr0+3+b74zU3dx2t5kwXpdsIOAzh9b7qv5vmPWrz
Iw9TG9fPzI902oN+3+N2HIZZ+xi/XFzf4HH5DbFeVwXaJ9c2g8dezfL73/7a
RTu3+F2k6n2zo+9bHNA5z52DwdfxHdg5v8qcg8Wez/lec1XGc1DlUbzbxd81
AMdPv7VTW+m3Ahyw0JwfdafxCKE5L8XV2nvX57jOhyhDQx/9pZ9edG8FAA5f
vJem+ogVucYHNvsT69c1r9+v0mWHYxbSucAfwp99LB5yY2cx9i+33mhy19Fl
nS/C3+uaUv4r8++v9u7tKl5nm66vT7NVPo+Nc6izVc6T69mfvCdPu5h7BfYr
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
AAAAAAAAAAAAAAAAADA9/wu056O7
    "], {{0, 501}, {2551, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{563.1382812500001, Automatic},
  ImageSizeRaw->{2551, 501},
  PlotRange->{{0, 2551}, {0, 501}}]]]], "Text",
 CellID->150509519],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"scalar1", "=", 
   RowBox[{"LoopIntegrate", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "k"}], "-", "p", "-", "q"}], ")"}], "\[Nu]"], 
      SubscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "k"}], "-", "p"}], ")"}], "\[Mu]"]}], ",", "k", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "-", "q"}], ",", "mS"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "-", "p"}], ",", "mS"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "mS"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scalar2", "=", 
   RowBox[{"scalar1", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "\[Rule]", "p\[Prime]"}], ",", 
      RowBox[{"p\[Prime]", "\[Rule]", "p"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", "\[Nu]"}], ",", 
      RowBox[{"\[Nu]", "\[Rule]", "\[Mu]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scalar3", "=", 
   RowBox[{
    RowBox[{"-", "2"}], 
    RowBox[{"LoopIntegrate", "[", 
     RowBox[{
      SubscriptBox["\[DoubleStruckG]", 
       RowBox[{"\[Mu]", ",", "\[Nu]"}]], ",", "k", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "-", "q"}], ",", "mS"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "mS"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"scalarTotal", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["e", "2"], "\[Lambda]p", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"scalar1", "+", "scalar2", "+", "scalar3"}], "/.", "onShell"}], 
     ")"}]}], "//", "Simplify"}]}]}], "Input",
 CellLabel->"In[9]:=",
 CellID->1916696799],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  SuperscriptBox["e", "2"], " ", "\[Lambda]p", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], " ", 
     SubscriptBox["p", "\[Nu]"], " ", 
     SubscriptBox["p\[Prime]", "\[Mu]"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PVC", "[", 
        RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
         SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], "]"}], 
       "+", 
       RowBox[{"PVC", "[", 
        RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
         SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], "]"}], 
       "+", 
       RowBox[{"PVC", "[", 
        RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
         SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], 
        "]"}]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["\[DoubleStruckG]", 
      RowBox[{"\[Mu]", ",", "\[Nu]"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PVB", "[", 
        RowBox[{"0", ",", "0", ",", 
         SuperscriptBox["mH", "2"], ",", "mS", ",", "mS"}], "]"}], "-", 
       RowBox[{"4", " ", 
        RowBox[{"PVC", "[", 
         RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
          SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], 
         "]"}]}]}], ")"}]}]}], ")"}]}]], "Output",
 ImageSize->{546, 71},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[12]=",
 CellID->891710585]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Form the total:", "MathCaption",
 CellID->843859022],

Cell[BoxData[
 RowBox[{
  RowBox[{"ampTot", "=", 
   RowBox[{"wTotal", "+", "topTotal", "+", "scalarTotal"}]}], ";"}]], "Input",
 
 CellLabel->"In[13]:=",
 CellID->555200675]
}, Open  ]],

Cell[TextData[{
 "Once the amplitude has been constructed, couplings and masses should be \
renormalized to render the amplitude finite, and the limit to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptD]", "\[Rule]", "4"}], TraditionalForm]], "InlineMath"],
 " should be taken.  Below are some functions to help carry out this task:"
}], "Text",
 Deletable->True,
 CellID->1720751736],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["LoopRefine",
      BaseStyle->"Link",
      ButtonData->"paclet:X/ref/LoopRefine"], "[", 
     RowBox[{
      StyleBox["expr", "TI"], ",", 
      RowBox[{
       ButtonBox["Part",
        BaseStyle->"Link",
        ButtonData->"paclet:X/ref/LoopRefine#883568301"], "\[Rule]", 
       "UVDivergent"}]}], "]"}], Cell[TextData[{
     "computes the UV divergent pole part of ",
     Cell[BoxData[
      StyleBox["expr", "TI"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["SeparateUV",
      BaseStyle->"Link",
      ButtonData->"paclet:CollierLink/ref/SeparateUV"], "[", 
     StyleBox["expr", "TI"], "]"}], Cell[TextData[{
     "extracts rational polynomials of UV origin, and obtains the ",
     Cell[BoxData[
      FormBox[
       RowBox[{"\[ScriptD]", "\[Rule]", "4"}], TraditionalForm]], 
      "InlineMath"],
     " behavior of ",
     Cell[BoxData[
      StyleBox["expr", "TI"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1542506863],

Cell[TextData[{
 "Tools for renormalizing and taking the limit ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptD]", "\[Rule]", "4"}], TraditionalForm]], "InlineMath"],
 "."
}], "Caption",
 CellID->1901940550],

Cell["\<\
In this example, the amplitude is free of UV divergences, so no parameters \
need to be renormalized.\
\>", "Text",
 Deletable->True,
 CellID->292238261],

Cell[CellGroupData[{

Cell["This confirms the amplitude is UV finite:", "MathCaption",
 CellID->319074112],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoopRefine", "[", 
  RowBox[{"ampTot", ",", 
   RowBox[{"Part", "\[Rule]", "UVDivergent"}]}], "]"}]], "Input",
 CellLabel->"In[14]:=",
 CellID->810137746],

Cell[BoxData["0"], "Output",
 ImageSize->{11, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[14]=",
 CellID->1897616544]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Despite its finiteness, observe that the W boson contribution to the \
amplitude contains explicit dependence on \[ScriptD], which is multiplying \
UV-divergent Passarino-Veltman functions in several places, ",
 StyleBox["e.g.",
  FontSlant->"Italic"],
 "\[LineSeparator]\t",
 Cell[BoxData[
  RowBox[{"8", 
   StyleBox["\[ScriptD]",
    Background->RGBColor[1, 1, 0]], " ", 
   SuperscriptBox["mW", "2"], " ", 
   RowBox[{"PVC", "[", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], "]"}]}]]],
 ", and\[LineSeparator]\t",
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     StyleBox["\[ScriptD]",
      Background->RGBColor[1, 1, 0]]}], ")"}], " ", 
   SuperscriptBox["mW", "2"], " ", 
   RowBox[{"PVB", "[", 
    RowBox[{"0", ",", "0", ",", 
     SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}]}]]],
 "\[LineSeparator]Since the COLLIER library is unable to algebraically handle \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptD]", "=", 
    RowBox[{"4", "-", 
     RowBox[{"2", "\[Epsilon]"}]}]}], TraditionalForm]], "InlineMath"],
 ", the rational polynomials of UV origin of this kind must be separated out \
explicitly."
}], "Text",
 Deletable->True,
 CellID->1776697509],

Cell[CellGroupData[{

Cell["\<\
This isolates polynomials of UV origin from Passarino-Veltman functions:\
\>", "MathCaption",
 CellID->591893077],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"8", "\[ScriptD]", " ", 
    SuperscriptBox["mW", "2"], 
    RowBox[{"PVC", "[", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], "]"}]}], 
   "-", "\[IndentingNewLine]", 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[ScriptD]"}], ")"}], 
    SuperscriptBox["mW", "2"], 
    RowBox[{"PVB", "[", 
     RowBox[{"0", ",", "0", ",", 
      SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}]}]}], "//", 
  "SeparateUV"}]], "Input",
 CellLabel->"In[15]:=",
 CellID->802692235],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "6"}], " ", 
   SuperscriptBox["mW", "2"], " ", 
   RowBox[{"PVB", "[", 
    RowBox[{"0", ",", "0", ",", 
     SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}]}], "+", 
  RowBox[{"32", " ", 
   SuperscriptBox["mW", "2"], " ", 
   RowBox[{"PVC", "[", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], "]"}]}], 
  "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["mW", "2"], " ", 
   RowBox[{
    RowBox[{"UVDiv", "[", "PVB", "]"}], "[", 
    RowBox[{"0", ",", "0", ",", 
     SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}]}], "-", 
  RowBox[{"16", " ", 
   SuperscriptBox["mW", "2"], " ", 
   RowBox[{
    RowBox[{"UVDiv", "[", "PVC", "]"}], "[", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
     SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
    "]"}]}]}]], "Output",
 ImageSize->{561, 35},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[15]=",
 CellID->938370590]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Make the rational polynomials of UV origin in the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "\[Rule]", "\[Gamma]\[Gamma]"}], TraditionalForm]], 
  "InlineMath"],
 " amplitude explicit (here, ",
 Cell[BoxData[
  ButtonBox["Simplify",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Simplify"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " serves to shorten the expression, and is not essential):"
}], "MathCaption",
 CellID->525139231],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ampTot4", "=", 
  RowBox[{
   RowBox[{"ampTot", "//", "SeparateUV"}], "//", "Simplify"}]}]], "Input",
 CellLabel->"In[16]:=",
 CellID->2004749894],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "v"], 
  RowBox[{"2", " ", 
   SuperscriptBox["e", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", 
      SubscriptBox["p", "\[Nu]"], " ", 
      SubscriptBox["p\[Prime]", "\[Mu]"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"PVB", "[", 
         RowBox[{"0", ",", "0", ",", "0", ",", "mW", ",", "mW"}], "]"}], "-", 
        
        RowBox[{"PVB", "[", 
         RowBox[{"0", ",", "0", ",", 
          SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "1", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["mt", "2"], " ", "Nc", " ", 
         SuperscriptBox["Qf", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
          "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["mH", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"2", " ", "v", " ", "\[Lambda]p", " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], 
          "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["mt", "2"], " ", "Nc", " ", 
         SuperscriptBox["Qf", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
          "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["mH", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"2", " ", "v", " ", "\[Lambda]p", " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], 
          "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["mt", "2"], " ", "Nc", " ", 
         SuperscriptBox["Qf", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
          "]"}]}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["mH", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"2", " ", "v", " ", "\[Lambda]p", " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], 
          "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["mt", "2"], " ", "Nc", " ", 
         SuperscriptBox["Qf", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
          "]"}]}], "+", 
        RowBox[{"12", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"4", " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{
          RowBox[{"UVDiv", "[", "PVC", "]"}], "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{
          RowBox[{"UVDiv", "[", "PVC", "]"}], "[", 
          RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{
          RowBox[{"UVDiv", "[", "PVC", "]"}], "[", 
          RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}]}], ")"}]}], "+", 
     RowBox[{
      SubscriptBox["\[DoubleStruckG]", 
       RowBox[{"\[Mu]", ",", "\[Nu]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["mH", "2"]}], " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "mW", ",", "mW"}], "]"}]}], 
        "-", 
        RowBox[{"v", " ", "\[Lambda]p", " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mS", ",", "mS"}], "]"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["mt", "2"], " ", "Nc", " ", 
         SuperscriptBox["Qf", "2"], " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt"}], "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["mH", "2"], " ", 
         SuperscriptBox["mt", "2"], " ", "Nc", " ", 
         SuperscriptBox["Qf", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
          "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["mH", "4"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["mH", "2"], " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["mH", "4"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["mH", "4"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"4", " ", "v", " ", "\[Lambda]p", " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], 
          "]"}]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["mt", "2"], " ", "Nc", " ", 
         SuperscriptBox["Qf", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
          "]"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["mH", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"24", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{
          RowBox[{"UVDiv", "[", "PVB", "]"}], "[", 
          RowBox[{"0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{
          RowBox[{"UVDiv", "[", "PVC", "]"}], "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 ImageSize->{579, 443},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[16]=",
 CellID->1862293333]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "To obtain the total width, the amplitude must be squared, which in turn \
requires the conjugate of the amplitude.  Since the tensors ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["p", "\[Mu]", "\[Prime]"], 
    SubscriptBox["p", "\[Nu]"]}], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["g", "\[Mu]\[Nu]"], TraditionalForm]], "InlineMath"],
 " are real, only the scalar coefficient functions multiplying them need to \
be conjugated.  For this, you can use the ",
 StyleBox["Package",
  FontSlant->"Italic"],
 "-X utility function ",
 Cell[BoxData["X`Utilities`CollectByTensorStructures"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to conjugate the coefficient functions. "
}], "Text",
 Deletable->True,
 CellID->252538246],

Cell[BoxData[GridBox[{
   {
    RowBox[{"X`Utilities`CollectByTensorStructures", "[", 
     RowBox[{
      StyleBox["expr", "TI"], ",", 
      ButtonBox["Conjugate",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Conjugate"]}], "]"}], Cell[TextData[{
     "organizes ",
     Cell[BoxData[
      StyleBox["expr", "TI"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     " by tensor structures and applies ",
     Cell[BoxData[
      ButtonBox["Conjugate",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/Conjugate"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     " to each coefficient."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->135708013],

Cell["Conjugating just the scalar functions.", "Caption",
 CellID->1516047992],

Cell[CellGroupData[{

Cell[TextData[{
 "The applies ",
 Cell[BoxData[
  ButtonBox["Conjugate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Conjugate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to the Lorentz invariant form factors:"
}], "MathCaption",
 CellID->1714573189],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X`Utilities`CollectByTensorStructures", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SubscriptBox["\[DoubleStruckG]", 
      RowBox[{"\[Mu]", ",", "\[Nu]"}]]}], "+", 
    RowBox[{"b", " ", 
     SubscriptBox["p", "\[Mu]"], 
     SubscriptBox["p\[Prime]", "\[Nu]"]}]}], ",", "Conjugate"}], 
  "]"}]], "Input",
 CellLabel->"In[17]:=",
 CellID->1896012077],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Conjugate", "[", "b", "]"}], " ", 
   SubscriptBox["p", "\[Mu]"], " ", 
   SubscriptBox["p\[Prime]", "\[Nu]"]}], "+", 
  RowBox[{
   RowBox[{"Conjugate", "[", "a", "]"}], " ", 
   SubscriptBox["\[DoubleStruckG]", 
    RowBox[{"\[Mu]", ",", "\[Nu]"}]]}]}]], "Output",
 ImageSize->{252, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[17]=",
 CellID->1925401502]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Take the complex conjugate of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "\[Rule]", "\[Gamma]\[Gamma]"}], TraditionalForm]], 
  "InlineMath"],
 " amplitude, and store it as ",
 Cell[BoxData["ampTo4Conj"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " (",
 Cell[BoxData[
  ButtonBox["Simplify",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Simplify"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " not essential):"
}], "MathCaption",
 CellID->958298400],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ampTot4Conj", "=", 
  RowBox[{
   RowBox[{"X`Utilities`CollectByTensorStructures", "[", 
    RowBox[{"ampTot4", ",", "Conjugate"}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellLabel->"In[18]:=",
 CellID->382155532],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"Conjugate", "[", "v", "]"}]], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"Conjugate", "[", "e", "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Conjugate", "[", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}], "]"}], 
        "+", 
        RowBox[{"2", " ", 
         RowBox[{"Conjugate", "[", 
          RowBox[{"PVB", "[", 
           RowBox[{"0", ",", "1", ",", 
            SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}], "]"}]}],
         "+", 
        RowBox[{"4", " ", 
         RowBox[{"Conjugate", "[", 
          RowBox[{"PVC", "[", 
           RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
            SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
           "]"}], "]"}]}], "-", 
        RowBox[{"Conjugate", "[", 
         RowBox[{
          RowBox[{"PVB", "[", 
           RowBox[{"0", ",", "0", ",", "0", ",", "mW", ",", "mW"}], "]"}], 
          "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["mt", "2"], " ", "Nc", " ", 
           SuperscriptBox["Qf", "2"], " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
            "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["mH", "2"], " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
            "]"}]}], "+", 
          RowBox[{"8", " ", 
           SuperscriptBox["mW", "2"], " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
            "]"}]}], "+", 
          RowBox[{"2", " ", "v", " ", "\[Lambda]p", " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], 
            "]"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["mt", "2"], " ", "Nc", " ", 
           SuperscriptBox["Qf", "2"], " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
            "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["mH", "2"], " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
            "]"}]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox["mW", "2"], " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
            "]"}]}], "+", 
          RowBox[{"2", " ", "v", " ", "\[Lambda]p", " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], 
            "]"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["mt", "2"], " ", "Nc", " ", 
           SuperscriptBox["Qf", "2"], " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
            "]"}]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox["mW", "2"], " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
            "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["mH", "2"], " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
            "]"}]}], "+", 
          RowBox[{"2", " ", "v", " ", "\[Lambda]p", " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], 
            "]"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["mt", "2"], " ", "Nc", " ", 
           SuperscriptBox["Qf", "2"], " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
            "]"}]}], "+", 
          RowBox[{"12", " ", 
           SuperscriptBox["mW", "2"], " ", 
           RowBox[{"PVC", "[", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
            "]"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["mW", "2"], " ", 
           RowBox[{
            RowBox[{"UVDiv", "[", "PVC", "]"}], "[", 
            RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
            "]"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["mW", "2"], " ", 
           RowBox[{
            RowBox[{"UVDiv", "[", "PVC", "]"}], "[", 
            RowBox[{"0", ",", "0", ",", "2", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
            "]"}]}], "-", 
          RowBox[{"8", " ", 
           SuperscriptBox["mW", "2"], " ", 
           RowBox[{
            RowBox[{"UVDiv", "[", "PVC", "]"}], "[", 
            RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", 
             SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
            "]"}]}]}], "]"}]}], ")"}], " ", 
      SubscriptBox["p", "\[Nu]"], " ", 
      SubscriptBox["p\[Prime]", "\[Mu]"]}], "+", 
     RowBox[{
      RowBox[{"Conjugate", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["mH", "2"]}], " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "mW", ",", "mW"}], "]"}]}], 
        "-", 
        RowBox[{"v", " ", "\[Lambda]p", " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mS", ",", "mS"}], "]"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["mt", "2"], " ", "Nc", " ", 
         SuperscriptBox["Qf", "2"], " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt"}], "]"}]}], "-", 
        RowBox[{"6", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVB", "[", 
          RowBox[{"0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["mH", "2"], " ", 
         SuperscriptBox["mt", "2"], " ", "Nc", " ", 
         SuperscriptBox["Qf", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
          "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["mH", "4"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "-", 
        RowBox[{"8", " ", 
         SuperscriptBox["mH", "2"], " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["mH", "4"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["mH", "4"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"4", " ", "v", " ", "\[Lambda]p", " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mS", ",", "mS", ",", "mS"}], 
          "]"}]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["mt", "2"], " ", "Nc", " ", 
         SuperscriptBox["Qf", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mt", ",", "mt", ",", "mt"}], 
          "]"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["mH", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"24", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{"PVC", "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{
          RowBox[{"UVDiv", "[", "PVB", "]"}], "[", 
          RowBox[{"0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW"}], "]"}]}], "-", 
        RowBox[{"16", " ", 
         SuperscriptBox["mW", "2"], " ", 
         RowBox[{
          RowBox[{"UVDiv", "[", "PVC", "]"}], "[", 
          RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
           SuperscriptBox["mH", "2"], ",", "mW", ",", "mW", ",", "mW"}], 
          "]"}]}]}], "]"}], " ", 
      SubscriptBox["\[DoubleStruckG]", 
       RowBox[{"\[Mu]", ",", "\[Nu]"}]]}]}], ")"}]}]}]], "Output",
 ImageSize->{576, 463},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[18]=",
 CellID->1848146060]
}, Open  ]]
}, Open  ]],

Cell["\<\
When squaring this amplitude, the external polarization sum can be \
straightforwardly taken by contracting the \[Mu] and \[Nu] indices of the \
amplitude with the \[Mu] and \[Nu] indices of its complex conjugate.\
\>", "Text",
 CellID->1732130865],

Cell[CellGroupData[{

Cell[TextData[{
 "The amplitude squared, with the normalization factor ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox["i", 
     RowBox[{"16", 
      SuperscriptBox["\[Pi]", "2"]}]],
    FontColor->RGBColor[0.6666666666666666, 0., 0.]], TraditionalForm]], 
  "InlineMath"],
 " restored:"
}], "MathCaption",
 CellID->400750175],

Cell[BoxData[
 RowBox[{
  RowBox[{"ampSq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{"16", 
          SuperscriptBox["\[Pi]", "2"]}]], ")"}], "2"], 
      RowBox[{"Contract", "[", 
       RowBox[{"ampTot4", "*", "ampTot4Conj"}], "]"}]}], "/.", 
     RowBox[{"\[ScriptD]", "->", "4"}]}], "/.", "onShell"}]}], ";"}]], "Input",
 CellLabel->"In[19]:=",
 CellID->899474233]
}, Open  ]],

Cell[TextData[{
 "The decay width is constructed by multiplying the calculated squared \
amplitude with the phase space factor ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{"d", "(", "PS", ")"}]}], "=", 
    RowBox[{
     FractionBox["1", "2"], 
     FractionBox["1", 
      RowBox[{"8", "\[Pi]"}]]}]}], TraditionalForm]], "InlineMath"],
 " and by dividing by the flux factor of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", 
    SubscriptBox["m", "H"]}], TraditionalForm]], "InlineMath"],
 ".  The result is an expression involving various Passarino-Veltman \
functions that can be numerically evaluated."
}], "Text",
 Deletable->True,
 CellID->1249265745],

Cell[CellGroupData[{

Cell["\<\
Define the width as a function of the hypothetical charged scalar mass and \
the Higgs portal coupling:\
\>", "MathCaption",
 CellID->1436016646],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"width", "[", 
    RowBox[{"mS_", ",", "\[Lambda]p_"}], "]"}], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "mH"}]], "ampSq", 
    FractionBox["1", 
     RowBox[{"8", "\[Pi]"}]], 
    FractionBox["1", "2"]}]}], ";"}]], "Input",
 CellLabel->"In[20]:=",
 CellID->1710544336]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate it at a point:", "MathCaption",
 CellID->1129457217],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"width", "[", 
   RowBox[{"150", ",", ".3"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"e", "\[Rule]", ".3121"}], ",", 
    RowBox[{"Nc", "\[Rule]", "3"}], ",", 
    RowBox[{"Qf", "\[Rule]", 
     RowBox[{"2", "/", "3"}]}], ",", 
    RowBox[{"v", "\[Rule]", "246"}], ",", 
    RowBox[{"mH", "\[Rule]", "125"}], ",", 
    RowBox[{"mW", "\[Rule]", "80.4"}], ",", 
    RowBox[{"mt", "\[Rule]", "178.2"}]}], "}"}]}]], "Input",
 CellLabel->"In[21]:=",
 CellID->1617482983],

Cell[BoxData[
 RowBox[{"0.000010293458099114365`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.1679277423137604`*^-34", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{206, 15},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[21]=",
 CellID->927403902]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a plot:", "MathCaption",
 CellID->1604280665],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "@", 
     RowBox[{"width", "[", 
      RowBox[{"mS", ",", ".3"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"e", "\[Rule]", ".3121"}], ",", 
      RowBox[{"Nc", "\[Rule]", "3"}], ",", 
      RowBox[{"Qf", "\[Rule]", 
       RowBox[{"2", "/", "3"}]}], ",", 
      RowBox[{"v", "\[Rule]", "246"}], ",", 
      RowBox[{"mH", "\[Rule]", "125"}], ",", 
      RowBox[{"mW", "\[Rule]", "80.4"}], ",", 
      RowBox[{"mt", "\[Rule]", "178.2"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mS", ",", "0", ",", "250"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1.02", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]]}], ",", 
      RowBox[{"1.04", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]]}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<mS (GeV)\>\"", ",", " ", "\"\<\[CapitalGamma] (GeV)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[22]:=",
 CellID->2069369268],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnXu31NQVwLPa/tGv0S+Qb2A1Pqit2lRRtDZqgUVaqy4iPjC2XV2Ny7ap
tBqfwUIDYrC3obVRNPiI1sgjLhyQ+AjqCAM4PIIGby40aoTbfTLvmcyQzEzm
EfJbwyXPc3L22dnnnJ2dk+8tWX4V/S0Mw+74Lvy5avFKYsWKxezC78DKheyd
y5Z8GxaWwb/N8A8tzw+Ib7E0b5gyw6pe02ZbZjnFUDhGsb2kq/N+SeFIUjAj
kwoJVBrnTXfQi89JkbCOCqjKDAZnDae6taRguIC2ujqGcYeTrFaSKOscwZmd
SVX3GiKJYUIh141JxuVx0gzvZteo1ibgmTzBF2oHEFv0BKtGmJpX4CuptSWF
9jq6oNqWSHG53ZhoXIEga7UpNHSjVrOwCAdsMRKstutGoW2vIwuKDw2NQPIF
f3QFzUlMw26UNQZv2A2udrOXWQwsQ4LVDrvRdjCPkawg8DSB4SSrl3L1mFwM
luBD5UB1GBp53/MCRycqnQTPgAU30WqYrG8JVZVo2+u7RaBUVBiClk03aFwJ
ljMYw1cOD41TdENmOC2sKLi7MbUcWDC4kHUYXKjhrZ1odd4vKyyB01LRjdob
UuCpSh+4WTfqf5u3jGZ52rNORTcQgeM038G1rZ7j+n2tBoEfBPOB7wfRB0cy
eBkHlM9UZ52abkwEaRnGc4DMiy7bpUubbEsv26VLm2xLL/OGMT0yL7psly5t
si29bJcubbItvcwbxvTIvOiyXbq0GZ70fNf1orcGfa72TirwIg5u8o0hct0Y
hOFIb+TBPAWZZ1gaLl6uHBzYDI7hOEawaq4bw2IY0ht5MI9fNCz0/M0zOFK0
YMGWGF4vRZYuV4/+GJLoxhHMg9qUokAzoUr6Gk+HRaHbwr5yxRiEoejGyIN5
UKamKlIYRvBG7TJ8UyAxRht26c5dukrPLysCSxIEDhAkKyjdQ2ZGHcxj1Ps0
no5jXMNUBAWyebUpfiO+QHLme8vNNRmSVgolzw+g5++5jm1qHMOZTvQoYtTB
POiJfXiEp5O0ikYnlVVXp5i8Lzo0IqVnaboTcaxnaIXoVEYczONb0JqwkiKL
suUGoDk49FAlWRSkYqtxy3VjEIYnvdEG8wRgmZrPjPau5A1K33QTXUHiVSvK
ckwbuWIMQqT0bE1RFJFlWFExyj08lRNPrhuD0Ft6btlWRQ50xLTL06giuW4M
Qk/pBWVL5yno6GEUp0xjG9PWaH766ewW7cO1a3Y++sj2p9YX3jT2nzz51Rgv
b5Lp1t8omoahSyTaifOy4Uzty0CV0h069MWqB4wryad+fPn6X9/70mrxrQ1P
7Xri8R0rbt/8g0vW/uH+10Fnxn2lk0h0X5QHW0HJhj21SlGlUrp3rSNPb9i9
b9/nnQeA3QA9AZ2BA86cOTPyC5xoutgNqzog9F0YQrqlUsT4cBqIOYY9fvzk
rbeoG+VcPRr0Fp1ny7AXPWB1TZaVE76gPhHhHPH7oqAV55+3euniTV9+OY2d
7lToIT1TFAtFUzVRJ1RnaT2+cow9nCNG6SK5l92yfl3h9OnceiB6SK+sy4oq
y3qxZIrQ/bDidj7GH87RXLqk6nH3XS/KT+9OdEomOZvo/K0bH6RIgqRY3Y5v
NcYeztFSwNiXXQV6p9ct2vj6658kPTF7REqvbBcMXS96gSWxvKQosqya5dhJ
Tkg4R9fSnZVi8TPyivVHj871cW6WiJSezuCUaEAbUhBpiuV4niVwxo7bR5uY
cI4B4jegWbljxQtJz8oMPeSmi3KliXdK1d6CaypGbMfouMM5WsqYRCQNvvnm
9OKblFdf/bi/07NBpPQEWmjrXjhJdGPM4RxnK11MbNtZeOWGU6e+7juFNAiC
0zDKPnXqq7m5r06cgHH8/44fP+k4Jw8f9srl2YMHTxw4cGLfvs8/KX4OLeOH
e4/v3et88P4x+L1rHbGsI3veOfzO7sO7CuVdu8o7dx6C31vmQfiZOw7s2H5g
27bS9m0Htm0tvWnsn+8W2yPSotmkCr7NJGhTqoUYZzhHjQGftf3+d6/CkHaQ
FCpAPULFvffeUaiFV17+WP3P+xvld9BjnYe3r3rAuI/Tf/ubl++680Vm+fM3
//LZpUs2/fzGf15/3TPXLJQrfv5LF/x9wcVrifOfvOD7qy+84ElYvnTB2st+
KF1x2To44MqfbLh64dOLrpbhlOt/+swN1MyN1AyksHTxJkiKXvZv+N38i2ch
5VtvUW/9lbr8tufgB3ndvvx5aDfhB1nfdccL99ytrbxbu2elBgN59p4tXaXn
W8hZQDKiKAk8A4usFhHhP/kMGNtzuDwLVQC3Z8zjz5w5s3+/+8orHz+5+q37
73sNKuXaRRsvIv4GiUDFLVv6L6gFUIO/rnrz8cd2gNbN/GPPc+oHL730kfHG
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
    "], {{0, 101}, {180, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 101},
  PlotRange->{{0, 180}, {0, 101}}]], "Output",
 ImageSize->{184, 101},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[22]=",
 CellID->1325630031]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "When the numerical evaluation of an expression is attempted, separate \
COLLIER library function calls are made for each Passarino-Veltman function \
in the expression as part of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s ",
 ButtonBox["standard evaluation sequence",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/Evaluation#19212"],
 ".  The kernel then combines them and ultimately returns a result.  Despite \
being computationally expensive, results of individual Passarino-Veltman \
functions are not remembered, and each one in the expression is recalculated \
anew which is quite inefficient.  Therefore, computing with CollierLink in \
the way described above is suitable for light-weight computations.   But for \
heavy-duty computations involving hundreds (or even thousands) of \
Passarino-Veltman functions, direct evaluation can take a lot of time."
}], "Text",
 CellID->1203111321]
}, Open  ]],

Cell[CellGroupData[{

Cell["Compiling Functions with CollierLink", "Section",
 CellID->1267485191],

Cell[TextData[{
 "Using ",
 Cell[BoxData[
  ButtonBox["CollierCompile",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCompile"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", larger expressions can be evaluated much more efficiently by creating and \
compiling a program which uses the COLLIER library.  This keeps ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s kernel at bay until the final result is obtained.  Furthermore, since \
the program is guaranteed to make calls of the Passarino-Veltman coefficient \
functions in a predetermined and fixed order, the program can take advantage \
of COLLIER's global cache system to avoid recalculation of previously \
computed Passarino-Veltman functions."
}], "Text",
 CellID->465031948],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   ButtonBox["CollierCompile",
    BaseStyle->"Link",
    ButtonData->"paclet:CollierLink/ref/CollierCompile"], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["x", "TI"], 
       StyleBox["2", "TR"]], ",", "\[Ellipsis]"}], "}"}], ",", 
    StyleBox["expr", "TI"]}], "]"}]], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " takes an expression ",
 Cell[BoxData[
  StyleBox["expr", "TI"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " and returns a ",
 Cell[BoxData[
  ButtonBox["CollierCompiledFunction",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCompiledFunction"]], 
  "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " which evaluates this expression using the COLLIER library when provided \
numerical values for ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["x", "TI"], 
   StyleBox["1", "TR"]]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["x", "TI"], 
   StyleBox["2", "TR"]]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData["\[Ellipsis]"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 "."
}], "Text",
 CellID->2079240346],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["CollierCompile",
      BaseStyle->"Link",
      ButtonData->"paclet:CollierLink/ref/CollierCompile"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["x", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["x", "TI"], 
         StyleBox["2", "TR"]], ",", "\[Ellipsis]"}], "}"}], ",", 
      StyleBox["expr", "TI"]}], "]"}], Cell[TextData[{
     "compile ",
     Cell[BoxData[
      StyleBox["expr", "TI"]], "InlineFormula",
      ShowStringCharacters->False,
      FontFamily->FEPrivate`If[
        FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro",
         Inherited]],
     " to be evaluated using the COLLIER library."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->547009935],

Cell["\<\
Compiling expressions for evaluation with the COLLIER library.\
\>", "Caption",
 CellID->218484738],

Cell[CellGroupData[{

Cell[TextData[{
 "This creates and compiles a program to evaluate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["B",
      FontWeight->"Bold",
      FontSlant->"Plain"], "0"], "(", 
    RowBox[{
     RowBox[{"s", ";", "m"}], ",", "m"}], ")"}], TraditionalForm]], 
  "InlineMath"],
 " using the COLLIER library, and stores it as ",
 Cell[BoxData["f"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ":"
}], "MathCaption",
 Deletable->True,
 CellID->269793390],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{"CollierCompile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", ",", "m"}], "}"}], ",", 
    RowBox[{"PVB", "[", 
     RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m"}], "]"}]}], 
   "]"}]}]], "Input",
 CellLabel->"Out[23]=",
 CellID->298205254],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["CollierCompiledFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJztnFmKXEcQRRvLH96Gl2IvQV6BBPavQTIY/Wkv3o73ZHdRNF3DGzJyvBFx
DrSQWjVE3DgvX1Y29M+f//z4xw8vLy9ff3r94+Onv3/58uXTt99+fP3Hr9/+
+v3zh9e//Pv69c/r1+WbYOfD9+//vX2trgVyg4uwmlsH8RFWgYegAg6CCngI
KrAuggrsFUEJfAQl+DwNSuAjqIGPoAQ+ghK4CErgIyiAh6AA+0VYDec6oAAe
ggJ4CArgICiAh6ACHoIKeAgqsC6CEuwZQQXOc0ANnAQl8HE+5HsMPm7TOwfy
LQMX7+mdBde7DbK6MsobfCyHjMb7go/HkM+VWTmQ9zbkcmV2DuT+Duc576zK
gfzx8JbVOax+/5Xg4TsqOajUMZOMPV/Y6lMtC7V6RpOp11se+1Wdu2pdI8jQ
4yN7exLVLNTr64WnmfTCY89e6nyjpj5va0Qrnnv1UHNNXSUOeujdivfelOsv
qafFu2iORuhDsYdZjkVx03Ptjyj1sdozj+4q1NALT5nW1FXbiwcXI/j3iCcP
W99jRo0zsovm4BtePFTJenWtqrn0YEWmauuMlVW1KmfSi1m51jqomPvsmtXz
6MVjf7379uKXlVnXUbTcznjsr1f/ER28ZbSPkbOz0JpDdA/f2Outtf8M2Vmo
ySOLg7fs9VibRbb8SrHkktHDEloznFmrOiX5kOExJdcpGZZh2aeT4TZk2A8y
7AM51sO13BfWxzrIrT/WTMm2LrPVNXug1sXM+e7lQFZtWHwj4ytWF1fW6g1L
hmR9/HsYsmfTA0uG5J3zdzGokt3H7P2rkXkWuKhF9nlk7n01nPHck73/FXDe
uE32/mfD+fcxmXufyZlv+IiLszhzLNv6yD1hHTU/g4k0F/YnOuzlvDeHKLPB
QT1q5uF9RvinSc1cvM/Me/2RqVkbPM/Sc+3wjOd5eq4dnvF8n/NcO2zjeZ74
GAvPs8RFf0Q+/4jQQxainwVH6SM6WX4uEaWPqFjPur3PMUofESmZTSQXL0Tp
Ixo1HnqfY4QeImLdK3qeY4QeomNxz+McI11P0bGsf95miYd+se4fZ9dXCg7m
QH2uOJgH5fniYC5U54yH+VCdNR7GZW+mqvPGxVh4P2PExxhE+NmLhxrhmBoP
VefsqVZ45mxu3ubrrV54p2ReHueKk/44mpW3e/QjXuvOSqT94h6ea89GdBcv
eK49I2feeZ2n9+sInvE4zwhrOjzjbZ54GBdPM8XD2HiZKx7Gx8Ns8dAvpWc2
XubrpU64x3KO6GHGHmqEZ6zn2h5m7KFGeKZ0/fO0//JQIzxzNjdvHl7wVi9c
KZmZt9l6XMvhimXP6GWekXrJREQX34jYU3SiunhL1L6i4vksxwIu+iXqzKL2
FZWo60fUviITdWZR+/KEda8UcV54uB7rZ8moM4valxdqzmwizixiT96wniFG
nVnUvjxhuRdHPX+L2JNHzmYQ3cMLUfvyRskcInt4IWpfHrHsGSPOK3Jv3sjs
4QXrtRg1ByWyzqDGxch5KJExe3zUJ1vuuKgJme9DLvPg+t+HbNqx5EfW23Cv
bqd030PGx+BiG3xG7ANZtYOHfSCvdlgX+0BW7bS4SMZXyGofawaW7Mj4Hsvn
vGx5tfRf+pzM+d5SkkNWH1vvEZbHZ8z3Fkv/GX1s3bOMWkej0eu+s/XcCFnu
9Vd77ZY+LpuPrT2fZRchy5Jr7ajH2n1PJid79uktx173WKtnJXV4yrEHI/rz
kmNNfaVr49F7tLyuYo49GN2Xuo89XNzz7uyxR69prXN1jq3M6kc1xxKfLD62
9Gl5v6MaWvJYxcw+es1rdF1n3z97fktfljXR+v+KrJh/7fpRW1ft/B8fW/sa
tX20vI6n9XHlOtTqYss8rOva3v/V9tc7K8tzre89mhHrzkhGeFs7wxqXWzNt
nZPqbHvMaSWzfNx77NFzR2dpfV31GXv2cIuZa2Pv1x+Fen2WWlfX15Pe9zf1
GXuqtaTelbWNoKVX73Mt7UOl3tU1zaDH/VY9s6O61PpQq2cm0bzb4qjOUkdn
17m3fs+oYxWPfUdy8EKphyXr5aw6vWTbm7Pevedzts7UujqyRo859yBD/y3r
+2hH8PCdDBm07DNGeoKH92TJoWW/OyIjPHyGLM7pnREebkMe5/TMCA/3IZNz
emWEh8eQyzG93SHvfcjmHPIZR8l5G9nDDPAQVMBFUAIXQQU8BBVwEZTAQ1AB
F0EJXAQV8BBUwEVQARdBBVwEFXARVMBFUAEXQQVcBBVwEVTARVABF0EFXAQV
cBFUwEVQARdBBVwEFXARVMBFUAEXQQVc7M//uCnLQA==
                 "], {{0, 204}, {
                 163, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 Magnification -> Automatic], Selectable -> False], BaseStyle -> 
               "ImageGraphics", ImageSize -> 25, ImageSizeRaw -> {163, 204}, 
               PlotRange -> {{0, 163}, {0, 204}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Variables (2): \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"s", ",", "m"}], "}"}], Short[#, 
                    Rational[3, 4]]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 TagBox[
                  TemplateBox[{
                    InterpretationBox[
                    StyleBox[
                    GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[5]], 
                    RowBox[{
                    TagBox["\"Denom: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"2 (bubble)\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Rank: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, "RowWithSeparator"], 
                  "SummaryItem"], "\[SpanFromLeft]"}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJztnFmKXEcQRRvLH96Gl2IvQV6BBPavQTIY/Wkv3o73ZHdRNF3DGzJyvBFx
DrSQWjVE3DgvX1Y29M+f//z4xw8vLy9ff3r94+Onv3/58uXTt99+fP3Hr9/+
+v3zh9e//Pv69c/r1+WbYOfD9+//vX2trgVyg4uwmlsH8RFWgYegAg6CCngI
KrAuggrsFUEJfAQl+DwNSuAjqIGPoAQ+ghK4CErgIyiAh6AA+0VYDec6oAAe
ggJ4CArgICiAh6ACHoIKeAgqsC6CEuwZQQXOc0ANnAQl8HE+5HsMPm7TOwfy
LQMX7+mdBde7DbK6MsobfCyHjMb7go/HkM+VWTmQ9zbkcmV2DuT+Duc576zK
gfzx8JbVOax+/5Xg4TsqOajUMZOMPV/Y6lMtC7V6RpOp11se+1Wdu2pdI8jQ
4yN7exLVLNTr64WnmfTCY89e6nyjpj5va0Qrnnv1UHNNXSUOeujdivfelOsv
qafFu2iORuhDsYdZjkVx03Ptjyj1sdozj+4q1NALT5nW1FXbiwcXI/j3iCcP
W99jRo0zsovm4BtePFTJenWtqrn0YEWmauuMlVW1KmfSi1m51jqomPvsmtXz
6MVjf7379uKXlVnXUbTcznjsr1f/ER28ZbSPkbOz0JpDdA/f2Outtf8M2Vmo
ySOLg7fs9VibRbb8SrHkktHDEloznFmrOiX5kOExJdcpGZZh2aeT4TZk2A8y
7AM51sO13BfWxzrIrT/WTMm2LrPVNXug1sXM+e7lQFZtWHwj4ytWF1fW6g1L
hmR9/HsYsmfTA0uG5J3zdzGokt3H7P2rkXkWuKhF9nlk7n01nPHck73/FXDe
uE32/mfD+fcxmXufyZlv+IiLszhzLNv6yD1hHTU/g4k0F/YnOuzlvDeHKLPB
QT1q5uF9RvinSc1cvM/Me/2RqVkbPM/Sc+3wjOd5eq4dnvF8n/NcO2zjeZ74
GAvPs8RFf0Q+/4jQQxainwVH6SM6WX4uEaWPqFjPur3PMUofESmZTSQXL0Tp
Ixo1HnqfY4QeImLdK3qeY4QeomNxz+McI11P0bGsf95miYd+se4fZ9dXCg7m
QH2uOJgH5fniYC5U54yH+VCdNR7GZW+mqvPGxVh4P2PExxhE+NmLhxrhmBoP
VefsqVZ45mxu3ubrrV54p2ReHueKk/44mpW3e/QjXuvOSqT94h6ea89GdBcv
eK49I2feeZ2n9+sInvE4zwhrOjzjbZ54GBdPM8XD2HiZKx7Gx8Ns8dAvpWc2
XubrpU64x3KO6GHGHmqEZ6zn2h5m7KFGeKZ0/fO0//JQIzxzNjdvHl7wVi9c
KZmZt9l6XMvhimXP6GWekXrJREQX34jYU3SiunhL1L6i4vksxwIu+iXqzKL2
FZWo60fUviITdWZR+/KEda8UcV54uB7rZ8moM4valxdqzmwizixiT96wniFG
nVnUvjxhuRdHPX+L2JNHzmYQ3cMLUfvyRskcInt4IWpfHrHsGSPOK3Jv3sjs
4QXrtRg1ByWyzqDGxch5KJExe3zUJ1vuuKgJme9DLvPg+t+HbNqx5EfW23Cv
bqd030PGx+BiG3xG7ANZtYOHfSCvdlgX+0BW7bS4SMZXyGofawaW7Mj4Hsvn
vGx5tfRf+pzM+d5SkkNWH1vvEZbHZ8z3Fkv/GX1s3bOMWkej0eu+s/XcCFnu
9Vd77ZY+LpuPrT2fZRchy5Jr7ajH2n1PJid79uktx173WKtnJXV4yrEHI/rz
kmNNfaVr49F7tLyuYo49GN2Xuo89XNzz7uyxR69prXN1jq3M6kc1xxKfLD62
9Gl5v6MaWvJYxcw+es1rdF1n3z97fktfljXR+v+KrJh/7fpRW1ft/B8fW/sa
tX20vI6n9XHlOtTqYss8rOva3v/V9tc7K8tzre89mhHrzkhGeFs7wxqXWzNt
nZPqbHvMaSWzfNx77NFzR2dpfV31GXv2cIuZa2Pv1x+Fen2WWlfX15Pe9zf1
GXuqtaTelbWNoKVX73Mt7UOl3tU1zaDH/VY9s6O61PpQq2cm0bzb4qjOUkdn
17m3fs+oYxWPfUdy8EKphyXr5aw6vWTbm7Pevedzts7UujqyRo859yBD/y3r
+2hH8PCdDBm07DNGeoKH92TJoWW/OyIjPHyGLM7pnREebkMe5/TMCA/3IZNz
emWEh8eQyzG93SHvfcjmHPIZR8l5G9nDDPAQVMBFUAIXQQU8BBVwEZTAQ1AB
F0EJXAQV8BBUwEVQARdBBVwEFXARVMBFUAEXQQVcBBVwEVTARVABF0EFXAQV
cBFUwEVQARdBBVwEFXARVMBFUAEXQQVc7M//uCnLQA==
                 "], {{0, 204}, {
                 163, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 Magnification -> Automatic], Selectable -> False], BaseStyle -> 
               "ImageGraphics", ImageSize -> 25, ImageSizeRaw -> {163, 204}, 
               PlotRange -> {{0, 163}, {0, 204}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Variables (2): \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"s", ",", "m"}], "}"}], Short[#, 
                    Rational[3, 4]]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 TagBox[
                  TemplateBox[{
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[5]], 
                    RowBox[{
                    TagBox["\"Denom: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"2 (bubble)\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Rank: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, "RowWithSeparator"], 
                  "SummaryItem"], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"TN_cll calls: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"cache_no: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Code lines: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"File size: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"14.84 kB\"", "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "CollierCompiledFunction[{s, m}, -CompiledCode- ]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{388, 51},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[23]=",
 CellID->1856355527]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Evaluating f yields the same result as evaluating ",
 Cell[BoxData[
  ButtonBox["PVB",
   BaseStyle->"Link",
   ButtonData->"paclet:X/ref/PVB"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " directly:"
}], "MathCaption",
 CellID->23446459],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PVB", "[", 
   RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "\[Rule]", "6.5"}], ",", 
    RowBox[{"m", "\[Rule]", "1.2"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "[", 
  RowBox[{"6.5", ",", "1.2"}], "]"}]}], "Input",
 CellLabel->"Out[24]=",
 CellID->822890023],

Cell[BoxData[
 RowBox[{"1.3983810418522051`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.0600077834842039`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{128, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[24]=",
 CellID->517929881],

Cell[BoxData[
 RowBox[{"1.3983810418522051`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.0600077834842039`", " ", "\[ImaginaryI]"}]}]], "Output",
 ImageSize->{128, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[25]=",
 CellID->1096288676]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CollierCompile",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCompile"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " holds its arguments unevaluated, and definitions made earlier in the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " session will not be inserted into its argument.  Use ",
 Cell[BoxData[
  ButtonBox["Evaluate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Evaluate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to override this nonstandard behavior to force evaluation of its argument \
before compiling the function."
}], "Text",
 CellID->850888358],

Cell[CellGroupData[{

Cell[TextData[{
 "This defines ",
 Cell[BoxData["myExpr"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to be a one-loop integral:"
}], "MathCaption",
 CellID->465650926],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"myExpr", "=", 
   RowBox[{
    RowBox[{"LoopIntegrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"k", ".", "p"}], "+", 
       RowBox[{"k", ".", "k"}]}], ",", "k", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "+", "p"}], ",", "m"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "m"}], "}"}]}], "]"}], "/.", 
    RowBox[{
     RowBox[{"p", ".", "p"}], "\[Rule]", "s"}]}]}], ";"}]], "Input",
 CellLabel->"In[26]:=",
 CellID->764703614],

Cell[BoxData[
 RowBox[{
  RowBox[{"PVA", "[", 
   RowBox[{"0", ",", "m"}], "]"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["m", "2"], "-", 
     FractionBox["s", "2"]}], ")"}], " ", 
   RowBox[{"PVB", "[", 
    RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m"}], 
    "]"}]}]}]], "Output",
 ImageSize->{248, 29},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[26]=",
 CellID->1612790416]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CollierCompile",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCompile"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " does not recognize ",
 Cell[BoxData["myExpr"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ".  Use ",
 Cell[BoxData[
  ButtonBox["Evaluate",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Evaluate"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to insert its definition:"
}], "MathCaption",
 CellID->748930363],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f2", "=", 
  RowBox[{"CollierCompile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", ",", "m"}], "}"}], ",", "myExpr"}], "]"}]}]], "Input",
 CellLabel->"In[27]:=",
 CellID->870955874],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CollierCompile", "::", "unksymb"}], "MessageName"], ":", 
  " ", "\<\"An unknown \[NoBreak]\\!\\(\\\"symbol\\\"\\)\[NoBreak], \
\[NoBreak]\\!\\(myExpr\\)\[NoBreak], was found when generating code. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:CollierLink/ref/message/CollierCompile/unksymb\\\", \
ButtonNote -> \\\"CollierLink`CollierCompile::unksymb\\\"]\\)\"\>"}]], \
"Message", "MSG",
 CellLabel->"During evaluation of In[4]:=",
 CellID->1003233108],

Cell[BoxData["$Failed"], "Output",
 ImageSize->{54, 13},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[27]=",
 CellID->1444733559]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f2", "=", 
  RowBox[{"CollierCompile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", ",", "m"}], "}"}], ",", 
    RowBox[{"Evaluate", "[", "myExpr", "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[28]:=",
 CellID->1762234074],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["CollierCompiledFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJztnFmKXEcQRRvLH96Gl2IvQV6BBPavQTIY/Wkv3o73ZHdRNF3DGzJyvBFx
DrSQWjVE3DgvX1Y29M+f//z4xw8vLy9ff3r94+Onv3/58uXTt99+fP3Hr9/+
+v3zh9e//Pv69c/r1+WbYOfD9+//vX2trgVyg4uwmlsH8RFWgYegAg6CCngI
KrAuggrsFUEJfAQl+DwNSuAjqIGPoAQ+ghK4CErgIyiAh6AA+0VYDec6oAAe
ggJ4CArgICiAh6ACHoIKeAgqsC6CEuwZQQXOc0ANnAQl8HE+5HsMPm7TOwfy
LQMX7+mdBde7DbK6MsobfCyHjMb7go/HkM+VWTmQ9zbkcmV2DuT+Duc576zK
gfzx8JbVOax+/5Xg4TsqOajUMZOMPV/Y6lMtC7V6RpOp11se+1Wdu2pdI8jQ
4yN7exLVLNTr64WnmfTCY89e6nyjpj5va0Qrnnv1UHNNXSUOeujdivfelOsv
qafFu2iORuhDsYdZjkVx03Ptjyj1sdozj+4q1NALT5nW1FXbiwcXI/j3iCcP
W99jRo0zsovm4BtePFTJenWtqrn0YEWmauuMlVW1KmfSi1m51jqomPvsmtXz
6MVjf7379uKXlVnXUbTcznjsr1f/ER28ZbSPkbOz0JpDdA/f2Outtf8M2Vmo
ySOLg7fs9VibRbb8SrHkktHDEloznFmrOiX5kOExJdcpGZZh2aeT4TZk2A8y
7AM51sO13BfWxzrIrT/WTMm2LrPVNXug1sXM+e7lQFZtWHwj4ytWF1fW6g1L
hmR9/HsYsmfTA0uG5J3zdzGokt3H7P2rkXkWuKhF9nlk7n01nPHck73/FXDe
uE32/mfD+fcxmXufyZlv+IiLszhzLNv6yD1hHTU/g4k0F/YnOuzlvDeHKLPB
QT1q5uF9RvinSc1cvM/Me/2RqVkbPM/Sc+3wjOd5eq4dnvF8n/NcO2zjeZ74
GAvPs8RFf0Q+/4jQQxainwVH6SM6WX4uEaWPqFjPur3PMUofESmZTSQXL0Tp
Ixo1HnqfY4QeImLdK3qeY4QeomNxz+McI11P0bGsf95miYd+se4fZ9dXCg7m
QH2uOJgH5fniYC5U54yH+VCdNR7GZW+mqvPGxVh4P2PExxhE+NmLhxrhmBoP
VefsqVZ45mxu3ubrrV54p2ReHueKk/44mpW3e/QjXuvOSqT94h6ea89GdBcv
eK49I2feeZ2n9+sInvE4zwhrOjzjbZ54GBdPM8XD2HiZKx7Gx8Ns8dAvpWc2
XubrpU64x3KO6GHGHmqEZ6zn2h5m7KFGeKZ0/fO0//JQIzxzNjdvHl7wVi9c
KZmZt9l6XMvhimXP6GWekXrJREQX34jYU3SiunhL1L6i4vksxwIu+iXqzKL2
FZWo60fUviITdWZR+/KEda8UcV54uB7rZ8moM4valxdqzmwizixiT96wniFG
nVnUvjxhuRdHPX+L2JNHzmYQ3cMLUfvyRskcInt4IWpfHrHsGSPOK3Jv3sjs
4QXrtRg1ByWyzqDGxch5KJExe3zUJ1vuuKgJme9DLvPg+t+HbNqx5EfW23Cv
bqd030PGx+BiG3xG7ANZtYOHfSCvdlgX+0BW7bS4SMZXyGofawaW7Mj4Hsvn
vGx5tfRf+pzM+d5SkkNWH1vvEZbHZ8z3Fkv/GX1s3bOMWkej0eu+s/XcCFnu
9Vd77ZY+LpuPrT2fZRchy5Jr7ajH2n1PJid79uktx173WKtnJXV4yrEHI/rz
kmNNfaVr49F7tLyuYo49GN2Xuo89XNzz7uyxR69prXN1jq3M6kc1xxKfLD62
9Gl5v6MaWvJYxcw+es1rdF1n3z97fktfljXR+v+KrJh/7fpRW1ft/B8fW/sa
tX20vI6n9XHlOtTqYss8rOva3v/V9tc7K8tzre89mhHrzkhGeFs7wxqXWzNt
nZPqbHvMaSWzfNx77NFzR2dpfV31GXv2cIuZa2Pv1x+Fen2WWlfX15Pe9zf1
GXuqtaTelbWNoKVX73Mt7UOl3tU1zaDH/VY9s6O61PpQq2cm0bzb4qjOUkdn
17m3fs+oYxWPfUdy8EKphyXr5aw6vWTbm7Pevedzts7UujqyRo859yBD/y3r
+2hH8PCdDBm07DNGeoKH92TJoWW/OyIjPHyGLM7pnREebkMe5/TMCA/3IZNz
emWEh8eQyzG93SHvfcjmHPIZR8l5G9nDDPAQVMBFUAIXQQU8BBVwEZTAQ1AB
F0EJXAQV8BBUwEVQARdBBVwEFXARVMBFUAEXQQVcBBVwEVTARVABF0EFXAQV
cBFUwEVQARdBBVwEFXARVMBFUAEXQQVc7M//uCnLQA==
                 "], {{0, 204}, {
                 163, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 Magnification -> Automatic], Selectable -> False], BaseStyle -> 
               "ImageGraphics", ImageSize -> 25, ImageSizeRaw -> {163, 204}, 
               PlotRange -> {{0, 163}, {0, 204}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Variables (2): \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"s", ",", "m"}], "}"}], Short[#, 
                    Rational[3, 4]]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 TagBox[
                  TemplateBox[{
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[5]], 
                    RowBox[{
                    TagBox["\"Denom: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"2 (bubble)\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Rank: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, "RowWithSeparator"], 
                  "SummaryItem"], "\[SpanFromLeft]"}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJztnFmKXEcQRRvLH96Gl2IvQV6BBPavQTIY/Wkv3o73ZHdRNF3DGzJyvBFx
DrSQWjVE3DgvX1Y29M+f//z4xw8vLy9ff3r94+Onv3/58uXTt99+fP3Hr9/+
+v3zh9e//Pv69c/r1+WbYOfD9+//vX2trgVyg4uwmlsH8RFWgYegAg6CCngI
KrAuggrsFUEJfAQl+DwNSuAjqIGPoAQ+ghK4CErgIyiAh6AA+0VYDec6oAAe
ggJ4CArgICiAh6ACHoIKeAgqsC6CEuwZQQXOc0ANnAQl8HE+5HsMPm7TOwfy
LQMX7+mdBde7DbK6MsobfCyHjMb7go/HkM+VWTmQ9zbkcmV2DuT+Duc576zK
gfzx8JbVOax+/5Xg4TsqOajUMZOMPV/Y6lMtC7V6RpOp11se+1Wdu2pdI8jQ
4yN7exLVLNTr64WnmfTCY89e6nyjpj5va0Qrnnv1UHNNXSUOeujdivfelOsv
qafFu2iORuhDsYdZjkVx03Ptjyj1sdozj+4q1NALT5nW1FXbiwcXI/j3iCcP
W99jRo0zsovm4BtePFTJenWtqrn0YEWmauuMlVW1KmfSi1m51jqomPvsmtXz
6MVjf7379uKXlVnXUbTcznjsr1f/ER28ZbSPkbOz0JpDdA/f2Outtf8M2Vmo
ySOLg7fs9VibRbb8SrHkktHDEloznFmrOiX5kOExJdcpGZZh2aeT4TZk2A8y
7AM51sO13BfWxzrIrT/WTMm2LrPVNXug1sXM+e7lQFZtWHwj4ytWF1fW6g1L
hmR9/HsYsmfTA0uG5J3zdzGokt3H7P2rkXkWuKhF9nlk7n01nPHck73/FXDe
uE32/mfD+fcxmXufyZlv+IiLszhzLNv6yD1hHTU/g4k0F/YnOuzlvDeHKLPB
QT1q5uF9RvinSc1cvM/Me/2RqVkbPM/Sc+3wjOd5eq4dnvF8n/NcO2zjeZ74
GAvPs8RFf0Q+/4jQQxainwVH6SM6WX4uEaWPqFjPur3PMUofESmZTSQXL0Tp
Ixo1HnqfY4QeImLdK3qeY4QeomNxz+McI11P0bGsf95miYd+se4fZ9dXCg7m
QH2uOJgH5fniYC5U54yH+VCdNR7GZW+mqvPGxVh4P2PExxhE+NmLhxrhmBoP
VefsqVZ45mxu3ubrrV54p2ReHueKk/44mpW3e/QjXuvOSqT94h6ea89GdBcv
eK49I2feeZ2n9+sInvE4zwhrOjzjbZ54GBdPM8XD2HiZKx7Gx8Ns8dAvpWc2
XubrpU64x3KO6GHGHmqEZ6zn2h5m7KFGeKZ0/fO0//JQIzxzNjdvHl7wVi9c
KZmZt9l6XMvhimXP6GWekXrJREQX34jYU3SiunhL1L6i4vksxwIu+iXqzKL2
FZWo60fUviITdWZR+/KEda8UcV54uB7rZ8moM4valxdqzmwizixiT96wniFG
nVnUvjxhuRdHPX+L2JNHzmYQ3cMLUfvyRskcInt4IWpfHrHsGSPOK3Jv3sjs
4QXrtRg1ByWyzqDGxch5KJExe3zUJ1vuuKgJme9DLvPg+t+HbNqx5EfW23Cv
bqd030PGx+BiG3xG7ANZtYOHfSCvdlgX+0BW7bS4SMZXyGofawaW7Mj4Hsvn
vGx5tfRf+pzM+d5SkkNWH1vvEZbHZ8z3Fkv/GX1s3bOMWkej0eu+s/XcCFnu
9Vd77ZY+LpuPrT2fZRchy5Jr7ajH2n1PJid79uktx173WKtnJXV4yrEHI/rz
kmNNfaVr49F7tLyuYo49GN2Xuo89XNzz7uyxR69prXN1jq3M6kc1xxKfLD62
9Gl5v6MaWvJYxcw+es1rdF1n3z97fktfljXR+v+KrJh/7fpRW1ft/B8fW/sa
tX20vI6n9XHlOtTqYss8rOva3v/V9tc7K8tzre89mhHrzkhGeFs7wxqXWzNt
nZPqbHvMaSWzfNx77NFzR2dpfV31GXv2cIuZa2Pv1x+Fen2WWlfX15Pe9zf1
GXuqtaTelbWNoKVX73Mt7UOl3tU1zaDH/VY9s6O61PpQq2cm0bzb4qjOUkdn
17m3fs+oYxWPfUdy8EKphyXr5aw6vWTbm7Pevedzts7UujqyRo859yBD/y3r
+2hH8PCdDBm07DNGeoKH92TJoWW/OyIjPHyGLM7pnREebkMe5/TMCA/3IZNz
emWEh8eQyzG93SHvfcjmHPIZR8l5G9nDDPAQVMBFUAIXQQU8BBVwEZTAQ1AB
F0EJXAQV8BBUwEVQARdBBVwEFXARVMBFUAEXQQVcBBVwEVTARVABF0EFXAQV
cBFUwEVQARdBBVwEFXARVMBFUAEXQQVc7M//uCnLQA==
                 "], {{0, 204}, {
                 163, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 Magnification -> Automatic], Selectable -> False], BaseStyle -> 
               "ImageGraphics", ImageSize -> 25, ImageSizeRaw -> {163, 204}, 
               PlotRange -> {{0, 163}, {0, 204}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Variables (2): \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"s", ",", "m"}], "}"}], Short[#, 
                    Rational[3, 4]]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 TagBox[
                  TemplateBox[{
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[5]], 
                    RowBox[{
                    TagBox["\"Denom: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"2 (bubble)\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Rank: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, "RowWithSeparator"], 
                  "SummaryItem"], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"TN_cll calls: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"cache_no: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Code lines: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"File size: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"15.06 kB\"", "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "CollierCompiledFunction[{s, m}, -CompiledCode- ]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{388, 51},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[28]=",
 CellID->1921105941]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using the cache system", "Subsection",
 CellID->421208],

Cell[TextData[{
 "Each time a ",
 Cell[BoxData[
  ButtonBox["CollierCompiledFunction",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCompiledFunction"]], 
  "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " is created, a new cache is designated to it.  In order to properly use \
COLLIER's cache system, it needs to be \"taught\" which Passarino-Veltman \
functions need not be recalculated and can be remembered.  Therefore ",
 Cell[BoxData[
  ButtonBox["CollierCompile",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCompile"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " automatically primes its cache by evaluating the function at several \
random values of its arguments ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["x", "TI"], 
   StyleBox["1", "TR"]]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["x", "TI"], 
   StyleBox["2", "TR"]]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData["\[Ellipsis]"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " before returning a ",
 Cell[BoxData[
  ButtonBox["CollierCompiledFunction",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCompiledFunction"]], 
  "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " ready for you to evaluate."
}], "Text",
 CellID->1837129076],

Cell[TextData[{
 "But, in order to take full advantage of the cache system, it is important \
to specify parameters of the function which will not change from one \
evaluation to the next (",
 StyleBox["e.g.",
  FontSlant->"Italic"],
 " fixed coupling constants and masses).  Otherwise, in the course of priming \
the cache system, it will inadvertently be taught that these parameters can \
change, potentially leading to far fewer remembered Passarino-Veltman \
functions.  You can specify the constants and their values using the ",
 Cell[BoxData["Constants"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " option."
}], "Text",
 CellID->1804322869],

Cell[CellGroupData[{

Cell[TextData[{
 "This creates a compiled function with one argument, ",
 Cell[BoxData["s"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", and two constants, ",
 Cell[BoxData["g"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData["m"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ":"
}], "MathCaption",
 CellID->1640038335],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "=", 
  RowBox[{"CollierCompile", "[", 
   RowBox[{
    RowBox[{"{", "s", "}"}], ",", 
    RowBox[{
     FractionBox[
      SuperscriptBox["g", "2"], 
      RowBox[{"16", 
       SuperscriptBox["\[Pi]", "2"]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PVB", "[", 
        RowBox[{"0", ",", "0", ",", "s", ",", "m", ",", "m"}], "]"}], "+", 
       RowBox[{"PVB", "[", 
        RowBox[{"0", ",", "0", ",", "0", ",", "m", ",", "m"}], "]"}]}], 
      ")"}]}], ",", 
    RowBox[{"Constants", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"g", "\[Rule]", "0.31"}], ",", 
       RowBox[{"m", "\[Rule]", "13.4"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellLabel->"Out[29]=",
 CellID->1599876729],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["CollierCompiledFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJztnFmKXEcQRRvLH96Gl2IvQV6BBPavQTIY/Wkv3o73ZHdRNF3DGzJyvBFx
DrSQWjVE3DgvX1Y29M+f//z4xw8vLy9ff3r94+Onv3/58uXTt99+fP3Hr9/+
+v3zh9e//Pv69c/r1+WbYOfD9+//vX2trgVyg4uwmlsH8RFWgYegAg6CCngI
KrAuggrsFUEJfAQl+DwNSuAjqIGPoAQ+ghK4CErgIyiAh6AA+0VYDec6oAAe
ggJ4CArgICiAh6ACHoIKeAgqsC6CEuwZQQXOc0ANnAQl8HE+5HsMPm7TOwfy
LQMX7+mdBde7DbK6MsobfCyHjMb7go/HkM+VWTmQ9zbkcmV2DuT+Duc576zK
gfzx8JbVOax+/5Xg4TsqOajUMZOMPV/Y6lMtC7V6RpOp11se+1Wdu2pdI8jQ
4yN7exLVLNTr64WnmfTCY89e6nyjpj5va0Qrnnv1UHNNXSUOeujdivfelOsv
qafFu2iORuhDsYdZjkVx03Ptjyj1sdozj+4q1NALT5nW1FXbiwcXI/j3iCcP
W99jRo0zsovm4BtePFTJenWtqrn0YEWmauuMlVW1KmfSi1m51jqomPvsmtXz
6MVjf7379uKXlVnXUbTcznjsr1f/ER28ZbSPkbOz0JpDdA/f2Outtf8M2Vmo
ySOLg7fs9VibRbb8SrHkktHDEloznFmrOiX5kOExJdcpGZZh2aeT4TZk2A8y
7AM51sO13BfWxzrIrT/WTMm2LrPVNXug1sXM+e7lQFZtWHwj4ytWF1fW6g1L
hmR9/HsYsmfTA0uG5J3zdzGokt3H7P2rkXkWuKhF9nlk7n01nPHck73/FXDe
uE32/mfD+fcxmXufyZlv+IiLszhzLNv6yD1hHTU/g4k0F/YnOuzlvDeHKLPB
QT1q5uF9RvinSc1cvM/Me/2RqVkbPM/Sc+3wjOd5eq4dnvF8n/NcO2zjeZ74
GAvPs8RFf0Q+/4jQQxainwVH6SM6WX4uEaWPqFjPur3PMUofESmZTSQXL0Tp
Ixo1HnqfY4QeImLdK3qeY4QeomNxz+McI11P0bGsf95miYd+se4fZ9dXCg7m
QH2uOJgH5fniYC5U54yH+VCdNR7GZW+mqvPGxVh4P2PExxhE+NmLhxrhmBoP
VefsqVZ45mxu3ubrrV54p2ReHueKk/44mpW3e/QjXuvOSqT94h6ea89GdBcv
eK49I2feeZ2n9+sInvE4zwhrOjzjbZ54GBdPM8XD2HiZKx7Gx8Ns8dAvpWc2
XubrpU64x3KO6GHGHmqEZ6zn2h5m7KFGeKZ0/fO0//JQIzxzNjdvHl7wVi9c
KZmZt9l6XMvhimXP6GWekXrJREQX34jYU3SiunhL1L6i4vksxwIu+iXqzKL2
FZWo60fUviITdWZR+/KEda8UcV54uB7rZ8moM4valxdqzmwizixiT96wniFG
nVnUvjxhuRdHPX+L2JNHzmYQ3cMLUfvyRskcInt4IWpfHrHsGSPOK3Jv3sjs
4QXrtRg1ByWyzqDGxch5KJExe3zUJ1vuuKgJme9DLvPg+t+HbNqx5EfW23Cv
bqd030PGx+BiG3xG7ANZtYOHfSCvdlgX+0BW7bS4SMZXyGofawaW7Mj4Hsvn
vGx5tfRf+pzM+d5SkkNWH1vvEZbHZ8z3Fkv/GX1s3bOMWkej0eu+s/XcCFnu
9Vd77ZY+LpuPrT2fZRchy5Jr7ajH2n1PJid79uktx173WKtnJXV4yrEHI/rz
kmNNfaVr49F7tLyuYo49GN2Xuo89XNzz7uyxR69prXN1jq3M6kc1xxKfLD62
9Gl5v6MaWvJYxcw+es1rdF1n3z97fktfljXR+v+KrJh/7fpRW1ft/B8fW/sa
tX20vI6n9XHlOtTqYss8rOva3v/V9tc7K8tzre89mhHrzkhGeFs7wxqXWzNt
nZPqbHvMaSWzfNx77NFzR2dpfV31GXv2cIuZa2Pv1x+Fen2WWlfX15Pe9zf1
GXuqtaTelbWNoKVX73Mt7UOl3tU1zaDH/VY9s6O61PpQq2cm0bzb4qjOUkdn
17m3fs+oYxWPfUdy8EKphyXr5aw6vWTbm7Pevedzts7UujqyRo859yBD/y3r
+2hH8PCdDBm07DNGeoKH92TJoWW/OyIjPHyGLM7pnREebkMe5/TMCA/3IZNz
emWEh8eQyzG93SHvfcjmHPIZR8l5G9nDDPAQVMBFUAIXQQU8BBVwEZTAQ1AB
F0EJXAQV8BBUwEVQARdBBVwEFXARVMBFUAEXQQVcBBVwEVTARVABF0EFXAQV
cBFUwEVQARdBBVwEFXARVMBFUAEXQQVc7M//uCnLQA==
                 "], {{0, 204}, {
                 163, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 Magnification -> Automatic], Selectable -> False], BaseStyle -> 
               "ImageGraphics", ImageSize -> 25, ImageSizeRaw -> {163, 204}, 
               PlotRange -> {{0, 163}, {0, 204}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Variables (1): \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{"{", "s", "}"}], Short[#, 
                    Rational[3, 4]]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 TagBox[
                  TemplateBox[{
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[5]], 
                    RowBox[{
                    TagBox["\"Denom: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"2 (bubble)\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Rank: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, "RowWithSeparator"], 
                  "SummaryItem"], "\[SpanFromLeft]"}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJztnFmKXEcQRRvLH96Gl2IvQV6BBPavQTIY/Wkv3o73ZHdRNF3DGzJyvBFx
DrSQWjVE3DgvX1Y29M+f//z4xw8vLy9ff3r94+Onv3/58uXTt99+fP3Hr9/+
+v3zh9e//Pv69c/r1+WbYOfD9+//vX2trgVyg4uwmlsH8RFWgYegAg6CCngI
KrAuggrsFUEJfAQl+DwNSuAjqIGPoAQ+ghK4CErgIyiAh6AA+0VYDec6oAAe
ggJ4CArgICiAh6ACHoIKeAgqsC6CEuwZQQXOc0ANnAQl8HE+5HsMPm7TOwfy
LQMX7+mdBde7DbK6MsobfCyHjMb7go/HkM+VWTmQ9zbkcmV2DuT+Duc576zK
gfzx8JbVOax+/5Xg4TsqOajUMZOMPV/Y6lMtC7V6RpOp11se+1Wdu2pdI8jQ
4yN7exLVLNTr64WnmfTCY89e6nyjpj5va0Qrnnv1UHNNXSUOeujdivfelOsv
qafFu2iORuhDsYdZjkVx03Ptjyj1sdozj+4q1NALT5nW1FXbiwcXI/j3iCcP
W99jRo0zsovm4BtePFTJenWtqrn0YEWmauuMlVW1KmfSi1m51jqomPvsmtXz
6MVjf7379uKXlVnXUbTcznjsr1f/ER28ZbSPkbOz0JpDdA/f2Outtf8M2Vmo
ySOLg7fs9VibRbb8SrHkktHDEloznFmrOiX5kOExJdcpGZZh2aeT4TZk2A8y
7AM51sO13BfWxzrIrT/WTMm2LrPVNXug1sXM+e7lQFZtWHwj4ytWF1fW6g1L
hmR9/HsYsmfTA0uG5J3zdzGokt3H7P2rkXkWuKhF9nlk7n01nPHck73/FXDe
uE32/mfD+fcxmXufyZlv+IiLszhzLNv6yD1hHTU/g4k0F/YnOuzlvDeHKLPB
QT1q5uF9RvinSc1cvM/Me/2RqVkbPM/Sc+3wjOd5eq4dnvF8n/NcO2zjeZ74
GAvPs8RFf0Q+/4jQQxainwVH6SM6WX4uEaWPqFjPur3PMUofESmZTSQXL0Tp
Ixo1HnqfY4QeImLdK3qeY4QeomNxz+McI11P0bGsf95miYd+se4fZ9dXCg7m
QH2uOJgH5fniYC5U54yH+VCdNR7GZW+mqvPGxVh4P2PExxhE+NmLhxrhmBoP
VefsqVZ45mxu3ubrrV54p2ReHueKk/44mpW3e/QjXuvOSqT94h6ea89GdBcv
eK49I2feeZ2n9+sInvE4zwhrOjzjbZ54GBdPM8XD2HiZKx7Gx8Ns8dAvpWc2
XubrpU64x3KO6GHGHmqEZ6zn2h5m7KFGeKZ0/fO0//JQIzxzNjdvHl7wVi9c
KZmZt9l6XMvhimXP6GWekXrJREQX34jYU3SiunhL1L6i4vksxwIu+iXqzKL2
FZWo60fUviITdWZR+/KEda8UcV54uB7rZ8moM4valxdqzmwizixiT96wniFG
nVnUvjxhuRdHPX+L2JNHzmYQ3cMLUfvyRskcInt4IWpfHrHsGSPOK3Jv3sjs
4QXrtRg1ByWyzqDGxch5KJExe3zUJ1vuuKgJme9DLvPg+t+HbNqx5EfW23Cv
bqd030PGx+BiG3xG7ANZtYOHfSCvdlgX+0BW7bS4SMZXyGofawaW7Mj4Hsvn
vGx5tfRf+pzM+d5SkkNWH1vvEZbHZ8z3Fkv/GX1s3bOMWkej0eu+s/XcCFnu
9Vd77ZY+LpuPrT2fZRchy5Jr7ajH2n1PJid79uktx173WKtnJXV4yrEHI/rz
kmNNfaVr49F7tLyuYo49GN2Xuo89XNzz7uyxR69prXN1jq3M6kc1xxKfLD62
9Gl5v6MaWvJYxcw+es1rdF1n3z97fktfljXR+v+KrJh/7fpRW1ft/B8fW/sa
tX20vI6n9XHlOtTqYss8rOva3v/V9tc7K8tzre89mhHrzkhGeFs7wxqXWzNt
nZPqbHvMaSWzfNx77NFzR2dpfV31GXv2cIuZa2Pv1x+Fen2WWlfX15Pe9zf1
GXuqtaTelbWNoKVX73Mt7UOl3tU1zaDH/VY9s6O61PpQq2cm0bzb4qjOUkdn
17m3fs+oYxWPfUdy8EKphyXr5aw6vWTbm7Pevedzts7UujqyRo859yBD/y3r
+2hH8PCdDBm07DNGeoKH92TJoWW/OyIjPHyGLM7pnREebkMe5/TMCA/3IZNz
emWEh8eQyzG93SHvfcjmHPIZR8l5G9nDDPAQVMBFUAIXQQU8BBVwEZTAQ1AB
F0EJXAQV8BBUwEVQARdBBVwEFXARVMBFUAEXQQVcBBVwEVTARVABF0EFXAQV
cBFUwEVQARdBBVwEFXARVMBFUAEXQQVc7M//uCnLQA==
                 "], {{0, 204}, {
                 163, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 Magnification -> Automatic], Selectable -> False], BaseStyle -> 
               "ImageGraphics", ImageSize -> 25, ImageSizeRaw -> {163, 204}, 
               PlotRange -> {{0, 163}, {0, 204}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Variables (1): \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{"{", "s", "}"}], Short[#, 
                    Rational[3, 4]]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 TagBox[
                  TemplateBox[{
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[5]], 
                    RowBox[{
                    TagBox["\"Denom: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"2 (bubble)\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Rank: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, "RowWithSeparator"], 
                  "SummaryItem"], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"TN_cll calls: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"cache_no: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Code lines: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"File size: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"15.24 kB\"", "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "CollierCompiledFunction[{s}, -CompiledCode- ]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{388, 51},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[29]=",
 CellID->485440216]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Keeping the mechanics of the cache system in mind, you can use ",
 Cell[BoxData[
  ButtonBox["CollierCompile",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCompile"]], "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " to create and compile a program to evaluate the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "\[Rule]", "\[Gamma]\[Gamma]"}], TraditionalForm]], 
  "InlineMath"],
 " partial width.  Suppose you are interested in making a parameter scan only \
over the hypothetical scalar boson mass and Higgs portal coupling ",
 Cell[BoxData["mS"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " and ",
 Cell[BoxData["\[Lambda]p"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ".  Then it is wise to specify them as function arguments, and the declare \
the remainder ",
 Cell[BoxData["e"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData["Nc"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData["Qf"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData["v"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData["mH"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData["mW"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ", ",
 Cell[BoxData["mt"], "InlineFormula",
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " as constants."
}], "Text",
 CellID->831414337],

Cell[CellGroupData[{

Cell[TextData[{
 "This creates a compiled function to evaluate the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"H", "\[Rule]", "\[Gamma]\[Gamma]"}], TraditionalForm]], 
  "InlineMath"],
 " partial width as a function of two parameters:"
}], "MathCaption",
 CellID->642486057],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"widthCompiled", "=", 
  RowBox[{"CollierCompile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"mS", ",", "\[Lambda]p"}], "}"}], ",", 
    RowBox[{"Evaluate", "[", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "mH"}]], "ampSq", 
      FractionBox["1", 
       RowBox[{"8", "\[Pi]"}]], 
      FractionBox["1", "2"]}], "]"}], ",", 
    RowBox[{"Constants", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"e", "\[Rule]", ".3121"}], ",", 
       RowBox[{"Nc", "\[Rule]", "3"}], ",", 
       RowBox[{"Qf", "\[Rule]", 
        RowBox[{"2", "/", "3"}]}], ",", 
       RowBox[{"v", "\[Rule]", "246"}], ",", 
       RowBox[{"mH", "\[Rule]", "125"}], ",", 
       RowBox[{"mW", "\[Rule]", "80.4"}], ",", 
       RowBox[{"mt", "\[Rule]", "178.2"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellLabel->"In[30]:=",
 CellID->519283957],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["CollierCompiledFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJztnFmKXEcQRRvLH96Gl2IvQV6BBPavQTIY/Wkv3o73ZHdRNF3DGzJyvBFx
DrSQWjVE3DgvX1Y29M+f//z4xw8vLy9ff3r94+Onv3/58uXTt99+fP3Hr9/+
+v3zh9e//Pv69c/r1+WbYOfD9+//vX2trgVyg4uwmlsH8RFWgYegAg6CCngI
KrAuggrsFUEJfAQl+DwNSuAjqIGPoAQ+ghK4CErgIyiAh6AA+0VYDec6oAAe
ggJ4CArgICiAh6ACHoIKeAgqsC6CEuwZQQXOc0ANnAQl8HE+5HsMPm7TOwfy
LQMX7+mdBde7DbK6MsobfCyHjMb7go/HkM+VWTmQ9zbkcmV2DuT+Duc576zK
gfzx8JbVOax+/5Xg4TsqOajUMZOMPV/Y6lMtC7V6RpOp11se+1Wdu2pdI8jQ
4yN7exLVLNTr64WnmfTCY89e6nyjpj5va0Qrnnv1UHNNXSUOeujdivfelOsv
qafFu2iORuhDsYdZjkVx03Ptjyj1sdozj+4q1NALT5nW1FXbiwcXI/j3iCcP
W99jRo0zsovm4BtePFTJenWtqrn0YEWmauuMlVW1KmfSi1m51jqomPvsmtXz
6MVjf7379uKXlVnXUbTcznjsr1f/ER28ZbSPkbOz0JpDdA/f2Outtf8M2Vmo
ySOLg7fs9VibRbb8SrHkktHDEloznFmrOiX5kOExJdcpGZZh2aeT4TZk2A8y
7AM51sO13BfWxzrIrT/WTMm2LrPVNXug1sXM+e7lQFZtWHwj4ytWF1fW6g1L
hmR9/HsYsmfTA0uG5J3zdzGokt3H7P2rkXkWuKhF9nlk7n01nPHck73/FXDe
uE32/mfD+fcxmXufyZlv+IiLszhzLNv6yD1hHTU/g4k0F/YnOuzlvDeHKLPB
QT1q5uF9RvinSc1cvM/Me/2RqVkbPM/Sc+3wjOd5eq4dnvF8n/NcO2zjeZ74
GAvPs8RFf0Q+/4jQQxainwVH6SM6WX4uEaWPqFjPur3PMUofESmZTSQXL0Tp
Ixo1HnqfY4QeImLdK3qeY4QeomNxz+McI11P0bGsf95miYd+se4fZ9dXCg7m
QH2uOJgH5fniYC5U54yH+VCdNR7GZW+mqvPGxVh4P2PExxhE+NmLhxrhmBoP
VefsqVZ45mxu3ubrrV54p2ReHueKk/44mpW3e/QjXuvOSqT94h6ea89GdBcv
eK49I2feeZ2n9+sInvE4zwhrOjzjbZ54GBdPM8XD2HiZKx7Gx8Ns8dAvpWc2
XubrpU64x3KO6GHGHmqEZ6zn2h5m7KFGeKZ0/fO0//JQIzxzNjdvHl7wVi9c
KZmZt9l6XMvhimXP6GWekXrJREQX34jYU3SiunhL1L6i4vksxwIu+iXqzKL2
FZWo60fUviITdWZR+/KEda8UcV54uB7rZ8moM4valxdqzmwizixiT96wniFG
nVnUvjxhuRdHPX+L2JNHzmYQ3cMLUfvyRskcInt4IWpfHrHsGSPOK3Jv3sjs
4QXrtRg1ByWyzqDGxch5KJExe3zUJ1vuuKgJme9DLvPg+t+HbNqx5EfW23Cv
bqd030PGx+BiG3xG7ANZtYOHfSCvdlgX+0BW7bS4SMZXyGofawaW7Mj4Hsvn
vGx5tfRf+pzM+d5SkkNWH1vvEZbHZ8z3Fkv/GX1s3bOMWkej0eu+s/XcCFnu
9Vd77ZY+LpuPrT2fZRchy5Jr7ajH2n1PJid79uktx173WKtnJXV4yrEHI/rz
kmNNfaVr49F7tLyuYo49GN2Xuo89XNzz7uyxR69prXN1jq3M6kc1xxKfLD62
9Gl5v6MaWvJYxcw+es1rdF1n3z97fktfljXR+v+KrJh/7fpRW1ft/B8fW/sa
tX20vI6n9XHlOtTqYss8rOva3v/V9tc7K8tzre89mhHrzkhGeFs7wxqXWzNt
nZPqbHvMaSWzfNx77NFzR2dpfV31GXv2cIuZa2Pv1x+Fen2WWlfX15Pe9zf1
GXuqtaTelbWNoKVX73Mt7UOl3tU1zaDH/VY9s6O61PpQq2cm0bzb4qjOUkdn
17m3fs+oYxWPfUdy8EKphyXr5aw6vWTbm7Pevedzts7UujqyRo859yBD/y3r
+2hH8PCdDBm07DNGeoKH92TJoWW/OyIjPHyGLM7pnREebkMe5/TMCA/3IZNz
emWEh8eQyzG93SHvfcjmHPIZR8l5G9nDDPAQVMBFUAIXQQU8BBVwEZTAQ1AB
F0EJXAQV8BBUwEVQARdBBVwEFXARVMBFUAEXQQVcBBVwEVTARVABF0EFXAQV
cBFUwEVQARdBBVwEFXARVMBFUAEXQQVc7M//uCnLQA==
                 "], {{0, 204}, {
                 163, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 Magnification -> Automatic], Selectable -> False], BaseStyle -> 
               "ImageGraphics", ImageSize -> 25, ImageSizeRaw -> {163, 204}, 
               PlotRange -> {{0, 163}, {0, 204}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Variables (2): \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"mS", ",", "\[Lambda]p"}], "}"}], Short[#, 
                    Rational[3, 4]]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 TagBox[
                  TemplateBox[{
                    InterpretationBox[
                    StyleBox[
                    GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[5]], 
                    RowBox[{
                    TagBox["\"Denom: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"3 (triangle)\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Rank: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, "RowWithSeparator"], 
                  "SummaryItem"], "\[SpanFromLeft]"}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJztnFmKXEcQRRvLH96Gl2IvQV6BBPavQTIY/Wkv3o73ZHdRNF3DGzJyvBFx
DrSQWjVE3DgvX1Y29M+f//z4xw8vLy9ff3r94+Onv3/58uXTt99+fP3Hr9/+
+v3zh9e//Pv69c/r1+WbYOfD9+//vX2trgVyg4uwmlsH8RFWgYegAg6CCngI
KrAuggrsFUEJfAQl+DwNSuAjqIGPoAQ+ghK4CErgIyiAh6AA+0VYDec6oAAe
ggJ4CArgICiAh6ACHoIKeAgqsC6CEuwZQQXOc0ANnAQl8HE+5HsMPm7TOwfy
LQMX7+mdBde7DbK6MsobfCyHjMb7go/HkM+VWTmQ9zbkcmV2DuT+Duc576zK
gfzx8JbVOax+/5Xg4TsqOajUMZOMPV/Y6lMtC7V6RpOp11se+1Wdu2pdI8jQ
4yN7exLVLNTr64WnmfTCY89e6nyjpj5va0Qrnnv1UHNNXSUOeujdivfelOsv
qafFu2iORuhDsYdZjkVx03Ptjyj1sdozj+4q1NALT5nW1FXbiwcXI/j3iCcP
W99jRo0zsovm4BtePFTJenWtqrn0YEWmauuMlVW1KmfSi1m51jqomPvsmtXz
6MVjf7379uKXlVnXUbTcznjsr1f/ER28ZbSPkbOz0JpDdA/f2Outtf8M2Vmo
ySOLg7fs9VibRbb8SrHkktHDEloznFmrOiX5kOExJdcpGZZh2aeT4TZk2A8y
7AM51sO13BfWxzrIrT/WTMm2LrPVNXug1sXM+e7lQFZtWHwj4ytWF1fW6g1L
hmR9/HsYsmfTA0uG5J3zdzGokt3H7P2rkXkWuKhF9nlk7n01nPHck73/FXDe
uE32/mfD+fcxmXufyZlv+IiLszhzLNv6yD1hHTU/g4k0F/YnOuzlvDeHKLPB
QT1q5uF9RvinSc1cvM/Me/2RqVkbPM/Sc+3wjOd5eq4dnvF8n/NcO2zjeZ74
GAvPs8RFf0Q+/4jQQxainwVH6SM6WX4uEaWPqFjPur3PMUofESmZTSQXL0Tp
Ixo1HnqfY4QeImLdK3qeY4QeomNxz+McI11P0bGsf95miYd+se4fZ9dXCg7m
QH2uOJgH5fniYC5U54yH+VCdNR7GZW+mqvPGxVh4P2PExxhE+NmLhxrhmBoP
VefsqVZ45mxu3ubrrV54p2ReHueKk/44mpW3e/QjXuvOSqT94h6ea89GdBcv
eK49I2feeZ2n9+sInvE4zwhrOjzjbZ54GBdPM8XD2HiZKx7Gx8Ns8dAvpWc2
XubrpU64x3KO6GHGHmqEZ6zn2h5m7KFGeKZ0/fO0//JQIzxzNjdvHl7wVi9c
KZmZt9l6XMvhimXP6GWekXrJREQX34jYU3SiunhL1L6i4vksxwIu+iXqzKL2
FZWo60fUviITdWZR+/KEda8UcV54uB7rZ8moM4valxdqzmwizixiT96wniFG
nVnUvjxhuRdHPX+L2JNHzmYQ3cMLUfvyRskcInt4IWpfHrHsGSPOK3Jv3sjs
4QXrtRg1ByWyzqDGxch5KJExe3zUJ1vuuKgJme9DLvPg+t+HbNqx5EfW23Cv
bqd030PGx+BiG3xG7ANZtYOHfSCvdlgX+0BW7bS4SMZXyGofawaW7Mj4Hsvn
vGx5tfRf+pzM+d5SkkNWH1vvEZbHZ8z3Fkv/GX1s3bOMWkej0eu+s/XcCFnu
9Vd77ZY+LpuPrT2fZRchy5Jr7ajH2n1PJid79uktx173WKtnJXV4yrEHI/rz
kmNNfaVr49F7tLyuYo49GN2Xuo89XNzz7uyxR69prXN1jq3M6kc1xxKfLD62
9Gl5v6MaWvJYxcw+es1rdF1n3z97fktfljXR+v+KrJh/7fpRW1ft/B8fW/sa
tX20vI6n9XHlOtTqYss8rOva3v/V9tc7K8tzre89mhHrzkhGeFs7wxqXWzNt
nZPqbHvMaSWzfNx77NFzR2dpfV31GXv2cIuZa2Pv1x+Fen2WWlfX15Pe9zf1
GXuqtaTelbWNoKVX73Mt7UOl3tU1zaDH/VY9s6O61PpQq2cm0bzb4qjOUkdn
17m3fs+oYxWPfUdy8EKphyXr5aw6vWTbm7Pevedzts7UujqyRo859yBD/y3r
+2hH8PCdDBm07DNGeoKH92TJoWW/OyIjPHyGLM7pnREebkMe5/TMCA/3IZNz
emWEh8eQyzG93SHvfcjmHPIZR8l5G9nDDPAQVMBFUAIXQQU8BBVwEZTAQ1AB
F0EJXAQV8BBUwEVQARdBBVwEFXARVMBFUAEXQQVcBBVwEVTARVABF0EFXAQV
cBFUwEVQARdBBVwEFXARVMBFUAEXQQVc7M//uCnLQA==
                 "], {{0, 204}, {
                 163, 0}}, {0, 255}, ColorFunction -> RGBColor], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                 Magnification -> Automatic], Selectable -> False], BaseStyle -> 
               "ImageGraphics", ImageSize -> 25, ImageSizeRaw -> {163, 204}, 
               PlotRange -> {{0, 163}, {0, 204}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Variables (2): \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"mS", ",", "\[Lambda]p"}], "}"}], Short[#, 
                    Rational[3, 4]]& ], "SummaryItem"]}], "\[SpanFromLeft]"}, {
                 TagBox[
                  TemplateBox[{
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[5]], 
                    RowBox[{
                    TagBox["\"Denom: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"3 (triangle)\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\"Rank: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, "RowWithSeparator"], 
                  "SummaryItem"], "\[SpanFromLeft]"}, {
                 RowBox[{
                   TagBox["\"TN_cll calls: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["7", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"cache_no: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Code lines: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["66", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"File size: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"51.08 kB\"", "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "CollierCompiledFunction[{mS, \[Lambda]p}, -CompiledCode- ]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 ImageSize->{391, 51},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[30]=",
 CellID->1616884250]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Make a plot using the ",
 Cell[BoxData[
  ButtonBox["CollierCompiledFunction",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCompiledFunction"]], 
  "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 ".  Observe how much faster it evaluates:"
}], "MathCaption",
 CellID->1250461698],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "@", 
    RowBox[{"widthCompiled", "[", 
     RowBox[{"mS", ",", ".3"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"mS", ",", "0", ",", "250"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1.02", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]]}], ",", 
      RowBox[{"1.04", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]]}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<mS (GeV)\>\"", ",", " ", "\"\<\[CapitalGamma] (GeV)\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellLabel->"Out[31]=",
 CellID->1996374687],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnXu31NQVwLPa/tGv0S+Qb2A1Pqit2lRRtDZqgUVaqy4iPjC2XV2Ny7ap
tBqfwUIDYrC3obVRNPiI1sgjLhyQ+AjqCAM4PIIGby40aoTbfTLvmcyQzEzm
EfJbwyXPc3L22dnnnJ2dk+8tWX4V/S0Mw+74Lvy5avFKYsWKxezC78DKheyd
y5Z8GxaWwb/N8A8tzw+Ib7E0b5gyw6pe02ZbZjnFUDhGsb2kq/N+SeFIUjAj
kwoJVBrnTXfQi89JkbCOCqjKDAZnDae6taRguIC2ujqGcYeTrFaSKOscwZmd
SVX3GiKJYUIh141JxuVx0gzvZteo1ibgmTzBF2oHEFv0BKtGmJpX4CuptSWF
9jq6oNqWSHG53ZhoXIEga7UpNHSjVrOwCAdsMRKstutGoW2vIwuKDw2NQPIF
f3QFzUlMw26UNQZv2A2udrOXWQwsQ4LVDrvRdjCPkawg8DSB4SSrl3L1mFwM
luBD5UB1GBp53/MCRycqnQTPgAU30WqYrG8JVZVo2+u7RaBUVBiClk03aFwJ
ljMYw1cOD41TdENmOC2sKLi7MbUcWDC4kHUYXKjhrZ1odd4vKyyB01LRjdob
UuCpSh+4WTfqf5u3jGZ52rNORTcQgeM038G1rZ7j+n2tBoEfBPOB7wfRB0cy
eBkHlM9UZ52abkwEaRnGc4DMiy7bpUubbEsv26VLm2xLL/OGMT0yL7psly5t
si29bJcubbItvcwbxvTIvOiyXbq0GZ70fNf1orcGfa72TirwIg5u8o0hct0Y
hOFIb+TBPAWZZ1gaLl6uHBzYDI7hOEawaq4bw2IY0ht5MI9fNCz0/M0zOFK0
YMGWGF4vRZYuV4/+GJLoxhHMg9qUokAzoUr6Gk+HRaHbwr5yxRiEoejGyIN5
UKamKlIYRvBG7TJ8UyAxRht26c5dukrPLysCSxIEDhAkKyjdQ2ZGHcxj1Ps0
no5jXMNUBAWyebUpfiO+QHLme8vNNRmSVgolzw+g5++5jm1qHMOZTvQoYtTB
POiJfXiEp5O0ikYnlVVXp5i8Lzo0IqVnaboTcaxnaIXoVEYczONb0JqwkiKL
suUGoDk49FAlWRSkYqtxy3VjEIYnvdEG8wRgmZrPjPau5A1K33QTXUHiVSvK
ckwbuWIMQqT0bE1RFJFlWFExyj08lRNPrhuD0Ft6btlWRQ50xLTL06giuW4M
Qk/pBWVL5yno6GEUp0xjG9PWaH766ewW7cO1a3Y++sj2p9YX3jT2nzz51Rgv
b5Lp1t8omoahSyTaifOy4Uzty0CV0h069MWqB4wryad+fPn6X9/70mrxrQ1P
7Xri8R0rbt/8g0vW/uH+10Fnxn2lk0h0X5QHW0HJhj21SlGlUrp3rSNPb9i9
b9/nnQeA3QA9AZ2BA86cOTPyC5xoutgNqzog9F0YQrqlUsT4cBqIOYY9fvzk
rbeoG+VcPRr0Fp1ny7AXPWB1TZaVE76gPhHhHPH7oqAV55+3euniTV9+OY2d
7lToIT1TFAtFUzVRJ1RnaT2+cow9nCNG6SK5l92yfl3h9OnceiB6SK+sy4oq
y3qxZIrQ/bDidj7GH87RXLqk6nH3XS/KT+9OdEomOZvo/K0bH6RIgqRY3Y5v
NcYeztFSwNiXXQV6p9ct2vj6658kPTF7REqvbBcMXS96gSWxvKQosqya5dhJ
Tkg4R9fSnZVi8TPyivVHj871cW6WiJSezuCUaEAbUhBpiuV4niVwxo7bR5uY
cI4B4jegWbljxQtJz8oMPeSmi3KliXdK1d6CaypGbMfouMM5WsqYRCQNvvnm
9OKblFdf/bi/07NBpPQEWmjrXjhJdGPM4RxnK11MbNtZeOWGU6e+7juFNAiC
0zDKPnXqq7m5r06cgHH8/44fP+k4Jw8f9srl2YMHTxw4cGLfvs8/KX4OLeOH
e4/v3et88P4x+L1rHbGsI3veOfzO7sO7CuVdu8o7dx6C31vmQfiZOw7s2H5g
27bS9m0Htm0tvWnsn+8W2yPSotmkCr7NJGhTqoUYZzhHjQGftf3+d6/CkHaQ
FCpAPULFvffeUaiFV17+WP3P+xvld9BjnYe3r3rAuI/Tf/ubl++680Vm+fM3
//LZpUs2/fzGf15/3TPXLJQrfv5LF/x9wcVrifOfvOD7qy+84ElYvnTB2st+
KF1x2To44MqfbLh64dOLrpbhlOt/+swN1MyN1AyksHTxJkiKXvZv+N38i2ch
5VtvUW/9lbr8tufgB3ndvvx5aDfhB1nfdccL99ytrbxbu2elBgN59p4tXaXn
W8hZQDKiKAk8A4usFhHhP/kMGNtzuDwLVQC3Z8zjz5w5s3+/+8orHz+5+q37
73sNKuXaRRsvIv4GiUDFLVv6L6gFUIO/rnrz8cd2gNbN/GPPc+oHL730kfHG
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
    "], {{0, 101}, {180, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{180, 101},
  PlotRange->{{0, 180}, {0, 101}}]], "Output",
 ImageSize->{184, 101},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[31]=",
 CellID->1868577039]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Since the Standard Model masses and couplings were declared constants, the \
Passarino-Veltman functions making up the W-boson and top-quark contributions \
were calculated and remembered when the cache was primed at the time the ",
 Cell[BoxData[
  ButtonBox["CollierCompiledFunction",
   BaseStyle->"Link",
   ButtonData->"paclet:CollierLink/ref/CollierCompiledFunction"]], 
  "InlineFormula",
  ShowStringCharacters->False,
  FontFamily->FEPrivate`If[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "11.1"], "Source Sans Pro", 
    Inherited]],
 " was created.  The only Passarino-Veltman functions which were recalculated \
to construct the plot are the select few that make up the scalar boson \
contribution."
}], "Text",
 CellID->1862305332]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "TutorialMoreAboutSection",
 WholeCellGroupOpener->True,
 CellElementSpacings->{"CellMinHeight"->3},
 CellFrameLabels->{{
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 
     Cell[
     "MORE ABOUT", "TutorialMoreAboutSection", CellSize -> {5000, Inherited}], 
     FEPrivate`If[
      FEPrivate`Or[
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
       FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 
      Cell[
       TextData[{
         Cell[
          BoxData[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {24, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[24]]]], "Related Guides"}], "TutorialMoreAboutSection", 
       CellSize -> {5000, Inherited}], None]], None}, {None, None}},
 CellFrameLabelMargins->0,
 CellSize->{Inherited, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 11, 
    FEPrivate`If[
     FEPrivate`Or[
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
      FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], 14, Inherited]]},
 CellID->23220180],

Cell["", "SectionHeaderSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]],

Cell[TextData[ButtonBox["CollierLink",
 BaseStyle->"Link",
 ButtonData->"paclet:CollierLink/guide/CollierLink"]], "TutorialMoreAbout",
 CellID->516765345],

Cell[TextData[{
 StyleBox[ButtonBox["Package",
  BaseStyle->"Link",
  ButtonData->"paclet:X/guide/PackageX"],
  FontSlant->"Italic"],
 ButtonBox["-X",
  BaseStyle->"Link",
  ButtonData->"paclet:X/guide/PackageX"]
}], "TutorialMoreAbout",
 CellID->389997365],

Cell["", "SectionFooterSpacer",
 Editable->False,
 Selectable->False,
 Deletable->False,
 ShowCellBracket->False,
 ShowSelection->False,
 CellMargins->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 0, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]],
 CellElementSpacings->{"CellMinHeight"->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], 1, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]},
 CellSize->FEPrivate`If[
   FEPrivate`Or[
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "6.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "7.0"], 
    FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"]], {Inherited, 1}, 
   FEPrivate`If[
    FEPrivate`Or[
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.0"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.1"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.2"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.3"], 
     FEPrivate`SameQ[FEPrivate`$ProductVersion, "10.4"]], Inherited, 
    Inherited]]]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->FEPrivate`If[
  FEPrivate`Or[
   FEPrivate`SameQ[FEPrivate`$ProductVersion, "8.0"], 
   FEPrivate`SameQ[FEPrivate`$ProductVersion, "9.0"]], 
  "Introduction to CollierLink - Wolfram Mathematica", 
  "Introduction to CollierLink"],
PrivateNotebookOptions->{"FileOutlineCache"->False},
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "CollierLink", ButtonData -> "paclet:CollierLink/guide/CollierLink", 
         BaseStyle -> {"Link", "DockedLinkTrail"}], 
        Cell[">", "DockedLinkTrailSeparator"]}]}}, ColumnAlignments -> Left], 
  "Metadata" -> {
   "built" -> "{2017, 11, 23, 13, 37, 24.037143}", 
    "history" -> {"1.0", "", "", ""}, "context" -> "CollierLink`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "CollierLink Tutorial", "language" -> "en", "paclet" -> "CollierLink", 
    "status" -> "None", "summary" -> 
    "CollierLink extends the analytic capabilities of Package-X by supplying \
a fast and stable numerical implementation of Passarino-Veltman functions \
provided by the COLLIER library. This tutorial illustrates how to use \
CollierLink. To make the most of CollierLink, it is recommended that you are \
fairly experienced with Mathematica, and have used Package-X before. Although \
not necessary, it is also helpful to have prior experience with using the \
COLLIER library. Normally, the Passarino-Veltman functions PVA, PVB, PVC, PVD \
and PVX in Package-X do not numerically evaluate. Instead they must be turned \
into analytic expressions by LoopRefine before they can be evaluated. When \
CollierLink is initialized, the COLLIER library is loaded into the \
Mathematica runtime, and definitions are added to the Passarino-Veltman \
functions so they can be numerically evaluated.", "synonyms" -> {}, "title" -> 
    "Introduction to CollierLink", "titlemodifier" -> "", "windowtitle" -> 
    "Introduction to CollierLink", "type" -> "Tutorial", "uri" -> 
    "CollierLink/tutorial/IntroductionToCollierLink"}, "SearchTextTranslated" -> 
  ""},
FrontEndVersion -> "6.0",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> "6.0", 
  StyleDefinitions -> "Default.nb"]
]


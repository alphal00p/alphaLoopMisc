(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    457686,      10277]
NotebookOptionsPosition[    444614,      10060]
NotebookOutlinePosition[    445014,      10076]
CellTagsIndexPosition[    444971,      10073]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DOD = 1 Triangle subtraction example", "Title",
 CellChangeTimes->{{3.958132066601083*^9, 
  3.9581320866153927`*^9}},ExpressionUUID->"e2892c96-def7-4eae-9f3c-\
ef2a1402fb25"],

Cell[CellGroupData[{

Cell["Tooling", "Section",
 CellChangeTimes->{{3.958132090997794*^9, 
  3.958132100928138*^9}},ExpressionUUID->"9845d290-c363-4342-9a58-\
5ab30c995a83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"SP4", ",", "Orderless"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.937026790618271*^9, 3.937026797438815*^9}},
 CellLabel->
  "In[794]:=",ExpressionUUID->"81440eed-2a79-4b77-beaa-f59d5701b080"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.936931199324264*^9, 3.936931219051961*^9}, 
   3.93693154853389*^9},
 CellLabel->
  "In[795]:=",ExpressionUUID->"f37c8551-fbc1-45aa-b3e1-d27ba2222239"],

Cell[BoxData[
 RowBox[{"Needs", "[", 
  RowBox[{"\"\<cLTD`\>\"", ",", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<cLTD/cLTD.m\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.936931477373576*^9, 3.93693149144077*^9}},
 CellLabel->
  "In[796]:=",ExpressionUUID->"d5a94f66-97eb-4f28-9221-3ad73fde9c26"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "FORMPATH", "=", "\"\</Users/vjhirsch/HEP_programs/form/bin/form\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.936931918098665*^9, 3.936931928122143*^9}},
 CellLabel->
  "In[797]:=",ExpressionUUID->"dfdd94b4-624c-4a6c-bf82-4c2c1aac2ef6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"cLTD", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"\"\<WorkingDirectory\>\"", "\[Rule]", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<cLTD_work_dir/\>\""}]}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"\"\<FORMpath\>\"", "\[Rule]", "FORMPATH"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"\"\<FORM_ID\>\"", "\[Rule]", "1"}]}], "]"}], "//", 
  "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"GeneratecLTDExpression", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"\"\<WorkingDirectory\>\"", "\[Rule]", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<cLTD_work_dir/\>\""}]}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"\"\<FORMpath\>\"", "\[Rule]", "FORMPATH"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"\"\<FORM_ID\>\"", "\[Rule]", "1"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.93693157662498*^9, {3.936931940486026*^9, 3.936931949619172*^9}},
 CellLabel->
  "In[798]:=",ExpressionUUID->"5d2a1c71-ef17-4475-8233-b549d738e0ab"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"\<\"loopmom\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"k0", ",", "k1", ",", "k2", ",", "k3"}], "}"}]}]},
     {
      RowBox[{"\<\"FORMpath\"\>", 
       "\[Rule]", "\<\"/Users/vjhirsch/HEP_programs/form/bin/form\"\>"}]},
     {
      RowBox[{"\<\"tFORMpath\"\>", "\[Rule]", "\<\"tform\"\>"}]},
     {
      RowBox[{"\<\"WorkingDirectory\"\>", 
       "\[Rule]", \
"\<\"/Users/vjhirsch/Documents/Work/Projects/alphaLoop/git_alphaLoopMisc/UV_\
derivatives_with_CFF_final/DOD1_example/cLTD_work_dir/\"\>"}]},
     {
      RowBox[{"\<\"FORM_ID\"\>", "\[Rule]", "1"}]},
     {
      RowBox[{"\<\"FORMcores\"\>", "\[Rule]", "1"}]},
     {
      RowBox[{"\<\"OptimizationLVL\"\>", "\[Rule]", "0"}]},
     {
      RowBox[{"\<\"keep_FORM_script\"\>", "\[Rule]", "False"}]},
     {
      RowBox[{"\<\"EvalAll\"\>", "\[Rule]", "False"}]},
     {
      RowBox[{"\<\"NoNumerator\"\>", "\[Rule]", "False"}]},
     {
      RowBox[{"\<\"FORMsubs\"\>", "\[Rule]", "False"}]},
     {
      RowBox[{"\<\"stdLTD\"\>", "\[Rule]", "False"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.936931952502431*^9, 3.936937096879019*^9, 3.9375614656717653`*^9, 
   3.937561499913787*^9, {3.937562091682872*^9, 3.937562113059623*^9}, 
   3.937562310233396*^9, 3.937562428893478*^9, 3.937900833412847*^9, 
   3.938077758198*^9, 3.9527599110813513`*^9, 3.957428103876354*^9, 
   3.957864114072414*^9, 3.957866745942274*^9, 3.95811434912752*^9, 
   3.958132418367082*^9, 3.958155897774741*^9, 3.958161103577057*^9, 
   3.9581649477790527`*^9, 3.9581910302956533`*^9, 3.958191064297553*^9, 
   3.9581967541251574`*^9, 3.958213329644815*^9},
 CellLabel->
  "Out[798]//TableForm=",ExpressionUUID->"c11378e5-6038-46c9-a082-\
6ae312a36e48"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "GenerateLMBData", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GenerateLMBData", "[", 
   RowBox[{"g_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"loopshift", "->", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"externalshift", "->", 
        RowBox[{"{", "}"}]}]}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"edges", "=", 
       RowBox[{"EdgeList", "[", "g", "]"}]}], ",", "\[IndentingNewLine]", 
      "props", ",", "\[IndentingNewLine]", "shift", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"lmbEdgesIDs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"e", "/.", 
            RowBox[{
             RowBox[{"DirectedEdge", "[", 
              RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
             "props"}]}], ")"}], "[", "\"\<id\>\"", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"e", ",", 
           RowBox[{"cFFGetLMBEdges", "[", "g", "]"}]}], "}"}]}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"externals", "=", 
       RowBox[{"cFFGetExternalEdges", "[", "g", "]"}]}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Association", "[", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"props", "=", 
         RowBox[{"(", 
          RowBox[{"e", "/.", 
           RowBox[{
            RowBox[{"DirectedEdge", "[", 
             RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", "props"}]}],
           ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"shift", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"AllTrue", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"props", "[", "\"\<sig\>\"", "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#", "===", "0"}], ")"}], "&"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"OptionValue", "[", "externalshift", "]"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"OptionValue", "[", "loopshift", "]"}]}], 
          "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"props", "[", "\"\<id\>\"", "]"}], "->", 
         RowBox[{"<|", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<mass\>\"", "->", 
            RowBox[{"props", "[", "\"\<mass\>\"", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"\"\<lmb_decomposition\>\"", "->", 
            RowBox[{"(", "\[IndentingNewLine]", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"props", "[", "\"\<sig\>\"", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                   ".", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"q", "[", "i", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "lmbEdgesIDs"}], "}"}]}], "]"}]}], 
                  ")"}], "\[IndentingNewLine]", "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"props", "[", "\"\<sig\>\"", "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                   ".", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"q", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"e", "/.", 
                    RowBox[{
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
                    "props"}]}], ")"}], "[", "\"\<id\>\"", "]"}], "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"e", ",", "externals"}], "}"}]}], "]"}]}], 
                  ")"}]}], ")"}], "/.", "shift"}], "\[IndentingNewLine]", 
              ")"}], "\[IndentingNewLine]", ")"}]}]}], "\[IndentingNewLine]", 
          "|>"}]}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", "edges"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.936940062501588*^9, 3.936940183453076*^9}, {
   3.936940272780654*^9, 3.936940362236348*^9}, {3.936942305837179*^9, 
   3.93694251970424*^9}, 3.936947041270665*^9, {3.937030185320492*^9, 
   3.937030186544738*^9}, {3.937049624781399*^9, 3.937049637306673*^9}, {
   3.937049677868598*^9, 3.937049717724053*^9}, {3.9370497563220167`*^9, 
   3.937049761250042*^9}, {3.9581325554908543`*^9, 3.9581325957734528`*^9}, {
   3.9581326972614307`*^9, 3.958132711641415*^9}, {3.9581330214218807`*^9, 
   3.958133025232012*^9}, {3.958133253750749*^9, 3.958133287095673*^9}, {
   3.9581333609237347`*^9, 3.958133361477767*^9}, {3.958133593496166*^9, 
   3.95813359958423*^9}, {3.958133710774493*^9, 3.958133768350333*^9}, {
   3.958133938597479*^9, 3.958133965660117*^9}, {3.958134041159061*^9, 
   3.958134129532275*^9}, {3.958134183158448*^9, 3.958134222255237*^9}},
 CellLabel->
  "In[800]:=",ExpressionUUID->"7cd5fdd8-93f9-4070-810c-bdaac2c81cfe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetVirtualPropagators", "[", "g_", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"externalIDs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"e", "/.", 
           RowBox[{
            RowBox[{"DirectedEdge", "[", 
             RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", "props"}]}],
           ")"}], "[", "\"\<id\>\"", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"e", ",", 
          RowBox[{"cFFGetExternalEdges", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"EdgeList", "[", "g", "]"}], ",", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"externalIDs", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "/.", 
             RowBox[{
              RowBox[{"DirectedEdge", "[", 
               RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
              "props"}]}], ")"}], "[", "\"\<id\>\"", "]"}]}], "]"}], "]"}], 
       "&"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9369470178784657`*^9, 3.936947088541093*^9}, {
   3.9369471582121687`*^9, 3.936947185208559*^9}, 3.9373888648488483`*^9},
 CellLabel->
  "In[802]:=",ExpressionUUID->"5f8a966e-0fb0-41c9-a653-1a1aa2b5ce18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetVirtualPropagatorsIDs", "[", "g_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"e", "/.", 
       RowBox[{
        RowBox[{"DirectedEdge", "[", 
         RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", "props"}]}], 
      ")"}], "[", "\"\<id\>\"", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"e", ",", 
      RowBox[{"GetVirtualPropagators", "[", "g", "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.958133356649333*^9, 3.958133359148279*^9}, {
  3.9581344357109613`*^9, 3.9581344435128183`*^9}},
 CellLabel->
  "In[803]:=",ExpressionUUID->"278253d2-e16e-4365-81ad-9c441168f610"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpandSP4", "[", "Num_", "]"}], ":=", 
  RowBox[{
   RowBox[{"TensorExpand", "[", 
    RowBox[{"Num", "/.", 
     StyleBox[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SP4", "[", 
         RowBox[{"a_", ",", "b_"}], "]"}], ":>", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"a", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"v_", "[", "i_", "]"}], ":>", 
             RowBox[{"L", "[", 
              RowBox[{"v", "[", "i", "]"}], "]"}]}], "}"}]}], ",", 
          RowBox[{"b", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"v_", "[", "i_", "]"}], ":>", 
             RowBox[{"R", "[", 
              RowBox[{"v", "[", "i", "]"}], "]"}]}], "}"}]}]}], "]"}]}], "}"}],
      ShowStringCharacters->True,
      NumberMarks->True]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cross", "[", 
      RowBox[{
       RowBox[{"L", "[", "a_", "]"}], ",", 
       RowBox[{"R", "[", "b_", "]"}]}], "]"}], ":>", 
     RowBox[{"SP4", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.958134448191998*^9, 3.958134457347608*^9}},
 CellLabel->
  "In[804]:=",ExpressionUUID->"4ee31d5e-bd41-44cd-91d4-d9b7c07f91fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NorExactZero", "[", "expr_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"FullSimplify", "[", "expr", "]"}], "]"}], "===", "0"}], ",", 
    "0", ",", 
    RowBox[{"N", "[", "expr", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9380236938946457`*^9, 3.938023720220949*^9}, 
   3.938023766289423*^9, {3.9380240672835827`*^9, 3.938024073404169*^9}},
 CellLabel->
  "In[805]:=",ExpressionUUID->"a7c38016-4599-457d-be06-da395936dd1b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ComputeSubtractionTermFromNormalized", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ComputeSubtractionTermFromNormalized", "[", 
   RowBox[{"ct_", ",", "numerics_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lmbEdges", ",", "orkey", ",", "sortedEdgeIDs"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lmbEdges", "=", 
      RowBox[{"cFFGetLMBEdges", "[", 
       RowBox[{"ct", "[", "\"\<graph\>\"", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sortedEdgeIDs", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"e", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DirectedEdge", "[", 
               RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", "props"}],
              "}"}]}], ")"}], "[", "\"\<id\>\"", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"e", ",", 
           RowBox[{"GetVirtualPropagators", "[", 
            RowBox[{"ct", "[", "\"\<graph\>\"", "]"}], "]"}]}], "}"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Association", "[", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"orkey", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"orientation", "[", "\"\<Orientation\>\"", "]"}], "[", 
               "eID", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"eID", ",", "sortedEdgeIDs"}], "}"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"orkey", "->", "\[IndentingNewLine]", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", 
               RowBox[{"Length", "[", "sortedEdgeIDs", "]"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "I"}], ")"}], "^", 
               RowBox[{"Length", "[", "lmbEdges", "]"}]}]], 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["1", "\[Lambda]"], ")"}], "3"], 
             RowBox[{"EvalcFF", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"ct", "[", "\"\<graph\>\"", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", "orientation", "}"}], ",", "\[IndentingNewLine]", 
               
               RowBox[{"numerics", "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Rule", "[", 
                   RowBox[{"k1", ",", "a_"}], "]"}], "->", 
                  RowBox[{"Rule", "[", 
                   RowBox[{"k1", ",", 
                    RowBox[{
                    FractionBox["1", "\[Lambda]"], "a"}]}], "]"}]}], "}"}]}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"Num", "->", 
                RowBox[{"ct", "[", "\"\<num\>\"", "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"DEBUG", "->", "False"}]}], "]"}]}]}]}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"orientation", ",", 
            RowBox[{"ct", "[", "\"\<cFFexpr\>\"", "]"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ")"}], "&"}]}], "]"}], "\[IndentingNewLine]", "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.937463103386079*^9, 3.9374632201313477`*^9}, {
   3.937463444916389*^9, 3.9374634462959223`*^9}, {3.9374639706351233`*^9, 
   3.9374639831764708`*^9}, {3.9374640406814213`*^9, 
   3.9374640590472107`*^9}, {3.937465066439426*^9, 3.9374650679545794`*^9}, {
   3.937465582112382*^9, 3.9374655878544483`*^9}, {3.937465618014955*^9, 
   3.9374656204421673`*^9}, {3.937465657577381*^9, 3.9374656960768013`*^9}, 
   3.93746628125037*^9, {3.937487434386039*^9, 3.9374875074106092`*^9}, {
   3.937487559774603*^9, 3.937487565241188*^9}, {3.9374876145894737`*^9, 
   3.9374876212727003`*^9}, {3.9581356060834723`*^9, 3.958135607997147*^9}, {
   3.958191944992049*^9, 3.958191957762146*^9}, {3.958191990089356*^9, 
   3.958191995136601*^9}, {3.958192055584662*^9, 3.958192064844898*^9}, 
   3.9582056328542967`*^9, {3.958218512403001*^9, 3.958218533461714*^9}, {
   3.958218660552843*^9, 3.958218695963669*^9}, 3.958218726010789*^9},
 CellLabel->
  "In[1096]:=",ExpressionUUID->"7f21a450-6990-4549-bf81-a9547934e292"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "ComputeSubtractionTerm", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ComputeSubtractionTerm", "[", 
   RowBox[{"ct_", ",", "numerics_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NumeratorFudge", "->", "None"}], ",", " ", 
       RowBox[{"DebugNumerator", "->", "False"}]}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "orkey", ",", "sortedEdgeIDs", ",", "scalednumerics", ",", 
      "ResPerOrientations", ",", "OSEReplacement", ",", "ShiftsReplacement", 
      ",", "lmbEdges", ",", "externalEdges", ",", "g", ",", 
      "orientationsForThisTerm", ",", "\n", "signatures", ",", "momLabels", 
      ",", "reducedGraph", ",", "reducedGraphEdgeList", ",", "processedNum", 
      ",", " ", "numForThisOrientation", ",", "internalOSEs", ",", 
      "normalization", ",", "tmpKey", ",", "resForThisOrientation"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{"ct", "[", "\"\<graph\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sortedEdgeIDs", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"e", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DirectedEdge", "[", 
               RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", "props"}],
              "}"}]}], ")"}], "[", "\"\<id\>\"", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"e", ",", 
           RowBox[{"GetVirtualPropagators", "[", "g", "]"}]}], "}"}]}], "]"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"scalednumerics", "=", 
      RowBox[{"numerics", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Rule", "[", 
          RowBox[{"k1", ",", "a_"}], "]"}], "->", 
         RowBox[{"Rule", "[", 
          RowBox[{"k1", ",", 
           RowBox[{
            FractionBox["1", "\[Lambda]"], "a"}]}], "]"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"momLabels", "=", 
      RowBox[{"cFFGenerateMomentaLabels", "[", "g", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"signatures", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", "\"\<id\>\"", "]"}], "->", 
              RowBox[{"#", "[", "\"\<sig\>\"", "]"}]}], ")"}], "&"}], ")"}], 
          "[", 
          RowBox[{"e", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"DirectedEdge", "[", 
              RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", "props"}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"e", ",", 
           RowBox[{"EdgeList", "[", "g", "]"}]}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"lmbEdges", "=", 
      RowBox[{"cFFGetLMBEdges", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"externalEdges", "=", 
      RowBox[{"cFFGetExternalEdges", "[", "g", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reducedGraph", "=", 
      RowBox[{"GraphDifference", "[", 
       RowBox[{"g", ",", 
        RowBox[{"DirectedGraph", "[", "externalEdges", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reducedGraphEdgeList", "=", 
      RowBox[{"EdgeList", "[", "reducedGraph", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ShiftsReplacement", " ", "=", " ", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pE", "[", "iExt", "]"}], ":>", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<p\>\"", "<>", 
             RowBox[{"ToString", "[", "iExt", "]"}], "<>", "\"\<E\>\""}], 
            "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"iExt", ",", 
           RowBox[{"Length", "[", "externalEdges", "]"}]}], "}"}]}], "]"}], "/.",
        "numerics"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"processedNum", "=", 
      RowBox[{
       RowBox[{"TensorExpand", "[", 
        RowBox[{
         RowBox[{"ct", "[", "\"\<num\>\"", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SP4", "[", 
            RowBox[{"a_", ",", "b_"}], "]"}], ":>", 
           RowBox[{"Cross", "[", 
            RowBox[{
             RowBox[{"a", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"v_", "[", "i_", "]"}], ":>", 
                RowBox[{"L", "[", 
                 RowBox[{"v", "[", "i", "]"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"b", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"v_", "[", "i_", "]"}], ":>", 
                RowBox[{"R", "[", 
                 RowBox[{"v", "[", "i", "]"}], "]"}]}], "}"}]}]}], "]"}]}], 
          "}"}]}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cross", "[", 
          RowBox[{
           RowBox[{"L", "[", "a_", "]"}], ",", 
           RowBox[{"R", "[", "b_", "]"}]}], "]"}], ":>", 
         RowBox[{"SP4", "[", 
          RowBox[{"a", ",", "b"}], "]"}]}], "}"}]}]}], ";", 
     RowBox[{"processedNum", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"processedNum", "/.", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"SP4", "[", 
                 RowBox[{"a_", ",", "b_"}], "]"}], ":>", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"a", "[", "0", "]"}], "*", 
                   RowBox[{"b", "[", "0", "]"}]}], "-", 
                  RowBox[{"a", " ", ".", " ", "b"}]}], ")"}]}], "}"}]}], 
             ")"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"q", "[", "i_", "]"}], "[", "0", "]"}], ":>", 
              RowBox[{"qE", "[", "i", "]"}]}], "}"}]}], ")"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"q", "[", "i_", "]"}], ":>", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"signatures", "[", "i", "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", ".", " ", 
               RowBox[{"momLabels", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{
                RowBox[{"signatures", "[", "i", "]"}], "[", 
                RowBox[{"[", "2", "]"}], "]"}], " ", ".", " ", 
               RowBox[{"momLabels", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], "}"}]}], ")"}], "/.", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"qE", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"externalEdges", "[", 
                RowBox[{"[", "iExt", "]"}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"DirectedEdge", "[", 
                  RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
                 "props"}], "}"}]}], ")"}], "[", "\"\<id\>\"", "]"}], "]"}], ":>", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"pE", "[", "iExt", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"iExt", ",", 
            RowBox[{"Length", "[", "externalEdges", "]"}]}], "}"}]}], "]"}]}],
        ")"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "DebugNumerator", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", "\"\<Numerator:\>\"", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "processedNum", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "NumeratorFudge", "]"}], "===", "None"}],
         "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"processedNum", "=", 
         RowBox[{
          RowBox[{"OptionValue", "[", "NumeratorFudge", "]"}], "[", 
          "processedNum", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "DebugNumerator", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<Numerator after fudge:\>\"", "]"}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Print", "[", "processedNum", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"processedNum", "=", 
      RowBox[{"processedNum", "/.", "ShiftsReplacement"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"processedNum", "=", 
      RowBox[{"processedNum", "/.", "scalednumerics"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"OSEReplacement", "=", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "scalednumerics", "]"}], "==", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ComputeOSEReplacements", "[", 
         RowBox[{"g", ",", "scalednumerics"}], "]"}]}], "\[IndentingNewLine]",
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"normalization", "=", 
      RowBox[{"(", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "I"}], ")"}], "^", 
         RowBox[{"Length", "[", "lmbEdges", "]"}]}], "*)"}], 
       RowBox[{"1", "/", " ", 
        RowBox[{"(", 
         RowBox[{"(", 
          RowBox[{"Times", "@@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{"OSE", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"e", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
                    "props"}], "}"}]}], ")"}], "[", "\"\<id\>\"", "]"}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"EdgeList", "[", "reducedGraph", "]"}]}], "}"}]}], 
            "]"}]}], ")"}], ")"}]}], " ", ")"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"Association", "[", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"orkey", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"o", ",", 
                RowBox[{"-", "1"}], ",", "1"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"o", ",", 
                RowBox[{
                "orientation", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], "}"}]}], "\[IndentingNewLine]", 
             "]"}]}], ";"}], "\[IndentingNewLine]", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"orkey", "=", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tmpKey", "=", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"(", 
                   RowBox[{"e", "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
                    "props"}], "}"}]}], ")"}], "]"}], "[", "\"\<id\>\"", 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                "orientation", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "[", "tmpKey", "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"e", ",", "reducedGraphEdgeList"}], "}"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"orientationsForThisTerm", "=", 
            RowBox[{"Association", "[", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"tmpKey", "=", 
                 RowBox[{
                  RowBox[{"Evaluate", "[", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "reducedGraphEdgeList", "\[LeftDoubleBracket]", "ie", 
                    "\[RightDoubleBracket]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
                    "props"}], "}"}]}], ")"}], "]"}], "[", "\"\<id\>\"", 
                  "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"tmpKey", "->", 
                 RowBox[{
                 "orkey", "\[LeftDoubleBracket]", "ie", 
                  "\[RightDoubleBracket]"}]}]}], ",", 
               RowBox[{"{", 
                RowBox[{"ie", ",", 
                 RowBox[{"Length", "[", "reducedGraphEdgeList", "]"}]}], 
                "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"numForThisOrientation", "=", 
            RowBox[{"processedNum", "/.", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"qE", "[", "edgeID", "]"}], "->", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"orientationsForThisTerm", "[", "edgeID", "]"}], 
                  "*", 
                  RowBox[{"OSE", "[", "edgeID", "]"}]}], ")"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"edgeID", ",", 
                 RowBox[{"Keys", "[", "orientationsForThisTerm", "]"}]}], 
                "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"resForThisOrientation", "=", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["1", "\[Lambda]"], ")"}], "3"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"normalization", " ", 
                 RowBox[{
                 "orientation", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "numForThisOrientation"}], ")"}],
                "/.", "scalednumerics"}], ")"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Keys", "[", "ct", "]"}], ",", "\"\<dots\>\""}], "]"}],
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Do", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"resForThisOrientation", "=", 
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"2", 
                    RowBox[{"OSE", "[", "d", "]"}]}]], 
                    RowBox[{"D", "[", 
                    RowBox[{"resForThisOrientation", ",", 
                    RowBox[{"OSE", "[", "d", "]"}]}], "]"}]}]}], 
                   "\[IndentingNewLine]", ",", 
                   RowBox[{"{", 
                    RowBox[{"id", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ct", "[", "\"\<dots\>\"", "]"}], "[", "d", "]"}],
                     "-", "1"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"resForThisOrientation", "=", 
                  FractionBox["resForThisOrientation", 
                   RowBox[{"Gamma", "[", 
                    RowBox[{
                    RowBox[{"ct", "[", "\"\<dots\>\"", "]"}], "[", "d", "]"}],
                     "]"}]]}]}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"d", ",", 
                  RowBox[{"Keys", "[", 
                   RowBox[{"ct", "[", "\"\<dots\>\"", "]"}], "]"}]}], "}"}]}],
                "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"resForThisOrientation", "=", 
            RowBox[{"resForThisOrientation", "/.", "OSEReplacement"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"orkey", "->", "resForThisOrientation"}]}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"orientation", ",", 
            RowBox[{"ct", "[", "\"\<cFFexpr\>\"", "]"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ")"}], "&"}]}], "]"}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.937463103386079*^9, 3.9374632201313477`*^9}, {
   3.937463444916389*^9, 3.9374634462959223`*^9}, {3.9374639706351233`*^9, 
   3.9374639831764708`*^9}, {3.9374640406814213`*^9, 
   3.9374640590472107`*^9}, {3.937465066439426*^9, 3.9374650679545794`*^9}, {
   3.937465582112382*^9, 3.9374655878544483`*^9}, {3.937465618014955*^9, 
   3.9374656204421673`*^9}, {3.937465657577381*^9, 3.9374656960768013`*^9}, 
   3.93746628125037*^9, {3.937487434386039*^9, 3.9374875074106092`*^9}, {
   3.937487559774603*^9, 3.937487565241188*^9}, {3.9374876145894737`*^9, 
   3.9374876212727003`*^9}, {3.9581356060834723`*^9, 3.95813561521012*^9}, {
   3.958135766150813*^9, 3.9581357783933783`*^9}, {3.958135870821542*^9, 
   3.958135876605743*^9}, {3.958135966409926*^9, 3.9581359881813*^9}, {
   3.9581360202196283`*^9, 3.9581361021116467`*^9}, {3.958147702182221*^9, 
   3.958147728424645*^9}, {3.958147862936613*^9, 3.958147900242977*^9}, {
   3.9581479727032747`*^9, 3.958148033900473*^9}, {3.958148171549477*^9, 
   3.958148209835787*^9}, {3.958148326791428*^9, 3.958148359715536*^9}, {
   3.958148394684795*^9, 3.9581483952921963`*^9}, {3.958148594751371*^9, 
   3.958148608360567*^9}, {3.9581486545704947`*^9, 3.958148655321125*^9}, {
   3.9581488292370358`*^9, 3.958148835477912*^9}, {3.958150485648151*^9, 
   3.958150750637617*^9}, {3.958151683545842*^9, 3.958151730231333*^9}, {
   3.958151771883842*^9, 3.9581517847542267`*^9}, {3.9581518912897577`*^9, 
   3.958151924744505*^9}, {3.95815216799116*^9, 3.9581521760930443`*^9}, {
   3.958152282859166*^9, 3.95815228574536*^9}, {3.958152318383772*^9, 
   3.958152450955412*^9}, {3.958152584960559*^9, 3.958152807845518*^9}, {
   3.958152891784021*^9, 3.958152949488405*^9}, {3.9581529898611107`*^9, 
   3.958153033220478*^9}, {3.95815310800241*^9, 3.9581531127668858`*^9}, {
   3.958153220704603*^9, 3.9581532209332438`*^9}, {3.958155234451808*^9, 
   3.9581553342397223`*^9}, 3.958163119643806*^9, {3.958191868654709*^9, 
   3.958191883682989*^9}, 3.958191936189611*^9, {3.958192000573566*^9, 
   3.9581920032219152`*^9}, {3.958192144001026*^9, 3.958192145320347*^9}, 
   3.958198150362776*^9, 3.958205603992805*^9, {3.958209501666346*^9, 
   3.958209643665237*^9}, {3.958209798341227*^9, 3.958209849305369*^9}},
 CellLabel->
  "In[808]:=",ExpressionUUID->"b61e60cb-6528-44e9-94b1-b6bf3f4a315f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConvertCFFFormat", "[", 
   RowBox[{"structuredCFF_", ",", "g_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "externalEdges", ",", "ShiftsReplacement", ",", "reducedGraph", ",", 
      "flipConfiguration", ",", "tmpOrientation", ",", "momLabels"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"externalEdges", "=", 
      RowBox[{"cFFGetExternalEdges", "[", "g", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"reducedGraph", "=", 
      RowBox[{"GraphDifference", "[", 
       RowBox[{"g", ",", 
        RowBox[{"DirectedGraph", "[", "externalEdges", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ShiftsReplacement", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"pE", "[", "iExt", "]"}], ":>", 
         RowBox[{"Evaluate", "[", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<p\>\"", "<>", 
            RowBox[{"ToString", "[", "iExt", "]"}], "<>", "\"\<E\>\""}], 
           "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"iExt", ",", 
          RowBox[{"Length", "[", "externalEdges", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"momLabels", "=", 
      RowBox[{"cFFGenerateMomentaLabels", "[", "g", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"flipConfiguration", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"tmpOrientation", "=", 
              RowBox[{
               RowBox[{"o", "[", "\"\<Orientation\>\"", "]"}], "[", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{"(", 
                  RowBox[{"e", "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
                    "props"}], "}"}]}], ")"}], "]"}], "[", "\"\<id\>\"", 
                "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"e", "->", "tmpOrientation"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"e", ",", 
              RowBox[{"EdgeList", "[", "reducedGraph", "]"}]}], "}"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"o", "[", "\"\<Orientation\>\"", "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Total", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"Times", "@@", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"es", "[", "\"\<overall_sign\>\"", "]"}], "*", 
                  RowBox[{"(", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Total", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"OSE", "[", "ose", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"ose", ",", 
                    RowBox[{"es", "[", "\"\<OSE\>\"", "]"}]}], "}"}]}], "]"}],
                     "]"}], "+", "\[IndentingNewLine]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"cFFGenerateEnergyShiftSignatureForEsurf", "[", 
                    RowBox[{"g", ",", 
                    RowBox[{"es", "[", "\"\<OSE\>\"", "]"}], ",", 
                    "flipConfiguration"}], "]"}], ".", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", "p", "]"}], "<>", "\"\<E\>\""}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"p", ",", 
                    RowBox[{
                    "momLabels", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ")"}]}], "/.",
                     "ShiftsReplacement"}], "\[IndentingNewLine]", ")"}]}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"es", ",", 
                   RowBox[{"t", "[", "\"\<Esurfs\>\"", "]"}]}], "}"}]}], 
                "\[IndentingNewLine]", "]"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", 
               RowBox[{"o", "[", "\"\<Terms\>\"", "]"}]}], "}"}]}], "]"}], 
           "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"{", 
        RowBox[{"o", ",", "structuredCFF"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.958153891960684*^9, 3.958153927256742*^9}, {
  3.958153984301832*^9, 3.958154092914556*^9}, {3.95815415306917*^9, 
  3.958154156444891*^9}, {3.958154214537529*^9, 3.958154337769743*^9}, {
  3.958154374424741*^9, 3.958154407544169*^9}, {3.958154619447981*^9, 
  3.958154679925273*^9}, {3.9581547368288183`*^9, 3.958154774481771*^9}, {
  3.958154807107193*^9, 3.958154843403091*^9}, {3.9581548745187693`*^9, 
  3.958154909443646*^9}, {3.958154954456848*^9, 3.958154954950263*^9}, {
  3.9581550371160507`*^9, 3.958155072698388*^9}, {3.9581551385885344`*^9, 
  3.958155140123057*^9}, {3.958155413430039*^9, 3.958155451320532*^9}, {
  3.958218915357361*^9, 3.9582189160907393`*^9}},
 CellLabel->
  "In[1107]:=",ExpressionUUID->"e4e9031f-4cce-4cdf-8871-04d8e7e37f05"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "AnalyzeSubtraction", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AnalyzeSubtraction", "[", 
   RowBox[{"Ires_", ",", "SubtractionRes_", ",", "lambdaTerm_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fudges", "->", 
        RowBox[{"<|", "|>"}]}], ",", 
       RowBox[{"ExpansionDepth", "->", "0"}]}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tmpI", ",", "tmpCTs", ",", "sumCTs", ",", "res"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fudges", "=", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<NumExpansion\>\"", "->", 
          RowBox[{"{", "1", "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<NumDOSEDot\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<CFFDOSEDot\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], 
        "\[IndentingNewLine]", "|>"}]}], ";"}], "\[IndentingNewLine]", "*)"}],
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"res", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tmpI", "=", 
          RowBox[{
           RowBox[{"SeriesCoefficient", "[", 
            RowBox[{
             RowBox[{"Series", "[", 
              RowBox[{
               RowBox[{"Ires", "[", "o", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Lambda]", ",", "0", ",", 
                 RowBox[{
                 "OptionValue", "[", "\"\<ExpansionDepth\>\"", "]"}]}], "}"}],
                ",", 
               RowBox[{"Assumptions", "->", 
                RowBox[{"\[Lambda]", ">", "0"}]}]}], "]"}], ",", 
             "lambdaTerm"}], "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Missing", "[", "x__", "]"}], ":>", "0"}], "}"}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"tmpCTs", "=", 
          RowBox[{"Association", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"k", "->", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{"OptionValue", "[", "\"\<fudges\>\"", "]"}], 
                    "]"}], ",", "k"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"OptionValue", "[", "\"\<fudges\>\"", "]"}], "[", 
                    "k", "]"}], "\[LeftDoubleBracket]", "is", 
                    "\[RightDoubleBracket]"}], ",", "1"}], "]"}], 
                 "\[IndentingNewLine]", "*", 
                 RowBox[{"If", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"SubtractionRes", "[", "k", "]"}], 
                    "\[LeftDoubleBracket]", "is", "\[RightDoubleBracket]"}], 
                    "[", "o", "]"}], "===", "0"}], ",", "\[IndentingNewLine]",
                    "0", ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"SeriesCoefficient", "[", 
                    RowBox[{
                    RowBox[{"Series", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"SubtractionRes", "[", "k", "]"}], 
                    "\[LeftDoubleBracket]", "is", "\[RightDoubleBracket]"}], 
                    "[", "o", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Lambda]", ",", "0", ",", 
                    RowBox[{
                    "OptionValue", "[", "\"\<ExpansionDepth\>\"", "]"}]}], 
                    "}"}], ",", 
                    RowBox[{"Assumptions", "->", 
                    RowBox[{"\[Lambda]", ">", "0"}]}]}], "]"}], ",", 
                    "lambdaTerm"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Missing", "[", "x__", "]"}], ":>", "0"}], 
                    "}"}]}], ","}], "\[IndentingNewLine]", "]"}]}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"is", ",", 
                  RowBox[{"Length", "[", 
                   RowBox[{"SubtractionRes", "[", "k", "]"}], "]"}]}], 
                 "}"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"Keys", "[", "SubtractionRes", "]"}]}], "}"}]}], "]"}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"sumCTs", "=", 
          RowBox[{"FullSimplify", "[", 
           RowBox[{"Total", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{"tmpCTs", "[", "k", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", 
                RowBox[{"Keys", "[", "tmpCTs", "]"}]}], "}"}]}], "]"}], "]"}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Join", "@@", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "o", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"NorExactZero", "[", "tmpI", "]"}], ",", 
              RowBox[{"NorExactZero", "[", 
               RowBox[{"-", "sumCTs"}], "]"}], ",", 
              RowBox[{"NorExactZero", "[", 
               RowBox[{"tmpI", "-", "sumCTs"}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"NorExactZero", "[", 
                RowBox[{"tmpCTs", "[", "k", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", 
                 RowBox[{"Keys", "[", "tmpCTs", "]"}]}], "}"}]}], "]"}], 
             "]"}]}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]",
         ",", 
        RowBox[{"{", 
         RowBox[{"o", ",", 
          RowBox[{"Keys", "[", "Ires", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Join", "@@", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<orientation\>\"", ",", "\"\<I\>\"", ",", "\"\<-SumCT\>\"", 
              ",", "\"\<I-SumCT\>\""}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"k", "<>", "\"\<#\>\"", "<>", 
                  RowBox[{"ToString", "[", "ik", "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"ik", ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"tmpCTs", "[", "k", "]"}], "]"}]}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", 
                 RowBox[{"Keys", "[", "tmpCTs", "]"}]}], "}"}]}], "]"}], 
             "]"}]}], "\[IndentingNewLine]", "}"}]}], "}"}], ",", "res"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"res", ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", "\"\<TOTAL\>\"", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
              "r", "\[LeftDoubleBracket]", "ri", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", 
                RowBox[{"res", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
             "]"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"ri", ",", "2", ",", 
             RowBox[{"Length", "[", 
              RowBox[{
              "res", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "]"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.958160731730607*^9, 3.958160837127803*^9}, {
  3.958160883093073*^9, 3.9581609846492977`*^9}, {3.9581624347812347`*^9, 
  3.958162467950604*^9}, {3.958162633984881*^9, 3.958162664574247*^9}},
 CellLabel->
  "In[811]:=",ExpressionUUID->"bd08eadb-bdef-468a-88bf-d2e3be5292c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Section",
 CellChangeTimes->{{3.958132090997794*^9, 
  3.95813211622326*^9}},ExpressionUUID->"46c9d524-eb15-445c-82cd-\
8559441d1dde"],

Cell[CellGroupData[{

Cell["Input", "Subsection",
 CellChangeTimes->{{3.958132090997794*^9, 3.95813211622326*^9}, {
  3.958134692579568*^9, 
  3.958134693098209*^9}},ExpressionUUID->"ad52ae42-a024-4f3b-9b6f-\
0cdf9b49a761"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tri1L", "=", 
   RowBox[{"DirectedGraph", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"101", ",", "1", ",", "0"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"102", ",", "2", ",", "1"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"1", ",", "2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"2", ",", "3", ",", "3"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"3", ",", "1", ",", "4"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"103", ",", "3", ",", "6"}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"EdgeLabels", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tri1L", "=", 
   RowBox[{"AssignSignatures", "[", 
    RowBox[{"Tri1L", ",", 
     RowBox[{"masses", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"2", "->", "1"}], ",", 
        RowBox[{"3", "->", "2"}], ",", 
        RowBox[{"4", "->", "3"}]}], "|>"}]}], ",", 
     RowBox[{"lmb", "->", 
      RowBox[{"{", "3", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Tri1L", "=", 
  RowBox[{"DirectedGraph", "[", 
   RowBox[{"Tri1L", ",", 
    RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "275"}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<HighDimensionalEmbedding\>\""}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"EdgeLabels", "->", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"e", "->", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<q\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"e", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"DirectedEdge", "[", 
                    RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
                   "props"}], "}"}]}], ")"}], "[", "\"\<id\>\"", "]"}], ")"}],
              "]"}]}], ")"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "20"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", 
         RowBox[{"EdgeList", "[", "Tri1L", "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.872742741603726*^9, 3.872742775586288*^9}, {
   3.872743362817617*^9, 3.872743387499469*^9}, {3.872743487367777*^9, 
   3.872743524782481*^9}, {3.872743958621933*^9, 3.872743975587399*^9}, {
   3.872744266098577*^9, 3.872744273043355*^9}, {3.872744435398158*^9, 
   3.872744461440112*^9}, {3.872745114500924*^9, 3.8727451300396833`*^9}, {
   3.872745772099901*^9, 3.872745776468544*^9}, 3.872786297553876*^9, {
   3.872789807179264*^9, 3.8727898494597893`*^9}, {3.8727899530754137`*^9, 
   3.87278998200391*^9}, 3.8727931259976683`*^9, {3.872920078463521*^9, 
   3.8729201109695063`*^9}, {3.872920144235427*^9, 3.872920159421647*^9}, {
   3.8729238516510687`*^9, 3.872923854849904*^9}, {3.872926388991707*^9, 
   3.872926423748941*^9}, {3.872926497819352*^9, 3.872926717448036*^9}, {
   3.937029477469689*^9, 3.9370295236741343`*^9}, {3.93704154838531*^9, 
   3.937041579088908*^9}, {3.93704162434651*^9, 3.937041626865746*^9}, {
   3.937042549739942*^9, 3.9370425540260887`*^9}, {3.937049644336658*^9, 
   3.937049648682721*^9}, {3.958115760324025*^9, 3.9581157871290007`*^9}, {
   3.9581158725615273`*^9, 3.958115872616946*^9}, {3.958131485089891*^9, 
   3.9581315199265738`*^9}, {3.9581317970114317`*^9, 
   3.9581317984630623`*^9}, {3.9581318821621532`*^9, 
   3.9581318998381557`*^9}, {3.958132682231254*^9, 3.958132687317069*^9}},
 CellLabel->
  "In[813]:=",ExpressionUUID->"b1326d8e-b0d9-4fed-9f31-5ea43930d4c6"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{101, 1, 102, 2, 3, 
      103}, {{{1, 2}, {3, 4}, {2, 4}, {4, 5}, {5, 2}, {6, 5}}, 
       Null, {<|"id" -> 0, "sig" -> {{0}, {1, 0, 0}}, "mass" -> 0|>, <|
        "id" -> 1, "sig" -> {{0}, {0, 1, 0}}, "mass" -> 0|>, <|
        "id" -> 2, "sig" -> {{1}, {0, -1, 0}}, "mass" -> 1|>, <|
        "id" -> 3, "sig" -> {{1}, {0, 0, 0}}, "mass" -> 2|>, <|
        "id" -> 4, "sig" -> {{1}, {-1, -1, 0}}, "mass" -> 3|>, <|
        "id" -> 6, "sig" -> {{0}, {0, 0, 1}}, "mass" -> 0|>}}, {
      EdgeLabels -> {
        DirectedEdge[
          2, 3, <|"id" -> 3, "sig" -> {{1}, {0, 0, 0}}, "mass" -> 2|>] -> 
         Style["q3", FontSize -> 20], 
         DirectedEdge[
          1, 2, <|"id" -> 2, "sig" -> {{1}, {0, -1, 0}}, "mass" -> 1|>] -> 
         Style["q2", FontSize -> 20], 
         DirectedEdge[
          101, 1, <|"id" -> 0, "sig" -> {{0}, {1, 0, 0}}, "mass" -> 0|>] -> 
         Style["q0", FontSize -> 20], 
         DirectedEdge[
          3, 1, <|"id" -> 4, "sig" -> {{1}, {-1, -1, 0}}, "mass" -> 3|>] -> 
         Style["q4", FontSize -> 20], 
         DirectedEdge[
          102, 2, <|"id" -> 1, "sig" -> {{0}, {0, 1, 0}}, "mass" -> 0|>] -> 
         Style["q1", FontSize -> 20], 
         DirectedEdge[
          103, 3, <|"id" -> 6, "sig" -> {{0}, {0, 0, 1}}, "mass" -> 0|>] -> 
         Style["q6", FontSize -> 20]}, GraphLayout -> 
       "HighDimensionalEmbedding", ImageSize -> 275, 
       VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[{{0., 0.02633110469705524}, {0.7790109172737341, 
          0.4658103314738574}}, 0.02763473349821989], InsetBox[
          StyleBox["\<\"q0\"\>",
           StripOnInput->False,
           FontSize->20], {0.38950545863686703, 0.24607071808545633}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7790109172737341, 0.4658103314738574}, {
          1.8744017351466633`, 0.4549036307960713}}, 0.02763473349821989], 
         InsetBox[
          StyleBox["\<\"q2\"\>",
           StripOnInput->False,
           FontSize->20], {1.3267063262101986, 0.46035698113496437}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2.6445073686077825`, 0.}, {1.8744017351466633`, 
          0.4549036307960713}}, 0.02763473349821989], InsetBox[
          StyleBox["\<\"q1\"\>",
           StripOnInput->False,
           FontSize->20], {2.259454551877223, 0.22745181539803566}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.8744017351466633`, 0.4549036307960713}, {
          1.3361518060686346`, 1.4089932564851346`}}, 0.02763473349821989], 
         InsetBox[
          StyleBox["\<\"q3\"\>",
           StripOnInput->False,
           FontSize->20], {1.605276770607649, 0.9319484436406029}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.3361518060686346`, 1.4089932564851346`}, {
          0.7790109172737341, 0.4658103314738574}}, 0.02763473349821989], 
         InsetBox[
          StyleBox["\<\"q4\"\>",
           StripOnInput->False,
           FontSize->20], {1.0575813616711844, 0.9374017939794961}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.345057089881249, 2.3033761140580067`}, {
          1.3361518060686346`, 1.4089932564851346`}}, 0.02763473349821989], 
         InsetBox[
          StyleBox["\<\"q6\"\>",
           StripOnInput->False,
           FontSize->20], {1.340604447974942, 1.8561846852715707}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.02633110469705524}, 0.02763473349821989], 
         InsetBox["101", 
          Offset[{2, 2}, {0.02763473349821989, 0.05396583819527513}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7790109172737341, 0.4658103314738574}, 
          0.02763473349821989], 
         InsetBox["1", 
          Offset[{2, 2}, {0.8066456507719539, 0.4934450649720773}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.6445073686077825`, 0.}, 0.02763473349821989], 
         InsetBox["102", 
          Offset[{2, 2}, {2.6721421021060023, 0.02763473349821989}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.8744017351466633`, 0.4549036307960713}, 
          0.02763473349821989], 
         InsetBox["2", 
          Offset[{2, 2}, {1.9020364686448832, 0.4825383642942912}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.3361518060686346`, 1.4089932564851346`}, 
          0.02763473349821989], 
         InsetBox["3", 
          Offset[{2, 2}, {1.3637865395668545, 1.4366279899833545}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.345057089881249, 2.3033761140580067`}, 
          0.02763473349821989], 
         InsetBox["103", 
          Offset[{2, 2}, {1.372691823379469, 2.3310108475562266}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->275]], "Output",
 CellChangeTimes->{
  3.872786297927058*^9, 3.872788767994326*^9, 3.8727898504097223`*^9, {
   3.87278995375004*^9, 3.872789982351449*^9}, 3.872791385364929*^9, 
   3.87279271938628*^9, 3.8727931265441027`*^9, 3.8727937953223124`*^9, 
   3.8727940029611588`*^9, 3.872795050199144*^9, 3.872795146157707*^9, 
   3.8727951858696003`*^9, {3.872796959140242*^9, 3.872796985274685*^9}, 
   3.872838078568451*^9, {3.872920080650009*^9, 3.8729201114732122`*^9}, {
   3.8729201483500967`*^9, 3.8729201602672567`*^9}, {3.8729238489010687`*^9, 
   3.872923855155116*^9}, 3.872925853236019*^9, {3.872926390562582*^9, 
   3.872926432199849*^9}, {3.87292654347661*^9, 3.8729265569859667`*^9}, {
   3.8729266023090687`*^9, 3.872926628956504*^9}, {3.8729266668470287`*^9, 
   3.872926717846693*^9}, 3.87362453938286*^9, 3.8736257191943817`*^9, 
   3.873627057007861*^9, 3.8751124817844152`*^9, 3.8751133472909718`*^9, 
   3.875113870467016*^9, 3.875116214357864*^9, 3.93693672414045*^9, 
   3.9369371009265614`*^9, 3.936937759710945*^9, 3.937029528065774*^9, {
   3.937041556980084*^9, 3.93704158018029*^9}, 3.9370416289666243`*^9, 
   3.937042557802723*^9, 3.9370496509633427`*^9, 3.937491060361042*^9, 
   3.937491103424041*^9, 3.937491828904037*^9, 3.9374918732095623`*^9, 
   3.937492199944398*^9, {3.937492260104205*^9, 3.93749228458009*^9}, 
   3.93756146569656*^9, 3.937561499942218*^9, 3.937562096715242*^9, 
   3.93756231755792*^9, 3.937562428920053*^9, 3.937900834675186*^9, 
   3.9379909914853*^9, 3.938004943941078*^9, 3.938005569106584*^9, 
   3.938025391237817*^9, 3.938025436674201*^9, 3.938076717077956*^9, 
   3.938077758226149*^9, 3.938079755920848*^9, 3.938079956397682*^9, 
   3.952759911129951*^9, 3.957864114340002*^9, 3.957866746244158*^9, 
   3.957866858178355*^9, 3.958114349421088*^9, 3.958115687733512*^9, {
   3.958115768444048*^9, 3.9581157920611973`*^9}, 3.958115873423543*^9, 
   3.958115916005889*^9, 3.9581315005639*^9, {3.958131870923958*^9, 
   3.9581319002101393`*^9}, 3.95813213414734*^9, 3.9581324233237333`*^9, {
   3.958132683764841*^9, 3.958132687742838*^9}, 3.958133028510255*^9, 
   3.958135335261363*^9, 3.958155897891879*^9, 3.9581611055395184`*^9, 
   3.958164947887637*^9, 3.958191030431666*^9, 3.958196748682926*^9, 
   3.958204361635681*^9, 3.958204409100484*^9, 3.958209339278014*^9, 
   3.9582133297037*^9},
 CellLabel->
  "Out[815]=",ExpressionUUID->"daa42754-878f-49a6-b611-0243a52d9735"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lmbVec", "=", 
   RowBox[{"q", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cFFGetLMBEdges", "[", "Tri1L", "]"}], "\[LeftDoubleBracket]", 
      "1", "\[RightDoubleBracket]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
       RowBox[{"props", "[", "\"\<id\>\"", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9374676513498173`*^9, 3.937467705906384*^9}},
 CellLabel->
  "In[816]:=",ExpressionUUID->"47778b46-27d8-40f3-87a1-fc52080618de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"GenerateLMBData", "[", 
   RowBox[{"Tri1L", ",", 
    RowBox[{"loopshift", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"q", "[", "0", "]"}], ":>", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"q", "[", "1", "]"}]}], "-", 
         RowBox[{"q", "[", "6", "]"}]}], ")"}]}], "}"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.958133659727178*^9, 3.958133679388253*^9}, 
   3.958134018688664*^9, {3.958134229529214*^9, 3.958134230826529*^9}, {
   3.95819682410343*^9, 3.958196826127872*^9}, {3.95819717035813*^9, 
   3.958197177995389*^9}},
 CellLabel->
  "In[817]:=",ExpressionUUID->"afc8e5ca-9dd7-4f9c-a76f-35ae411ffe65"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"mass" -> 0, "lmb_decomposition" -> $CellContext`q[0]|>, 
       1 -> <|"mass" -> 0, "lmb_decomposition" -> $CellContext`q[1]|>, 
       2 -> <|"mass" -> 1, 
         "lmb_decomposition" -> -$CellContext`q[1] + $CellContext`q[3]|>, 
       3 -> <|"mass" -> 2, "lmb_decomposition" -> $CellContext`q[3]|>, 
       4 -> <|"mass" -> 3, 
         "lmb_decomposition" -> $CellContext`q[3] + $CellContext`q[6]|>, 
       6 -> <|"mass" -> 0, "lmb_decomposition" -> $CellContext`q[6]|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "mass"} -> 
        1, {All, "lmb_decomposition"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "mass" -> TypeSystem`PackageScope`AtomShape[34], 
             "lmb_decomposition" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 2, {All}]]], 6, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"mass", "lmb_decomposition"}, {
         TypeSystem`Atom[Integer], TypeSystem`AnyType}], 6], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 1, {All, "mass"} -> 
        1, {All, "lmb_decomposition"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "mass" -> TypeSystem`PackageScope`AtomShape[34], 
             "lmb_decomposition" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 2, {All}]]], 6, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"mass", "lmb_decomposition"}, {
         TypeSystem`Atom[Integer], TypeSystem`AnyType}], 6], "Path" -> {}, 
     "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     6, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mass", 
                  Style[
                  "mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["lmb_decomposition", 
                  Style[
                  "lmb_decomposition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "lmb_decomposition"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "lmb_decomposition"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"q", "[", "0", "]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"q", "[", "1", "]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{"-", 
                    RowBox[{"q", "[", "1", "]"}]}], "+", 
                   RowBox[{"q", "[", "3", "]"}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"q", "[", "3", "]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{"q", "[", "3", "]"}], "+", 
                   RowBox[{"q", "[", "6", "]"}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"q", "[", "6", "]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{210.95234375, {90.72647094726562, 96.45840454101562}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{210.95234375, {90.72647094726562, 96.45840454101562}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.958132606818665*^9, 3.958133034124104*^9, 3.958133553564782*^9, 
   3.958133626562542*^9, {3.9581336614726954`*^9, 3.958133679674322*^9}, {
   3.958134007767991*^9, 3.95813401899996*^9}, 3.958134144088509*^9, {
   3.958134211188615*^9, 3.958134231145405*^9}, 3.958135335291205*^9, 
   3.95815589791149*^9, 3.9581611055998287`*^9, 3.9581649479007597`*^9, 
   3.95819103044357*^9, 3.9581967487241364`*^9, {3.958196817158345*^9, 
   3.958196826376392*^9}, {3.958197171343616*^9, 3.958197178534083*^9}, 
   3.9582043617046413`*^9, 3.958204409166788*^9, 3.95820933931673*^9, 
   3.958213329722321*^9},
 CellLabel->
  "Out[817]=",ExpressionUUID->"75e7df12-54bf-4320-a42a-b14138f8ca8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lmbData", "=", 
   RowBox[{"GenerateLMBData", "[", 
    RowBox[{"Tri1L", ",", 
     RowBox[{"loopshift", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"q", "[", "0", "]"}], ":>", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"q", "[", "1", "]"}]}], "-", 
          RowBox[{"q", "[", "6", "]"}]}], ")"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"lmbDataLambda", "=", 
  RowBox[{"Association", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"k", "->", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<mass\>\"", "->", 
         RowBox[{"\[Lambda]", " ", 
          RowBox[{
           RowBox[{"lmbData", "[", "k", "]"}], "[", "\"\<mass\>\"", "]"}]}]}],
         ",", 
        RowBox[{"\"\<lmb_decomposition\>\"", "->", 
         RowBox[{"Simplify", "[", 
          RowBox[{"\[Lambda]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"lmbData", "[", "k", "]"}], "[", 
              "\"\<lmb_decomposition\>\"", "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{"lmbVec", "->", 
               RowBox[{
                FractionBox["1", "\[Lambda]"], "lmbVec"}]}], "}"}]}], ")"}]}],
           "]"}]}]}], "|>"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"Keys", "[", "lmbData", "]"}]}], "}"}]}], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.937484840034492*^9, 3.9374848823105164`*^9}, {
  3.9374849259128513`*^9, 3.937485046772043*^9}, {3.937485387827244*^9, 
  3.937485395933435*^9}, {3.9581326398814087`*^9, 3.958132643157632*^9}, {
  3.958132708052623*^9, 3.958132732647004*^9}, {3.958132851709118*^9, 
  3.9581328655836153`*^9}, {3.9581330393024693`*^9, 3.9581330404183807`*^9}, {
  3.958133154750436*^9, 3.958133159845347*^9}, {3.958133366846141*^9, 
  3.958133448139518*^9}, {3.958133528645689*^9, 3.9581335411538887`*^9}, {
  3.958133632977502*^9, 3.9581336338831377`*^9}, {3.958133875398624*^9, 
  3.958133893946896*^9}, {3.958133994963323*^9, 3.95813399595648*^9}, {
  3.9581352633061113`*^9, 3.958135268952857*^9}, {3.958197163200068*^9, 
  3.958197163773059*^9}, {3.95821579558354*^9, 
  3.958215796300894*^9}},ExpressionUUID->"99c532f3-105f-494c-bcf2-\
19efb039b936"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"0", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"mass\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"lmb_decomposition\"\>", "\[Rule]", 
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"q", "[", "0", "]"}]}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"1", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"mass\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"lmb_decomposition\"\>", "\[Rule]", 
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"q", "[", "1", "]"}]}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"mass\"\>", "\[Rule]", "\[Lambda]"}], ",", 
      RowBox[{"\<\"lmb_decomposition\"\>", "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Lambda]"}], " ", 
         RowBox[{"q", "[", "1", "]"}]}], "+", 
        RowBox[{"q", "[", "3", "]"}]}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"3", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"mass\"\>", "\[Rule]", 
       RowBox[{"2", " ", "\[Lambda]"}]}], ",", 
      RowBox[{"\<\"lmb_decomposition\"\>", "\[Rule]", 
       RowBox[{"q", "[", "3", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"4", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"mass\"\>", "\[Rule]", 
       RowBox[{"3", " ", "\[Lambda]"}]}], ",", 
      RowBox[{"\<\"lmb_decomposition\"\>", "\[Rule]", 
       RowBox[{
        RowBox[{"q", "[", "3", "]"}], "+", 
        RowBox[{"\[Lambda]", " ", 
         RowBox[{"q", "[", "6", "]"}]}]}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"6", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"mass\"\>", "\[Rule]", "0"}], ",", 
      RowBox[{"\<\"lmb_decomposition\"\>", "\[Rule]", 
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"q", "[", "6", "]"}]}]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.93748499839902*^9, 3.937485047669944*^9, 3.93748539837119*^9, 
   3.937491061076672*^9, 3.937491104162064*^9, 3.937491829571437*^9, 
   3.937491873848144*^9, {3.937492173179636*^9, 3.937492200708099*^9}, {
   3.937492260672649*^9, 3.937492285204974*^9}, 3.9375614661238117`*^9, 
   3.9375615003327713`*^9, 3.937562097133589*^9, {3.9375623182209883`*^9, 
   3.937562358907082*^9}, 3.93756242952551*^9, 3.9379008354088717`*^9, 
   3.9379910008643017`*^9, 3.9380049444695473`*^9, 3.9380055695425386`*^9, 
   3.9380253916710043`*^9, 3.938025437222004*^9, 3.938076717629815*^9, 
   3.938077758677897*^9, 3.938079756407527*^9, 3.938079956885378*^9, 
   3.9527599118919487`*^9, 3.95786411488687*^9, 3.957866746920971*^9, 
   3.957866858784279*^9, 3.958114350119541*^9, 3.958115688597185*^9, {
   3.958115769383192*^9, 3.958115792890087*^9}, 3.958115917052643*^9, 
   3.9581321345427628`*^9, 3.95813245141323*^9, 3.9581327145248117`*^9, {
   3.9581333673003597`*^9, 3.958133380668252*^9}, 3.9581334490970507`*^9, {
   3.9581335335009947`*^9, 3.9581335414573812`*^9}, {3.958133603092664*^9, 
   3.9581336341774282`*^9}, {3.958133877109268*^9, 3.958133909675007*^9}, {
   3.958133972177333*^9, 3.958133996323489*^9}, 3.958134232710126*^9, 
   3.958135264412177*^9, {3.9581353181674023`*^9, 3.958135335301972*^9}, 
   3.9581558979257603`*^9, 3.9581611056124887`*^9, 3.95816494791101*^9, 
   3.958191030450819*^9, 3.958196748737796*^9, 3.958196819986327*^9, 
   3.958196880071007*^9, 3.9581971676288643`*^9, 3.958204361763369*^9, 
   3.958204409209868*^9, 3.958209339360799*^9, 3.9582133297259073`*^9},
 CellLabel->
  "Out[819]=",ExpressionUUID->"3142354d-25a1-40ed-8a7e-5776807015e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tri1Lnumerics", "=", 
  RowBox[{"GenerateRandomSample", "[", 
   RowBox[{"Tri1L", ",", 
    RowBox[{"Seed", "->", "1"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[820]:=",ExpressionUUID->"0c332a40-0016-4ca1-9dc2-88ec8cbf5f9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"k1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["2", "3"], ",", 
      FractionBox["3", "5"], ",", 
      FractionBox["5", "7"]}], "}"}]}], ",", 
   RowBox[{"p1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["7", "11"], ",", 
      FractionBox["11", "13"], ",", 
      FractionBox["13", "17"]}], "}"}]}], ",", 
   RowBox[{"p2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["17", "19"], ",", 
      FractionBox["19", "23"], ",", 
      FractionBox["23", "29"]}], "}"}]}], ",", 
   RowBox[{"p1E", "\[Rule]", 
    FractionBox["29", "31"]}], ",", 
   RowBox[{"p2E", "\[Rule]", 
    FractionBox["31", "37"]}], ",", 
   RowBox[{"p3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["320", "209"]}], ",", 
      RowBox[{"-", 
       FractionBox["500", "299"]}], ",", 
      RowBox[{"-", 
       FractionBox["768", "493"]}]}], "}"}]}], ",", 
   RowBox[{"p3E", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["2034", "1147"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.958134345795117*^9, {3.9581353172179813`*^9, 3.958135335305838*^9}, 
   3.9581558979303083`*^9, 3.95816110562037*^9, 3.958164947913546*^9, 
   3.958191030454133*^9, 3.9581967487408743`*^9, 3.958196882009365*^9, 
   3.95820427399205*^9, {3.958204347067046*^9, 3.9582044092224503`*^9}, 
   3.9582091006085463`*^9, 3.958209143096088*^9, 3.9582093393693457`*^9, 
   3.958213329730462*^9},
 CellLabel->
  "Out[820]=",ExpressionUUID->"52bf297c-0eed-4b21-88d5-ba0a0efcf889"]
}, Open  ]],

Cell["\<\
See how some small off-shellness in the external violates the subtraction\
\>", "Text",
 CellChangeTimes->{{3.9582091125176077`*^9, 
  3.9582091393437853`*^9}},ExpressionUUID->"a2f47a67-1bce-45b4-a763-\
35c10f3f52da"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Tri1Lnumerics", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Tri1Lnumerics", "\[LeftDoubleBracket]", 
      RowBox[{";;", 
       RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"p3E", "->", 
       RowBox[{
        RowBox[{"Evaluate", "[", 
         RowBox[{"(", 
          RowBox[{"p3E", "/.", "Tri1Lnumerics"}], ")"}], "]"}], "+", 
        FractionBox["1", "3"]}]}], "}"}]}], "]"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.958202251918668*^9, 3.958202270347703*^9}, {
  3.958204219035693*^9, 3.958204283299871*^9}, {3.958204316562447*^9, 
  3.9582043439850883`*^9}, {3.9582043893446283`*^9, 3.958204395206362*^9}, {
  3.958209093790915*^9, 3.958209110909317*^9}},
 CellLabel->
  "In[821]:=",ExpressionUUID->"9eb9aeb1-155c-40bc-9e6d-2e476cf9be92"],

Cell[BoxData[
 RowBox[{
  RowBox[{"subtractionNumerics", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{"Tri1Lnumerics", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mUV", "->", "10"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "[", "1", "]"}], "[", "0", "]"}], "->", 
        RowBox[{"(", 
         RowBox[{"p1E", "/.", "Tri1Lnumerics"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "[", "2", "]"}], "[", "0", "]"}], "->", 
        RowBox[{"(", 
         RowBox[{"p2E", "/.", "Tri1Lnumerics"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"p", "[", "3", "]"}], "[", "0", "]"}], "->", 
        RowBox[{"(", 
         RowBox[{"p3E", "/.", "Tri1Lnumerics"}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"p", "[", "1", "]"}], "->", 
        RowBox[{"(", 
         RowBox[{"p1", "/.", "Tri1Lnumerics"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "2", "]"}], "->", 
        RowBox[{"(", 
         RowBox[{"p2", "/.", "Tri1Lnumerics"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"p", "[", "3", "]"}], "->", 
        RowBox[{"(", 
         RowBox[{"p3", "/.", "Tri1Lnumerics"}], ")"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.958158743481393*^9},
 CellLabel->
  "In[822]:=",ExpressionUUID->"706e0a8e-aff5-49cd-8d48-644e43ff98a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UVExternalsDefinition", "=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
     "externalEdges", ",", "externalEdgesIDs", ",", "momLabels", ",", 
      "signatures"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"externalEdges", "=", 
      RowBox[{"cFFGetExternalEdges", "[", "Tri1L", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"externalEdgesIDs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"(", 
           RowBox[{"ee", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"DirectedEdge", "[", 
               RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", "props"}],
              "}"}]}], ")"}], "]"}], "[", "\"\<id\>\"", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"ee", ",", "externalEdges"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"momLabels", "=", 
      RowBox[{"cFFGenerateMomentaLabels", "[", "Tri1L", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"signatures", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#", "[", "\"\<id\>\"", "]"}], "->", 
              RowBox[{"#", "[", "\"\<sig\>\"", "]"}]}], ")"}], "&"}], ")"}], 
          "[", 
          RowBox[{"e", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"DirectedEdge", "[", 
              RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", "props"}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"e", ",", 
           RowBox[{"EdgeList", "[", "Tri1L", "]"}]}], "}"}]}], "]"}], "]"}]}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "[", "eeID", "]"}], "->", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"signatures", "[", "eeID", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", ".", " ", 
              RowBox[{"momLabels", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{
               RowBox[{"signatures", "[", "eeID", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], " ", ".", " ", 
              RowBox[{"momLabels", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"eeID", ",", "externalEdgesIDs"}], "}"}]}], "]"}], ","}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", 
           RowBox[{
           "externalEdgesIDs", "\[LeftDoubleBracket]", "ieeID", 
            "\[RightDoubleBracket]"}], "]"}], "->", 
          RowBox[{"p", "[", "ieeID", "]"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"ieeID", ",", 
           RowBox[{"Length", "[", "externalEdgesIDs", "]"}]}], "}"}]}], "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"qE", "[", 
           RowBox[{
           "externalEdgesIDs", "\[LeftDoubleBracket]", "ieeID", 
            "\[RightDoubleBracket]"}], "]"}], "->", 
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<p\>\"", "<>", 
            RowBox[{"ToString", "[", "ieeID", "]"}], "<>", "\"\<E\>\""}], 
           "]"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"ieeID", ",", 
           RowBox[{"Length", "[", "externalEdgesIDs", "]"}]}], "}"}]}], 
        "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.958159119099805*^9, 3.9581591286708927`*^9}, {
  3.958159170714953*^9, 3.958159257992695*^9}, {3.958159331451829*^9, 
  3.958159398841855*^9}, {3.958159447916822*^9, 3.958159557388871*^9}, {
  3.9581596126259623`*^9, 3.958159619338222*^9}, {3.958159662863062*^9, 
  3.9581597206300497`*^9}, {3.9581597983104897`*^9, 3.958159828128622*^9}, {
  3.958160356625655*^9, 3.958160360253981*^9}, {3.958160406452523*^9, 
  3.958160498575692*^9}},
 CellLabel->
  "In[823]:=",ExpressionUUID->"63fdb82e-4b88-444f-8c7a-23e1af2f029d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"q", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"p", "[", "1", "]"}]}], ",", 
   RowBox[{
    RowBox[{"q", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"p", "[", "2", "]"}]}], ",", 
   RowBox[{
    RowBox[{"q", "[", "6", "]"}], "\[Rule]", 
    RowBox[{"p", "[", "3", "]"}]}], ",", 
   RowBox[{
    RowBox[{"qE", "[", "0", "]"}], "\[Rule]", "p1E"}], ",", 
   RowBox[{
    RowBox[{"qE", "[", "1", "]"}], "\[Rule]", "p2E"}], ",", 
   RowBox[{
    RowBox[{"qE", "[", "6", "]"}], "\[Rule]", "p3E"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9581592205368834`*^9, 3.95815925849531*^9, 3.958159721770104*^9, 
   3.958159829201921*^9, 3.9581604307987623`*^9, {3.958160478914406*^9, 
   3.958160512810739*^9}, 3.9581611056306458`*^9, 3.9581649479251213`*^9, 
   3.958191030462859*^9, 3.9581967487521143`*^9, 3.958196887743519*^9, 
   3.9582043618176603`*^9, 3.958204409240945*^9, 3.958209145936203*^9, 
   3.958209339375165*^9, 3.958213329739296*^9},
 CellLabel->
  "Out[823]=",ExpressionUUID->"6fbe13e5-98a6-47a9-913f-3fb0d65c6862"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tri1Lnumerator", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], ",", 
       RowBox[{"q", "[", "4", "]"}]}], "]"}]}], 
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "3", "]"}], ",", 
      RowBox[{"q", "[", "6", "]"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.958134327618985*^9, 3.958134335449615*^9}, 
   3.958135314563027*^9},
 CellLabel->
  "In[824]:=",ExpressionUUID->"c0dc6d24-8c48-4f22-932b-a67f1b985932"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SubtractionData", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{"\"\<I\>\"", "->", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<cFFexpr\>\"", "->", 
        RowBox[{"ConvertCFFFormat", "[", 
         RowBox[{
          RowBox[{"CrossFreeFamilyLTD", "[", 
           RowBox[{"Tri1L", ",", 
            RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], ",",
           "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<num\>\"", "->", "Tri1Lnumerator"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<graph\>\"", "->", "Tri1L"}]}], "\[IndentingNewLine]", 
      "|>"}]}], "\[IndentingNewLine]", "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.937049084486958*^9, 3.937049095191963*^9}, {
   3.937049129499942*^9, 3.937049154787147*^9}, {3.937049200738882*^9, 
   3.937049202981597*^9}, {3.937049271409387*^9, 3.937049322821371*^9}, 
   3.937049353280404*^9, {3.937049416942164*^9, 3.937049420095997*^9}, {
   3.937463289326635*^9, 3.937463392234503*^9}, 3.937463665354303*^9, {
   3.958155823085237*^9, 3.9581558245607347`*^9}, 3.958156535047166*^9},
 CellLabel->
  "In[825]:=",ExpressionUUID->"1b73b34e-3cc1-47bf-81f6-6e2a7362d40b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComputeOSEReplacements", "[", 
  RowBox[{"Tri1L", ",", 
   RowBox[{"Tri1Lnumerics", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Rule", "[", 
       RowBox[{"k1", ",", "a_"}], "]"}], "->", 
      RowBox[{"Rule", "[", 
       RowBox[{"k1", ",", 
        RowBox[{
         FractionBox["1", "\[Lambda]"], "a"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.9581476718184547`*^9},
 CellLabel->
  "In[826]:=",ExpressionUUID->"fb6a88a2-3c49-4d67-befe-85019d85f08e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"OSE", "[", "0", "]"}], "\[RuleDelayed]", 
    FractionBox[
     SqrtBox["10080339"], "2431"]}], ",", 
   RowBox[{
    RowBox[{"OSE", "[", "1", "]"}], "\[RuleDelayed]", 
    FractionBox[
     RowBox[{"3", " ", 
      SqrtBox["37688387"]}], "12673"]}], ",", 
   RowBox[{
    RowBox[{"OSE", "[", "2", "]"}], "\[RuleDelayed]", 
    SqrtBox[
     RowBox[{"1", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["19", "23"]}], "+", 
         FractionBox["3", 
          RowBox[{"5", " ", "\[Lambda]"}]]}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["17", "19"]}], "+", 
         FractionBox["2", 
          RowBox[{"3", " ", "\[Lambda]"}]]}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["23", "29"]}], "+", 
         FractionBox["5", 
          RowBox[{"7", " ", "\[Lambda]"}]]}], ")"}], "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"OSE", "[", "3", "]"}], "\[RuleDelayed]", 
    SqrtBox[
     RowBox[{"4", "+", 
      FractionBox["14494", 
       RowBox[{"11025", " ", 
        SuperscriptBox["\[Lambda]", "2"]}]]}]]}], ",", 
   RowBox[{
    RowBox[{"OSE", "[", "4", "]"}], "\[RuleDelayed]", 
    SqrtBox[
     RowBox[{"9", "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["500", "299"]}], "+", 
         FractionBox["3", 
          RowBox[{"5", " ", "\[Lambda]"}]]}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["320", "209"]}], "+", 
         FractionBox["2", 
          RowBox[{"3", " ", "\[Lambda]"}]]}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["768", "493"]}], "+", 
         FractionBox["5", 
          RowBox[{"7", " ", "\[Lambda]"}]]}], ")"}], "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"OSE", "[", "6", "]"}], "\[RuleDelayed]", 
    FractionBox[
     RowBox[{"4", " ", 
      SqrtBox["448907742480209"]}], "30808063"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.958147659116292*^9, 3.958147672214253*^9}, 
   3.958155897810979*^9, 3.9581611036119823`*^9, 3.958164947801277*^9, 
   3.958191030325671*^9, 3.958191064330666*^9, 3.9581967487807693`*^9, 
   3.958204361877433*^9, 3.958204409298108*^9, 3.958209153368867*^9, 
   3.958209339405984*^9, 3.958213329753196*^9},
 CellLabel->
  "Out[826]=",ExpressionUUID->"a79409ae-57c7-425f-897c-e1b20c95f628"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeList", "[", 
  RowBox[{"GraphDifference", "[", 
   RowBox[{"Tri1L", ",", 
    RowBox[{"DirectedGraph", "[", 
     RowBox[{"cFFGetExternalEdges", "[", "Tri1L", "]"}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.958161353869793*^9, 3.958161376629279*^9}},
 CellLabel->
  "In[827]:=",ExpressionUUID->"4357af1e-3785-49c9-9b0a-8eaf9d0bd06a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", "2", 
     RowBox[{"\[LeftAssociation]", 
       RowBox[{
         RowBox[{"\"id\"", "\[Rule]", "2"}], ",", 
         RowBox[{"\"sig\"", "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "1", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", 
                   RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"\"mass\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{"2", "3", 
     RowBox[{"\[LeftAssociation]", 
       RowBox[{
         RowBox[{"\"id\"", "\[Rule]", "3"}], ",", 
         RowBox[{"\"sig\"", "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "1", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"\"mass\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}]},
    "DirectedEdge"], ",", 
   TemplateBox[{"3", "1", 
     RowBox[{"\[LeftAssociation]", 
       RowBox[{
         RowBox[{"\"id\"", "\[Rule]", "4"}], ",", 
         RowBox[{"\"sig\"", "\[Rule]", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "1", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"\"mass\"", "\[Rule]", "3"}]}], "\[RightAssociation]"}]},
    "DirectedEdge"]}], "}"}]], "Output",
 CellChangeTimes->{3.958161376854341*^9, 3.958164947852398*^9, 
  3.958191030392926*^9, 3.958191064344851*^9, 3.958196748787887*^9, 
  3.958204361890416*^9, 3.95820440930372*^9, 3.9582091540953712`*^9, 
  3.9582093394100657`*^9, 3.95821332975534*^9},
 CellLabel->
  "Out[827]=",ExpressionUUID->"fb1a7780-9b15-4f86-9679-8bcd170975c8"]
}, Open  ]],

Cell["Test the new evaluation model against the old one", "Text",
 CellChangeTimes->{{3.958155842267994*^9, 
  3.958155849287951*^9}},ExpressionUUID->"9889a60d-0c80-4496-be49-\
6d6b6a7df728"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
    "ComputeSubtractionTermFromNormalized", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<cFFexpr\>\"", "->", 
         RowBox[{"CrossFreeFamilyLTD", "[", 
          RowBox[{"Tri1L", ",", 
           RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<num\>\"", "->", "Tri1Lnumerator"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<graph\>\"", "->", "Tri1L"}]}], "\[IndentingNewLine]", 
       "|>"}], ",", "\[IndentingNewLine]", "Tri1Lnumerics"}], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], "\[IndentingNewLine]", 
   "-", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<cFFexpr\>\"", "->", 
         RowBox[{"ConvertCFFFormat", "[", 
          RowBox[{
           RowBox[{"CrossFreeFamilyLTD", "[", 
            RowBox[{"Tri1L", ",", 
             RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], 
           ",", "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<num\>\"", "->", "Tri1Lnumerator"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<graph\>\"", "->", "Tri1L"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"\"\<dots\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{"2", "->", "1"}], "|>"}]}]}], "\[IndentingNewLine]", "|>"}],
       ",", "\[IndentingNewLine]", "Tri1Lnumerics"}], 
     RowBox[{"(*", 
      RowBox[{"{", "}"}], "*)"}], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.958136222652734*^9, 3.958136236720389*^9}, {
  3.958146726296548*^9, 3.958146736208617*^9}, {3.958151795642828*^9, 
  3.9581518210230627`*^9}, {3.958153233125638*^9, 3.9581532337006474`*^9}, {
  3.958155851248498*^9, 3.958155867160039*^9}},
 CellLabel->
  "In[828]:=",ExpressionUUID->"79ff8c1e-8ff6-4554-a405-9844099be7db"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.958155898017879*^9, 3.958161105696089*^9, 
  3.95816494797554*^9, 3.958191030511428*^9, 3.9581918953816347`*^9, 
  3.958191971178938*^9, 3.9581920143717957`*^9, 3.958192068992942*^9, 
  3.9581967488757553`*^9, 3.958197234021323*^9, 3.958197901385515*^9, 
  3.9581981561646976`*^9, 3.9582043625546618`*^9, 3.958204409394025*^9, 
  3.958205648500037*^9, 3.9582091685229053`*^9, 3.958209339451232*^9, 
  3.9582133297853403`*^9},
 CellLabel->
  "Out[828]=",ExpressionUUID->"a6bae7ea-4d0f-425a-acab-307c14ad097d"]
}, Open  ]],

Cell["Consistency check", "Text",
 CellChangeTimes->{{3.958162932235862*^9, 
  3.958162943665399*^9}},ExpressionUUID->"e611dadd-7427-4a22-8d81-\
490ec73f5b9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<cFFexpr\>\"", "->", 
       RowBox[{"ConvertCFFFormat", "[", 
        RowBox[{
         RowBox[{"CrossFreeFamilyLTD", "[", 
          RowBox[{"Tri1L", ",", 
           RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], ",", 
         "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<num\>\"", "->", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<graph\>\"", "->", "Tri1L"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<dots\>\"", "->", 
       RowBox[{"<|", "|>"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", "Tri1Lnumerics", "*)"}], 
    RowBox[{"{", "}"}]}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.958197429784232*^9, 3.958197435124991*^9}},
 CellLabel->
  "In[829]:=",ExpressionUUID->"e5070416-ba0d-4e84-975c-eedca399da09"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"8", " ", 
   SuperscriptBox["\[Lambda]", "3"], " ", 
   RowBox[{"OSE", "[", "2", "]"}], " ", 
   RowBox[{"OSE", "[", "3", "]"}], " ", 
   RowBox[{"OSE", "[", "4", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"p1E", "+", 
     RowBox[{"OSE", "[", "2", "]"}], "+", 
     RowBox[{"OSE", "[", "4", "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"p1E", "+", "p2E", "+", 
     RowBox[{"OSE", "[", "3", "]"}], "+", 
     RowBox[{"OSE", "[", "4", "]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.9581974207989197`*^9, 3.958197455224963*^9, 
  3.958204362594935*^9, 3.958204409407865*^9, 3.958205400113591*^9, 
  3.958205483607856*^9, 3.958205684826503*^9, 3.958209172340515*^9, 
  3.958209339469153*^9, 3.958213329793757*^9},
 CellLabel->
  "Out[829]=",ExpressionUUID->"c5834b06-ffb9-465a-a8a3-be494a0c421a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<cFFexpr\>\"", "->", 
       RowBox[{"ConvertCFFFormat", "[", 
        RowBox[{
         RowBox[{"CrossFreeFamilyLTD", "[", 
          RowBox[{"Tri1L", ",", 
           RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], ",", 
         "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<num\>\"", "->", "1"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<graph\>\"", "->", "Tri1L"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<dots\>\"", "->", 
       RowBox[{"<|", "|>"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "}"}]}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.958213352068288*^9, 3.958213352560192*^9}},
 CellLabel->
  "In[860]:=",ExpressionUUID->"97535802-e35a-4e21-abf8-c18afdef3afe"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"8", " ", 
   SuperscriptBox["\[Lambda]", "3"], " ", 
   RowBox[{"OSE", "[", "2", "]"}], " ", 
   RowBox[{"OSE", "[", "3", "]"}], " ", 
   RowBox[{"OSE", "[", "4", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"p1E", "+", 
     RowBox[{"OSE", "[", "2", "]"}], "+", 
     RowBox[{"OSE", "[", "4", "]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"p1E", "+", "p2E", "+", 
     RowBox[{"OSE", "[", "3", "]"}], "+", 
     RowBox[{"OSE", "[", "4", "]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{3.958213353207034*^9},
 CellLabel->
  "Out[860]=",ExpressionUUID->"46a5a533-a745-4371-872d-f4f1f393695c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<cFFexpr\>\"", "->", 
       RowBox[{"ConvertCFFFormat", "[", 
        RowBox[{
         RowBox[{"CrossFreeFamilyLTD", "[", 
          RowBox[{"Tri1L", ",", 
           RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], ",", 
         "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<num\>\"", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"SP4", "[", 
          RowBox[{
           RowBox[{"q", "[", "4", "]"}], ",", 
           RowBox[{"q", "[", "4", "]"}]}], "]"}], "-", 
         SuperscriptBox["3", "2"]}], ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<graph\>\"", "->", "Tri1L"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<dots\>\"", "->", 
       RowBox[{"<|", 
        RowBox[{"4", "->", "2"}], "|>"}]}]}], "\[IndentingNewLine]", "|>"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", "}"}]}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", 
    RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.958213361425785*^9, 3.9582133814484167`*^9}, {
  3.9582134370268517`*^9, 3.958213440520156*^9}, {3.958213557248687*^9, 
  3.958213565505054*^9}},
 CellLabel->
  "In[871]:=",ExpressionUUID->"c7534b21-8ef0-4e46-bcce-15870b0aa260"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"OSE", "[", "2", "]"}], " ", 
     RowBox[{"OSE", "[", "3", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"p1E", "+", 
       RowBox[{"OSE", "[", "2", "]"}], "+", 
       RowBox[{"OSE", "[", "4", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"p1E", "+", "p2E", "+", 
       RowBox[{"OSE", "[", "3", "]"}], "+", 
       RowBox[{"OSE", "[", "4", "]"}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "9"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "-", "p1", "-", "p2"}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{"k1", "-", "p1", "-", "p2"}], ")"}]}], "+", 
     SuperscriptBox[
      RowBox[{"OSE", "[", "4", "]"}], "2"]}], 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"OSE", "[", "2", "]"}], " ", 
     RowBox[{"OSE", "[", "3", "]"}], " ", 
     RowBox[{"OSE", "[", "4", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"p1E", "+", 
       RowBox[{"OSE", "[", "2", "]"}], "+", 
       RowBox[{"OSE", "[", "4", "]"}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"p1E", "+", "p2E", "+", 
        RowBox[{"OSE", "[", "3", "]"}], "+", 
        RowBox[{"OSE", "[", "4", "]"}]}], ")"}], "2"]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "9"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "-", "p1", "-", "p2"}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{"k1", "-", "p1", "-", "p2"}], ")"}]}], "+", 
     SuperscriptBox[
      RowBox[{"OSE", "[", "4", "]"}], "2"]}], 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"OSE", "[", "2", "]"}], " ", 
     RowBox[{"OSE", "[", "3", "]"}], " ", 
     RowBox[{"OSE", "[", "4", "]"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"p1E", "+", 
        RowBox[{"OSE", "[", "2", "]"}], "+", 
        RowBox[{"OSE", "[", "4", "]"}]}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"p1E", "+", "p2E", "+", 
       RowBox[{"OSE", "[", "3", "]"}], "+", 
       RowBox[{"OSE", "[", "4", "]"}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "9"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k1", "-", "p1", "-", "p2"}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{"k1", "-", "p1", "-", "p2"}], ")"}]}], "+", 
     SuperscriptBox[
      RowBox[{"OSE", "[", "4", "]"}], "2"]}], 
    RowBox[{"8", " ", 
     SuperscriptBox["\[Lambda]", "3"], " ", 
     RowBox[{"OSE", "[", "2", "]"}], " ", 
     RowBox[{"OSE", "[", "3", "]"}], " ", 
     SuperscriptBox[
      RowBox[{"OSE", "[", "4", "]"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"p1E", "+", 
       RowBox[{"OSE", "[", "2", "]"}], "+", 
       RowBox[{"OSE", "[", "4", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"p1E", "+", "p2E", "+", 
       RowBox[{"OSE", "[", "3", "]"}], "+", 
       RowBox[{"OSE", "[", "4", "]"}]}], ")"}]}]]}], 
  RowBox[{"2", " ", 
   RowBox[{"OSE", "[", "4", "]"}]}]]], "Output",
 CellChangeTimes->{{3.95821336219276*^9, 3.958213381753059*^9}, {
  3.95821343787307*^9, 3.958213440872835*^9}, {3.958213558721532*^9, 
  3.9582135662538557`*^9}},
 CellLabel->
  "Out[871]=",ExpressionUUID->"c7fd4cc1-ec55-4426-a49a-0ac8fe9b1e23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<cFFexpr\>\"", "->", 
         RowBox[{"ConvertCFFFormat", "[", 
          RowBox[{
           RowBox[{"CrossFreeFamilyLTD", "[", 
            RowBox[{"Tri1L", ",", 
             RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], 
           ",", "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<num\>\"", "->", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<graph\>\"", "->", "Tri1L"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"\"\<dots\>\"", "->", 
         RowBox[{"<|", "|>"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
      "\[IndentingNewLine]", "Tri1Lnumerics"}], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], "\[IndentingNewLine]", 
   "-", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<cFFexpr\>\"", "->", 
         RowBox[{"ConvertCFFFormat", "[", 
          RowBox[{
           RowBox[{"CrossFreeFamilyLTD", "[", 
            RowBox[{"Tri1L", ",", 
             RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], 
           ",", "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<num\>\"", "->", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"SP4", "[", 
             RowBox[{
              RowBox[{"q", "[", "4", "]"}], ",", 
              RowBox[{"q", "[", "4", "]"}]}], "]"}], "-", 
            SuperscriptBox["3", "2"]}], ")"}], "3"]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<graph\>\"", "->", "Tri1L"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"\"\<dots\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"4", "->", "4"}], ",", 
           RowBox[{"3", "->", "1"}]}], "|>"}]}]}], "\[IndentingNewLine]", 
       "|>"}], ",", "\[IndentingNewLine]", "Tri1Lnumerics"}], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.958205458656869*^9, 3.9582054766601963`*^9}, {
  3.95820710550771*^9, 3.958207125005866*^9}, {3.958214035687478*^9, 
  3.958214043888235*^9}},
 CellLabel->
  "In[873]:=",ExpressionUUID->"5c0a5c34-2ae7-44d7-b846-4919d1daebc9"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.958205468081113*^9, 3.958205477266738*^9}, 
   3.958205655051578*^9, {3.9582071081063023`*^9, 3.958207126097166*^9}, {
   3.958209179778503*^9, 3.958209183789865*^9}, 3.958209339510778*^9, 
   3.9582133298291616`*^9, {3.958214038548931*^9, 3.958214044252146*^9}},
 CellLabel->
  "Out[873]=",ExpressionUUID->"02fd81c1-2024-4b13-ba34-d1bf2cef0398"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<cFFexpr\>\"", "->", 
         RowBox[{"ConvertCFFFormat", "[", 
          RowBox[{
           RowBox[{"CrossFreeFamilyLTD", "[", 
            RowBox[{"Tri1L", ",", 
             RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], 
           ",", "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<num\>\"", "->", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<graph\>\"", "->", "Tri1L"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"\"\<dots\>\"", "->", 
         RowBox[{"<|", "|>"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
      "\[IndentingNewLine]", "Tri1Lnumerics"}], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], "\[IndentingNewLine]", 
   "-", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<cFFexpr\>\"", "->", 
         RowBox[{"ConvertCFFFormat", "[", 
          RowBox[{
           RowBox[{"CrossFreeFamilyLTD", "[", 
            RowBox[{"Tri1L", ",", 
             RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], 
           ",", "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<num\>\"", "->", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"SP4", "[", 
              RowBox[{
               RowBox[{"q", "[", "4", "]"}], ",", 
               RowBox[{"q", "[", "4", "]"}]}], "]"}], "-", 
             SuperscriptBox["3", "2"]}], ")"}], "2"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"SP4", "[", 
              RowBox[{
               RowBox[{"q", "[", "3", "]"}], ",", 
               RowBox[{"q", "[", "3", "]"}]}], "]"}], "-", 
             SuperscriptBox["2", "2"]}], ")"}], "3"]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<graph\>\"", "->", "Tri1L"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"\"\<dots\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"4", "->", "3"}], ",", 
           RowBox[{"3", "->", "4"}]}], "|>"}]}]}], "\[IndentingNewLine]", 
       "|>"}], ",", "\[IndentingNewLine]", "Tri1Lnumerics"}], "]"}], "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9581975449529867`*^9, 3.958197564407848*^9}, {
  3.958197744949891*^9, 3.958197756276997*^9}, {3.958198126885174*^9, 
  3.958198132689054*^9}, {3.9581981667549667`*^9, 3.9581981931022053`*^9}, {
  3.95820919108996*^9, 3.958209197235231*^9}, {3.95821404931987*^9, 
  3.9582140721297417`*^9}},
 CellLabel->
  "In[875]:=",ExpressionUUID->"b839aa68-8d08-4118-9266-010446063b11"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.958197556851091*^9, 3.958197564740265*^9}, {
   3.958197749894074*^9, 3.958197756610787*^9}, {3.958198125011177*^9, 
   3.958198133014262*^9}, {3.958198165291157*^9, 3.9581981978246717`*^9}, 
   3.958204374715115*^9, 3.958204413750421*^9, {3.958209189613017*^9, 
   3.958209198061532*^9}, 3.95820933975313*^9, 3.958213330061912*^9, {
   3.958214065678253*^9, 3.9582140728154697`*^9}},
 CellLabel->
  "Out[875]=",ExpressionUUID->"bb789598-20e2-4b93-b5cf-daba0d3dd6cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tri1LUVTopology", "=", 
   RowBox[{"DirectedGraph", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"1", ",", "2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"2", ",", "3", ",", "3"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"3", ",", "1", ",", "4"}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"EdgeLabels", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tri1LUVTopology", "=", 
   RowBox[{"AssignSignatures", "[", 
    RowBox[{"Tri1LUVTopology", ",", 
     RowBox[{"masses", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"2", "->", "mUV"}], ",", 
        RowBox[{"3", "->", "mUV"}], ",", 
        RowBox[{"4", "->", "mUV"}]}], "|>"}]}], ",", 
     RowBox[{"lmb", "->", 
      RowBox[{"{", "3", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Tri1LUVTopology", "=", 
  RowBox[{"DirectedGraph", "[", 
   RowBox[{"Tri1LUVTopology", ",", 
    RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "275"}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<HighDimensionalEmbedding\>\""}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"EdgeLabels", "->", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"e", "->", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<q\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"e", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"DirectedEdge", "[", 
                    RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
                   "props"}], "}"}]}], ")"}], "[", "\"\<id\>\"", "]"}], ")"}],
              "]"}], "<>", "\"\<|\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"e", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"DirectedEdge", "[", 
                    RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
                   "props"}], "}"}]}], ")"}], "[", "\"\<mass\>\"", "]"}], 
              ")"}], "]"}]}], ")"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "20"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", 
         RowBox[{"EdgeList", "[", "Tri1LUVTopology", "]"}]}], "}"}]}], 
      "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9581563072849894`*^9, 3.95815634061907*^9}},
 CellLabel->
  "In[832]:=",ExpressionUUID->"c64629b9-cdd8-4067-8307-32403ee538c3"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 
      3}, {{{1, 2}, {2, 3}, {3, 1}}, 
       Null, {<|"id" -> 2, "sig" -> {{1}, {}}, "mass" -> $CellContext`mUV|>, <|
        "id" -> 3, "sig" -> {{1}, {}}, "mass" -> $CellContext`mUV|>, <|
        "id" -> 4, "sig" -> {{1}, {}}, "mass" -> $CellContext`mUV|>}}, {
      EdgeLabels -> {
        DirectedEdge[
          2, 3, <|"id" -> 3, "sig" -> {{1}, {}}, 
            "mass" -> $CellContext`mUV|>] -> Style["q3|mUV", FontSize -> 20], 
         DirectedEdge[
          3, 1, <|"id" -> 4, "sig" -> {{1}, {}}, 
            "mass" -> $CellContext`mUV|>] -> Style["q4|mUV", FontSize -> 20], 
         DirectedEdge[
          1, 2, <|"id" -> 2, "sig" -> {{1}, {}}, 
            "mass" -> $CellContext`mUV|>] -> Style["q2|mUV", FontSize -> 20]},
        GraphLayout -> "HighDimensionalEmbedding", ImageSize -> 275, 
       VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[{{0.9999451693655121, 0.01047178411624522}, {
          0.49090375361514127`, 0.8712138111201891}}, 0.01272930200602297], 
         InsetBox[
          StyleBox["\<\"q2|mUV\"\>",
           StripOnInput->False,
           FontSize->20], {0.7454244614903267, 0.4408427976182172}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.49090375361514127`, 0.8712138111201891}, {0., 0.}}, 
          0.01272930200602297], InsetBox[
          StyleBox["\<\"q3|mUV\"\>",
           StripOnInput->False,
           FontSize->20], {0.24545187680757063, 0.43560690556009457}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 0.}, {0.9999451693655121, 0.01047178411624522}}, 
          0.01272930200602297], InsetBox[
          StyleBox["\<\"q4|mUV\"\>",
           StripOnInput->False,
           FontSize->20], {0.49997258468275607, 0.00523589205812261}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.9999451693655121, 0.01047178411624522}, 
          0.01272930200602297], 
         InsetBox["1", 
          Offset[{2, 2}, {1.0126744713715352, 0.02320108612226819}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.49090375361514127`, 0.8712138111201891}, 
          0.01272930200602297], 
         InsetBox["2", 
          Offset[{2, 2}, {0.5036330556211642, 0.8839431131262121}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.01272930200602297], 
         InsetBox["3", 
          Offset[{2, 2}, {0.01272930200602297, 0.01272930200602297}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->275]], "Output",
 CellChangeTimes->{3.958156343355255*^9, 3.9581611057158127`*^9, 
  3.958164948018998*^9, 3.958191030549685*^9, 3.958196753267905*^9, 
  3.958198351863337*^9, 3.958204418117341*^9, 3.9582092067218647`*^9, 
  3.958209339771777*^9, 3.958213330071084*^9},
 CellLabel->
  "Out[834]=",ExpressionUUID->"8210b271-0dc2-41c2-a46f-13109ddfd30c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"IRes", "=", 
   RowBox[{"ComputeSubtractionTerm", "[", 
    RowBox[{
     RowBox[{"SubtractionData", "[", "\"\<I\>\"", "]"}], ",", 
     "Tri1Lnumerics"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.958156566059558*^9, 3.9581565722845917`*^9}},
 CellLabel->
  "In[835]:=",ExpressionUUID->"6e3de9a9-81cc-477d-9e0f-7083b83919e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SubtractionContribs", "=", 
   RowBox[{"<|", "|>"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9581566068867817`*^9, 3.958156610051177*^9}, 
   3.9581600053778267`*^9},
 CellLabel->
  "In[836]:=",ExpressionUUID->"5e1068f2-259d-4f37-b367-4be6395a4ef1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerator decomposition", "Subsection",
 CellChangeTimes->{{3.958132090997794*^9, 3.95813211622326*^9}, {
  3.958134692579568*^9, 3.958134693098209*^9}, {3.9581347677457237`*^9, 
  3.9581347774900017`*^9}},ExpressionUUID->"edf03b76-6a46-4a58-8bab-\
86bc3e5c0fdf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tri1L4DExpr", "=", 
  RowBox[{
   RowBox[{"Num", "[", "Tri1Lnumerator", "]"}], "/", 
   RowBox[{"Times", "@@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["\[Lambda]", "2"]], 
       RowBox[{"Denom", "[", 
        RowBox[{"ie", ",", 
         RowBox[{
          RowBox[{"SP4", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "[", "ie", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"q", "[", "ie", "]"}], "[", "\[Lambda]", "]"}]}], "]"}], 
          "-", 
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], 
           SuperscriptBox[
            RowBox[{"m", "[", "ie", "]"}], "2"]}], "+", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"m", "[", "ie", "]"}], "2"], "-", 
            SuperscriptBox["mUV", "2"]}], ")"}]}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"ie", ",", 
        RowBox[{"GetVirtualPropagatorsIDs", "[", "Tri1L", "]"}]}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.936946803790749*^9, 3.936946832035503*^9}, {
   3.936946895338952*^9, 3.9369468992946863`*^9}, {3.936946959654163*^9, 
   3.936946988010569*^9}, {3.9369472460524197`*^9, 3.936947290630114*^9}, {
   3.936947321676488*^9, 3.9369473314266453`*^9}, {3.936947396935081*^9, 
   3.936947412784951*^9}, {3.936947454598271*^9, 3.936947602395953*^9}, {
   3.9369489682221117`*^9, 3.936948971549684*^9}, {3.9370292469896107`*^9, 
   3.93702927281043*^9}, {3.937030207837337*^9, 3.9370302136652403`*^9}, 
   3.937036805549721*^9, {3.9370369019415617`*^9, 3.937036969501895*^9}, {
   3.937037045275214*^9, 3.937037051407031*^9}, 3.937037383797166*^9, {
   3.937039055550873*^9, 3.937039067084622*^9}, {3.9370396726542253`*^9, 
   3.937039674270298*^9}},
 CellLabel->
  "In[837]:=",ExpressionUUID->"64f4bbd0-1333-40e4-873d-8b96bf20e7c7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[Lambda]", "6"], " ", 
   RowBox[{"Num", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"SP4", "[", 
       RowBox[{
        RowBox[{"q", "[", "2", "]"}], ",", 
        RowBox[{"q", "[", "4", "]"}]}], "]"}]}], " ", 
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], ",", 
       RowBox[{"q", "[", "6", "]"}]}], "]"}]}], "]"}]}], 
  RowBox[{
   RowBox[{"Denom", "[", 
    RowBox[{"2", ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["mUV", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"m", "[", "2", "]"}], "2"], "-", 
      RowBox[{
       SuperscriptBox["\[Lambda]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"]}], "+", 
      RowBox[{"SP4", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
        RowBox[{
         RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
    "]"}], " ", 
   RowBox[{"Denom", "[", 
    RowBox[{"3", ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["mUV", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"m", "[", "3", "]"}], "2"], "-", 
      RowBox[{
       SuperscriptBox["\[Lambda]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"]}], "+", 
      RowBox[{"SP4", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
        RowBox[{
         RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
    "]"}], " ", 
   RowBox[{"Denom", "[", 
    RowBox[{"4", ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["mUV", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"m", "[", "4", "]"}], "2"], "-", 
      RowBox[{
       SuperscriptBox["\[Lambda]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"]}], "+", 
      RowBox[{"SP4", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
        RowBox[{
         RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
    "]"}]}]]], "Output",
 CellChangeTimes->{
  3.936947293132318*^9, 3.936947331833436*^9, {3.93694750678907*^9, 
   3.936947531548019*^9}, 3.9369475719538813`*^9, 3.936947602800069*^9, 
   3.9369478068404083`*^9, 3.936948972218997*^9, 3.937029285216514*^9, 
   3.937030214112341*^9, 3.9370368063227053`*^9, 3.937036925146628*^9, {
   3.937036957396337*^9, 3.9370369705825233`*^9}, 3.937037053759108*^9, 
   3.937037384113329*^9, 3.937039067591585*^9, 3.937039674756165*^9, 
   3.937388599555422*^9, 3.937388751518136*^9, 3.937388806815208*^9, 
   3.937391027227666*^9, 3.93741453019767*^9, 3.9374910607042637`*^9, 
   3.937491103794887*^9, 3.937491829270851*^9, 3.937491873537867*^9, 
   3.93749220035938*^9, {3.93749226041404*^9, 3.937492284911502*^9}, 
   3.937561465917622*^9, 3.937561500161749*^9, 3.9375620969654503`*^9, 
   3.937562317852468*^9, 3.9375624291422987`*^9, 3.9379008349937487`*^9, 
   3.937990991761993*^9, 3.9380049442218847`*^9, 3.938005569375675*^9, 
   3.938025391517819*^9, 3.93802543703228*^9, 3.938076717416769*^9, 
   3.9380777584844847`*^9, 3.9380797562235126`*^9, 3.938079956683771*^9, 
   3.952759911554142*^9, 3.9578641146559553`*^9, 3.957866746568266*^9, 
   3.957866858491022*^9, 3.9581143497861557`*^9, 3.958115688242429*^9, {
   3.9581157689446783`*^9, 3.9581157925350237`*^9}, 3.958115916525784*^9, 
   3.958134471743383*^9, 3.95815589803218*^9, {3.958161105725101*^9, 
   3.958161123137239*^9}, 3.958164948023802*^9, 3.958191030555025*^9, 
   3.95819675327538*^9, 3.958204418164393*^9, 3.9582092257370033`*^9, 
   3.958209339792912*^9, 3.95821333008252*^9},
 CellLabel->
  "Out[837]=",ExpressionUUID->"5269402b-ea52-4bb7-9336-954e34386ec5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tri1L4DExprWithFullLambdaDep", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", "\[Lambda]"], ")"}], "4"], "Tri1L4DExpr"}], "/.", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Num", "[", "x__", "]"}], ":>", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "\[IndentingNewLine]", "/.", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"q", "[", "ie", "]"}], "->", 
              RowBox[{
               FractionBox["1", "\[Lambda]"], 
               RowBox[{
                RowBox[{"q", "[", "ie", "]"}], "[", "\[Lambda]", "]"}]}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"ie", ",", 
               RowBox[{"GetVirtualPropagatorsIDs", "[", "Tri1L", "]"}]}], 
              "}"}]}], "]"}]}], "\[IndentingNewLine]", "/.", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"SP4", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "\[Lambda]"], "a_"}], ",", 
              RowBox[{
               FractionBox["1", "\[Lambda]"], "b_"}]}], "]"}], ":>", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox["\[Lambda]", "2"]], 
             RowBox[{"SP4", "[", 
              RowBox[{"a", ",", "b"}], "]"}]}]}], "\[IndentingNewLine]", 
           "}"}]}], "/.", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SP4", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "\[Lambda]"], "a_"}], ",", "b_"}], "]"}], ":>", 
           RowBox[{
            FractionBox["1", "\[Lambda]"], 
            RowBox[{"SP4", "[", 
             RowBox[{"a", ",", "b"}], "]"}]}]}], "}"}]}], 
        "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", "}"}]}], ",", 
    "\[Lambda]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.937030301242985*^9, 3.93703030956604*^9}, {
   3.9370368104600782`*^9, 3.937036841495908*^9}, {3.9370369938783083`*^9, 
   3.937036998388708*^9}, {3.937037451133869*^9, 3.937037461204133*^9}, {
   3.937038498174294*^9, 3.9370385587194653`*^9}, {3.937038590889254*^9, 
   3.937038629558914*^9}, {3.937038702553616*^9, 3.937038704571164*^9}, {
   3.937038737762142*^9, 3.937038739714877*^9}, {3.9370390008112173`*^9, 
   3.937039035054706*^9}, {3.937039076171998*^9, 3.937039089900243*^9}, {
   3.937039213281199*^9, 3.937039302031128*^9}, {3.937039471155229*^9, 
   3.937039561104347*^9}, {3.937039641955059*^9, 3.9370397048344*^9}, 
   3.937040110234248*^9, {3.937388885534245*^9, 3.9373888962530947`*^9}},
 CellLabel->
  "In[838]:=",ExpressionUUID->"a70ff70e-569c-4b1a-8059-51b6e7b341eb"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "6", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], "]"}], " ", 
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}], 
   RowBox[{"\[Lambda]", " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"], "-", 
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"m", "[", "2", "]"}], "2"]}], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
     "]"}], " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"], "-", 
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"m", "[", "3", "]"}], "2"]}], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
     "]"}], " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"4", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"], "-", 
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"m", "[", "4", "]"}], "2"]}], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
     "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.958134530687481*^9, 3.958155898049965*^9, {3.95816110573451*^9, 
   3.9581611231798058`*^9}, 3.958164948032875*^9, 3.9581910305580397`*^9, 
   3.9581967532876043`*^9, 3.958204418174389*^9, 3.9582092257725687`*^9, 
   3.958209339798615*^9, 3.958213330085832*^9},
 CellLabel->
  "Out[838]=",ExpressionUUID->"aa54603a-8485-43e9-af20-365092adea55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tri1L4DExprWithFullLambdaDepDODsplits", "=", 
  RowBox[{"Association", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"pwr", "->", 
      RowBox[{
       SuperscriptBox["\[Lambda]", "pwr"], 
       RowBox[{"Coefficient", "[", 
        RowBox[{"Tri1L4DExprWithFullLambdaDep", ",", 
         SuperscriptBox["\[Lambda]", "pwr"]}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"pwr", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9370397093114653`*^9, 3.93703978160163*^9}, {
  3.937039835229014*^9, 3.9370398677401533`*^9}, {3.937039925217392*^9, 
  3.937040012611916*^9}},
 CellLabel->
  "In[839]:=",ExpressionUUID->"365e5aaa-042e-4576-bf22-cdb8e6e43964"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{"q", "[", "6", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], "]"}], " ", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}], 
      RowBox[{"\[Lambda]", " ", 
       RowBox[{"Denom", "[", 
        RowBox[{"2", ",", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["mUV", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"m", "[", "2", "]"}], "2"], "-", 
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"m", "[", "2", "]"}], "2"]}], "+", 
          RowBox[{"SP4", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
           "]"}]}]}], "]"}], " ", 
       RowBox[{"Denom", "[", 
        RowBox[{"3", ",", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["mUV", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"m", "[", "3", "]"}], "2"], "-", 
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"m", "[", "3", "]"}], "2"]}], "+", 
          RowBox[{"SP4", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
           "]"}]}]}], "]"}], " ", 
       RowBox[{"Denom", "[", 
        RowBox[{"4", ",", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["mUV", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"m", "[", "4", "]"}], "2"], "-", 
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"m", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"SP4", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], 
           "]"}]}]}], "]"}]}]]}]}], ",", 
   RowBox[{"1", "\[Rule]", "0"}], ",", 
   RowBox[{"2", "\[Rule]", "0"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.958134576199806*^9, 3.958155898066037*^9, {3.9581611057435837`*^9, 
   3.9581611231874733`*^9}, 3.9581649480351067`*^9, 3.958191030564157*^9, 
   3.958196753290827*^9, 3.958204418182809*^9, 3.958209225779273*^9, 
   3.958209339803767*^9, 3.958213330090431*^9},
 CellLabel->
  "Out[839]=",ExpressionUUID->"78500ec1-3676-4c2a-8b22-fe87128ad8fd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AssociateTo", "[", 
   RowBox[{"Tri1L4DExprWithFullLambdaDepDODsplits", ",", 
    RowBox[{"0", "->", 
     RowBox[{"Tri1L4DExprWithFullLambdaDep", "-", 
      RowBox[{"Total", "[", 
       RowBox[{"Values", "[", "Tri1L4DExprWithFullLambdaDepDODsplits", "]"}], 
       "]"}]}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.937040041550993*^9, 3.937040077359967*^9}},
 CellLabel->
  "In[840]:=",ExpressionUUID->"fdabc246-3d0e-49e3-832e-ddc851aa6329"],

Cell[CellGroupData[{

Cell[BoxData["Tri1L4DExprWithFullLambdaDepDODsplits"], "Input",
 CellLabel->
  "In[841]:=",ExpressionUUID->"58df0c52-5f33-41ca-a2fb-cf0de4eee220"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{"q", "[", "6", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], "]"}], " ", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}], 
      RowBox[{"\[Lambda]", " ", 
       RowBox[{"Denom", "[", 
        RowBox[{"2", ",", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["mUV", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"m", "[", "2", "]"}], "2"], "-", 
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"m", "[", "2", "]"}], "2"]}], "+", 
          RowBox[{"SP4", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
           "]"}]}]}], "]"}], " ", 
       RowBox[{"Denom", "[", 
        RowBox[{"3", ",", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["mUV", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"m", "[", "3", "]"}], "2"], "-", 
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"m", "[", "3", "]"}], "2"]}], "+", 
          RowBox[{"SP4", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
           "]"}]}]}], "]"}], " ", 
       RowBox[{"Denom", "[", 
        RowBox[{"4", ",", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["mUV", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"m", "[", "4", "]"}], "2"], "-", 
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"m", "[", "4", "]"}], "2"]}], "+", 
          RowBox[{"SP4", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], 
           "]"}]}]}], "]"}]}]]}]}], ",", 
   RowBox[{"1", "\[Rule]", "0"}], ",", 
   RowBox[{"2", "\[Rule]", "0"}], ",", 
   RowBox[{"0", "\[Rule]", "0"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.958134644174933*^9, 3.958155898080003*^9, {3.9581611057557364`*^9, 
   3.958161123203722*^9}, 3.95816494804333*^9, 3.958191030570717*^9, 
   3.958196753305628*^9, 3.9582044181930237`*^9, 3.958209225791953*^9, 
   3.958209339811281*^9, 3.958213330094298*^9},
 CellLabel->
  "Out[841]=",ExpressionUUID->"440b0504-5703-437c-aa1f-31972c8400d2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Subtraction of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Lambda]", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bb8e40de-ac35-4b40-8fb3-33f38850081f"],
 " leading UV contribution"
}], "Subsection",
 CellChangeTimes->{{3.958132090997794*^9, 3.95813211622326*^9}, {
  3.958134692579568*^9, 3.958134693098209*^9}, {3.9581347677457237`*^9, 
  3.9581347774900017`*^9}, {3.958155973746729*^9, 3.9581559952964783`*^9}, {
  3.958156206855857*^9, 3.9581562136237392`*^9}, {3.958159046197485*^9, 
  3.958159059933051*^9}},ExpressionUUID->"d4fb6bb8-4e73-4a4d-89e0-\
e11689251643"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tri1L4DExprWithFullLambdaDepDODsplits", "[", 
  RowBox[{"-", "1"}], "]"}]], "Input",
 CellLabel->
  "In[842]:=",ExpressionUUID->"da7f6ea9-da4d-41ca-b487-7940f5e5f720"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "6", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], "]"}], " ", 
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}], 
   RowBox[{"\[Lambda]", " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"], "-", 
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"m", "[", "2", "]"}], "2"]}], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
     "]"}], " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"], "-", 
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"m", "[", "3", "]"}], "2"]}], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
     "]"}], " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"4", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"], "-", 
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"m", "[", "4", "]"}], "2"]}], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
     "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.95815610145269*^9, 3.958160025329051*^9, {3.958161105764634*^9, 
   3.958161125885263*^9}, 3.9581649480513563`*^9, 3.958191030574841*^9, 
   3.958196753317264*^9, 3.958198387875177*^9, 3.958204418204513*^9, 
   3.958209230277934*^9, 3.9582093398131027`*^9, 3.9582133300998573`*^9},
 CellLabel->
  "Out[842]=",ExpressionUUID->"660889dc-6338-47fb-8055-1904c86634c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lm1Numerator", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"SeriesCoefficient", "[", 
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"Tri1L4DExprWithFullLambdaDepDODsplits", "[", 
         RowBox[{"-", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Denom", "[", "___", "]"}], ":>", "1"}], "}"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"q", "[", "a_", "]"}], "[", "0", "]"}], ":>", 
     RowBox[{"q", "[", "a", "]"}]}], "}"}], 
   RowBox[{"(*", 
    RowBox[{"/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"q", "[", "4", "]"}], "->", 
        RowBox[{"p", "[", "1", "]"}]}], ",", 
       RowBox[{
        RowBox[{"q", "[", "5", "]"}], "->", 
        RowBox[{"p", "[", "2", "]"}]}], ",", 
       RowBox[{
        RowBox[{"q", "[", "6", "]"}], "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"p", "[", "1", "]"}]}], "-", 
          RowBox[{"p", "[", "2", "]"}]}], ")"}]}]}], "}"}]}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.95815608899298*^9, 3.958156093986764*^9}, {
  3.958156124709654*^9, 3.958156133294928*^9}},
 CellLabel->
  "In[843]:=",ExpressionUUID->"3e4e4cd3-0882-4f06-94f1-c9ee2febad9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"SP4", "[", 
    RowBox[{
     RowBox[{"q", "[", "2", "]"}], ",", 
     RowBox[{"q", "[", "4", "]"}]}], "]"}]}], " ", 
  RowBox[{"SP4", "[", 
   RowBox[{
    RowBox[{"q", "[", "3", "]"}], ",", 
    RowBox[{"q", "[", "6", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.958156133644074*^9, 3.9581600253644247`*^9, {3.9581611057728786`*^9, 
   3.958161125922616*^9}, 3.958164948064176*^9, 3.958191030589315*^9, 
   3.958196753325087*^9, 3.9582044182175303`*^9, 3.9582092303131723`*^9, 
   3.95820933981581*^9, 3.958213330106742*^9},
 CellLabel->
  "Out[843]=",ExpressionUUID->"f7808603-d6d4-4766-b6c1-573e1d8588f3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AssociateTo", "[", 
   RowBox[{"SubtractionContribs", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<\[Lambda]m1CT\>\"", "->", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<cFFexpr\>\"", "->", 
         RowBox[{"ConvertCFFFormat", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CrossFreeFamilyLTD", "[", 
            RowBox[{"Tri1LUVTopology", ",", 
             RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], 
           ",", "\[IndentingNewLine]", "Tri1LUVTopology"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<num\>\"", "->", "lm1Numerator"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<graph\>\"", "->", "Tri1LUVTopology"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<dots\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"2", "->", "1"}], ",", 
           RowBox[{"3", "->", "1"}], ",", 
           RowBox[{"4", "->", "1"}]}], "|>"}]}]}], "\[IndentingNewLine]", 
       "|>"}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.9581560352831717`*^9, 3.9581560427421494`*^9}, {
  3.9581563836090403`*^9, 3.958156452194683*^9}, {3.958156617249312*^9, 
  3.9581566455103207`*^9}, {3.958156704628788*^9, 3.958156707462063*^9}, {
  3.9581620696550817`*^9, 3.958162072829599*^9}, {3.958162106418075*^9, 
  3.958162107076294*^9}},
 CellLabel->
  "In[844]:=",ExpressionUUID->"da934636-e952-4c1f-b9f5-c254b13f24bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SubtractionRes", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"k", "->", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"<|", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\"\<num\>\"", "->", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"s", "[", "\"\<num\>\"", "]"}], "/.", 
                 "UVExternalsDefinition"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<cFFexpr\>\"", "->", 
               RowBox[{"s", "[", "\"\<cFFexpr\>\"", "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<graph\>\"", "->", 
               RowBox[{"s", "[", "\"\<graph\>\"", "]"}]}]}], 
             "\[IndentingNewLine]", "|>"}], ",", "subtractionNumerics"}], 
           "]"}], ")"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", 
           RowBox[{"SubtractionContribs", "[", "k", "]"}]}], "}"}]}], "]"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Keys", "[", "SubtractionContribs", "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9581589395811653`*^9, 3.958158956484603*^9}, {
  3.958159912639484*^9, 3.958159983753015*^9}, {3.9581605283853273`*^9, 
  3.9581605621610947`*^9}},
 CellLabel->
  "In[845]:=",ExpressionUUID->"a941c46e-1312-4f33-8fd8-9574912eceb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AnalyzeSubtraction", "[", 
   RowBox[{"IRes", ",", "SubtractionRes", ",", 
    RowBox[{"-", "1"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.9581608597086897`*^9, 3.958160877260363*^9}, {
  3.958160992467145*^9, 3.95816104568167*^9}},
 CellLabel->
  "In[846]:=",ExpressionUUID->"7cb89a3b-78b9-479b-86d6-7b683775cf29"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"orientation\"\>", "\<\"I\"\>", "\<\"-SumCT\"\>", \
"\<\"I-SumCT\"\>", "\<\"\[Lambda]m1CT#1\"\>"},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "0.21436842464629707`", 
      RowBox[{"-", "0.21436842464629707`"}], "0", "0.21436842464629707`"},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}], "0", "0", "0", "0.`"},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], 
      "0.04575665564204085`", 
      RowBox[{"-", "0.045756655642040844`"}], "0", "0.04575665564204085`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}], "0.21436842464629707`", 
      RowBox[{"-", "0.21436842464629707`"}], "0", "0.21436842464629707`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "0", "0", "0", "0.`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}], "0.04575665564204085`", 
      RowBox[{"-", "0.045756655642040844`"}], "0", "0.04575665564204085`"},
     {"\<\"TOTAL\"\>", "0.5202501605766758`", 
      RowBox[{"-", "0.5202501605766758`"}], "0", "0.5202501605766758`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.958160993498406*^9, 3.958161073119061*^9}, {
   3.9581611058349047`*^9, 3.9581611260601892`*^9}, 3.958164948258296*^9, 
   3.958191030805881*^9, 3.95819675347156*^9, 3.9581984336557007`*^9, 
   3.958204418425146*^9, 3.958209230431774*^9, 3.958209339871767*^9, 
   3.9582133301612453`*^9},
 CellLabel->
  "Out[846]//MatrixForm=",ExpressionUUID->"2fd3fba7-0360-47e7-ba93-\
150414e5cd95"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Subtraction of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Lambda]", "0"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b48353a7-59a5-435a-b892-52a4d69c0974"],
 " sub-leading UV contribution"
}], "Subsection",
 CellChangeTimes->{{3.958132090997794*^9, 3.95813211622326*^9}, {
  3.958134692579568*^9, 3.958134693098209*^9}, {3.9581347677457237`*^9, 
  3.9581347774900017`*^9}, {3.958155973746729*^9, 3.9581560050573387`*^9}, {
  3.958159063256298*^9, 
  3.958159067706029*^9}},ExpressionUUID->"b1f01ddc-cf51-4e4c-9496-\
408348adee9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tri1L4DExprWithFullLambdaDepDODsplits", "[", 
  RowBox[{"-", "1"}], "]"}]], "Input",
 CellLabel->
  "In[847]:=",ExpressionUUID->"42c45328-c5a9-4577-91ea-5d0d3a12a9fe"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "6", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], "]"}], " ", 
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}], 
   RowBox[{"\[Lambda]", " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"], "-", 
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"m", "[", "2", "]"}], "2"]}], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
     "]"}], " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"], "-", 
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"m", "[", "3", "]"}], "2"]}], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
     "]"}], " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"4", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"], "-", 
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"m", "[", "4", "]"}], "2"]}], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "]"}]}]}], 
     "]"}]}]]}]], "Output",
 CellChangeTimes->{3.9581191944489317`*^9, 3.9581555950613117`*^9, 
  3.958161193194024*^9, 3.958164948260371*^9, 3.9581910308083982`*^9, 
  3.958196753474599*^9, 3.958203981185795*^9, 3.9582044184293127`*^9, 
  3.9582093398743153`*^9, 3.958213330164074*^9},
 CellLabel->
  "Out[847]=",ExpressionUUID->"5d71eeb7-f2d6-4669-bfb5-824f4771c308"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dod0Expr", "=", 
   RowBox[{
    RowBox[{"SeriesCoefficient", "[", 
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Tri1L4DExprWithFullLambdaDepDODsplits", "[", 
          RowBox[{"-", "1"}], "]"}], "+", 
         RowBox[{"Tri1L4DExprWithFullLambdaDepDODsplits", "[", "0", "]"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      "0"}], "]"}], "//", "Expand"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.93746673624214*^9, 3.937466746045895*^9}, {
  3.937467233416703*^9, 3.937467242018478*^9}, {3.937492166596026*^9, 
  3.937492166951625*^9}},
 CellLabel->
  "In[848]:=",ExpressionUUID->"d0d44834-7a0d-4976-aab5-46f40099cad5"],

Cell[CellGroupData[{

Cell[BoxData["dod0Expr"], "Input",
 CellLabel->
  "In[849]:=",ExpressionUUID->"3095948d-348b-40b8-9f2e-299bed6b30d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
       RowBox[{
        RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}], " ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"q", "[", "3", "]"}], "\[Prime]",
       MultilineFunction->None], "[", "0", "]"}], " ", 
     RowBox[{
      SuperscriptBox["SP4", 
       TagBox[
        RowBox[{"(", 
         RowBox[{"0", ",", "1"}], ")"}],
        Derivative],
       MultilineFunction->None], "[", 
      RowBox[{
       RowBox[{"q", "[", "6", "]"}], ",", 
       RowBox[{
        RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}], 
    RowBox[{
     RowBox[{"Denom", "[", 
      RowBox[{"2", ",", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["mUV", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"m", "[", "2", "]"}], "2"], "+", 
        RowBox[{"SP4", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
          RowBox[{
           RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
     " ", 
     RowBox[{"Denom", "[", 
      RowBox[{"3", ",", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["mUV", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"m", "[", "3", "]"}], "2"], "+", 
        RowBox[{"SP4", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
          RowBox[{
           RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
     " ", 
     RowBox[{"Denom", "[", 
      RowBox[{"4", ",", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["mUV", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"m", "[", "4", "]"}], "2"], "+", 
        RowBox[{"SP4", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
          RowBox[{
           RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}]}], 
      "]"}]}]]}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "6", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"q", "[", "2", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], " ", 
    RowBox[{
     SuperscriptBox["Denom", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{
     SuperscriptBox["SP4", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Denom", "[", 
      RowBox[{"2", ",", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["mUV", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"m", "[", "2", "]"}], "2"], "+", 
        RowBox[{"SP4", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
          RowBox[{
           RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
     "2"], " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"4", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}]}], 
     "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "6", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"q", "[", "4", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], " ", 
    RowBox[{
     SuperscriptBox["SP4", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}], 
   RowBox[{
    RowBox[{"Denom", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"4", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}]}], 
     "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "6", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"q", "[", "3", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], " ", 
    RowBox[{
     SuperscriptBox["Denom", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{
     SuperscriptBox["SP4", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}], 
   RowBox[{
    RowBox[{"Denom", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    SuperscriptBox[
     RowBox[{"Denom", "[", 
      RowBox[{"3", ",", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["mUV", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"m", "[", "3", "]"}], "2"], "+", 
        RowBox[{"SP4", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
          RowBox[{
           RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
     "2"], " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"4", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}]}], 
     "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "6", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"q", "[", "4", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], " ", 
    RowBox[{
     SuperscriptBox["Denom", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"4", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{
     SuperscriptBox["SP4", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}], 
   RowBox[{
    RowBox[{"Denom", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    SuperscriptBox[
     RowBox[{"Denom", "[", 
      RowBox[{"4", ",", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["mUV", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"m", "[", "4", "]"}], "2"], "+", 
        RowBox[{"SP4", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
          RowBox[{
           RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
     "2"]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "6", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"q", "[", "2", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], " ", 
    RowBox[{
     SuperscriptBox["Denom", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{
     SuperscriptBox["SP4", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Denom", "[", 
      RowBox[{"2", ",", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["mUV", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"m", "[", "2", "]"}], "2"], "+", 
        RowBox[{"SP4", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
          RowBox[{
           RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
     "2"], " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"4", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}]}], 
     "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "6", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"q", "[", "2", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], " ", 
    RowBox[{
     SuperscriptBox["SP4", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}], 
   RowBox[{
    RowBox[{"Denom", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"4", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}]}], 
     "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "6", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"q", "[", "3", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], " ", 
    RowBox[{
     SuperscriptBox["Denom", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{
     SuperscriptBox["SP4", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}], 
   RowBox[{
    RowBox[{"Denom", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    SuperscriptBox[
     RowBox[{"Denom", "[", 
      RowBox[{"3", ",", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["mUV", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"m", "[", "3", "]"}], "2"], "+", 
        RowBox[{"SP4", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
          RowBox[{
           RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
     "2"], " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"4", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}]}], 
     "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{"q", "[", "6", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{"SP4", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}], " ", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"q", "[", "4", "]"}], "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], " ", 
    RowBox[{
     SuperscriptBox["Denom", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"4", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "4", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{
     SuperscriptBox["SP4", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"1", ",", "0"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}], 
   RowBox[{
    RowBox[{"Denom", "[", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "2", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "2", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    RowBox[{"Denom", "[", 
     RowBox[{"3", ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["mUV", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"m", "[", "3", "]"}], "2"], "+", 
       RowBox[{"SP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}], ",", 
         RowBox[{
          RowBox[{"q", "[", "3", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
    " ", 
    SuperscriptBox[
     RowBox[{"Denom", "[", 
      RowBox[{"4", ",", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["mUV", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"m", "[", "4", "]"}], "2"], "+", 
        RowBox[{"SP4", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}], ",", 
          RowBox[{
           RowBox[{"q", "[", "4", "]"}], "[", "0", "]"}]}], "]"}]}]}], "]"}], 
     "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.957864390739176*^9, 3.95786674769564*^9, 3.957866859312138*^9, 
   3.958114351008288*^9, 3.958115690043975*^9, {3.9581157709060163`*^9, 
   3.958115794286962*^9}, 3.958115918027334*^9, 3.958155595127993*^9, 
   3.9581611979639893`*^9, 3.9581649482730627`*^9, 3.9581910308155727`*^9, 
   3.958196753489324*^9, 3.958203981237236*^9, 3.958204418442534*^9, 
   3.9582093398908377`*^9, 3.958213330172287*^9},
 CellLabel->
  "Out[849]=",ExpressionUUID->"fd411f85-f93b-4b91-933e-94db5f4e39b6"]
}, Open  ]],

Cell["\<\
Now split the above expression into its various denominator structures\
\>", "Text",
 CellChangeTimes->{{3.93746679450006*^9, 3.9374667957981577`*^9}, {
  3.9374672503415117`*^9, 
  3.937467260369482*^9}},ExpressionUUID->"b66fec3b-3de1-4de1-a041-\
31c09a8e1c3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", "lmbDataLambda", "]"}]], "Input",
 CellChangeTimes->{{3.9578651147272778`*^9, 3.957865119271179*^9}},
 CellLabel->
  "In[850]:=",ExpressionUUID->"49da4e76-d65d-4bb6-9873-f48580e245a1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"mass" -> 0, 
         "lmb_decomposition" -> $CellContext`\[Lambda] $CellContext`q[0]|>, 
       1 -> <|"mass" -> 0, 
         "lmb_decomposition" -> $CellContext`\[Lambda] $CellContext`q[1]|>, 
       2 -> <|"mass" -> $CellContext`\[Lambda], 
         "lmb_decomposition" -> -$CellContext`\[Lambda] $CellContext`q[
            1] + $CellContext`q[3]|>, 
       3 -> <|"mass" -> 2 $CellContext`\[Lambda], 
         "lmb_decomposition" -> $CellContext`q[3]|>, 
       4 -> <|"mass" -> 3 $CellContext`\[Lambda], 
         "lmb_decomposition" -> $CellContext`q[
           3] + $CellContext`\[Lambda] $CellContext`q[6]|>, 
       6 -> <|"mass" -> 0, 
         "lmb_decomposition" -> $CellContext`\[Lambda] $CellContext`q[6]|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[12]} -> 1, {All, "mass"} -> 
        1, {All, "lmb_decomposition"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "mass" -> TypeSystem`PackageScope`UnknownShape[False], 
             "lmb_decomposition" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 2, {All}]]], 6, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"mass", "lmb_decomposition"}, {
        TypeSystem`AnyType, TypeSystem`AnyType}], 6], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[12]} -> 1, {All, "mass"} -> 
        1, {All, "lmb_decomposition"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "mass" -> TypeSystem`PackageScope`UnknownShape[False], 
             "lmb_decomposition" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 2, {All}]]], 6, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"mass", "lmb_decomposition"}, {
        TypeSystem`AnyType, TypeSystem`AnyType}], 6], "Path" -> {}, 
     "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     6, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["mass", 
                  Style[
                  "mass", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "mass"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "mass"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["lmb_decomposition", 
                  Style[
                  "lmb_decomposition", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "lmb_decomposition"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "lmb_decomposition"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"\[Lambda]", " ", 
                   RowBox[{"q", "[", "0", "]"}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"\[Lambda]", " ", 
                   RowBox[{"q", "[", "1", "]"}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\[Lambda]", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{
                    RowBox[{"-", "\[Lambda]"}], " ", 
                    RowBox[{"q", "[", "1", "]"}]}], "+", 
                   RowBox[{"q", "[", "3", "]"}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"2", " ", "\[Lambda]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"q", "[", "3", "]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"3", " ", "\[Lambda]"}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{
                   RowBox[{"q", "[", "3", "]"}], "+", 
                   RowBox[{"\[Lambda]", " ", 
                    RowBox[{"q", "[", "6", "]"}]}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["mass"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"\[Lambda]", " ", 
                   RowBox[{"q", "[", "6", "]"}]}], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["lmb_decomposition"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{236.95234375, {90.72647094726562, 96.45840454101562}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{236.95234375, {90.72647094726562, 96.45840454101562}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.957865112365303*^9, 3.9578651198206053`*^9}, 
   3.9578667478279943`*^9, 3.957866859451716*^9, 3.9581143511883183`*^9, 
   3.9581156902436447`*^9, {3.95811577112469*^9, 3.958115794470467*^9}, 
   3.958115918262506*^9, 3.958155595310191*^9, 3.9581612393459387`*^9, 
   3.958164949741514*^9, 3.958191031445196*^9, 3.958196753504915*^9, 
   3.958203981266754*^9, 3.958204418464162*^9, 3.9582093399080267`*^9, 
   3.958213330186453*^9},
 CellLabel->
  "Out[850]=",ExpressionUUID->"f1c42adc-b87e-4485-bdf8-eb20bd96f9ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Tri1Lnumerator"], "Input",
 CellChangeTimes->{{3.9581987821355133`*^9, 3.958198784748723*^9}},
 CellLabel->
  "In[851]:=",ExpressionUUID->"937be95e-1232-4412-903d-085f0d8ec7c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"SP4", "[", 
    RowBox[{
     RowBox[{"q", "[", "2", "]"}], ",", 
     RowBox[{"q", "[", "4", "]"}]}], "]"}]}], " ", 
  RowBox[{"SP4", "[", 
   RowBox[{
    RowBox[{"q", "[", "3", "]"}], ",", 
    RowBox[{"q", "[", "6", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.958198784993198*^9, 3.9582039813156633`*^9, 
  3.9582044185096617`*^9, 3.958209339948427*^9, 3.9582133301895647`*^9},
 CellLabel->
  "Out[851]=",ExpressionUUID->"1ed291f5-b7a1-4493-b179-09b36c51112a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dod0NumNoDot", "=", 
  RowBox[{"<|", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "}"}], "->", 
    RowBox[{"ExpandSP4", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dod0Expr", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x__", "*", 
              SuperscriptBox[
               RowBox[{"Denom", "[", 
                RowBox[{"id_", ",", "y__"}], "]"}], 
               RowBox[{"-", "2"}]]}], ":>", "0"}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Denom", "[", "y__", "]"}], ":>", "1"}], "}"}]}], ")"}], "/.", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"x__", "*", 
            RowBox[{
             RowBox[{
              RowBox[{"Derivative", "[", "1", "]"}], "[", 
              RowBox[{"q", "[", "ie_", "]"}], "]"}], "[", "0", "]"}], 
            RowBox[{
             RowBox[{
              RowBox[{"Derivative", "[", 
               RowBox[{"0", ",", "1"}], "]"}], "[", "SP4", "]"}], "[", 
             RowBox[{"a_", ",", "b_"}], "]"}]}], ":>", 
           RowBox[{"x", " ", 
            RowBox[{"SP4", "[", 
             RowBox[{"a", ",", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"lmbDataLambda", "[", "ie", "]"}], "[", 
                 "\"\<lmb_decomposition\>\"", "]"}], ",", "\[Lambda]"}], 
               "]"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"x__", "*", 
            RowBox[{
             RowBox[{
              RowBox[{"Derivative", "[", "1", "]"}], "[", 
              RowBox[{"q", "[", "ie_", "]"}], "]"}], "[", "0", "]"}], 
            RowBox[{
             RowBox[{
              RowBox[{"Derivative", "[", 
               RowBox[{"1", ",", "0"}], "]"}], "[", "SP4", "]"}], "[", 
             RowBox[{"a_", ",", "b_"}], "]"}]}], ":>", 
           RowBox[{"x", " ", 
            RowBox[{"SP4", "[", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"lmbDataLambda", "[", "ie", "]"}], "[", 
                 "\"\<lmb_decomposition\>\"", "]"}], ",", "\[Lambda]"}], 
               "]"}], ",", "b"}], "]"}]}]}]}], "\[IndentingNewLine]", "}"}]}],
        "/.", 
       RowBox[{
        RowBox[{"SP4", "[", 
         RowBox[{"0", ",", "x__"}], "]"}], ":>", "0"}]}], 
      "\[IndentingNewLine]", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"q", "[", "ie_", "]"}], "[", "0", "]"}], "->", 
        RowBox[{"q", "[", "ie", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "|>"}]}]], "Input",
 CellChangeTimes->{{3.937467279887521*^9, 3.9374673179083147`*^9}, {
   3.937467381513406*^9, 3.93746761483709*^9}, {3.937467800996881*^9, 
   3.937467806058239*^9}, {3.937467917924515*^9, 3.9374679720370207`*^9}, {
   3.93746800604132*^9, 3.937468091062334*^9}, {3.937468232273033*^9, 
   3.937468365272799*^9}, {3.9374684053439617`*^9, 3.937468412345045*^9}, {
   3.937468453490531*^9, 3.9374684664594383`*^9}, {3.937468502087022*^9, 
   3.937468606588566*^9}, {3.937468841379489*^9, 3.937468849577485*^9}, 
   3.937482179418379*^9, {3.937482249572714*^9, 3.9374822505696907`*^9}, {
   3.9374830671479883`*^9, 3.937483079720132*^9}, {3.937483284970689*^9, 
   3.937483310561961*^9}, {3.937485121925941*^9, 3.9374851714556713`*^9}, {
   3.93748520237693*^9, 3.937485295891671*^9}, 3.937485534119759*^9},
 CellLabel->
  "In[852]:=",ExpressionUUID->"68744136-207a-49ee-9ec0-26d60df28710"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"{", "}"}], "\[Rule]", 
   RowBox[{
    RowBox[{
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "1", "]"}], ",", 
       RowBox[{"q", "[", "4", "]"}]}], "]"}], " ", 
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], ",", 
       RowBox[{"q", "[", "6", "]"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], ",", 
       RowBox[{"q", "[", "6", "]"}]}], "]"}], " ", 
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], ",", 
       RowBox[{"q", "[", "6", "]"}]}], "]"}]}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.9374910610950317`*^9, 3.937491104178177*^9, 3.937491829587843*^9, 
   3.9374918738677464`*^9, {3.937492173199677*^9, 3.937492200732829*^9}, {
   3.93749226068717*^9, 3.937492285224161*^9}, 3.937561466138268*^9, 
   3.937561500343439*^9, 3.9375620971475973`*^9, {3.937562318235732*^9, 
   3.937562358926716*^9}, 3.9375624295362186`*^9, 3.937900835423304*^9, 
   3.9379910008833323`*^9, 3.9380692537255793`*^9, 3.938075704254053*^9, 
   3.938076270054974*^9, {3.938076703114646*^9, 3.93807672774507*^9}, 
   3.938077759743754*^9, 3.93807975750177*^9, 3.938079957396215*^9, 
   3.952759912878168*^9, 3.957864115746348*^9, 3.957866747720441*^9, 
   3.957866859338397*^9, 3.9581143510298*^9, 3.958115690094967*^9, {
   3.958115770950158*^9, 3.958115794314424*^9}, 3.958115918075762*^9, 
   3.9581555951656923`*^9, 3.958161213406989*^9, 3.9581612641432123`*^9, 
   3.958164949849278*^9, 3.958191031574204*^9, 3.9581967535532827`*^9, 
   3.958203981332489*^9, 3.958204418522868*^9, 3.9582093399584923`*^9, 
   3.9582133301945877`*^9},
 CellLabel->
  "Out[852]=",ExpressionUUID->"674b98c8-8bac-4f11-9a79-54c6b9c2d336"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AssociateTo", "[", 
   RowBox[{"SubtractionContribs", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<\[Lambda]0CTDNumNoDot\>\"", "->", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<cFFexpr\>\"", "->", 
         RowBox[{"ConvertCFFFormat", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"CrossFreeFamilyLTD", "[", 
            RowBox[{"Tri1LUVTopology", ",", 
             RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], 
           ",", "\[IndentingNewLine]", "Tri1LUVTopology"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<num\>\"", "->", 
         RowBox[{"dod0NumNoDot", "[", 
          RowBox[{"{", "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<graph\>\"", "->", "Tri1LUVTopology"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<dots\>\"", "->", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"2", "->", "1"}], ",", 
           RowBox[{"3", "->", "1"}], ",", 
           RowBox[{"4", "->", "1"}]}], "|>"}]}]}], "\[IndentingNewLine]", 
       "|>"}], "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.95816192686665*^9, 3.958161935277272*^9}, {
  3.958162094057618*^9, 3.958162171299184*^9}},
 CellLabel->
  "In[853]:=",ExpressionUUID->"f30f379d-c8d2-4c93-8295-320bc6b1aef6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dod0NumDotted", "=", 
  RowBox[{"Association", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "dot", "}"}], "\[Rule]", 
       RowBox[{"ExpandSP4", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"dod0Expr", "/.", "\[VeryThinSpace]", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox["x__", 
                  RowBox[{
                   RowBox[{"Denom", "[", 
                    RowBox[{"idA_", ",", "__"}], "]"}], " ", 
                   RowBox[{"Denom", "[", 
                    RowBox[{"idB_", ",", "__"}], "]"}], " ", 
                   RowBox[{"Denom", "[", 
                    RowBox[{"idC_", ",", "__"}], "]"}]}]], "\[RuleDelayed]", 
                 "0"}], "}"}]}], "/.", "\[VeryThinSpace]", 
              RowBox[{"{", 
               RowBox[{
                FractionBox["x__", 
                 RowBox[{
                  RowBox[{"Denom", "[", 
                   RowBox[{"idA_", ",", "__"}], "]"}], " ", 
                  RowBox[{"Denom", "[", 
                   RowBox[{"idB_", ",", "__"}], "]"}], " ", 
                  SuperscriptBox[
                   RowBox[{"Denom", "[", 
                    RowBox[{
                    RowBox[{"idC_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"#1", "===", "dot"}]}], "&"}], ")"}]}], ",", 
                    "__"}], "]"}], "2"]}]], "\[RuleDelayed]", "0"}], "}"}]}], 
             "/.", "\[VeryThinSpace]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Denom", "[", "y__", "]"}], "\[RuleDelayed]", "1"}], 
              "}"}]}], "/.", "\[VeryThinSpace]", 
            RowBox[{
             RowBox[{"x__", " ", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"q", "[", "dot", "]"}], "\[Prime]",
                MultilineFunction->None], "[", "0", "]"}], " ", 
              RowBox[{
               SuperscriptBox["SP4", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"q", "[", "dot", "]"}], "[", "0", "]"}], ",", 
                RowBox[{
                 RowBox[{"q", "[", "dot", "]"}], "[", "0", "]"}]}], "]"}], 
              " ", 
              RowBox[{
               SuperscriptBox["Denom", 
                TagBox[
                 RowBox[{"(", 
                  RowBox[{"0", ",", "1"}], ")"}],
                 Derivative],
                MultilineFunction->None], "[", 
               RowBox[{"dot", ",", "z___"}], "]"}]}], "\[RuleDelayed]", 
             RowBox[{"x", " ", 
              RowBox[{"SP4", "[", 
               RowBox[{
                RowBox[{"q", "[", "dot", "]"}], ",", 
                RowBox[{
                 SubscriptBox["\[PartialD]", "\[Lambda]"], 
                 RowBox[{
                  RowBox[{"lmbDataLambda", "[", "dot", "]"}], "[", 
                  "\"\<lmb_decomposition\>\"", "]"}]}]}], "]"}]}]}]}], "/.", 
           "\[VeryThinSpace]", 
           RowBox[{
            RowBox[{"x__", " ", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"q", "[", "dot", "]"}], "\[Prime]",
               MultilineFunction->None], "[", "0", "]"}], " ", 
             RowBox[{
              SuperscriptBox["SP4", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"1", ",", "0"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{
               RowBox[{
                RowBox[{"q", "[", "dot", "]"}], "[", "0", "]"}], ",", 
               RowBox[{
                RowBox[{"q", "[", "dot", "]"}], "[", "0", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["Denom", 
               TagBox[
                RowBox[{"(", 
                 RowBox[{"0", ",", "1"}], ")"}],
                Derivative],
               MultilineFunction->None], "[", 
              RowBox[{"dot", ",", "z___"}], "]"}]}], "\[RuleDelayed]", 
            RowBox[{"x", " ", 
             RowBox[{"SP4", "[", 
              RowBox[{
               RowBox[{"q", "[", "dot", "]"}], ",", 
               RowBox[{
                SubscriptBox["\[PartialD]", "\[Lambda]"], 
                RowBox[{
                 RowBox[{"lmbDataLambda", "[", "dot", "]"}], "[", 
                 "\"\<lmb_decomposition\>\"", "]"}]}]}], "]"}]}]}]}], "/.", 
          "\[VeryThinSpace]", 
          RowBox[{
           RowBox[{"SP4", "[", 
            RowBox[{"0", ",", "x__"}], "]"}], "\[RuleDelayed]", "0"}]}], "/.",
          "\[VeryThinSpace]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"q", "[", "ie_", "]"}], "[", "0", "]"}], "\[Rule]", 
           RowBox[{"q", "[", "ie", "]"}]}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"dot", ",", "\[IndentingNewLine]", 
       RowBox[{"Sort", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"e", "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DirectedEdge", "[", 
                RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
               "props"}], "}"}]}], ")"}], "[", "\"\<id\>\"", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"e", ",", 
            RowBox[{"GetVirtualPropagators", "[", "Tri1L", "]"}]}], "}"}]}], 
         "]"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.937482514286134*^9, 3.9374825231497107`*^9}, {
   3.937482603554859*^9, 3.937482648775728*^9}, {3.937482699879599*^9, 
   3.9374827710905743`*^9}, {3.9374828990557957`*^9, 
   3.9374829668009233`*^9}, {3.937483399623129*^9, 3.9374834207762947`*^9}, {
   3.937485430566001*^9, 3.9374854311708393`*^9}, {3.937485515694072*^9, 
   3.937485564093479*^9}, {3.937485598964011*^9, 3.937485688989005*^9}, {
   3.9374857224445677`*^9, 3.937485750631735*^9}, {3.937485812838986*^9, 
   3.937485814825561*^9}, {3.937485878086895*^9, 3.9374858911310577`*^9}, {
   3.9374859465837603`*^9, 3.9374860290696907`*^9}, {3.937486061581727*^9, 
   3.937486309026945*^9}, {3.937486434146707*^9, 3.937486435831708*^9}, {
   3.937486519684654*^9, 3.937486520020072*^9}, {3.9374869357678967`*^9, 
   3.937486952874298*^9}, {3.937487674059566*^9, 3.937487676742214*^9}, {
   3.938075253398472*^9, 3.938075257765905*^9}, {3.942924499598996*^9, 
   3.942924502063656*^9}, {3.943507341395949*^9, 3.943507358904332*^9}, {
   3.945504178124517*^9, 3.945504184932269*^9}, 3.9483737180715437`*^9, {
   3.949982779691766*^9, 3.949982781232195*^9}, {3.951974514263891*^9, 
   3.951974516385306*^9}, {3.958161785475803*^9, 3.9581617898427563`*^9}},
 CellLabel->
  "In[854]:=",ExpressionUUID->"2faead33-eacb-480d-909b-b18da565af1c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", "2", "}"}], "\[Rule]", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "1", "]"}], ",", 
       RowBox[{"q", "[", "2", "]"}]}], "]"}], " ", 
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], ",", 
       RowBox[{"q", "[", "4", "]"}]}], "]"}], " ", 
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], ",", 
       RowBox[{"q", "[", "6", "]"}]}], "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"{", "3", "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", "4", "}"}], "\[Rule]", 
    RowBox[{"2", " ", 
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "2", "]"}], ",", 
       RowBox[{"q", "[", "4", "]"}]}], "]"}], " ", 
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "3", "]"}], ",", 
       RowBox[{"q", "[", "6", "]"}]}], "]"}], " ", 
     RowBox[{"SP4", "[", 
      RowBox[{
       RowBox[{"q", "[", "4", "]"}], ",", 
       RowBox[{"q", "[", "6", "]"}]}], "]"}]}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.95816144649874*^9, 3.958161790276132*^9, 
  3.958164949884564*^9, 3.9581910316069517`*^9, 3.958196753586775*^9, 
  3.958199054076585*^9, 3.958203981399589*^9, 3.9582044185541077`*^9, 
  3.958209339982457*^9, 3.9582133302260923`*^9},
 CellLabel->
  "Out[854]=",ExpressionUUID->"f6753531-fd1a-44b0-a415-3c3062340821"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AssociateTo", "[", 
   RowBox[{"SubtractionContribs", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<\[Lambda]0CTDDenomDotted\>\"", "->", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<cFFexpr\>\"", "->", 
          RowBox[{"ConvertCFFFormat", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"CrossFreeFamilyLTD", "[", 
             RowBox[{"Tri1LUVTopology", ",", 
              RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], 
            ",", "\[IndentingNewLine]", "Tri1LUVTopology"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<num\>\"", "->", 
          RowBox[{"dod0NumDotted", "[", "d", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<graph\>\"", "->", "Tri1LUVTopology"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<dots\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{
            "d", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "->",
             "2"}], "|>"}]}]}], "\[IndentingNewLine]", "|>"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"d", ",", 
         RowBox[{"Sort", "[", 
          RowBox[{"Keys", "[", "dod0NumDotted", "]"}], "]"}]}], "}"}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.95816192686665*^9, 3.958161935277272*^9}, {
  3.958162094057618*^9, 3.958162217949626*^9}, {3.9581622503381977`*^9, 
  3.95816230563138*^9}},
 CellLabel->
  "In[855]:=",ExpressionUUID->"e8d6c0cc-c3ba-4744-9a59-fbef1c983098"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<num\>\"", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "SubtractionContribs", "[", "\"\<\[Lambda]0CTDDenomDotted\>\"", 
             "]"}], "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
           "[", "\"\<num\>\"", "]"}], "/.", "UVExternalsDefinition"}], 
         ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<cFFexpr\>\"", "->", 
        RowBox[{
         RowBox[{
          RowBox[{
          "SubtractionContribs", "[", "\"\<\[Lambda]0CTDDenomDotted\>\"", 
           "]"}], "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
         "[", "\"\<cFFexpr\>\"", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<graph\>\"", "->", 
        RowBox[{
         RowBox[{
          RowBox[{
          "SubtractionContribs", "[", "\"\<\[Lambda]0CTDDenomDotted\>\"", 
           "]"}], "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
         "[", "\"\<graph\>\"", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<dots\>\"", "->", 
        RowBox[{
         RowBox[{
          RowBox[{
          "SubtractionContribs", "[", "\"\<\[Lambda]0CTDDenomDotted\>\"", 
           "]"}], "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
         "[", "\"\<dots\>\"", "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
     "subtractionNumerics", ",", "\[IndentingNewLine]", 
     RowBox[{"DebugNumerator", "->", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"NumeratorFudge", "->", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Coefficient", "[", 
           RowBox[{"#", ",", 
            SuperscriptBox[
             RowBox[{
              RowBox[{"p", "[", "3", "]"}], "[", "0", "]"}], "2"]}], "]"}], 
          SuperscriptBox[
           RowBox[{
            RowBox[{"p", "[", "3", "]"}], "[", "0", "]"}], "2"]}], ")"}], 
        "&"}], ")"}]}]}], "\[IndentingNewLine]", "]"}], "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.95820969823748*^9, 3.958209752714653*^9}, {
  3.958209906683415*^9, 3.958209920143852*^9}, {3.958209978527931*^9, 
  3.9582099949181433`*^9}, {3.958210932364623*^9, 3.958210949548501*^9}},
 CellLabel->
  "In[856]:=",ExpressionUUID->"3f4b9f3c-9c0b-43eb-b09e-5d0bee5d2039"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SubtractionRes", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"k", "->", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"<|", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"\"\<num\>\"", "->", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"s", "[", "\"\<num\>\"", "]"}], "/.", 
                 "UVExternalsDefinition"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<cFFexpr\>\"", "->", 
               RowBox[{"s", "[", "\"\<cFFexpr\>\"", "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<graph\>\"", "->", 
               RowBox[{"s", "[", "\"\<graph\>\"", "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"\"\<dots\>\"", "->", 
               RowBox[{"s", "[", "\"\<dots\>\"", "]"}]}]}], 
             "\[IndentingNewLine]", "|>"}], ",", "subtractionNumerics"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{",", 
             RowBox[{"NumeratorFudge", "->", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Coefficient", "[", 
                   RowBox[{"#", ",", 
                    SuperscriptBox[
                    RowBox[{
                    RowBox[{"p", "[", "3", "]"}], "[", "0", "]"}], "2"]}], 
                   "]"}], 
                  SuperscriptBox[
                   RowBox[{
                    RowBox[{"p", "[", "3", "]"}], "[", "0", "]"}], "2"]}], 
                 ")"}], "&"}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
           "]"}], ")"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", 
           RowBox[{"SubtractionContribs", "[", "k", "]"}]}], "}"}]}], "]"}]}],
       ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Keys", "[", "SubtractionContribs", "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9581589395811653`*^9, 3.958158956484603*^9}, {
  3.958159912639484*^9, 3.958159983753015*^9}, {3.9581605283853273`*^9, 
  3.9581605621610947`*^9}, {3.9581993030650682`*^9, 3.958199309026621*^9}, {
  3.958210013864645*^9, 3.9582100203409767`*^9}, {3.958210952047289*^9, 
  3.9582109708128138`*^9}},
 CellLabel->
  "In[857]:=",ExpressionUUID->"507f66ec-c6bc-4c75-8552-101ce5acb50b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AnalyzeSubtraction", "[", 
   RowBox[{"IRes", ",", "SubtractionRes", ",", "0", ",", 
    RowBox[{"ExpansionDepth", "->", "0"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.958199367416029*^9, 3.958199399975699*^9}, {
  3.9581994302519903`*^9, 3.958199432724805*^9}, {3.958201646478105*^9, 
  3.958201693981676*^9}, {3.958203986488838*^9, 3.958203988639859*^9}},
 CellLabel->
  "In[858]:=",ExpressionUUID->"633c5426-132b-4ad6-9452-5038f486198b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"orientation\"\>", "\<\"I\"\>", "\<\"-SumCT\"\>", \
"\<\"I-SumCT\"\>", "\<\"\[Lambda]m1CT#1\"\>", \
"\<\"\[Lambda]0CTDNumNoDot#1\"\>", "\<\"\[Lambda]0CTDDenomDotted#1\"\>", \
"\<\"\[Lambda]0CTDDenomDotted#2\"\>", "\<\"\[Lambda]0CTDDenomDotted#3\"\>"},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "0.393498000260824`", 
      RowBox[{"-", "0.393498000260824`"}], "0", "0.`", 
      RowBox[{"-", "0.4784264749804486`"}], "0.2704611111497276`", "0.`", 
      "0.6014633640915449`"},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}], "0", "0", "0", "0.`", 
      RowBox[{"-", "0.1355551185278647`"}], "0.04558259385805483`", "0.`", 
      "0.08997252466980983`"},
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], 
      "0.11036970365801768`", 
      RowBox[{"-", "0.1103697036580177`"}], "0", "0.`", 
      RowBox[{"-", "0.10211949591846757`"}], "0.10331215896476742`", "0.`", 
      "0.10917704061171782`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{"-", "1"}]}], "}"}], "0.535334635208972`", 
      RowBox[{"-", "0.5353346352089721`"}], "0", "0.`", 
      RowBox[{"-", "0.30352547559101406`"}], "0.3273692713782509`", "0.`", 
      "0.5114908394217351`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], "0", "0", "0", "0.`", 
      RowBox[{"-", "0.14688068489833317`"}], "0.056908160228523325`", "0.`", 
      "0.08997252466980983`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}], "0.19209202058827743`", 
      RowBox[{"-", "0.19209202058827743`"}], "0", "0.`", 
      RowBox[{"-", "0.06478710979996283`"}], "0.0577295651067126`", "0.`", 
      "0.1991495652815277`"},
     {"\<\"TOTAL\"\>", "1.2312943597160912`", 
      RowBox[{"-", "1.2312943597160912`"}], "0", "0.`", 
      RowBox[{"-", "1.2312943597160908`"}], "0.8613628606860366`", "0.`", 
      "1.6012258587461452`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.958199350084652*^9, 3.958199400717806*^9}, 
   3.958199433071986*^9, {3.958201649461379*^9, 3.9582016943451347`*^9}, {
   3.958203981739134*^9, 3.9582039889850483`*^9}, 3.958204419464346*^9, {
   3.958209315584511*^9, 3.958209340291986*^9}, 3.958210024182425*^9, {
   3.9582109575335283`*^9, 3.958210972104577*^9}, 3.958213330352746*^9},
 CellLabel->
  "Out[858]//MatrixForm=",ExpressionUUID->"ae36bf91-bd56-4a79-ad03-\
65fa1c294e11"]
}, Open  ]],

Cell["Verify full cancellation indeed", "Text",
 CellChangeTimes->{{3.95821097926248*^9, 
  3.958210983168785*^9}},ExpressionUUID->"648e881b-e1b6-4551-9459-\
e7013c93661d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"IRes", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], "\[IndentingNewLine]", 
    "-", 
    RowBox[{
     RowBox[{
      RowBox[{"SubtractionRes", "[", "\"\<\[Lambda]m1CT\>\"", "]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], "\[IndentingNewLine]", 
    "-", 
    RowBox[{
     RowBox[{
      RowBox[{"SubtractionRes", "[", "\"\<\[Lambda]0CTDNumNoDot\>\"", "]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], "\[IndentingNewLine]", 
    "-", 
    RowBox[{
     RowBox[{
      RowBox[{
      "SubtractionRes", "[", "\"\<\[Lambda]0CTDDenomDotted\>\"", "]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], "\[IndentingNewLine]", 
    "-", 
    RowBox[{
     RowBox[{
      RowBox[{
      "SubtractionRes", "[", "\"\<\[Lambda]0CTDDenomDotted\>\"", "]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], "\[IndentingNewLine]", 
    "-", 
    RowBox[{
     RowBox[{
      RowBox[{
      "SubtractionRes", "[", "\"\<\[Lambda]0CTDDenomDotted\>\"", "]"}], 
      "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{"\[Lambda]", ">", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.958204008672635*^9, 3.958204113225075*^9}},
 CellLabel->
  "In[859]:=",ExpressionUUID->"0848370d-00a8-45e0-b1e9-da60ea53688e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{"121550625", " ", 
     RowBox[{"(", 
      RowBox[{"581941414760502089600234280397699732460383", "+", 
       RowBox[{"10308895815938016803603309522763292240220", " ", 
        SqrtBox["14494"]}]}], ")"}], " ", "\[Lambda]"}], 
    "7789264547965739585797284148024518432149541891904"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Lambda]", "]"}], "2"],
    SeriesData[$CellContext`\[Lambda], 0, {}, 1, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Lambda], 0, {
   Rational[121550625, 7789264547965739585797284148024518432149541891904] (
     581941414760502089600234280397699732460383 + 
     10308895815938016803603309522763292240220 14494^Rational[1, 2])}, 1, 2, 
   1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.9582040075686703`*^9, 3.958204113461588*^9}, 
   3.958204149126196*^9, 3.958204419575172*^9, {3.958209330437799*^9, 
   3.9582093403127947`*^9}, 3.9582109751176043`*^9, 3.9582133303620872`*^9},
 CellLabel->
  "Out[859]=",ExpressionUUID->"006e9721-b2f6-4c73-a385-e01d02da925a"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derivative CFF trick test", "Section",
 CellChangeTimes->{{3.958132090997794*^9, 3.95813211622326*^9}, {
  3.958214960434272*^9, 
  3.9582149656744013`*^9}},ExpressionUUID->"b6262740-8e92-4a5e-a409-\
234b0ac3a079"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tri1L", "=", 
   RowBox[{"DirectedGraph", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"1", ",", "2", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"2", ",", "3", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"3", ",", "1", ",", "3"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"101", ",", "1", ",", "4"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"102", ",", "2", ",", "5"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"103", ",", "3", ",", "6"}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"EdgeLabels", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tri1L", "=", 
   RowBox[{"AssignSignatures", "[", 
    RowBox[{"Tri1L", ",", 
     RowBox[{"masses", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"1", "->", "1"}], ",", 
        RowBox[{"2", "->", "2"}], ",", 
        RowBox[{"3", "->", "3"}]}], "|>"}]}], ",", 
     RowBox[{"lmb", "->", 
      RowBox[{"{", "3", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Tri1L", "=", 
  RowBox[{"DirectedGraph", "[", 
   RowBox[{"Tri1L", ",", 
    RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "275"}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<HighDimensionalEmbedding\>\""}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"EdgeLabels", "->", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"e", "->", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<q\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"e", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"DirectedEdge", "[", 
                    RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
                   "props"}], "}"}]}], ")"}], "[", "\"\<id\>\"", "]"}], ")"}],
              "]"}]}], ")"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "20"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", 
         RowBox[{"EdgeList", "[", "Tri1L", "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.872742741603726*^9, 3.872742775586288*^9}, {
   3.872743362817617*^9, 3.872743387499469*^9}, {3.872743487367777*^9, 
   3.872743524782481*^9}, {3.872743958621933*^9, 3.872743975587399*^9}, {
   3.872744266098577*^9, 3.872744273043355*^9}, {3.872744435398158*^9, 
   3.872744461440112*^9}, {3.872745114500924*^9, 3.8727451300396833`*^9}, {
   3.872745772099901*^9, 3.872745776468544*^9}, 3.872786297553876*^9, {
   3.872789807179264*^9, 3.8727898494597893`*^9}, {3.8727899530754137`*^9, 
   3.87278998200391*^9}, 3.8727931259976683`*^9, {3.872920078463521*^9, 
   3.8729201109695063`*^9}, {3.872920144235427*^9, 3.872920159421647*^9}, {
   3.8729238516510687`*^9, 3.872923854849904*^9}, {3.872926388991707*^9, 
   3.872926423748941*^9}, {3.872926497819352*^9, 3.872926717448036*^9}, {
   3.937029477469689*^9, 3.9370295236741343`*^9}, {3.93704154838531*^9, 
   3.937041579088908*^9}, {3.93704162434651*^9, 3.937041626865746*^9}, {
   3.937042549739942*^9, 3.9370425540260887`*^9}, {3.937049644336658*^9, 
   3.937049648682721*^9}, {3.958115760324025*^9, 3.9581157871290007`*^9}, {
   3.9581158725615273`*^9, 3.958115872616946*^9}, {3.958131485089891*^9, 
   3.9581315199265738`*^9}, {3.9581317970114317`*^9, 
   3.9581317984630623`*^9}, {3.9581318821621532`*^9, 
   3.9581318998381557`*^9}, {3.958132682231254*^9, 3.958132687317069*^9}, {
   3.958214975493361*^9, 3.958215015593615*^9}, {3.9582161388641787`*^9, 
   3.958216138964383*^9}},
 CellLabel->
  "In[965]:=",ExpressionUUID->"0bcc8893-450d-40f1-9dd2-df40dbfd4d77"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 101, 102, 
      103}, {{{1, 2}, {2, 3}, {3, 1}, {4, 1}, {5, 2}, {6, 3}}, 
       Null, {<|"id" -> 1, "sig" -> {{1}, {1, 0, 0}}, "mass" -> 1|>, <|
        "id" -> 2, "sig" -> {{1}, {1, 1, 0}}, "mass" -> 2|>, <|
        "id" -> 3, "sig" -> {{1}, {0, 0, 0}}, "mass" -> 3|>, <|
        "id" -> 4, "sig" -> {{0}, {1, 0, 0}}, "mass" -> 0|>, <|
        "id" -> 5, "sig" -> {{0}, {0, 1, 0}}, "mass" -> 0|>, <|
        "id" -> 6, "sig" -> {{0}, {0, 0, 1}}, "mass" -> 0|>}}, {
      EdgeLabels -> {
        DirectedEdge[
          101, 1, <|"id" -> 4, "sig" -> {{0}, {1, 0, 0}}, "mass" -> 0|>] -> 
         Style["q4", FontSize -> 20], 
         DirectedEdge[
          102, 2, <|"id" -> 5, "sig" -> {{0}, {0, 1, 0}}, "mass" -> 0|>] -> 
         Style["q5", FontSize -> 20], 
         DirectedEdge[
          3, 1, <|"id" -> 3, "sig" -> {{1}, {0, 0, 0}}, "mass" -> 3|>] -> 
         Style["q3", FontSize -> 20], 
         DirectedEdge[
          1, 2, <|"id" -> 1, "sig" -> {{1}, {1, 0, 0}}, "mass" -> 1|>] -> 
         Style["q1", FontSize -> 20], 
         DirectedEdge[
          2, 3, <|"id" -> 2, "sig" -> {{1}, {1, 1, 0}}, "mass" -> 2|>] -> 
         Style["q2", FontSize -> 20], 
         DirectedEdge[
          103, 3, <|"id" -> 6, "sig" -> {{0}, {0, 0, 1}}, "mass" -> 0|>] -> 
         Style["q6", FontSize -> 20]}, GraphLayout -> 
       "HighDimensionalEmbedding", ImageSize -> 275, 
       VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[{{1.3362853262385983`, 0.8943819934015464}, {
          0.7790533550135319, 1.837511109824439}}, 0.027634714368546295`], 
         InsetBox[
          StyleBox["\<\"q1\"\>",
           StripOnInput->False,
           FontSize->20], {1.057669340626065, 1.3659465516129927}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.7790533550135319, 1.837511109824439}, {
          1.874443114497062, 1.84852359449478}}, 0.027634714368546295`], 
         InsetBox[
          StyleBox["\<\"q2\"\>",
           StripOnInput->False,
           FontSize->20], {1.3267482347552968, 1.8430173521596096}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.874443114497062, 1.84852359449478}, {
          1.3362853262385983`, 0.8943819934015464}}, 0.027634714368546295`], 
         InsetBox[
          StyleBox["\<\"q3\"\>",
           StripOnInput->False,
           FontSize->20], {1.60536422036783, 1.3714527939481633}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.3452769823194497`, 0.}, {1.3362853262385983`, 
          0.8943819934015464}}, 0.027634714368546295`], InsetBox[
          StyleBox["\<\"q4\"\>",
           StripOnInput->False,
           FontSize->20], {1.340781154279024, 0.4471909967007732}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.2769151039371014`}, {0.7790533550135319, 
          1.837511109824439}}, 0.027634714368546295`], InsetBox[
          StyleBox["\<\"q5\"\>",
           StripOnInput->False,
           FontSize->20], {0.38952667750676595, 2.05721310688077}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2.644504813429741, 2.303501593783664}, {1.874443114497062,
           1.84852359449478}}, 0.027634714368546295`], InsetBox[
          StyleBox["\<\"q6\"\>",
           StripOnInput->False,
           FontSize->20], {2.2594739639634014, 2.076012594139222}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{1.3362853262385983`, 0.8943819934015464}, 
          0.027634714368546295], 
         InsetBox["1", 
          Offset[{2, 2}, {1.3639200406071446, 0.9220167077700927}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7790533550135319, 1.837511109824439}, 
          0.027634714368546295], 
         InsetBox["2", 
          Offset[{2, 2}, {0.8066880693820782, 1.8651458241929852}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.874443114497062, 1.84852359449478}, 0.027634714368546295],
          InsetBox["3", 
          Offset[{2, 2}, {1.9020778288656082, 1.8761583088633262}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.3452769823194497`, 0.}, 0.027634714368546295], 
         InsetBox["101", 
          Offset[{2, 2}, {1.372911696687996, 0.027634714368546295}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 2.2769151039371014`}, 0.027634714368546295], 
         InsetBox["102", 
          Offset[{2, 2}, {0.027634714368546295, 2.304549818305648}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.644504813429741, 2.303501593783664}, 
          0.027634714368546295], 
         InsetBox["103", 
          Offset[{2, 2}, {2.6721395277982873, 2.3311363081522103}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->275]], "Output",
 CellChangeTimes->{3.958215016650663*^9, 3.958215208635539*^9, 
  3.9582154606372337`*^9, 3.958216139388711*^9},
 CellLabel->
  "Out[967]=",ExpressionUUID->"9f8324ea-a0bf-4ec5-b0e1-72b2bc52bb6f"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tri1Lnumerics", "=", 
   RowBox[{"GenerateRandomSample", "[", 
    RowBox[{"Tri1L", ",", 
     RowBox[{"Seed", "->", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{"Tri1Lnumerics", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"k1", "->", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"k1", "/.", "Tri1Lnumerics"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "->", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"p1", "/.", "Tri1Lnumerics"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "->", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"p2", "/.", "Tri1Lnumerics"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "->", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"p3", "/.", "Tri1Lnumerics"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"p1E", "->", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"p2E", "->", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"p3E", "->", "0"}]}], "\[IndentingNewLine]", "}"}]}], 
   "\[IndentingNewLine]", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.95821828930513*^9, 3.958218412254928*^9}, {
  3.958218966816486*^9, 3.958218971193911*^9}},
 CellLabel->
  "In[1113]:=",ExpressionUUID->"b8dd140b-c10e-4fac-85bc-3171a091a98a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<cFFexpr\>\"", "->", 
          RowBox[{"ConvertCFFFormat", "[", 
           RowBox[{
            RowBox[{"CrossFreeFamilyLTD", "[", 
             RowBox[{"Tri1L", ",", 
              RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], 
            ",", "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<num\>\"", "->", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<graph\>\"", "->", "Tri1L"}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<dots\>\"", "->", 
          RowBox[{"<|", "|>"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
       "\[IndentingNewLine]", "Tri1Lnumerics"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", "->", "1"}], "}"}]}], ")"}], "\[IndentingNewLine]",
    "-", "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<cFFexpr\>\"", "->", 
          RowBox[{"ConvertCFFFormat", "[", 
           RowBox[{
            RowBox[{"CrossFreeFamilyLTD", "[", 
             RowBox[{"Tri1L", ",", 
              RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}], 
            ",", "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<num\>\"", "->", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"SP4", "[", 
             RowBox[{
              RowBox[{"q", "[", "3", "]"}], ",", 
              RowBox[{"q", "[", "3", "]"}]}], "]"}], "-", 
            SuperscriptBox["3", "2"]}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<graph\>\"", "->", "Tri1L"}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<dots\>\"", "->", 
          RowBox[{"<|", 
           RowBox[{"3", "->", "2"}], "|>"}]}]}], "\[IndentingNewLine]", 
        "|>"}], ",", "\[IndentingNewLine]", "Tri1Lnumerics"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", "->", "1"}], "}"}]}], ")"}]}], 
  "\[IndentingNewLine]", ")"}]], "Input",
 CellChangeTimes->{{3.95821511934194*^9, 3.958215180460485*^9}, {
  3.958215225912034*^9, 3.958215242666206*^9}, {3.958215311824473*^9, 
  3.958215345595718*^9}},
 CellLabel->
  "In[1114]:=",ExpressionUUID->"5a9bc8a0-6978-4192-a70b-811e66e75237"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", 
      RowBox[{"-", "1"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], "\[Rule]", "0"}], ",", 
   
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}]}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", 
      RowBox[{"-", "1"}]}], "}"}], "\[Rule]", "0"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.958215128342725*^9, {3.958215162044838*^9, 3.958215180926422*^9}, {
   3.958215213761237*^9, 3.958215243061081*^9}, {3.958215317141843*^9, 
   3.958215345869549*^9}, 3.958215461771014*^9, 3.9582161409425592`*^9, {
   3.9582183647406273`*^9, 3.958218413711952*^9}, 3.9582189763893642`*^9},
 CellLabel->
  "Out[1114]=",ExpressionUUID->"4e719a6d-f306-495b-b171-1d8fc75c81e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Box1L", "=", 
   RowBox[{"DirectedGraph", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"1", ",", "2", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"2", ",", "3", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"3", ",", "77", ",", "3"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"77", ",", "1", ",", "4"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"101", ",", "1", ",", "5"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"102", ",", "2", ",", "6"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"103", ",", "3", ",", "7"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DirectedEdge", "[", 
        RowBox[{"104", ",", "77", ",", "8"}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"EdgeLabels", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Box1L", "=", 
   RowBox[{"AssignSignatures", "[", 
    RowBox[{"Box1L", ",", 
     RowBox[{"masses", "->", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"1", "->", "1"}], ",", 
        RowBox[{"2", "->", "2"}], ",", 
        RowBox[{"3", "->", "3"}], ",", 
        RowBox[{"4", "->", "3"}]}], "|>"}]}], ",", 
     RowBox[{"lmb", "->", 
      RowBox[{"{", "4", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Box1L", "=", 
  RowBox[{"DirectedGraph", "[", 
   RowBox[{"Box1L", ",", 
    RowBox[{"VertexLabels", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "275"}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<HighDimensionalEmbedding\>\""}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"EdgeLabels", "->", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"e", "->", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\"\<q\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"e", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"DirectedEdge", "[", 
                    RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", 
                   "props"}], "}"}]}], ")"}], "[", "\"\<id\>\"", "]"}], ")"}],
              "]"}]}], ")"}], ",", 
          RowBox[{"FontSize", "\[Rule]", "20"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"e", ",", 
         RowBox[{"EdgeList", "[", "Box1L", "]"}]}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.872742741603726*^9, 3.872742775586288*^9}, {
   3.872743362817617*^9, 3.872743387499469*^9}, {3.872743487367777*^9, 
   3.872743524782481*^9}, {3.872743958621933*^9, 3.872743975587399*^9}, {
   3.872744266098577*^9, 3.872744273043355*^9}, {3.872744435398158*^9, 
   3.872744461440112*^9}, {3.872745114500924*^9, 3.8727451300396833`*^9}, {
   3.872745772099901*^9, 3.872745776468544*^9}, 3.872786297553876*^9, {
   3.872789807179264*^9, 3.8727898494597893`*^9}, {3.8727899530754137`*^9, 
   3.87278998200391*^9}, 3.8727931259976683`*^9, {3.872920078463521*^9, 
   3.8729201109695063`*^9}, {3.872920144235427*^9, 3.872920159421647*^9}, {
   3.8729238516510687`*^9, 3.872923854849904*^9}, {3.872926388991707*^9, 
   3.872926423748941*^9}, {3.872926497819352*^9, 3.872926717448036*^9}, {
   3.937029477469689*^9, 3.9370295236741343`*^9}, {3.93704154838531*^9, 
   3.937041579088908*^9}, {3.93704162434651*^9, 3.937041626865746*^9}, {
   3.937042549739942*^9, 3.9370425540260887`*^9}, {3.937049644336658*^9, 
   3.937049648682721*^9}, {3.958115760324025*^9, 3.9581157871290007`*^9}, {
   3.9581158725615273`*^9, 3.958115872616946*^9}, {3.958131485089891*^9, 
   3.9581315199265738`*^9}, {3.9581317970114317`*^9, 
   3.9581317984630623`*^9}, {3.9581318821621532`*^9, 
   3.9581318998381557`*^9}, {3.958132682231254*^9, 3.958132687317069*^9}, {
   3.958214975493361*^9, 3.958215015593615*^9}, {3.95821535763055*^9, 
   3.9582154555070972`*^9}, {3.958215882588106*^9, 3.958215886763986*^9}, {
   3.958216107036022*^9, 3.958216107159667*^9}, {3.95821814585458*^9, 
   3.958218149631297*^9}},
 CellLabel->
  "In[1115]:=",ExpressionUUID->"58d0d7b4-594d-47a3-b9b3-25e2d40b64c8"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 77, 101, 102, 103, 
      104}, {{{1, 2}, {2, 3}, {3, 4}, {4, 1}, {5, 1}, {6, 2}, {7, 3}, {8, 4}},
        Null, {<|"id" -> 1, "sig" -> {{1}, {1, 0, 0, 0}}, "mass" -> 1|>, <|
        "id" -> 2, "sig" -> {{1}, {1, 1, 0, 0}}, "mass" -> 2|>, <|
        "id" -> 3, "sig" -> {{1}, {1, 1, 1, 0}}, "mass" -> 3|>, <|
        "id" -> 4, "sig" -> {{1}, {0, 0, 0, 0}}, "mass" -> 3|>, <|
        "id" -> 5, "sig" -> {{0}, {1, 0, 0, 0}}, "mass" -> 0|>, <|
        "id" -> 6, "sig" -> {{0}, {0, 1, 0, 0}}, "mass" -> 0|>, <|
        "id" -> 7, "sig" -> {{0}, {0, 0, 1, 0}}, "mass" -> 0|>, <|
        "id" -> 8, "sig" -> {{0}, {0, 0, 0, 1}}, "mass" -> 0|>}}, {
      EdgeLabels -> {
        DirectedEdge[
          101, 1, <|"id" -> 5, "sig" -> {{0}, {1, 0, 0, 0}}, "mass" -> 0|>] -> 
         Style["q5", FontSize -> 20], 
         DirectedEdge[
          2, 3, <|"id" -> 2, "sig" -> {{1}, {1, 1, 0, 0}}, "mass" -> 2|>] -> 
         Style["q2", FontSize -> 20], 
         DirectedEdge[
          1, 2, <|"id" -> 1, "sig" -> {{1}, {1, 0, 0, 0}}, "mass" -> 1|>] -> 
         Style["q1", FontSize -> 20], 
         DirectedEdge[
          104, 77, <|"id" -> 8, "sig" -> {{0}, {0, 0, 0, 1}}, "mass" -> 0|>] -> 
         Style["q8", FontSize -> 20], 
         DirectedEdge[
          3, 77, <|"id" -> 3, "sig" -> {{1}, {1, 1, 1, 0}}, "mass" -> 3|>] -> 
         Style["q3", FontSize -> 20], 
         DirectedEdge[
          77, 1, <|"id" -> 4, "sig" -> {{1}, {0, 0, 0, 0}}, "mass" -> 3|>] -> 
         Style["q4", FontSize -> 20], 
         DirectedEdge[
          103, 3, <|"id" -> 7, "sig" -> {{0}, {0, 0, 1, 0}}, "mass" -> 0|>] -> 
         Style["q7", FontSize -> 20], 
         DirectedEdge[
          102, 2, <|"id" -> 6, "sig" -> {{0}, {0, 1, 0, 0}}, "mass" -> 0|>] -> 
         Style["q6", FontSize -> 20]}, GraphLayout -> 
       "HighDimensionalEmbedding", ImageSize -> 275, 
       VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {
         ArrowBox[{{0.40619658566537997`, 0.4249395752364671}, {
          1.7019333595357842`, 0.4061965856653815}}, 0.023632649466343858`], 
         InsetBox[
          StyleBox["\<\"q1\"\>",
           StripOnInput->False,
           FontSize->20], {1.0540649726005822, 0.4155680804509243}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.7019333595357842`, 0.4061965856653815}, {
          1.720676349106869, 1.7019333595357857`}}, 0.023632649466343858`], 
         InsetBox[
          StyleBox["\<\"q2\"\>",
           StripOnInput->False,
           FontSize->20], {1.7113048543213267, 1.0540649726005835}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1.720676349106869, 1.7019333595357857`}, {
          0.42493957523646486`, 1.720676349106871}}, 0.023632649466343858`], 
         InsetBox[
          StyleBox["\<\"q3\"\>",
           StripOnInput->False,
           FontSize->20], {1.0728079621716669, 1.7113048543213285}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.42493957523646486`, 1.720676349106871}, {
          0.40619658566537997`, 0.4249395752364671}}, 0.023632649466343858`], 
         InsetBox[
          StyleBox["\<\"q4\"\>",
           StripOnInput->False,
           FontSize->20], {0.4155680804509224, 1.072807962171669}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 0.030326794176800398`}, {0.40619658566537997`, 
          0.4249395752364671}}, 0.023632649466343858`], InsetBox[
          StyleBox["\<\"q5\"\>",
           StripOnInput->False,
           FontSize->20], {0.20309829283268999, 0.22763318470663374}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2.096546140595451, 0.}, {1.7019333595357842`, 
          0.4061965856653815}}, 0.023632649466343858`], InsetBox[
          StyleBox["\<\"q6\"\>",
           StripOnInput->False,
           FontSize->20], {1.8992397500656175, 0.20309829283269076}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2.1268729347722504`, 2.09654614059545}, {
          1.720676349106869, 1.7019333595357857`}}, 0.023632649466343858`], 
         InsetBox[
          StyleBox["\<\"q7\"\>",
           StripOnInput->False,
           FontSize->20], {1.9237746419395596, 1.8992397500656177}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0.03032679417680062, 2.126872934772251}, {
          0.42493957523646486`, 1.720676349106871}}, 0.023632649466343858`], 
         InsetBox[
          StyleBox["\<\"q8\"\>",
           StripOnInput->False,
           FontSize->20], {0.22763318470663274, 1.923774641939561}, 
          ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.40619658566537997`, 0.4249395752364671}, 
          0.023632649466343858], 
         InsetBox["1", 
          Offset[{2, 2}, {0.42982923513172383, 0.44857222470281094}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.7019333595357842`, 0.4061965856653815}, 
          0.023632649466343858], 
         InsetBox["2", 
          Offset[{2, 2}, {1.725566009002128, 0.4298292351317254}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.720676349106869, 1.7019333595357857`}, 
          0.023632649466343858], 
         InsetBox["3", 
          Offset[{2, 2}, {1.744308998573213, 1.7255660090021296}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.42493957523646486`, 1.720676349106871}, 
          0.023632649466343858], 
         InsetBox["77", 
          Offset[{2, 2}, {0.4485722247028087, 1.744308998573215}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 0.030326794176800398`}, 0.023632649466343858], 
         InsetBox["101", 
          Offset[{2, 2}, {0.023632649466343858, 0.053959443643144256}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.096546140595451, 0.}, 0.023632649466343858], 
         InsetBox["102", 
          Offset[{2, 2}, {2.1201787900617948, 0.023632649466343858}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.1268729347722504`, 2.09654614059545}, 
          0.023632649466343858], 
         InsetBox["103", 
          Offset[{2, 2}, {2.1505055842385943, 2.120178790061794}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.03032679417680062, 2.126872934772251}, 
          0.023632649466343858], 
         InsetBox["104", 
          Offset[{2, 2}, {0.05395944364314448, 2.1505055842385947}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->275]], "Output",
 CellChangeTimes->{
  3.958215380298658*^9, 3.958215412551552*^9, 3.958215462347405*^9, 
   3.95821588742549*^9, 3.958216108618545*^9, 3.958216143494138*^9, 
   3.9582181502337*^9, 3.958218191977079*^9, {3.958218366941925*^9, 
   3.95821841596458*^9}, 3.958218978333438*^9},
 CellLabel->
  "Out[1117]=",ExpressionUUID->"1df1643e-0b76-4620-bfdd-fce470237554"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dataset", "[", 
  RowBox[{"Association", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "[", "\"\<id\>\"", "]"}], "->", 
          RowBox[{"#", "[", "\"\<sig\>\"", "]"}]}], ")"}], "&"}], ")"}], "[", 
      
      RowBox[{"e", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"DirectedEdge", "[", 
          RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", "props"}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", 
       RowBox[{"EdgeList", "[", "Tri1L", "]"}]}], "}"}]}], "]"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dataset", "[", 
  RowBox[{"Association", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"#", "[", "\"\<id\>\"", "]"}], "->", 
          RowBox[{"#", "[", "\"\<sig\>\"", "]"}]}], ")"}], "&"}], ")"}], "[", 
      
      RowBox[{"e", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"DirectedEdge", "[", 
          RowBox[{"_", ",", "_", ",", "props_"}], "]"}], ":>", "props"}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", 
       RowBox[{"EdgeList", "[", "Box1L", "]"}]}], "}"}]}], "]"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9582159957530403`*^9, 3.958216014483409*^9}},
 CellLabel->
  "In[1118]:=",ExpressionUUID->"97f9b9c8-9edc-43e0-9c02-6e76f1ec957f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1}, {1, 0, 0}}, 2 -> {{1}, {1, 1, 0}}, 3 -> {{1}, {0, 0, 0}}, 
       4 -> {{0}, {1, 0, 0}}, 5 -> {{0}, {0, 1, 0}}, 6 -> {{0}, {0, 0, 1}}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`UnknownShape[False], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 2, {All}]]], 6, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Tuple[{
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 1], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3]}], 6], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`UnknownShape[False], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 2, {All}]]], 6, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Tuple[{
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 1], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 3]}], 6], "Path" -> {}, 
     "DisplayedRowCount" -> 6, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     6, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 0, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 0, 0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0, 0, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0, 0, 0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 0, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 0, 0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0, 1, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0, 1, 0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0, 0, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0, 0, 1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       117.95652083333334`, {77.42755126953125, 83.15948486328125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      117.95652083333334`, {77.42755126953125, 83.15948486328125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.958215998697022*^9, 3.9582160147710733`*^9}, {
   3.958216118663315*^9, 3.958216148114704*^9}, {3.9582183727035713`*^9, 
   3.958218417692699*^9}, 3.9582189855480843`*^9},
 CellLabel->
  "Out[1118]=",ExpressionUUID->"841bed3f-5963-41dd-b253-92128e76d004"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> {{1}, {1, 0, 0, 0}}, 2 -> {{1}, {1, 1, 0, 0}}, 
       3 -> {{1}, {1, 1, 1, 0}}, 4 -> {{1}, {0, 0, 0, 0}}, 
       5 -> {{0}, {1, 0, 0, 0}}, 6 -> {{0}, {0, 1, 0, 0}}, 
       7 -> {{0}, {0, 0, 1, 0}}, 8 -> {{0}, {0, 0, 0, 1}}|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`UnknownShape[False], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 2, {All}]]], 8, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Tuple[{
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 1], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 4]}], 8], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[{
            TypeSystem`PackageScope`UnknownShape[False], 
            TypeSystem`PackageScope`UnknownShape[False]}], 
          DirectedInfinity[1], 2, {All}]]], 8, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Tuple[{
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 1], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 4]}], 8], "Path" -> {}, 
     "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 2, "DataRowCount" -> 
     8, "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 0, 0, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 0, 0, 0}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 0, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 0, 0}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1, 1, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1, 1, 0}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0, 0, 0, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0, 0, 0, 0}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 0, 0, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 0, 0, 0}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0, 1, 0, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0, 1, 0, 0}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0, 0, 1, 0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0, 0, 1, 0}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8], 1}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 1}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                  Style[
                   Style[{0, 0, 0, 1}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8], 2}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 2}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{131.7931875, {104.025390625, 109.75732421875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{131.7931875, {104.025390625, 109.75732421875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.958215998697022*^9, 3.9582160147710733`*^9}, {
   3.958216118663315*^9, 3.958216148114704*^9}, {3.9582183727035713`*^9, 
   3.958218417692699*^9}, 3.958218985592477*^9},
 CellLabel->
  "Out[1119]=",ExpressionUUID->"edd6892f-7117-42cb-a636-b9b61b8175cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Box1Lnumerics", "=", 
  RowBox[{"Join", "[", 
   RowBox[{"Tri1Lnumerics", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p4", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"p4E", "->", "0"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.958215503510625*^9, 3.958215531288932*^9}},
 CellLabel->
  "In[1120]:=",ExpressionUUID->"28f6ee0e-5bab-4466-860a-3e130c5fa690"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"k1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["2", "3"], ",", 
      FractionBox["3", "5"], ",", 
      FractionBox["5", "7"]}], "}"}]}], ",", 
   RowBox[{"p1", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["7", "11"], ",", 
      FractionBox["11", "13"], ",", 
      FractionBox["13", "17"]}], "}"}]}], ",", 
   RowBox[{"p2", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["17", "19"], ",", 
      FractionBox["19", "23"], ",", 
      FractionBox["23", "29"]}], "}"}]}], ",", 
   RowBox[{"p1E", "\[Rule]", 
    FractionBox["29", "31"]}], ",", 
   RowBox[{"p2E", "\[Rule]", 
    FractionBox["31", "37"]}], ",", 
   RowBox[{"p3", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["320", "209"]}], ",", 
      RowBox[{"-", 
       FractionBox["500", "299"]}], ",", 
      RowBox[{"-", 
       FractionBox["768", "493"]}]}], "}"}]}], ",", 
   RowBox[{"p3E", "\[Rule]", 
    RowBox[{"-", 
     FractionBox["2034", "1147"]}]}], ",", 
   RowBox[{"p4", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"p4E", "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9582155349676313`*^9, 3.958215588369166*^9, 3.958216163837317*^9, {
   3.958218374751883*^9, 3.958218419267791*^9}, 3.958218987006969*^9},
 CellLabel->
  "Out[1120]=",ExpressionUUID->"f6cb379f-8a0c-4e6a-84bb-aaaf69fa5dd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Total", "[", 
     RowBox[{"Values", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"<|", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<cFFexpr\>\"", "->", 
             RowBox[{"ConvertCFFFormat", "[", 
              RowBox[{
               RowBox[{"CrossFreeFamilyLTD", "[", 
                RowBox[{"Box1L", ",", 
                 RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}],
                ",", "Box1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<num\>\"", "->", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<graph\>\"", "->", "Box1L"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<dots\>\"", "->", 
             RowBox[{"<|", "|>"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
          "\[IndentingNewLine]", "Box1Lnumerics"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", "->", "1"}], "}"}]}], ")"}], "]"}], "]"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"Total", "[", 
     RowBox[{"Values", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ComputeSubtractionTerm", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"<|", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<cFFexpr\>\"", "->", 
             RowBox[{"ConvertCFFFormat", "[", 
              RowBox[{
               RowBox[{"CrossFreeFamilyLTD", "[", 
                RowBox[{"Tri1L", ",", 
                 RowBox[{"ConvertToNormalisedFormat", "->", "True"}]}], "]"}],
                ",", "Tri1L"}], "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<num\>\"", "->", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{"\"\<graph\>\"", "->", "Tri1L"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<dots\>\"", "->", 
             RowBox[{"<|", 
              RowBox[{"3", "->", "2"}], "|>"}]}]}], "\[IndentingNewLine]", 
           "|>"}], ",", "\[IndentingNewLine]", "Tri1Lnumerics"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", "->", "1"}], "}"}]}], ")"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], "//", "N"}], "\[IndentingNewLine]", 
 FractionBox[
  RowBox[{"%", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
  RowBox[{
  "%", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]]}], "Input",
 CellChangeTimes->{{3.95821511934194*^9, 3.958215180460485*^9}, {
  3.958215225912034*^9, 3.958215242666206*^9}, {3.958215311824473*^9, 
  3.958215345595718*^9}, {3.958215428265423*^9, 3.958215430005436*^9}, {
  3.958215472850917*^9, 3.9582154887785683`*^9}, {3.9582155455805473`*^9, 
  3.958215653641453*^9}, {3.958215712769088*^9, 3.95821572300959*^9}, {
  3.9582159236832952`*^9, 3.9582159269775467`*^9}, {3.9582161692820187`*^9, 
  3.95821616950447*^9}, {3.958216244887864*^9, 3.958216253918592*^9}, {
  3.958216424828354*^9, 3.9582164497859917`*^9}, {3.958216600438098*^9, 
  3.958216629671176*^9}, {3.958216778723617*^9, 3.958216839650572*^9}, {
  3.9582168699715843`*^9, 3.95821703473981*^9}},
 CellLabel->
  "In[1123]:=",ExpressionUUID->"c71b7d50-20f1-4b87-b3c3-298e43b7ecfc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000039994574955517146`", ",", 
   RowBox[{"-", "0.00003999457495551715`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.958215546305443*^9, {3.9582155861213818`*^9, 3.9582156543661413`*^9}, {
   3.958215721695469*^9, 3.958215723311625*^9}, {3.958215921063785*^9, 
   3.958215927401658*^9}, {3.958216164964287*^9, 3.958216169852586*^9}, {
   3.9582162479087353`*^9, 3.9582162544265327`*^9}, {3.9582164253376207`*^9, 
   3.9582164667559843`*^9}, {3.958216603490152*^9, 3.9582166300340157`*^9}, {
   3.9582167953583603`*^9, 3.958216840745352*^9}, {3.9582168709237633`*^9, 
   3.9582169313345337`*^9}, {3.958216974449087*^9, 3.9582170350785713`*^9}, 
   3.958218156036471*^9, {3.958218395318081*^9, 3.9582184200250196`*^9}, 
   3.9582187468034*^9, 3.958218949437909*^9, {3.9582189921290073`*^9, 
   3.958219009668879*^9}},
 CellLabel->
  "Out[1123]=",ExpressionUUID->"3c31ce11-c800-4aa7-9899-1fa4fdf317e9"],

Cell[BoxData[
 RowBox[{"-", "0.9999999999999999`"}]], "Output",
 CellChangeTimes->{
  3.958215546305443*^9, {3.9582155861213818`*^9, 3.9582156543661413`*^9}, {
   3.958215721695469*^9, 3.958215723311625*^9}, {3.958215921063785*^9, 
   3.958215927401658*^9}, {3.958216164964287*^9, 3.958216169852586*^9}, {
   3.9582162479087353`*^9, 3.9582162544265327`*^9}, {3.9582164253376207`*^9, 
   3.9582164667559843`*^9}, {3.958216603490152*^9, 3.9582166300340157`*^9}, {
   3.9582167953583603`*^9, 3.958216840745352*^9}, {3.9582168709237633`*^9, 
   3.9582169313345337`*^9}, {3.958216974449087*^9, 3.9582170350785713`*^9}, 
   3.958218156036471*^9, {3.958218395318081*^9, 3.9582184200250196`*^9}, 
   3.9582187468034*^9, 3.958218949437909*^9, {3.9582189921290073`*^9, 
   3.9582190096698503`*^9}},
 CellLabel->
  "Out[1124]=",ExpressionUUID->"0b5f3bb4-423d-4b1c-b8e8-5274c779f9aa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1884, 1208},
WindowMargins->{{Automatic, -136}, {Automatic, -1378}},
FrontEndVersion->"14.1 for Mac OS X ARM (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2fb592ab-5434-469f-a48d-7a023bf4de47"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 181, 3, 96, "Title",ExpressionUUID->"e2892c96-def7-4eae-9f3c-ef2a1402fb25"],
Cell[CellGroupData[{
Cell[782, 29, 152, 3, 66, "Section",ExpressionUUID->"9845d290-c363-4342-9a58-5ab30c995a83"],
Cell[937, 34, 267, 6, 29, "Input",ExpressionUUID->"81440eed-2a79-4b77-beaa-f59d5701b080"],
Cell[1207, 42, 297, 7, 29, "Input",ExpressionUUID->"f37c8551-fbc1-45aa-b3e1-d27ba2222239"],
Cell[1507, 51, 328, 8, 29, "Input",ExpressionUUID->"d5a94f66-97eb-4f28-9221-3ad73fde9c26"],
Cell[1838, 61, 278, 7, 29, "Input",ExpressionUUID->"dfdd94b4-624c-4a6c-bf82-4c2c1aac2ef6"],
Cell[CellGroupData[{
Cell[2141, 72, 1151, 25, 172, "Input",ExpressionUUID->"5d2a1c71-ef17-4475-8233-b549d738e0ab"],
Cell[3295, 99, 2149, 56, 232, "Output",ExpressionUUID->"c11378e5-6038-46c9-a082-6ae312a36e48"]
}, Open  ]],
Cell[5459, 158, 5701, 129, 580, "Input",ExpressionUUID->"7cd5fdd8-93f9-4070-810c-bdaac2c81cfe"],
Cell[11163, 289, 1505, 38, 131, "Input",ExpressionUUID->"5f8a966e-0fb0-41c9-a653-1a1aa2b5ce18"],
Cell[12671, 329, 716, 20, 49, "Input",ExpressionUUID->"278253d2-e16e-4365-81ad-9c441168f610"],
Cell[13390, 351, 1273, 37, 29, "Input",ExpressionUUID->"4ee31d5e-bd41-44cd-91d4-d9b7c07f91fe"],
Cell[14666, 390, 530, 13, 29, "Input",ExpressionUUID->"a7c38016-4599-457d-be06-da395936dd1b"],
Cell[15199, 405, 4766, 107, 495, "Input",ExpressionUUID->"7f21a450-6990-4549-bf81-a9547934e292"],
Cell[19968, 514, 20287, 465, 1774, "Input",ExpressionUUID->"b61e60cb-6528-44e9-94b1-b6bf3f4a315f"],
Cell[40258, 981, 5889, 129, 539, "Input",ExpressionUUID->"e4e9031f-4cce-4cdf-8871-04d8e7e37f05"],
Cell[46150, 1112, 9119, 215, 805, "Input",ExpressionUUID->"bd08eadb-bdef-468a-88bf-d2e3be5292c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55306, 1332, 148, 3, 66, "Section",ExpressionUUID->"46c9d524-eb15-445c-82cd-8559441d1dde"],
Cell[CellGroupData[{
Cell[55479, 1339, 201, 4, 53, "Subsection",ExpressionUUID->"ad52ae42-a024-4f3b-9b6f-0cdf9b49a761"],
Cell[CellGroupData[{
Cell[55705, 1347, 4113, 91, 254, "Input",ExpressionUUID->"b1326d8e-b0d9-4fed-9f31-5ea43930d4c6"],
Cell[59821, 1440, 7992, 158, 254, "Output",ExpressionUUID->"daa42754-878f-49a6-b611-0243a52d9735"]
}, Open  ]],
Cell[67828, 1601, 595, 16, 29, "Input",ExpressionUUID->"47778b46-27d8-40f3-87a1-fc52080618de"],
Cell[CellGroupData[{
Cell[68448, 1621, 726, 19, 29, "Input",ExpressionUUID->"afc8e5ca-9dd7-4f9c-a76f-35ae411ffe65"],
Cell[69177, 1642, 44213, 834, 204, "Output",ExpressionUUID->"75e7df12-54bf-4320-a42a-b14138f8ca8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113427, 2481, 2350, 56, 120, "Input",ExpressionUUID->"99c532f3-105f-494c-bcf2-19efb039b936"],
Cell[115780, 2539, 3767, 76, 53, "Output",ExpressionUUID->"3142354d-25a1-40ed-8a7e-5776807015e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119584, 2620, 248, 6, 29, "Input",ExpressionUUID->"0c332a40-0016-4ca1-9dc2-88ec8cbf5f9e"],
Cell[119835, 2628, 1571, 45, 46, "Output",ExpressionUUID->"52bf297c-0eed-4b21-88d5-ba0a0efcf889"]
}, Open  ]],
Cell[121421, 2676, 227, 5, 33, "Text",ExpressionUUID->"a2f47a67-1bce-45b4-a763-35c10f3f52da"],
Cell[121651, 2683, 855, 20, 33, "Input",ExpressionUUID->"9eb9aeb1-155c-40bc-9e6d-2e476cf9be92"],
Cell[122509, 2705, 1468, 39, 131, "Input",ExpressionUUID->"706e0a8e-aff5-49cd-8d48-644e43ff98a9"],
Cell[CellGroupData[{
Cell[124002, 2748, 4695, 115, 437, "Input",ExpressionUUID->"63fdb82e-4b88-444f-8c7a-23e1af2f029d"],
Cell[128700, 2865, 1085, 26, 33, "Output",ExpressionUUID->"6fbe13e5-98a6-47a9-913f-3fb0d65c6862"]
}, Open  ]],
Cell[129800, 2894, 542, 16, 29, "Input",ExpressionUUID->"c0dc6d24-8c48-4f22-932b-a67f1b985932"],
Cell[130345, 2912, 1256, 25, 151, "Input",ExpressionUUID->"1b73b34e-3cc1-47bf-81f6-6e2a7362d40b"],
Cell[CellGroupData[{
Cell[131626, 2941, 510, 15, 42, "Input",ExpressionUUID->"fb6a88a2-3c49-4d67-befe-85019d85f08e"],
Cell[132139, 2958, 2661, 80, 53, "Output",ExpressionUUID->"a79409ae-57c7-425f-897c-e1b20c95f628"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134837, 3043, 378, 9, 29, "Input",ExpressionUUID->"4357af1e-3785-49c9-9b0a-8eaf9d0bd06a"],
Cell[135218, 3054, 1902, 47, 41, "Output",ExpressionUUID->"fb1a7780-9b15-4f86-9679-8bcd170975c8"]
}, Open  ]],
Cell[137135, 3104, 191, 3, 33, "Text",ExpressionUUID->"9889a60d-0c80-4496-be49-6d6b6a7df728"],
Cell[CellGroupData[{
Cell[137351, 3111, 2331, 55, 376, "Input",ExpressionUUID->"79ff8c1e-8ff6-4554-a405-9844099be7db"],
Cell[139685, 3168, 558, 9, 33, "Output",ExpressionUUID->"a6bae7ea-4d0f-425a-acab-307c14ad097d"]
}, Open  ]],
Cell[140258, 3180, 159, 3, 33, "Text",ExpressionUUID->"e611dadd-7427-4a22-8d81-490ec73f5b9d"],
Cell[CellGroupData[{
Cell[140442, 3187, 1102, 26, 172, "Input",ExpressionUUID->"e5070416-ba0d-4e84-975c-eedca399da09"],
Cell[141547, 3215, 847, 20, 49, "Output",ExpressionUUID->"c5834b06-ffb9-465a-a8a3-be494a0c421a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142431, 3240, 1058, 25, 172, "Input",ExpressionUUID->"97535802-e35a-4e21-abf8-c18afdef3afe"],
Cell[143492, 3267, 638, 17, 49, "Output",ExpressionUUID->"46a5a533-a745-4371-872d-f4f1f393695c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144167, 3289, 1425, 35, 178, "Input",ExpressionUUID->"c7534b21-8ef0-4e46-bcce-15870b0aa260"],
Cell[145595, 3326, 3328, 94, 62, "Output",ExpressionUUID->"c7fd4cc1-ec55-4426-a49a-0ac8fe9b1e23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148960, 3425, 2652, 65, 387, "Input",ExpressionUUID->"5c0a5c34-2ae7-44d7-b846-4919d1daebc9"],
Cell[151615, 3492, 397, 6, 33, "Output",ExpressionUUID->"02fd81c1-2024-4b13-ba34-d1bf2cef0398"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152049, 3503, 3098, 75, 364, "Input",ExpressionUUID->"b839aa68-8d08-4118-9266-010446063b11"],
Cell[155150, 3580, 518, 8, 33, "Output",ExpressionUUID->"bb789598-20e2-4b93-b5cf-daba0d3dd6cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155705, 3593, 2952, 75, 172, "Input",ExpressionUUID->"c64629b9-cdd8-4067-8307-32403ee538c3"],
Cell[158660, 3670, 3448, 75, 266, "Output",ExpressionUUID->"8210b271-0dc2-41c2-a46f-13109ddfd30c"]
}, Open  ]],
Cell[162123, 3748, 367, 9, 29, "Input",ExpressionUUID->"6e3de9a9-81cc-477d-9e0f-7083b83919e6"],
Cell[162493, 3759, 285, 7, 29, "Input",ExpressionUUID->"5e1068f2-259d-4f37-b367-4be6395a4ef1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162815, 3771, 269, 4, 53, "Subsection",ExpressionUUID->"edf03b76-6a46-4a58-8bab-86bc3e5c0fdf"],
Cell[CellGroupData[{
Cell[163109, 3779, 1942, 45, 43, "Input",ExpressionUUID->"64f4bbd0-1333-40e4-873d-8b96bf20e7c7"],
Cell[165054, 3826, 3822, 94, 70, "Output",ExpressionUUID->"5269402b-ea52-4bb7-9336-954e34386ec5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168913, 3925, 2867, 67, 356, "Input",ExpressionUUID->"a70ff70e-569c-4b1a-8059-51b6e7b341eb"],
Cell[171783, 3994, 2630, 76, 70, "Output",ExpressionUUID->"aa54603a-8485-43e9-af20-365092adea55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174450, 4075, 812, 21, 31, "Input",ExpressionUUID->"365e5aaa-042e-4576-bf22-cdb8e6e43964"],
Cell[175265, 4098, 3045, 82, 70, "Output",ExpressionUUID->"78500ec1-3676-4c2a-8b22-fe87128ad8fd"]
}, Open  ]],
Cell[178325, 4183, 488, 11, 29, "Input",ExpressionUUID->"fdabc246-3d0e-49e3-832e-ddc851aa6329"],
Cell[CellGroupData[{
Cell[178838, 4198, 146, 2, 29, "Input",ExpressionUUID->"58df0c52-5f33-41ca-a2fb-cf0de4eee220"],
Cell[178987, 4202, 3082, 83, 70, "Output",ExpressionUUID->"440b0504-5703-437c-aa1f-31972c8400d2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[182118, 4291, 645, 15, 37, "Subsection",ExpressionUUID->"d4fb6bb8-4e73-4a4d-89e0-e11689251643"],
Cell[CellGroupData[{
Cell[182788, 4310, 191, 4, 29, "Input",ExpressionUUID->"da7f6ea9-da4d-41ca-b487-7940f5e5f720"],
Cell[182982, 4316, 2650, 76, 70, "Output",ExpressionUUID->"660889dc-6338-47fb-8055-1904c86634c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185669, 4397, 1407, 42, 29, "Input",ExpressionUUID->"3e4e4cd3-0882-4f06-94f1-c9ee2febad9e"],
Cell[187079, 4441, 669, 17, 70, "Output",ExpressionUUID->"f7808603-d6d4-4766-b6c1-573e1d8588f3"]
}, Open  ]],
Cell[187763, 4461, 1599, 34, 254, "Input",ExpressionUUID->"da934636-e952-4c1f-b9f5-c254b13f24bd"],
Cell[189365, 4497, 1614, 39, 172, "Input",ExpressionUUID->"a941c46e-1312-4f33-8fd8-9574912eceb3"],
Cell[CellGroupData[{
Cell[191004, 4540, 373, 8, 29, "Input",ExpressionUUID->"7cb89a3b-78b9-479b-86d6-7b683775cf29"],
Cell[191380, 4550, 2212, 57, 70, "Output",ExpressionUUID->"2fd3fba7-0360-47e7-ba93-150414e5cd95"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[193641, 4613, 581, 14, 37, "Subsection",ExpressionUUID->"b1f01ddc-cf51-4e4c-9496-408348adee9b"],
Cell[CellGroupData[{
Cell[194247, 4631, 191, 4, 29, "Input",ExpressionUUID->"42c45328-c5a9-4577-91ea-5d0d3a12a9fe"],
Cell[194441, 4637, 2603, 75, 70, "Output",ExpressionUUID->"5d71eeb7-f2d6-4669-bfb5-824f4771c308"]
}, Open  ]],
Cell[197059, 4715, 777, 20, 29, "Input",ExpressionUUID->"d0d44834-7a0d-4976-aab5-46f40099cad5"],
Cell[CellGroupData[{
Cell[197861, 4739, 117, 2, 29, "Input",ExpressionUUID->"3095948d-348b-40b8-9f2e-299bed6b30d3"],
Cell[197981, 4743, 23534, 767, 70, "Output",ExpressionUUID->"fd411f85-f93b-4b91-933e-94db5f4e39b6"]
}, Open  ]],
Cell[221530, 5513, 272, 6, 33, "Text",ExpressionUUID->"b66fec3b-3de1-4de1-a041-31c09a8e1c3d"],
Cell[CellGroupData[{
Cell[221827, 5523, 223, 4, 29, "Input",ExpressionUUID->"49da4e76-d65d-4bb6-9873-f48580e245a1"],
Cell[222053, 5529, 45114, 853, 70, "Output",ExpressionUUID->"f1c42adc-b87e-4485-bdf8-eb20bd96f9ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267204, 6387, 191, 3, 29, "Input",ExpressionUUID->"937be95e-1232-4412-903d-085f0d8ec7c1"],
Cell[267398, 6392, 522, 14, 70, "Output",ExpressionUUID->"1ed291f5-b7a1-4493-b179-09b36c51112a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267957, 6411, 3647, 87, 156, "Input",ExpressionUUID->"68744136-207a-49ee-9ec0-26d60df28710"],
Cell[271607, 6500, 1849, 41, 70, "Output",ExpressionUUID->"674b98c8-8bac-4f11-9a79-54c6b9c2d336"]
}, Open  ]],
Cell[273471, 6544, 1455, 32, 254, "Input",ExpressionUUID->"f30f379d-c8d2-4c93-8295-320bc6b1aef6"],
Cell[CellGroupData[{
Cell[274951, 6580, 7111, 167, 274, "Input",ExpressionUUID->"2faead33-eacb-480d-909b-b18da565af1c"],
Cell[282065, 6749, 1490, 42, 70, "Output",ExpressionUUID->"f6753531-fd1a-44b0-a415-3c3062340821"]
}, Open  ]],
Cell[283570, 6794, 1714, 38, 274, "Input",ExpressionUUID->"e8d6c0cc-c3ba-4744-9a59-fbef1c983098"],
Cell[285287, 6834, 2634, 63, 259, "Input",ExpressionUUID->"3f4b9f3c-9c0b-43eb-b09e-5d0bee5d2039"],
Cell[287924, 6899, 2617, 62, 244, "Input",ExpressionUUID->"507f66ec-c6bc-4c75-8552-101ce5acb50b"],
Cell[CellGroupData[{
Cell[290566, 6965, 501, 10, 29, "Input",ExpressionUUID->"633c5426-132b-4ad6-9452-5038f486198b"],
Cell[291070, 6977, 3066, 73, 70, "Output",ExpressionUUID->"ae36bf91-bd56-4a79-ad03-65fa1c294e11"]
}, Open  ]],
Cell[294151, 7053, 172, 3, 33, "Text",ExpressionUUID->"648e881b-e1b6-4551-9459-e7013c93661d"],
Cell[CellGroupData[{
Cell[294348, 7060, 2215, 64, 131, "Input",ExpressionUUID->"0848370d-00a8-45e0-b1e9-da60ea53688e"],
Cell[296566, 7126, 1119, 25, 70, "Output",ExpressionUUID->"006e9721-b2f6-4c73-a385-e01d02da925a"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[297746, 7158, 220, 4, 66, "Section",ExpressionUUID->"b6262740-8e92-4a5e-a409-234b0ac3a079"],
Cell[CellGroupData[{
Cell[297991, 7166, 4215, 93, 254, "Input",ExpressionUUID->"0bcc8893-450d-40f1-9dd2-df40dbfd4d77"],
Cell[302209, 7261, 5728, 125, 254, "Output",ExpressionUUID->"9f8324ea-a0bf-4ec5-b0e1-72b2bc52bb6f"]
}, Open  ]],
Cell[307952, 7389, 1388, 34, 254, "Input",ExpressionUUID->"b8dd140b-c10e-4fac-85bc-3171a091a98a"],
Cell[CellGroupData[{
Cell[309365, 7427, 2528, 57, 407, "Input",ExpressionUUID->"5a9bc8a0-6978-4192-a70b-811e66e75237"],
Cell[311896, 7486, 1296, 38, 47, "Output",ExpressionUUID->"4e719a6d-f306-495b-b171-1d8fc75c81e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313229, 7529, 4637, 100, 294, "Input",ExpressionUUID->"58d0d7b4-594d-47a3-b9b3-25e2d40b64c8"],
Cell[317869, 7631, 7676, 166, 299, "Output",ExpressionUUID->"1df1643e-0b76-4620-bfdd-fce470237554"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325582, 7802, 1527, 47, 49, "Input",ExpressionUUID->"97f9b9c8-9edc-43e0-9c02-6e76f1ec957f"],
Cell[327112, 7851, 50148, 920, 191, "Output",ExpressionUUID->"841bed3f-5963-41dd-b253-92128e76d004"],
Cell[377263, 8773, 60169, 1111, 244, "Output",ExpressionUUID->"edd6892f-7117-42cb-a636-b9b61b8175cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437469, 9889, 455, 12, 29, "Input",ExpressionUUID->"28f6ee0e-5bab-4466-860a-3e130c5fa690"],
Cell[437927, 9903, 1470, 45, 59, "Output",ExpressionUUID->"f6cb379f-8a0c-4e6a-84bb-aaaf69fa5dd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439434, 9953, 3318, 68, 435, "Input",ExpressionUUID->"c71b7d50-20f1-4b87-b3c3-298e43b7ecfc"],
Cell[442755, 10023, 944, 16, 47, "Output",ExpressionUUID->"3c31ce11-c800-4aa7-9899-1fa4fdf317e9"],
Cell[443702, 10041, 872, 14, 66, "Output",ExpressionUUID->"0b5f3bb4-423d-4b1c-b8e8-5274c779f9aa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)


(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   4159556,      75313]
NotebookOptionsPosition[   4141964,      75057]
NotebookOutlinePosition[   4142407,      75074]
CellTagsIndexPosition[   4142364,      75071]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[Cell[TextData[{
  "Studying tri-box-box-tri of ",
  Cell[BoxData[
   FormBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["e", "+"], 
      SuperscriptBox["e", "-"]}], "\[Rule]", 
     RowBox[{"\[Gamma]", "\[Rule]", 
      RowBox[{"ht", 
       OverscriptBox["t", "_"]}]}]}], TraditionalForm]],ExpressionUUID->
   "2d5901d7-29d0-431b-b644-af33b39323f1"],
  " @ NNLO"
 }], "Title",
  CellChangeTimes->{{3.7807966586323357`*^9, 3.7807967073899517`*^9}, {
   3.780829177084405*^9, 3.780829188289502*^9}, {3.7964454755142727`*^9, 
   3.7964455614502153`*^9}, {3.803535237774467*^9, 3.8035352462631598`*^9}},
  ExpressionUUID->"d6aa4ff0-6a90-4dd4-aecf-6a154486dc07"]], "Input",
 CellChangeTimes->{{3.8141978861854153`*^9, 3.8141979203449707`*^9}, {
  3.869830582289653*^9, 3.869830614243691*^9}, {3.8698325853074083`*^9, 
  3.869832596899415*^9}, {3.871804479209033*^9, 
  3.871804515835903*^9}},ExpressionUUID->"75c08ad8-8742-429b-8916-\
fd7b9c44553e"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.869890737799162*^9, 3.8698907387555*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"82a727b7-8c17-40c9-a126-8880c8440ead"],

Cell[CellGroupData[{

Cell["Resources", "Section",
 CellChangeTimes->{{3.7964455762510366`*^9, 3.79644557746381*^9}, {
  3.872240630948633*^9, 
  3.872240633118258*^9}},ExpressionUUID->"995193f5-2a29-418a-88b6-\
a42a2ff82391"],

Cell["\<\
TODO read the info below from the supergraph once it will be available!\
\>", "Text",
 CellChangeTimes->{{3.872450595101787*^9, 
  3.8724506069976473`*^9}},ExpressionUUID->"71399c66-ab34-47e5-8230-\
0ce127e76510"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PDGtoMasses", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "->", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"-", "5"}], ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "->", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"22", "->", "0"}], ",", 
        RowBox[{"25", "->", "125."}], ",", 
        RowBox[{"21", "->", "0"}], ",", 
        RowBox[{"6", "->", "173."}], ",", 
        RowBox[{
         RowBox[{"-", "6"}], "->", "173."}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.872317141545992*^9, 3.8723172606348267`*^9}, {
  3.8723174413874598`*^9, 3.872317451469858*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"550d253f-7838-424f-a957-318649a0d572"],

Cell[CellGroupData[{

Cell["Supergraph and environment setup", "Subsection",
 CellChangeTimes->{{3.872339054271967*^9, 
  3.872339060486682*^9}},ExpressionUUID->"1383efc7-9f74-42ea-8b6e-\
d41c567ddec4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "RustBindingsPath", "=", 
   "\"\</Users/vjhirsch/MG5/3.0.2.py3/PLUGIN/aL_deformation/Mathematica\>\""}]\
, ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "AlphaLoopPath", "=", 
   "\"\</Users/vjhirsch/MG5/3.0.2.py3/PLUGIN/aL_deformation\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "PythonBinaryPath", "=", 
   "\"\</opt/local/Library/Frameworks/Python.framework/Versions/3.9/bin/\
python3\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.796445582012267*^9, 3.7964455986706867`*^9}, {
  3.796446779236306*^9, 3.79644679386008*^9}, {3.8035353708811913`*^9, 
  3.803535373807537*^9}, {3.869832445023963*^9, 3.8698324565822887`*^9}, {
  3.869889552806177*^9, 3.869889562512488*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"890b7a9e-f9ee-40e6-8b46-116e7490aac5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{
  "RustBindingsPath", "<>", "\"\</\>\"", "<>", 
   "\"\<RustFromMathematicaV2.m\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.796445600930471*^9, 3.796445627559032*^9}, {
   3.803573727218354*^9, 3.803573727620762*^9}, {3.803577831333847*^9, 
   3.803577841465876*^9}, {3.803578371196097*^9, 3.8035783770182657`*^9}, {
   3.803578628527603*^9, 3.803578634526717*^9}, {3.803578870247346*^9, 
   3.803578875443825*^9}, 3.869890735382346*^9, 3.871804529699253*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"c91f7964-d9ea-4293-905b-8d982f6a6243"],

Cell[BoxData["\<\"\\nPackage for accessing alphaLoop implementation in \
Rust.\\nThis V2 version uses the faster approach of \
StartExternalSession[Python] to talk to alphaLoop.\\n\\nVariables you may \
want to overwrite are:\\n\\nRFM$LTDFolder = <Path>;\\nRFM$PythonInterpreter = \
<Path>;\\nRFM$CUBAPath = <Path>;\\nRFM$SCSPath=<Path>;\\nRFM$ECOSPath=<Path>;\
\\n\\nThe function: \
\\nRFM$GetLTDHook[name_,OptionsPattern[\\n{\\nRunMode->'LTD',\\\
nHyperparametersPath->'LTD/hyperparameters.yaml',\\nTopologiesPath->'LTD/\
topologies.yaml',\\nAmplitudesPath->'LTD/anplitudes.yaml',\\nDEBUG->False\\n}\
\\n\\nAllows you to generate a hook, which will automatically be placed in \
the list:\\n\\nRFM$AllHooksStarted\\n\\nThen you can test that one hook is \
active with:\\n\\nRFM$CheckHookStatus[hook_]\\n\\nAnd use them to access \
information from Rust with the following three API entry points (for now):\\n\
\\nRFM$GetLTDDeformation[hook_, \
RealMomenta_,OptionsPattern[DEBUG->False]]\\nRFM$GetCrossSectionDeformation[\
hook_, CutID_,RealMomenta_,OptionsPattern[DEBUG->False]]\\nRFM$GetRescaling[\
hook_, CutID_,RealMomenta_,OptionsPattern[DEBUG->False]]\\nRFM$Parameterize[\
hook_,LoopIndex_,ECM_,Xs_,OptionsPattern[{DEBUG->False,f128->False}]]\\nRFM$\
InvParameterize[hook_,LoopIndex_,ECM_,Momentum_,OptionsPattern[{DEBUG->False,\
f128->False}]]\\nRFM$Evaluate[hook_,Momenta_,OptionsPattern[{DEBUG->False,\
f128->False}]]\\nRFM$EvaluateCut[hook_,CutID_,scalingFactor_, \
scalingFactorJacobian_,Momenta_,OptionsPattern[{DEBUG->False,f128->False}]]\\\
nRFM$EvaluateIntegrand[hook_,Xs_,OptionsPattern[{DEBUG->False,f128->False}]]\\\
n\\nSet your environment variables as follows:\\n\\nRFM$CUBAPath = \
\\\"<PATHTO>/Cuba-4.2/lib\\\";\\nRFM$SCSPath=\\\"<PATHTO>/scs/out\\\";\\nRFM$\
ECOSPath=\\\"<PATHTO>/ecos\\\";\\nRFM$DYLDPATHS=RFM$CUBAPath<>\\\":\\\"<>RFM$\
SCSPath<>\\\":\\\"<>RFM$ECOSPath;\\n\\nand then call:\\nRFM$SetEnvironment[];\
\\n\\n\"\>"], "Print",
 CellChangeTimes->{
  3.796445628082349*^9, 3.7964473875241413`*^9, 3.7964610415519123`*^9, 
   3.796461149621118*^9, 3.79647038558535*^9, 3.796472047794139*^9, 
   3.796476011208891*^9, {3.7964766864516172`*^9, 3.7964767108784122`*^9}, 
   3.796478262378624*^9, {3.796487845654831*^9, 3.7964878503132*^9}, 
   3.796490457217101*^9, 3.7965367088385973`*^9, 3.796537178645258*^9, 
   3.796537290497519*^9, 3.7965391042190332`*^9, 3.796539268163827*^9, {
   3.79654035938593*^9, 3.796540363719425*^9}, {3.79654388553158*^9, 
   3.796543888936514*^9}, 3.7965531073470984`*^9, 3.796556453524914*^9, 
   3.7965571392545223`*^9, 3.796559414961602*^9, 3.7965606710980864`*^9, 
   3.7965633136673527`*^9, 3.7965662964713993`*^9, 3.7965676044489737`*^9, 
   3.796569604907051*^9, 3.796572617859586*^9, 3.796574113153784*^9, {
   3.796575206330846*^9, 3.796575208505209*^9}, 3.7965754213373203`*^9, {
   3.796575494400765*^9, 3.796575511274355*^9}, 3.796575784580138*^9, 
   3.7965762388224916`*^9, 3.796578897793563*^9, 3.79657894722754*^9, 
   3.7966170607279797`*^9, 3.796620139360446*^9, 3.796620185747966*^9, 
   3.7966223789593067`*^9, 3.7966228111313763`*^9, 3.7966233974388103`*^9, 
   3.796624055752338*^9, {3.796624109290764*^9, 3.7966241140777473`*^9}, {
   3.796625769971937*^9, 3.796625818752914*^9}, 3.796626591182581*^9, 
   3.796626651257782*^9, 3.796626986090176*^9, 3.796633795406393*^9, 
   3.796657662515171*^9, 3.796662195190195*^9, 3.796662637735379*^9, 
   3.796665777583192*^9, 3.796735088585182*^9, 3.7967357969807863`*^9, 
   3.7967359911024027`*^9, 3.7967363140168858`*^9, 3.796736720784162*^9, {
   3.796737903635582*^9, 3.7967379064083357`*^9}, 3.796747059038856*^9, {
   3.796796991961732*^9, 3.796796995772257*^9}, 3.8035353800308723`*^9, 
   3.8035503437494593`*^9, 3.803569994531438*^9, 3.803573745829747*^9, 
   3.8035738163149643`*^9, 3.8035762859490623`*^9, 3.803576632291423*^9, 
   3.803577847937641*^9, 3.803578024412691*^9, 3.8035784495430317`*^9, 
   3.8035786401613493`*^9, 3.803578881036797*^9, 3.80359430255407*^9, 
   3.803595979193955*^9, 3.803598118689124*^9, 3.803662103189198*^9, 
   3.8037974123160048`*^9, 3.803801410299313*^9, {3.80380209636898*^9, 
   3.8038021199286013`*^9}, 3.803813829686274*^9, 3.803813966359231*^9, 
   3.8141979675261087`*^9, 3.814200773325562*^9, 3.8698888499206753`*^9, {
   3.86988982690381*^9, 3.8698898362329903`*^9}, 3.869889986383194*^9, 
   3.86989003163078*^9, {3.869890713258222*^9, 3.8698907317920933`*^9}, 
   3.8698907929242573`*^9, 3.869891149192083*^9, 3.8698914592246304`*^9, {
   3.869892968780298*^9, 3.8698929918186817`*^9}, 3.869893186862378*^9, 
   3.87180453319413*^9, 3.8718135958440247`*^9, 3.871884297464089*^9, 
   3.871884438871134*^9, 3.871884553313921*^9, 3.871885842164173*^9, 
   3.872220681107195*^9, 3.872240638219569*^9, 3.872241573422701*^9, 
   3.8722418342278976`*^9, 3.8722420585333443`*^9, 3.872321390567339*^9, 
   3.872321710902495*^9, 3.872338763245947*^9, 3.872338843267735*^9, 
   3.872340931206236*^9, 3.872500832390819*^9, 3.872501150735984*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"61d919d0-f618-48b3-a2b6-48471bef847b"]
}, Open  ]],

Cell[TextData[{
 "Specify the running process path. It can be generated with the following \
command:\[LineSeparator]\[LineSeparator]python3.7 ./bin/mg5_aMC \
--mode=global_dampening generate_epem_a_httx_NNLO_SG_QG_182.aL\n\nimport \
model aL_sm-no_widths\nset_alphaLoop_option perturbative_orders {\
\[OpenCurlyQuote]QCD\[CloseCurlyQuote]:4}\nset_alphaLoop_option \
n_rust_inputs_to_generate -1\nset_alphaLoop_option \
include_self_energies_from_squared_amplitudes True\nset_alphaLoop_option \
differentiate_particle_from_antiparticle_in_graph_isomorphism False\n\
set_alphaLoop_option consider_vertex_id_in_graph_isomorphism False\n\
set_alphaLoop_option consider_edge_orientation_in_graph_isomorphism False\n\
set_alphaLoop_option FORM_processing_output_format c\nset_alphaLoop_option \
FORM_compile_arg all\nset_alphaLoop_option apply_graph_isomorphisms True\n\
set_alphaLoop_option qgraf_template_model epem\nset_FORM_option \
number_of_lmbs None\n\nset_alphaLoop_option FORM_compile_cores 32\n\
set_FORM_option cores 32\n\nset_alphaLoop_option qgraf_model SM_no_aqq\n\
set_FORM_option generate_integrated_UV_CTs True\nset_FORM_option \
generate_renormalisation_graphs False\nset_alphaLoop_option \
FORM_compile_optimization 3\nset_alphaLoop_option FORM_integrand_type both\n\
set_FORM_option generate_arb_prec_output True\nset_FORM_option \
on_shell_renormalisation True\n\nset_alphaLoop_option SG_name_list [\
\[OpenCurlyDoubleQuote]SG_QG182\[CloseCurlyDoubleQuote],]\nset_FORM_option \
reference_lmb {\[OpenCurlyDoubleQuote]SG_QG182\[CloseCurlyDoubleQuote]:[\
\[OpenCurlyDoubleQuote]pq4\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]\
pq7\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]pq10\
\[CloseCurlyDoubleQuote],\[OpenCurlyDoubleQuote]pq13\[CloseCurlyDoubleQuote]],\
}\nqgraf_define j = d d~ g gh gh~\nqgraf_generate e+ e- > a > h t t~ / u s c \
b QCD^2==2 QED^2==3 [QCD QCD]\n#!rm -rf epem_a_httx_NNLO_SG_QG182\noutput \
qgraf epem_a_httx_NNLO_SG_QG182\n\nbut making sure you have ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["p", "1"], "\[Mu]"], TraditionalForm]],ExpressionUUID->
  "49f8eb42-22ea-4c12-bf79-0b69affcbcff"],
 "=(500,0,0,500), ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["p", "2"], "\[Mu]"], TraditionalForm]],ExpressionUUID->
  "3afa7e70-9630-416f-823b-4e014030052b"],
 "=(500,0,0,-500) and thus ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Q", "\[Mu]"], TraditionalForm]],ExpressionUUID->
  "fdfe7c6a-1db7-4b4f-8d2e-60c38f1e9177"],
 "=(1000,0,0,0)"
}], "Text",
 CellChangeTimes->{{3.803545612010754*^9, 3.8035456309533863`*^9}, {
   3.803545673294855*^9, 3.803545687887936*^9}, {3.803552288127069*^9, 
   3.803552307634707*^9}, {3.814198005031522*^9, 3.8141980073968067`*^9}, {
   3.869888801530107*^9, 3.86988882158805*^9}, {3.871811273097641*^9, 
   3.871811318490137*^9}, {3.871811462814238*^9, 3.871811534142837*^9}, 
   3.8718115991999474`*^9, {3.871812970100087*^9, 
   3.8718129714423437`*^9}},ExpressionUUID->"659b5ef0-0580-4075-bd33-\
e60bc5de373c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ProcessPath", "=", 
   "\"\</Users/vjhirsch/MG5/3.0.2.py3/epem_a_httx_NNLO_SG_QG182\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.803545637994034*^9, 3.803545652431423*^9}, {
   3.814197985809655*^9, 3.814198020909459*^9}, 3.869888839638418*^9, 
   3.871812061039208*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"075bec9b-015a-4934-bd7b-f137de48ce2f"],

Cell["Specify the LTD folder to the hook package:", "Text",
 CellChangeTimes->{{3.79644714801798*^9, 
  3.796447158986843*^9}},ExpressionUUID->"7a0cbc1c-9a4d-465a-88f0-\
8cd1de359349"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RFM$LTDFolder", "=", "AlphaLoopPath"}], ";"}]], "Input",
 CellChangeTimes->{{3.796447162090222*^9, 3.796447169775021*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"afef17ed-f471-43b6-a67d-158d81621fc5"],

Cell["\<\
Also specify here your additional dependencies for the libraries alphaLoop \
depends on\
\>", "Text",
 CellChangeTimes->{{3.803799418110613*^9, 
  3.8037994358997602`*^9}},ExpressionUUID->"60b274ed-1750-4cdb-b4ad-\
508af54feaaa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "RFM$CUBAPath", " ", "=", " ", 
   "\"\</Users/vjhirsch/HEP_programs/Cuba-4.2/lib\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "RFM$SCSPath", "=", 
   "\"\</Users/vjhirsch/MG5/3.0.2.py3/PLUGIN/aL_deformation/libraries/scs/out\
\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "RFM$ECOSPath", "=", 
   "\"\</Users/vjhirsch/MG5/3.0.2.py3/PLUGIN/aL_deformation/libraries/ecos\>\"\
"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "RFM$MPPPath", "=", 
   "\"\</Users/vjhirsch/HEP_programs/mppp/mppp_build/lib\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RFM$DYLDPATHS", "=", 
   RowBox[{
   "RFM$CUBAPath", "<>", "\"\<:\>\"", "<>", "RFM$SCSPath", "<>", "\"\<:\>\"", 
    "<>", "RFM$ECOSPath", "<>", "\"\<:\>\"", "<>", "RFM$MPPPath"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"RFM$SetEnvironment", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.8037988334569263`*^9, 3.8037989035203342`*^9}, 
   3.803799184001001*^9, {3.803799439859355*^9, 3.8037994652613373`*^9}, {
   3.8698903721045933`*^9, 3.869890372637588*^9}, {3.8698904158568153`*^9, 
   3.8698904165358973`*^9}, {3.869890457935063*^9, 3.8698904598561697`*^9}, {
   3.8698905205221157`*^9, 3.8698905389091063`*^9}, {3.869891422538149*^9, 
   3.8698914256940517`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"7e98d27b-c103-4f68-9437-ec7d2ca57a44"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetEnvironment", "[", 
    RowBox[{"\"\<PATH\>\"", "->", 
     RowBox[{
      RowBox[{"Environment", "[", "\"\<PATH\>\"", "]"}], "<>", "\"\<;\>\"", "<>",
       "PythonBinaryPath"}]}], "]"}], ";", "\[IndentingNewLine]", 
   RowBox[{"RegisterExternalEvaluator", "[", 
    RowBox[{"\"\<Python\>\"", ",", "PythonBinaryPath"}], "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"FindExternalEvaluators", "[", "\"\<Python\>\"", "]"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.8698893380046*^9, 3.869889371687605*^9}, {
  3.869889913311584*^9, 3.869889923606031*^9}, {3.869889970597946*^9, 
  3.869889976026247*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"5181b56b-ed9b-4092-a337-b6ec4b503361"],

Cell["Now create the hyperparameters file of interest", "Text",
 CellChangeTimes->{{3.796447192212555*^9, 3.796447201068022*^9}, {
  3.871812087041945*^9, 
  3.871812098528*^9}},ExpressionUUID->"4b3ae137-7a9f-4e49-b68f-1a28e8e0c810"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PY3session", "=", 
   RowBox[{"StartExternalSession", "[", "\"\<Python\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.871812112973575*^9, 3.871812117911524*^9}, 
   3.8718123809557047`*^9, {3.8718851650212593`*^9, 3.8718851978525343`*^9}, {
   3.8718852602482767`*^9, 3.87188528920343*^9}, {3.8718853273574266`*^9, 
   3.871885332083063*^9}, {3.871885477831778*^9, 3.8718854868271437`*^9}, {
   3.871885622767517*^9, 3.871885622990347*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"dd42dd1a-68f8-456c-badf-e0bc3a8a15a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NoDeformationHyperparams", " ", "=", " ", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<ImportYAML\>\"", "]"}], "[", 
    RowBox[{"PY3session", ",", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<no_deformation.yaml\>\""}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.871812133619972*^9, 3.871812247693893*^9}, {
   3.871812366509038*^9, 3.871812366951089*^9}, {3.871812479243394*^9, 
   3.871812481565839*^9}, {3.871812512428314*^9, 3.871812514687212*^9}, 
   3.871812550242848*^9, {3.871813273907343*^9, 3.871813299693131*^9}, {
   3.871884399800025*^9, 3.871884401786045*^9}, {3.871884493929942*^9, 
   3.871884507648978*^9}, {3.871884682209964*^9, 3.871884706285317*^9}, {
   3.8718857216416187`*^9, 3.87188575357375*^9}, {3.872339084121687*^9, 
   3.872339085103846*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"41954933-5f83-47af-8ff5-4c5ecd80cf34"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WithDeformationHyperparams", " ", "=", " ", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<ImportYAML\>\"", "]"}], "[", 
    RowBox[{"PY3session", ",", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<with_deformation.yaml\>\""}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.871812521144855*^9, 3.871812555815895*^9}, {
   3.8718132798924427`*^9, 3.871813303152274*^9}, {3.871884403811693*^9, 
   3.871884405613324*^9}, {3.8718844648917913`*^9, 3.87188446628596*^9}, {
   3.871884508967104*^9, 3.871884510066674*^9}, {3.871884593570327*^9, 
   3.871884633283958*^9}, 3.871884701083665*^9, {3.871884749530373*^9, 
   3.871884783196537*^9}, {3.871884853748348*^9, 3.8718848571411657`*^9}, {
   3.871884925082015*^9, 3.8718849277449007`*^9}, {3.871884991587627*^9, 
   3.871885036691495*^9}, {3.871885760332148*^9, 3.871885792747676*^9}, {
   3.8723390781565943`*^9, 3.872339078622167*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"71b0010e-ad51-4fe1-b309-5f629c178c4a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Generic package functions", "Subsection",
 CellChangeTimes->{{3.872339054271967*^9, 3.872339060486682*^9}, {
  3.872339111526726*^9, 
  3.8723391218779993`*^9}},ExpressionUUID->"7939857b-8a83-497e-a4d4-\
1dc65547072c"],

Cell["Clean monofont print with Sleep safety", "Text",
 CellChangeTimes->{{3.796618047444159*^9, 3.7966180590955553`*^9}, {
  3.803535409034034*^9, 
  3.8035354130478086`*^9}},ExpressionUUID->"377b50d3-f259-4b2d-8497-\
50e060ff8ed5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MyPrint", "[", "msg_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"Pause", "[", "0.1", "]"}], ";", 
     RowBox[{"Print", "[", 
      RowBox[{"Style", "[", 
       RowBox[{"msg", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Monaco\>\""}]}], "]"}], 
      "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToStringFloat", "[", "flt_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"ListQ", "[", "flt", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ToStringFloat", "[", "f", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"f", ",", "flt"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"NumberQ", "[", "flt", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ToString", "[", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Im", "[", "flt", "]"}], "==", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"flt", ">=", "0"}], ",", "\"\<+\>\"", ",", 
              "\"\<-\>\""}], "]"}], "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"FortranForm", "[", 
              RowBox[{"Abs", "[", "flt", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Monaco\>\""}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"FortranForm", "[", "flt", "]"}], "]"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Monaco\>\""}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      "flt"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyDataset", "[", 
   RowBox[{"ds_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"DatasetTheme", "->", "\"\<Scientific\>\""}], "]"}]}], " ", 
   "]"}], ":=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"ds", ",", 
    RowBox[{"DatasetTheme", "\[Rule]", 
     RowBox[{"OptionValue", "[", "DatasetTheme", "]"}]}], ",", 
    RowBox[{"ItemDisplayFunction", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "&"}], ",", 
       RowBox[{
        RowBox[{"ToStringFloat", "[", "#", "]"}], "&"}]}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SafeLog10", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "!=", "0"}], ",", 
     RowBox[{"Log10", "[", "x", "]"}], ",", "0"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.80353543021761*^9, 3.80353544000955*^9}, {
   3.872088245467902*^9, 3.872088259564609*^9}, {3.872093600302841*^9, 
   3.872093616051053*^9}, {3.872093649015746*^9, 3.87209372680814*^9}, {
   3.872094021570508*^9, 3.872094038661508*^9}, {3.872094071244306*^9, 
   3.872094083069264*^9}, {3.8720941284388113`*^9, 3.8720941743626623`*^9}, {
   3.872242166752274*^9, 3.872242170179085*^9}, {3.8722422489964447`*^9, 
   3.872242279687243*^9}, {3.872250262010069*^9, 3.872250265779167*^9}, {
   3.8722504476897163`*^9, 3.872250476042184*^9}, 3.872250741756962*^9, 
   3.872251290456337*^9, {3.872251979209054*^9, 3.872251979557678*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"3e6743e5-8179-4c48-9322-8d934723d0ef"],

Cell["Get the hook to various deformation functional choices", "Text",
 CellChangeTimes->{{3.796445841577984*^9, 
  3.796445869191774*^9}},ExpressionUUID->"70900719-5713-4c2f-97ac-\
4ecda0e40b18"],

Cell["First clean up all existing ones", "Text",
 CellChangeTimes->{{3.796447447973878*^9, 
  3.796447452372629*^9}},ExpressionUUID->"614d5186-196d-4242-988f-\
0b4d8a230b32"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetHook", "[", 
   RowBox[{"processPath_", ",", "yamlPath_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"hyperparameters", "\[Rule]", "\"\<hyperparameters.yaml\>\""}],
        ",", 
       RowBox[{"DEBUG", "\[Rule]", "False"}]}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"RFM$GetLTDHook", "[", 
     RowBox[{"yamlPath", ",", "\[IndentingNewLine]", 
      RowBox[{"RunMode", "\[Rule]", "\"\<cross_section\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"HyperparametersPath", "\[Rule]", 
       RowBox[{"OptionValue", "[", "hyperparameters", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DEBUG", "\[Rule]", 
       RowBox[{"OptionValue", "[", "DEBUG", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"MGNumeratorPath", "->", "processPath"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->{{3.801903336297958*^9, 3.801903433926618*^9}, {
   3.801903606021285*^9, 3.80190360800187*^9}, {3.80190422577531*^9, 
   3.801904238028906*^9}, {3.801907114861199*^9, 3.8019071237718287`*^9}, {
   3.803547488402165*^9, 3.8035474941215153`*^9}, 3.803547532610187*^9, 
   3.8035736002565813`*^9, 3.8035737845649843`*^9, {3.8141980843282537`*^9, 
   3.814198114533668*^9}, {3.869889100808198*^9, 3.869889120508635*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"f5fec1fe-74a9-4739-bf51-97f88e0513b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RefreshHooks", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RFM$KillAllHooks", "[", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"HookWithDeformation", "=", 
      RowBox[{"GetHook", "[", 
       RowBox[{"ProcessPath", ",", 
        RowBox[{"ProcessPath", "<>", "\"\</Rust_inputs/SG_QG182.yaml\>\""}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"hyperparameters", "\[Rule]", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
          "\"\</with_deformation.yaml\>\""}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"HookWithoutDeformation", "=", 
      RowBox[{"GetHook", "[", 
       RowBox[{"ProcessPath", ",", 
        RowBox[{"ProcessPath", "<>", "\"\</Rust_inputs/SG_QG182.yaml\>\""}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"hyperparameters", "\[Rule]", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
          "\"\<no_deformation.yaml\>\""}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RFM$CheckHookStatus", "[", "HookWithDeformation", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"RFM$CheckHookStatus", "[", "HookWithoutDeformation", "]"}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7967360094066553`*^9, 3.796736044591064*^9}, {
   3.803535557391014*^9, 3.803535578086239*^9}, {3.8035455512735233`*^9, 
   3.803545605565145*^9}, {3.803545699406302*^9, 3.803545725748115*^9}, {
   3.8035457565959587`*^9, 3.803545760212191*^9}, {3.803547571497065*^9, 
   3.803547609672348*^9}, {3.803547658040897*^9, 3.803547713978938*^9}, {
   3.8035479252279043`*^9, 3.80354798475525*^9}, {3.80355157521671*^9, 
   3.8035515987527943`*^9}, {3.8141981350087433`*^9, 3.814198208629262*^9}, {
   3.814200798206249*^9, 3.8142008334669952`*^9}, {3.8698890440024767`*^9, 
   3.86988908165528*^9}, {3.869889129000149*^9, 3.869889140310741*^9}, 
   3.869889699149651*^9, {3.869892297406835*^9, 3.869892302041027*^9}, {
   3.869892715336557*^9, 3.8698927519927053`*^9}, {3.86989414421789*^9, 
   3.869894160088682*^9}, {3.871812574207261*^9, 3.871812642427779*^9}, {
   3.871884258789547*^9, 3.871884261140026*^9}, {3.871884323848014*^9, 
   3.871884336844821*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"794f0462-4572-4d86-b4f3-63021f660a7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetMomenta", "[", 
   RowBox[{"edgeMomenta_", ",", "SGYaml_", ",", "paramsYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MomentumPadding", "->", "Automatic"}], ",", 
       RowBox[{"DEBUG", "->", "False"}], ",", 
       RowBox[{"Seed", "->", "Automatic"}]}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "validLMBs", ",", "selectedLMB", ",", "externalMomenta", ",", 
      "rotMatrix", ",", " ", "shifts", ",", "LMBMomenta", ",", 
      "MomentaInSelectedLMB", ",", "ECM", ",", "momPadding", ",", 
      RowBox[{"momPaddingIndex", "=", "0"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"validLMBs", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"SGYaml", "[", "\"\<multi_channeling_lmb_bases\>\"", "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Function", "[", 
         RowBox[{"lmbSpec", ",", 
          RowBox[{"AllTrue", "[", 
           RowBox[{
            RowBox[{"Keys", "[", "edgeMomenta", "]"}], ",", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"lmbSpec", "[", "\"\<defining_propagators\>\"", "]"}], 
               ",", "#"}], "]"}], "&"}]}], "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "validLMBs", "]"}], "==", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MyPrint", "[", 
         RowBox[{
         "\"\<Could not find a valid LMB for the following specified momenta: \
\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"Keys", "[", "edgeMomenta", "]"}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "Null", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"selectedLMB", "=", 
      RowBox[{
      "validLMBs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
       RowBox[{"MyPrint", "[", 
        RowBox[{"\"\<Selected LMB: \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"selectedLMB", "[", "\"\<defining_propagators\>\"", "]"}], 
          "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ECM", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
         "NoDeformationHyperparams", "[", "\"\<CrossSection\>\"", "]"}], "[", 
         "\"\<incoming_momenta\>\"", "]"}], "]"}], "\[LeftDoubleBracket]", 
       "1", "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"momPadding", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "MomentumPadding", "]"}], "===", 
         "Automatic"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "}"}], ",", 
        RowBox[{"OptionValue", "[", "MomentumPadding", "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "Seed", "]"}], "===", "Automatic"}], 
        "]"}], ",", 
       RowBox[{
        RowBox[{"SeedRandom", "[", 
         RowBox[{"OptionValue", "[", "Seed", "]"}], "]"}], ";"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"momPadding", "=", 
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{"momPadding", ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ECM", " ", 
             RowBox[{"RandomReal", "[", "]"}]}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"N", "[", 
              RowBox[{"ECM", 
               RowBox[{"(", 
                FractionBox[
                 RowBox[{"j", "+", 
                  RowBox[{"3", " ", "i"}], "+", "1"}], 
                 RowBox[{"3", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "selectedLMB", "[", "\"\<defining_propagators\>\"", "]"}],
                     "]"}], "-", 
                    RowBox[{"Length", "[", "edgeMomenta", "]"}], "-", 
                    RowBox[{"Length", "[", "momPadding", "]"}]}], ")"}]}]], 
                ")"}]}], "]"}], "*)"}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "0", ",", 
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{
              "selectedLMB", "[", "\"\<defining_propagators\>\"", "]"}], 
              "]"}], "-", 
             RowBox[{"Length", "[", "edgeMomenta", "]"}], "-", 
             RowBox[{"Length", "[", "momPadding", "]"}], "-", "1"}]}], " ", 
           "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"externalMomenta", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"p", "\[LeftDoubleBracket]", 
         RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"paramsYaml", "[", "\"\<CrossSection\>\"", "]"}], "[", 
             "\"\<incoming_momenta\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"paramsYaml", "[", "\"\<CrossSection\>\"", "]"}], "[", 
             "\"\<incoming_momenta\>\"", "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"rotMatrix", "=", 
      RowBox[{"Inverse", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"selectedLMB", "[", "\"\<signatures\>\"", "]"}], 
           "\[LeftDoubleBracket]", "definingEdgeIndex", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"{", 
          RowBox[{"definingEdgeIndex", ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{"selectedLMB", "[", "\"\<defining_propagators\>\"", "]"}],
             "]"}]}], "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"shifts", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"selectedLMB", "[", "\"\<signatures\>\"", "]"}], 
           "\[LeftDoubleBracket]", "definingEdgeIndex", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"{", 
          RowBox[{"definingEdgeIndex", ",", " ", 
           RowBox[{"Length", "[", 
            RowBox[{"selectedLMB", "[", "\"\<defining_propagators\>\"", "]"}],
             "]"}]}], "}"}]}], "]"}], ".", "externalMomenta"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
       RowBox[{"MyPrint", "[", 
        RowBox[{"\"\<Rotation matrix to map to LMB: \>\"", "<>", 
         RowBox[{"ToString", "[", "rotMatrix", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
       RowBox[{"MyPrint", "[", 
        RowBox[{"\"\<Shifts to map to LMB: \>\"", "<>", 
         RowBox[{"ToString", "[", "shifts", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MomentaInSelectedLMB", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Keys", "[", "edgeMomenta", "]"}], ",", "edgeName"}], 
           "]"}], ",", 
          RowBox[{"edgeMomenta", "[", "edgeName", "]"}], ",", 
          RowBox[{
           RowBox[{"momPaddingIndex", "++"}], ";", 
           RowBox[{
           "momPadding", "\[LeftDoubleBracket]", "momPaddingIndex", 
            "\[RightDoubleBracket]"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
        
        RowBox[{"{", 
         RowBox[{"edgeName", ",", 
          RowBox[{"selectedLMB", "[", "\"\<defining_propagators\>\"", "]"}]}],
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
       RowBox[{"MyPrint", "[", 
        RowBox[{"\"\<Momenta in selected LMB: \>\"", "<>", 
         RowBox[{"ToString", "[", "MomentaInSelectedLMB", "]"}]}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"LMBMomenta", "=", 
      RowBox[{"rotMatrix", ".", 
       RowBox[{"(", 
        RowBox[{"MomentaInSelectedLMB", "-", "shifts"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
       RowBox[{"MyPrint", "[", 
        RowBox[{"\"\<Momenta mapped to LMB: \>\"", "<>", 
         RowBox[{"ToString", "[", "LMBMomenta", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "LMBMomenta"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.872079112364828*^9, 3.872079148181885*^9}, {
   3.872079251046769*^9, 3.872079264415781*^9}, {3.872079306130818*^9, 
   3.872079479299739*^9}, {3.8720795269405823`*^9, 3.872079602821149*^9}, {
   3.872079789938097*^9, 3.872079874265108*^9}, {3.8720799156250057`*^9, 
   3.87207995229001*^9}, 3.872080027277583*^9, {3.872080108526849*^9, 
   3.872080160860141*^9}, {3.872080226720182*^9, 3.87208035742181*^9}, {
   3.8720803917873487`*^9, 3.8720804161128597`*^9}, {3.87208044840342*^9, 
   3.8720804972711973`*^9}, {3.872080614260701*^9, 3.872080945019286*^9}, {
   3.872080994707025*^9, 3.8720810252142887`*^9}, {3.872081072499339*^9, 
   3.872081249999729*^9}, {3.8720813992372637`*^9, 3.872081467598197*^9}, {
   3.872081501145096*^9, 3.872081588730226*^9}, {3.872081625157305*^9, 
   3.872081660486534*^9}, {3.872081989438931*^9, 3.872081991201388*^9}, {
   3.87212785342705*^9, 3.872128019497448*^9}, 3.872128400962082*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"8ae92056-0856-4d2f-ba44-530dacfff392"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetMomentaAssoc", "[", 
   RowBox[{"edgeMomenta_", ",", "SGYaml_", ",", "paramsYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MomentumPadding", "->", "Automatic"}], ",", 
       RowBox[{"DEBUG", "->", "False"}], ",", 
       RowBox[{"Seed", "->", "Automatic"}]}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "lmbMoms", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lmbMoms", "=", 
      RowBox[{"SetMomenta", "[", 
       RowBox[{"edgeMomenta", ",", "SGYaml", ",", "paramsYaml", ",", 
        RowBox[{"MomentumPadding", "->", 
         RowBox[{"OptionValue", "[", "MomentumPadding", "]"}]}], ",", 
        RowBox[{"DEBUG", "->", 
         RowBox[{"OptionValue", "[", "DEBUG", "]"}]}], ",", 
        RowBox[{"Seed", "->", 
         RowBox[{"OptionValue", "[", "Seed", "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Association", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}], 
          "\[LeftDoubleBracket]", "iLMB", "\[RightDoubleBracket]"}], "->", 
         RowBox[{
         "lmbMoms", "\[LeftDoubleBracket]", "iLMB", 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"iLMB", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}], 
           "]"}]}], "}"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8725014988481216`*^9, 3.8725016182721157`*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"2713bc21-6436-439c-8c1c-abadb21480a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetDeformation", "[", 
   RowBox[{
   "hook_", ",", "cutID_", ",", "momentaInLMB_", ",", "SGYaml_", ",", 
    "paramsYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{"DEBUG", "->", "False"}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ECM", ",", " ", "rescaling", ",", "rescalingJac", ",", " ", 
      "deformationRes", ",", "cbTOlmbMatrix"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"rescaling", "=", 
      RowBox[{"RFM$GetRescaling", "[", 
       RowBox[{"hook", ",", "cutID", ",", "momentaInLMB"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
       RowBox[{"MyPrint", "[", 
        RowBox[{"\"\<Rescalings for cut #\>\"", "<>", 
         RowBox[{"ToString", "[", "cutID", "]"}], "<>", "\"\< : \>\"", "<>", 
         RowBox[{"ToString", "[", "rescaling", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Or", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"rescaling", "[", "\"\<tSolutions\>\"", "]"}], "]"}], "!=",
           "2"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"rescaling", "[", "\"\<tSolutions\>\"", "]"}], 
           "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "<=", 
          "0."}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MyPrint", "[", 
         RowBox[{"\"\<ERROR: Could not find t-scaling for cut #\>\"", "<>", 
          RowBox[{"ToString", "[", "cutID", "]"}], "<>", 
          "\"\<the following edge momenta config: \>\"", "<>", 
          RowBox[{"ToString", "[", "momentaInLMB", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "Null", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"rescalingJac", "=", 
      RowBox[{
       RowBox[{"rescaling", "[", "\"\<tJacobians\>\"", "]"}], 
       "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rescaling", "=", 
      RowBox[{
       RowBox[{"rescaling", "[", "\"\<tSolutions\>\"", "]"}], 
       "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"deformationRes", "=", 
      RowBox[{"RFM$GetCrossSectionDeformation", "[", 
       RowBox[{"hook", ",", "cutID", ",", "rescaling", ",", "momentaInLMB"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}], "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
          "dmi", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"dmi", ",", 
            RowBox[{"dm", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"dm", ",", 
          RowBox[{"deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}]}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cbTOlmbMatrix", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"SGYaml", "[", "\"\<cutkosky_cuts\>\"", "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"cutID", "+", "1"}], "\[RightDoubleBracket]"}], "[", 
         "\"\<diagram_sets\>\"", "]"}], "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], "[", "\"\<cb_to_lmb\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cbTOlmbMatrix", "=", 
      RowBox[{"Table", "[", " ", 
       RowBox[{
        RowBox[{"cbTOlmbMatrix", "\[LeftDoubleBracket]", 
         RowBox[{"i", ";;", 
          RowBox[{"i", "+", "3"}]}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "cbTOlmbMatrix", "]"}], ",", "4"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}], "=", 
      RowBox[{"cbTOlmbMatrix", ".", 
       RowBox[{"deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<MomentaDeformationInLMB\>\"", "->", 
        RowBox[{"deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<DeformationJacobian\>\"", "->", 
        RowBox[{
        "deformationRes", "[", "\"\<DeformationJacobian\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "|>"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.872247005748259*^9, 3.872247029106168*^9}, {
   3.872248832878273*^9, 3.87224902499736*^9}, {3.872249250345796*^9, 
   3.872249449143404*^9}, 3.8722494942084093`*^9, {3.872249530490836*^9, 
   3.872249533439*^9}, {3.8722499483194113`*^9, 3.872249986219652*^9}, {
   3.872250384917694*^9, 3.872250385213176*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"5e4328e7-127d-4214-b984-1967dd3afae0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EvaluatePoint", "[", "\[IndentingNewLine]", 
   RowBox[{
   "hook_", ",", "edgeMomenta_", ",", "SGYaml_", ",", "paramsYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MomentumPadding", "->", "Automatic"}], ",", 
       RowBox[{"DEBUG", "->", "False"}], ",", 
       RowBox[{"f128", "->", "True"}], ",", 
       RowBox[{"IncludeJacobian", "->", "False"}], ",", 
       RowBox[{"Phase", "->", "Null"}], ",", 
       RowBox[{"Seed", "->", "Automatic"}], ",", 
       RowBox[{"Esurfaces", "->", "Null"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "MomentaInLMB", ",", "MomentaInLMBAssoc", ",", 
      "ComplexMomentaInLMBAssoc", ",", " ", "DeformationInLMB", ",", 
      "rescaling", ",", "rescalingJac", ",", "invXsMap", ",", "resForCut", 
      ",", "deformationRes", ",", "\[IndentingNewLine]", "cbTOlmbMatrix", ",",
       "cutResults", ",", "ECM", ",", "TotalInvJacobian", ",", 
      "integrandEval", ",", "finalRes", ",", "completeResForCut", ",", 
      "deformationDirection", ",", "tmpA"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MomentaInLMB", "=", 
      RowBox[{"SetMomenta", "[", 
       RowBox[{"edgeMomenta", ",", "SGYaml", ",", "paramsYaml", ",", 
        RowBox[{"MomentumPadding", "->", 
         RowBox[{"OptionValue", "[", "MomentumPadding", "]"}]}], ",", 
        RowBox[{"DEBUG", "->", 
         RowBox[{"OptionValue", "[", "DEBUG", "]"}]}], ",", 
        RowBox[{"Seed", "->", 
         RowBox[{"OptionValue", "[", "Seed", "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ECM", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
         "NoDeformationHyperparams", "[", "\"\<CrossSection\>\"", "]"}], "[", 
         "\"\<incoming_momenta\>\"", "]"}], "]"}], "\[LeftDoubleBracket]", 
       "1", "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"invXsMap", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RFM$InvParameterize", "[", 
         RowBox[{"hook", ",", 
          RowBox[{"iLMB", "-", "1"}], ",", 
          SuperscriptBox["ECM", "2"], ",", 
          RowBox[{
          "MomentaInLMB", "\[LeftDoubleBracket]", "iLMB", 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{"f128", "->", 
           RowBox[{"OptionValue", "[", "f128", "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"iLMB", ",", 
          RowBox[{"Length", "[", "MomentaInLMB", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"TotalInvJacobian", "=", 
      RowBox[{"Times", "@@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"x", "[", "\"\<Jacobian\>\"", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "invXsMap"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
       RowBox[{"MyPrint", "[", 
        RowBox[{"\"\<Total inverse Jacobian : \>\"", "<>", 
         RowBox[{"ToStringFloat", "[", "TotalInvJacobian", "]"}]}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"integrandEval", "=", 
      RowBox[{"RFM$EvaluateIntegrand", "[", 
       RowBox[{"hook", ",", 
        RowBox[{"Join", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"x", "[", "\"\<Xs\>\"", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "invXsMap"}], "}"}]}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
       RowBox[{"MyPrint", "[", 
        RowBox[{"\"\<Input xs for integrand eval call : \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Join", "@@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"x", "[", "\"\<Xs\>\"", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "invXsMap"}], "}"}]}], "]"}]}], "]"}]}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
       RowBox[{"MyPrint", "[", 
        RowBox[{"\"\<Result for integrand eval : \>\"", "<>", 
         RowBox[{"ToStringFloat", "[", "integrandEval", "]"}]}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"OptionValue", "[", "IncludeJacobian", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"integrandEval", "=", 
         RowBox[{"integrandEval", "*", "TotalInvJacobian"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "Phase", "]"}], "===", "Null"}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"integrandEval", "=", 
         RowBox[{
          RowBox[{"OptionValue", "[", "Phase", "]"}], "[", "integrandEval", 
          "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"cutResults", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"rescaling", "=", 
          RowBox[{"RFM$GetRescaling", "[", 
           RowBox[{"hook", ",", "iCut", ",", "MomentaInLMB"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
           RowBox[{"MyPrint", "[", 
            RowBox[{"\"\<Rescalings for cut #\>\"", "<>", 
             RowBox[{"ToString", "[", "iCut", "]"}], "<>", "\"\< : \>\"", "<>", 
             RowBox[{"ToString", "[", "rescaling", "]"}]}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Or", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"rescaling", "[", "\"\<tSolutions\>\"", "]"}], "]"}], "!=",
               "2"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"rescaling", "[", "\"\<tSolutions\>\"", "]"}], 
               "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "<=", 
              "0."}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"MyPrint", "[", 
             RowBox[{"\"\<ERROR: Could not find t-scaling for cut #\>\"", "<>", 
              RowBox[{"ToString", "[", "iCut", "]"}], "<>", 
              "\"\<the following edge momenta config: \>\"", "<>", 
              RowBox[{"ToString", "[", "MomentaInLMB", "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Return", "[", "Null", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"rescalingJac", "=", 
          RowBox[{
           RowBox[{"rescaling", "[", "\"\<tJacobians\>\"", "]"}], 
           "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"rescaling", "=", 
          RowBox[{
           RowBox[{"rescaling", "[", "\"\<tSolutions\>\"", "]"}], 
           "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"resForCut", "=", 
          RowBox[{"RFM$EvaluateCut", "[", 
           RowBox[{
           "hook", ",", "iCut", ",", "rescaling", ",", "rescalingJac", ",", 
            "MomentaInLMB", ",", 
            RowBox[{"f128", "->", 
             RowBox[{"OptionValue", "[", "f128", "]"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
           RowBox[{"MyPrint", "[", 
            RowBox[{"\"\<Result for cut #\>\"", "<>", 
             RowBox[{"ToString", "[", "iCut", "]"}], "<>", "\"\< : \>\"", "<>", 
             RowBox[{"ToStringFloat", "[", "resForCut", "]"}]}], "]"}]}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "IncludeJacobian", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resForCut", "=", 
             RowBox[{"resForCut", "/", "TotalInvJacobian"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Not", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "Phase", "]"}], "===", "Null"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"resForCut", "=", 
             RowBox[{
              RowBox[{"OptionValue", "[", "Phase", "]"}], "[", "resForCut", 
              "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"deformationRes", "=", 
          RowBox[{"RFM$GetCrossSectionDeformation", "[", 
           RowBox[{
           "hook", ",", "iCut", ",", "rescaling", ",", "MomentaInLMB"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}], 
          "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
              "dmi", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"dmi", ",", 
                RowBox[{"dm", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"dm", ",", 
              RowBox[{
              "deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}]}], 
             "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"cbTOlmbMatrix", "=", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"SGYaml", "[", "\"\<cutkosky_cuts\>\"", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"iCut", "+", "1"}], "\[RightDoubleBracket]"}], "[", 
             "\"\<diagram_sets\>\"", "]"}], "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], "[", "\"\<cb_to_lmb\>\"", "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"cbTOlmbMatrix", "=", 
          RowBox[{"Table", "[", " ", 
           RowBox[{
            RowBox[{"cbTOlmbMatrix", "\[LeftDoubleBracket]", 
             RowBox[{"i", ";;", 
              RowBox[{"i", "+", "3"}]}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "cbTOlmbMatrix", "]"}], ",", "4"}], 
             "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}], 
          "=", 
          RowBox[{"cbTOlmbMatrix", ".", 
           RowBox[{
           "deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"completeResForCut", "=", 
          RowBox[{"<|", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"\"\<edges\>\"", "->", 
             RowBox[{"AlphabeticSort", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"c", "[", "\"\<name\>\"", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"c", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"SGYaml", "[", "\"\<cutkosky_cuts\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"iCut", "+", "1"}], "\[RightDoubleBracket]"}], 
                   "[", "\"\<cuts\>\"", "]"}]}], "}"}]}], "]"}], "]"}]}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"\"\<Res\>\"", "->", "resForCut"}], " ", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<Rescaling\>\"", "->", "rescaling"}], " ", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<MomentaInLMB\>\"", "->", "MomentaInLMB"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<MomentaDeformationInLMB\>\"", "->", 
             RowBox[{
             "deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\"\<DeformationJacobian\>\"", "->", 
             RowBox[{
             "deformationRes", "[", "\"\<DeformationJacobian\>\"", "]"}]}]}], 
           "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Not", "[", 
            RowBox[{
             RowBox[{"OptionValue", "[", "Esurfaces", "]"}], "===", "Null"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"MomentaInLMBAssoc", "=", 
             RowBox[{"Association", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}],
                   "\[LeftDoubleBracket]", "iLMB", "\[RightDoubleBracket]"}], 
                 "->", 
                 RowBox[{"rescaling", " ", 
                  RowBox[{
                  "MomentaInLMB", "\[LeftDoubleBracket]", "iLMB", 
                   "\[RightDoubleBracket]"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"iLMB", ",", 
                  RowBox[{"Length", "[", "MomentaInLMB", "]"}]}], "}"}]}], 
               "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"ComplexMomentaInLMBAssoc", "=", 
             RowBox[{"Association", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}],
                   "\[LeftDoubleBracket]", "iLMB", "\[RightDoubleBracket]"}], 
                 "->", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"rescaling", " ", 
                    RowBox[{
                    "MomentaInLMB", "\[LeftDoubleBracket]", "iLMB", 
                    "\[RightDoubleBracket]"}]}], "+", 
                   RowBox[{"\[ImaginaryI]", " ", 
                    RowBox[{
                    RowBox[{
                    "deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}], 
                    "\[LeftDoubleBracket]", "iLMB", 
                    "\[RightDoubleBracket]"}]}]}], ")"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"iLMB", ",", 
                  RowBox[{"Length", "[", "MomentaInLMB", "]"}]}], "}"}]}], 
               "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"completeResForCut", "=", 
             RowBox[{"AssociateTo", "[", 
              RowBox[{"completeResForCut", ",", "\[IndentingNewLine]", 
               RowBox[{"Flatten", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cat", ",", "\"\<Esurf analysis\>\""}], "}"}], "->", 
                    RowBox[{"SortBy", "[", 
                    RowBox[{
                    RowBox[{"Table", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"deformationDirection", "=", 
                    RowBox[{
                    RowBox[{"(", "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"es", "[", "\"\<GradEq\>\"", "]"}], 
                    "\[LeftDoubleBracket]", "iLMB", "\[RightDoubleBracket]"}],
                     ".", 
                    RowBox[{
                    RowBox[{
                    "deformationRes", "[", "\"\<DeformedMomenta\>\"", "]"}], 
                    "\[LeftDoubleBracket]", "iLMB", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"iLMB", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}], 
                    "]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ")"}], "/.", 
                    RowBox[{"GenerateLoopMomenta", "[", 
                    RowBox[{"SGYaml", ",", 
                    RowBox[{"moms", "->", "MomentaInLMBAssoc"}]}], "]"}]}]}], 
                    ";", "\[IndentingNewLine]", 
                    RowBox[{"tmpA", "=", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    SuperscriptBox["proj", "2"], ",", 
                    RowBox[{"{", 
                    RowBox[{"proj", ",", "deformationDirection"}], "}"}]}], 
                    "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Association", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\"\<id\>\"", "->", 
                    RowBox[{"es", "[", "\"\<id\>\"", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<edges\>\"", "->", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"AlphabeticSort", "[", "enames", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"enames", ",", 
                    RowBox[{"es", "[", "\"\<edgeNames\>\"", "]"}]}], "}"}]}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\"\<eval\>\"", "->", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"es", "[", "\"\<Eq\>\"", "]"}], "/", "ECM"}], 
                    ")"}]}], "/.", 
                    RowBox[{"GenerateLoopMomenta", "[", 
                    RowBox[{"SGYaml", ",", 
                    RowBox[{"moms", "->", "MomentaInLMBAssoc"}]}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"\"\<complex eval\>\"", "->", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"es", "[", "\"\<Eq\>\"", "]"}], "/", "ECM"}], 
                    ")"}]}], "/.", 
                    RowBox[{"GenerateLoopMomenta", "[", 
                    RowBox[{"SGYaml", ",", 
                    RowBox[{"moms", "->", "ComplexMomentaInLMBAssoc"}]}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    "\"\<Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))\>\"", "->", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"tmpA", "!=", "0"}], ",", 
                    RowBox[{
                    RowBox[{"Total", "[", "deformationDirection", "]"}], "/", 
                    "tmpA"}], ",", "0."}], "]"}]}]}], "\[IndentingNewLine]", 
                    "}"}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"es", ",", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "Esurfaces", "]"}], "[", 
                    "cat", "]"}]}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"#", "[", "\"\<eval\>\"", "]"}], "]"}], ")"}], 
                    "&"}]}], "\[IndentingNewLine]", "]"}]}], 
                   "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"cat", ",", 
                    RowBox[{"{", 
                    RowBox[{"\"\<s-channel\>\"", ",", "\"\<soft\>\""}], 
                    "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}], "]"}]}], 
              "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "completeResForCut"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"iCut", ",", "0", ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"SGYaml", "[", "\"\<cutkosky_cuts\>\"", "]"}], "]"}], "-",
            "1"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"finalRes", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Join", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"iCut", "-", "1"}], ")"}], "->", 
            RowBox[{
            "cutResults", "\[LeftDoubleBracket]", "iCut", 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"iCut", ",", 
             RowBox[{"Length", "[", "cutResults", "]"}]}], "}"}]}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\"\<CutsSum\>\"", "->", 
            RowBox[{"<|", 
             RowBox[{"\"\<Res\>\"", "->", 
              RowBox[{"Total", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"cr", "[", "\"\<Res\>\"", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"cr", ",", "cutResults"}], "}"}]}], "]"}], "]"}]}], 
             "|>"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<FullIntegrand\>\"", "->", 
            RowBox[{"<|", 
             RowBox[{"\"\<Res\>\"", "->", "integrandEval"}], "|>"}]}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "finalRes"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8720824380158567`*^9, 3.872082483329563*^9}, {
   3.872084516711049*^9, 3.872084627226685*^9}, {3.872084679371533*^9, 
   3.872084978345702*^9}, {3.872085118271616*^9, 3.8720851804633923`*^9}, {
   3.872085277265592*^9, 3.8720853597199*^9}, {3.8720873777169933`*^9, 
   3.872087498476688*^9}, {3.872087532178904*^9, 3.872087615544936*^9}, {
   3.8720876919565496`*^9, 3.872087858804813*^9}, {3.872087947862268*^9, 
   3.872087953816411*^9}, {3.87208811552897*^9, 3.8720882142385683`*^9}, {
   3.872088309502451*^9, 3.8720883335281153`*^9}, {3.872088372379406*^9, 
   3.8720883738567543`*^9}, {3.872088422815064*^9, 3.872088507614122*^9}, {
   3.872088640841037*^9, 3.872088641273717*^9}, {3.87208868093528*^9, 
   3.8720887391898518`*^9}, {3.8720916207171803`*^9, 
   3.8720916625316973`*^9}, {3.8720917811764393`*^9, 3.872091782728492*^9}, 
   3.87209206391326*^9, {3.872092252871482*^9, 3.872092267523225*^9}, {
   3.87209233830441*^9, 3.872092338553911*^9}, {3.8720925820124817`*^9, 
   3.872092604649638*^9}, {3.8720926663737373`*^9, 3.872092890008821*^9}, {
   3.8720929505450497`*^9, 3.872093047638804*^9}, {3.8720930823889008`*^9, 
   3.872093120924246*^9}, {3.872093243663018*^9, 3.8720932438377666`*^9}, {
   3.872127996668517*^9, 3.872128041846879*^9}, {3.872128665874218*^9, 
   3.872128744133272*^9}, {3.8721488017142467`*^9, 3.872148834921873*^9}, {
   3.872148874951981*^9, 3.8721489421659403`*^9}, {3.872148972374614*^9, 
   3.872149038370455*^9}, {3.8721490873916273`*^9, 3.8721491122178*^9}, {
   3.8721492134683523`*^9, 3.8721492313426228`*^9}, {3.87214929925557*^9, 
   3.8721493068397417`*^9}, {3.872149415384753*^9, 3.872149724458111*^9}, {
   3.8721545185935783`*^9, 3.87215454325686*^9}, {3.872154581020699*^9, 
   3.8721546032187757`*^9}, 3.872154736520855*^9, {3.872154767786374*^9, 
   3.8721548054338713`*^9}, {3.872249562500504*^9, 3.8722495904966307`*^9}, {
   3.8722496318041897`*^9, 3.8722496867011137`*^9}, {3.872249722576208*^9, 
   3.872249806053996*^9}, {3.872249933133816*^9, 3.872249936770653*^9}, {
   3.872250154575835*^9, 3.872250171736836*^9}, {3.872250290201734*^9, 
   3.8722502915324917`*^9}, {3.872250378589629*^9, 3.872250378843498*^9}, 
   3.872322239775482*^9, {3.872322443816581*^9, 3.872322464267086*^9}, {
   3.8723225817132*^9, 3.8723226113471527`*^9}, {3.872323057345051*^9, 
   3.872323153881493*^9}, {3.872492970806988*^9, 3.872493147262773*^9}, {
   3.872493243851923*^9, 3.872493331284176*^9}, {3.8724933722362967`*^9, 
   3.872493567356042*^9}, {3.872494587783524*^9, 3.8724946793051357`*^9}, {
   3.872494813409739*^9, 3.872494888968038*^9}, {3.8724951600350437`*^9, 
   3.872495239388262*^9}, {3.8724952939046717`*^9, 3.8724954675926*^9}, {
   3.872495536035048*^9, 3.872495592143057*^9}, {3.872495795624919*^9, 
   3.872495882823223*^9}, {3.872496642717443*^9, 3.872496928272543*^9}, {
   3.872496970016608*^9, 3.872497049662634*^9}, 3.872497111282281*^9, {
   3.872497169883155*^9, 3.8724973082217073`*^9}, {3.8724973542552557`*^9, 
   3.8724973619224052`*^9}, {3.872497492905262*^9, 3.872497527989752*^9}, {
   3.872497588565137*^9, 3.8724975899039392`*^9}, {3.872497637385744*^9, 
   3.872497659060968*^9}, {3.872502802449458*^9, 3.872502819825041*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"7765daf2-d1b7-4cf8-a369-6a8a89f24d5a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayEvaluationEsurf", "[", 
   RowBox[{"allEvals_", ",", "SGYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"Categories", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<s-channel\>\"", ",", "\"\<soft\>\""}], "}"}]}], "]"}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"Table", "[", 
           RowBox[{"\"\<-\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Range", "[", "50", "]"}]}], "}"}]}], "]"}], "]"}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Analysis of \>\"", "<>", "cat", "<>", "\"\< E-surfaces:\>\""}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"Table", "[", 
           RowBox[{"\"\<-\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{"Range", "[", "50", "]"}]}], "}"}]}], "]"}], "]"}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\"\<Cut #\>\"", "<>", 
                   RowBox[{"ToString", "[", "iCut", "]"}]}], ",", 
                  RowBox[{"AlphabeticSort", "[", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"c", "[", "\"\<name\>\"", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"c", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SGYAMLinfo", "[", "\"\<cutkosky_cuts\>\"", "]"}],
                     "\[LeftDoubleBracket]", 
                    RowBox[{"iCut", "+", "1"}], "\[RightDoubleBracket]"}], 
                    "[", "\"\<cuts\>\"", "]"}]}], "}"}]}], "]"}], "]"}]}], 
                 "}"}], "//", 
                RowBox[{
                 RowBox[{"Multicolumn", "[", 
                  RowBox[{"#", ",", "2"}], "]"}], "&"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"MyDataset", "[", 
                RowBox[{
                 RowBox[{"evaluationWithEsurfaceAnalysis", "[", "iCut", "]"}],
                  "[", 
                 RowBox[{"{", 
                  RowBox[{"cat", ",", "\"\<Esurf analysis\>\""}], "}"}], 
                 "]"}], "]"}]}], "\[IndentingNewLine]", "}"}], "//", 
             RowBox[{
              RowBox[{"Multicolumn", "[", 
               RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "\[IndentingNewLine]",
             ",", 
            RowBox[{"{", 
             RowBox[{"iCut", ",", "0", ",", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"SGYAMLinfo", "[", "\"\<cutkosky_cuts\>\"", "]"}], 
                "]"}], "-", "1"}]}], "}"}]}], "]"}], "//", 
          RowBox[{
           RowBox[{"Multicolumn", "[", 
            RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"cat", ",", 
         RowBox[{"OptionValue", "[", "Categories", "]"}]}], "}"}]}], "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.87249940190062*^9, 3.8724995003636847`*^9}, {
  3.8724995927544317`*^9, 3.872499612840804*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"ab6eb50c-6659-4ada-a895-da73580c6d0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeAllMomenta", "[", 
   RowBox[{"lmbMomentaAssoc_", ",", "SGYaml_", ",", "paramsYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"DatasetOutput", "->", "False"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"externalMomenta", ",", "res", ",", "lmbMomenta"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lmbMomenta", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"lmbMomentaAssoc", "[", "em", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"em", ",", 
          RowBox[{"SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}]}], 
         "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"externalMomenta", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"p", "\[LeftDoubleBracket]", 
         RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"paramsYaml", "[", "\"\<CrossSection\>\"", "]"}], "[", 
             "\"\<incoming_momenta\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"paramsYaml", "[", "\"\<CrossSection\>\"", "]"}], "[", 
             "\"\<incoming_momenta\>\"", "]"}]}], "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"k", "\[Rule]", 
          RowBox[{"(", "\[IndentingNewLine]", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], "[", 
               "k", "]"}], "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], ".", "lmbMomenta"}], "+", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], "[", 
               "k", "]"}], "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}], ".", "externalMomenta"}]}], 
           "\[IndentingNewLine]", ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"AlphabeticSort", "[", 
            RowBox[{"Keys", "[", 
             RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], "]"}], 
            "]"}]}], "}"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"OptionValue", "[", "DatasetOutput", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "res", ",", "\[IndentingNewLine]", 
       RowBox[{"MyDataset", "[", "\[IndentingNewLine]", 
        RowBox[{"Association", "[", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"k", "->", 
            RowBox[{"Association", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\"\<\!\(\*SubscriptBox[\(p\), \(x\)]\)\>\"", "->", 
                RowBox[{
                 RowBox[{"res", "[", "k", "]"}], "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"\"\<\!\(\*SubscriptBox[\(p\), \(y\)]\)\>\"", "->", 
                RowBox[{
                 RowBox[{"res", "[", "k", "]"}], "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], ",", 
               RowBox[{"\"\<\!\(\*SubscriptBox[\(p\), \(z\)]\)\>\"", "->", 
                RowBox[{
                 RowBox[{"res", "[", "k", "]"}], "\[LeftDoubleBracket]", "3", 
                 "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"k", ",", 
             RowBox[{"AlphabeticSort", "[", 
              RowBox[{"Keys", "[", "res", "]"}], "]"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.872081769162133*^9, 3.872081846762376*^9}, {
   3.872081893494396*^9, 3.872081923717548*^9}, {3.872081985884853*^9, 
   3.872081987107032*^9}, 3.872082023115665*^9, {3.872093796782378*^9, 
   3.872093958722495*^9}, {3.872336140076169*^9, 3.872336171995535*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"64dc4c1d-6f08-4120-95ef-15fbcaae3d9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AnalyzeApproach", "[", 
   RowBox[{
   "hook_", ",", "edgeMomenta_", ",", "SGYaml_", ",", "paramsYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MomentumPadding", "->", "Automatic"}], ",", 
       RowBox[{"DEBUG", "->", "False"}], ",", 
       RowBox[{"f128", "->", "True"}], ",", 
       RowBox[{"Phase", "->", "Null"}], ",", 
       RowBox[{"IncludeJacobian", "->", "False"}], ",", 
       RowBox[{"Phase", "->", "Null"}], ",", 
       RowBox[{"NPoints", "->", "10"}], ",", 
       RowBox[{"ApproachSide", "->", "1"}], ",", 
       RowBox[{"ApproachDirections", "->", "Automatic"}], ",", 
       RowBox[{"Seed", "->", "Automatic"}], ",", " ", 
       RowBox[{"LambdaMax", "->", "12."}], ",", 
       RowBox[{"LambdaMin", "->", "0"}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "approachDirections", ",", "furtherSeed", ",", "ECM", ",", "lambdas", 
      ",", "edgeMomsForThisLambda", ",", "allResults"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ECM", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
         "NoDeformationHyperparams", "[", "\"\<CrossSection\>\"", "]"}], "[", 
         "\"\<incoming_momenta\>\"", "]"}], "]"}], "\[LeftDoubleBracket]", 
       "1", "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "Seed", "]"}], "===", "Automatic"}], 
        "]"}], ",", 
       RowBox[{
        RowBox[{"SeedRandom", "[", 
         RowBox[{"OptionValue", "[", "Seed", "]"}], "]"}], ";"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"furtherSeed", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1000"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"approachDirections", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "ApproachDirections", "]"}], "===", 
         "Automatic"}], ",", "\[IndentingNewLine]", 
        RowBox[{"<|", "|>"}], ",", 
        RowBox[{"OptionValue", "[", "ApproachDirections", "]"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Keys", "[", "approachDirections", "]"}], ",", "em"}], 
            "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AssociateTo", "[", 
            RowBox[{"approachDirections", ",", 
             RowBox[{"em", "->", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ECM", " ", 
                 RowBox[{"RandomReal", "[", "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"em", ",", 
         RowBox[{"Keys", "[", "edgeMomenta", "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lambdas", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "l"}]], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", 
          RowBox[{"OptionValue", "[", "LambdaMin", "]"}], ",", 
          RowBox[{"OptionValue", "[", "LambdaMax", "]"}], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"OptionValue", "[", "LambdaMax", "]"}], "-", 
            RowBox[{"OptionValue", "[", "LambdaMin", "]"}]}], 
           RowBox[{"OptionValue", "[", "NPoints", "]"}]]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"allResults", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"edgeMomsForThisLambda", "=", 
          RowBox[{"Association", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"e", "->", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"edgeMomenta", "[", "e", "]"}], "+", 
                RowBox[{"lambda", "*", 
                 RowBox[{"OptionValue", "[", "ApproachSide", "]"}], "*", 
                 RowBox[{"approachDirections", "[", "e", "]"}]}]}], ")"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"e", ",", 
               RowBox[{"Keys", "[", "edgeMomenta", "]"}]}], "}"}]}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"lambda", ",", 
           RowBox[{"EvaluatePoint", "[", "\[IndentingNewLine]", 
            RowBox[{
            "hook", ",", "edgeMomsForThisLambda", ",", "SGYaml", ",", 
             "paramsYaml", ",", 
             RowBox[{"Seed", "->", "furtherSeed"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"DEBUG", "->", 
              RowBox[{"OptionValue", "[", "DEBUG", "]"}]}], ",", 
             RowBox[{"f128", "->", 
              RowBox[{"OptionValue", "[", "f128", "]"}]}], ",", 
             RowBox[{"IncludeJacobian", "->", 
              RowBox[{"OptionValue", "[", "IncludeJacobian", "]"}]}], ",", 
             RowBox[{"Phase", "->", 
              RowBox[{"OptionValue", "[", "Phase", "]"}]}]}], 
            "\[IndentingNewLine]", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"lambda", ",", "lambdas"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "allResults"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.872095549869293*^9, 3.87209569753201*^9}, {
   3.872127786016398*^9, 3.8721278113720837`*^9}, {3.872128054680449*^9, 
   3.872128091926629*^9}, {3.872128127956553*^9, 3.872128316703352*^9}, {
   3.872128363768387*^9, 3.8721283824919977`*^9}, {3.8721284269407578`*^9, 
   3.872128516528182*^9}, {3.872128551493414*^9, 3.8721286408958817`*^9}, {
   3.8721549087030153`*^9, 3.87215495934336*^9}, {3.872155034400276*^9, 
   3.8721551183660316`*^9}, {3.872155166258339*^9, 3.8721554487776613`*^9}, {
   3.872155497588312*^9, 3.872155597958342*^9}, {3.872155711927702*^9, 
   3.872155719607456*^9}, {3.872155760507725*^9, 3.872155778716238*^9}, {
   3.872155835387341*^9, 3.872155846598673*^9}, {3.872156020103462*^9, 
   3.872156030323161*^9}, {3.8721561543016253`*^9, 3.872156155528957*^9}, 
   3.872156198739615*^9, {3.8721566975625134`*^9, 3.872156698377461*^9}, {
   3.872336057669022*^9, 3.8723360850338078`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"70abfd8e-3cf6-4b0e-9490-dff2acc28208"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MonitorApproachResult", "[", 
   RowBox[{"rawResults_", ",", "SGYaml_", ",", "paramsYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cuts", "->", "All"}], ",", 
       RowBox[{"ApproachSide", "->", "1"}], ",", 
       RowBox[{"SelectedImageSize", "->", "1000"}], ",", 
       RowBox[{"IntegrandToPlot", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"SafeLog10", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{"Re", "[", "#", "]"}], "]"}], "]"}], "&"}], ")"}]}]}], 
      "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "dataToPlot", ",", "IntegrandToPlotFunction", ",", "plotRange", ",", 
      "selectedCuts", ",", "selectedCutsNoSum", ",", "scalings", ",", 
      "scalingEntries"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"selectedCuts", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"iCut", ",", 
        RowBox[{"{", 
         RowBox[{"iCut", ",", 
          RowBox[{"-", "1"}], ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"SGYaml", "[", "\"\<cutkosky_cuts\>\"", "]"}], "]"}], "-",
            "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "cuts", "]"}], "===", "All"}], "]"}], 
       ",", 
       RowBox[{
        RowBox[{"selectedCuts", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"selectedCuts", ",", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"OptionValue", "[", "cuts", "]"}], ",", "#"}], "]"}], 
            "&"}]}], "]"}]}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"selectedCutsNoSum", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"selectedCuts", ",", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"#", "==", 
           RowBox[{"-", "1"}]}], "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"scalingEntries", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Length", "[", "rawResults", "]"}], "*", "0.8"}], "]"}], 
        ",", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Length", "[", "rawResults", "]"}], "*", "0.9"}], "]"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Integrand", " ", "plots"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dataToPlot", " ", "=", " ", 
          RowBox[{"Join", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"selectedCuts", ",", 
                RowBox[{"-", "1"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"OptionValue", "[", "ApproachSide", "]"}], 
                    "]"}]}], 
                    RowBox[{"SafeLog10", "[", 
                    RowBox[{
                    "r", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                   RowBox[{
                    RowBox[{"OptionValue", "[", "IntegrandToPlot", "]"}], "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "r", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "\"\<FullIntegrand\>\"", 
                    "]"}], "[", "\"\<Res\>\"", "]"}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"r", ",", "rawResults"}], "}"}]}], "]"}], "}"}], 
              ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"Sign", "[", 
                    RowBox[{"OptionValue", "[", "ApproachSide", "]"}], 
                    "]"}]}], 
                   RowBox[{"SafeLog10", "[", 
                    RowBox[{
                    "r", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "]"}]}], ",", 
                  RowBox[{
                   RowBox[{"OptionValue", "[", "IntegrandToPlot", "]"}], "[", 
                   
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "r", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "iCut", "]"}], "[", 
                    "\"\<Res\>\"", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"r", ",", "rawResults"}], "}"}]}], "]"}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"iCut", ",", "selectedCutsNoSum"}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"scalings", "=", 
          RowBox[{"Association", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "selectedCuts", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], "->", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "dataToPlot", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{
                    "scalingEntries", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    "]"}], "-", 
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "dataToPlot", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{
                    "scalingEntries", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    "]"}]}], 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "dataToPlot", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{
                    "scalingEntries", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}], "-", 
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "dataToPlot", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{
                    "scalingEntries", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}]}]]}], ",", "0.001"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "selectedCuts", "]"}]}], "}"}]}], "]"}],
            "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plotRange", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                  "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "l"}], "}"}]}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", "dataToPlot"}], "}"}]}], "]"}], "]"}], ",", 
            
            RowBox[{"Max", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                  "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "l"}], "}"}]}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", "dataToPlot"}], "}"}]}], "]"}], "]"}]}], 
           "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plotRange", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
             "plotRange", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "-", 
             FractionBox[
              RowBox[{
               RowBox[{
               "plotRange", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "plotRange", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], "5"]}], ",", 
            RowBox[{
             RowBox[{
             "plotRange", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}], "+", 
             FractionBox[
              RowBox[{
               RowBox[{
               "plotRange", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "plotRange", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], "5"]}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
          RowBox[{
          "dataToPlot", "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(10\), \(-\[Lambda]\)]\)\>\"", ",", 
              "\"\<F[\!\(\*SuperscriptBox[\(I\), \((LU)\)]\)]\>\""}], "}"}]}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"selectedCuts", ",", 
                  RowBox[{"-", "1"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Thickness", "[", "0.004", "]"}], "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Thickness", "[", "0.002", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"c", ",", "selectedCutsNoSum"}], "}"}]}], "]"}]}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"selectedCuts", ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Complete LU integrand (scaling: \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"scalings", "[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "<>", "\"\< )\>\""}], 
                   "}"}], ",", 
                  RowBox[{"{", "}"}]}], "]"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"\"\<Cut #\>\"", "<>", 
                   RowBox[{"ToString", "[", "iCut", "]"}], "<>", 
                   "\"\< : \>\"", "<>", 
                   RowBox[{"StringRiffle", "[", 
                    RowBox[{"AlphabeticSort", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"c", "[", "\"\<name\>\"", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"c", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SGYaml", "[", "\"\<cutkosky_cuts\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"iCut", "+", "1"}], "\[RightDoubleBracket]"}], 
                    "[", "\"\<cuts\>\"", "]"}]}], "}"}]}], "]"}], "]"}], 
                    "]"}], "<>", "\"\< (scaling: \>\"", "<>", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"scalings", "[", "iCut", "]"}], "]"}], "<>", 
                   "\"\< )\>\""}], ",", 
                  RowBox[{"{", 
                   RowBox[{"iCut", ",", "selectedCutsNoSum"}], "}"}]}], 
                 "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"OptionValue", "[", "ApproachSide", "]"}], ">", 
                 "0"}], ",", "Left", ",", "Right"}], "]"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "->", "plotRange"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"OptionValue", "[", "SelectedImageSize", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "->", "Automatic"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"\"\<Local Unitarity integrands, F=(\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"OptionValue", "[", "IntegrandToPlot", "]"}], "]"}], 
             "<>", "\"\<)\>\"", "<>", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"OptionValue", "[", "ApproachSide", "]"}], ">", "0"}],
                ",", "\"\<( Left approach )\>\"", ",", 
               "\"\<( Right approach) \>\""}], "]"}]}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Deformation", " ", "plots"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"dataToPlot", " ", "=", " ", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Sign", "[", 
                   RowBox[{"OptionValue", "[", "ApproachSide", "]"}], "]"}]}], 
                 RowBox[{"SafeLog10", "[", 
                  RowBox[{
                  "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   "]"}]}], ",", 
                RowBox[{"SafeLog10", "[", 
                 RowBox[{"Total", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"Norm", "[", "\[Kappa]", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[Kappa]", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "r", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "[", "iCut", "]"}], "[", 
                    "\"\<MomentaDeformationInLMB\>\"", "]"}]}], "}"}]}], 
                   "]"}], "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"r", ",", "rawResults"}], "}"}]}], "]"}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"iCut", ",", "selectedCutsNoSum"}], "}"}]}], 
           "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"scalings", "=", 
          RowBox[{"Association", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "selectedCutsNoSum", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], "->", 
              RowBox[{"Round", "[", 
               RowBox[{
                RowBox[{"-", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "dataToPlot", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{
                    "scalingEntries", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    "]"}], "-", 
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "dataToPlot", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{
                    "scalingEntries", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    "]"}]}], 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "dataToPlot", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{
                    "scalingEntries", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}], "-", 
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "dataToPlot", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
                    RowBox[{
                    "scalingEntries", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "]"}]}]]}], ",", "0.001"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "selectedCutsNoSum", "]"}]}], "}"}]}], 
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plotRange", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                  "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "l"}], "}"}]}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", "dataToPlot"}], "}"}]}], "]"}], "]"}], ",", 
            
            RowBox[{"Max", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                  "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"r", ",", "l"}], "}"}]}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"l", ",", "dataToPlot"}], "}"}]}], "]"}], "]"}]}], 
           "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"plotRange", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
             "plotRange", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "-", 
             FractionBox[
              RowBox[{
               RowBox[{
               "plotRange", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "plotRange", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], "5"]}], ",", 
            RowBox[{
             RowBox[{
             "plotRange", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}], "+", 
             FractionBox[
              RowBox[{
               RowBox[{
               "plotRange", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "plotRange", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], "5"]}]}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
          RowBox[{
          "dataToPlot", "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\!\(\*SuperscriptBox[\(10\), \(-\[Lambda]\)]\)\>\"", ",", 
              "\"\<\!\(\*SubscriptBox[\(Log\), \(10\)]\)[|\[Kappa]|]\>\""}], 
             "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Thickness", "[", "0.002", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"c", ",", 
                RowBox[{"SGYaml", "[", "\"\<cutkosky_cuts\>\"", "]"}]}], 
               "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"\"\<Cut #\>\"", "<>", 
                 RowBox[{"ToString", "[", "iCut", "]"}], "<>", "\"\< : \>\"", 
                 "<>", 
                 RowBox[{"StringRiffle", "[", 
                  RowBox[{"AlphabeticSort", "[", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"c", "[", "\"\<name\>\"", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"c", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SGYaml", "[", "\"\<cutkosky_cuts\>\"", "]"}], 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"iCut", "+", "1"}], "\[RightDoubleBracket]"}], 
                    "[", "\"\<cuts\>\"", "]"}]}], "}"}]}], "]"}], "]"}], 
                  "]"}], "<>", "\"\< (scaling: \>\"", "<>", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"scalings", "[", "iCut", "]"}], "]"}], "<>", 
                 "\"\< )\>\""}], ",", 
                RowBox[{"{", 
                 RowBox[{"iCut", ",", "selectedCutsNoSum"}], "}"}]}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"OptionValue", "[", "ApproachSide", "]"}], ">", 
                 "0"}], ",", "Left", ",", "Right"}], "]"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "->", "plotRange"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"OptionValue", "[", "SelectedImageSize", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "->", "Automatic"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotLabel", "->", 
            RowBox[{"\"\<Deformation magnitude\>\"", "<>", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"OptionValue", "[", "ApproachSide", "]"}], ">", "0"}],
                ",", "\"\<( Left approach )\>\"", ",", 
               "\"\<( Right approach) \>\""}], "]"}]}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}], 
      "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.872156156435277*^9, 3.8721562075959873`*^9}, {
   3.872157287428753*^9, 3.87215739190734*^9}, {3.872157458757831*^9, 
   3.872157579828044*^9}, {3.872157662293721*^9, 3.872157693974123*^9}, {
   3.872251336805811*^9, 3.8722513389821367`*^9}, {3.872251376849505*^9, 
   3.872251536612658*^9}, {3.872251586193701*^9, 3.872251690900126*^9}, {
   3.872251747959936*^9, 3.872251753435223*^9}, {3.872251845055991*^9, 
   3.8722519053315363`*^9}, {3.872251937716959*^9, 3.872251971485421*^9}, 
   3.872252053122839*^9, {3.872252233599967*^9, 3.87225223866039*^9}, {
   3.8722522837138853`*^9, 3.872252306894808*^9}, {3.872252401151861*^9, 
   3.872252554457419*^9}, {3.8722526182030067`*^9, 3.87225262054279*^9}, {
   3.872252685654872*^9, 3.872252714743086*^9}, {3.8722529863905373`*^9, 
   3.872253014788906*^9}, {3.8722534663921413`*^9, 3.8722534698127623`*^9}, {
   3.872323371186492*^9, 3.872323382181143*^9}, {3.872323430794022*^9, 
   3.872323451120062*^9}, {3.872323568879664*^9, 3.872323657022286*^9}, {
   3.872323844147449*^9, 3.872323879688532*^9}, {3.8723239619976997`*^9, 
   3.872323964926404*^9}, {3.8723246601864*^9, 3.872324665725956*^9}, 
   3.872324714124305*^9, {3.872333445357521*^9, 3.872333470790042*^9}, {
   3.8723335116912613`*^9, 3.8723335399581738`*^9}, {3.872333573069786*^9, 
   3.8723336038995132`*^9}, {3.872333654802866*^9, 3.8723337947387*^9}, {
   3.872333855523325*^9, 3.872334058200156*^9}, {3.87233409558608*^9, 
   3.872334175883856*^9}, {3.872334268326846*^9, 3.872334293232725*^9}, {
   3.872334401180401*^9, 3.872334480694457*^9}, {3.87233453562297*^9, 
   3.87233463449785*^9}, {3.872334676833325*^9, 3.8723347340855007`*^9}, {
   3.87233480744123*^9, 3.872334837455964*^9}, {3.8723349063356447`*^9, 
   3.8723349100215282`*^9}, {3.8723357435449963`*^9, 3.8723357934496*^9}, {
   3.872335851318102*^9, 3.872335880451292*^9}, {3.872335925931185*^9, 
   3.8723359800404787`*^9}, {3.872336380729375*^9, 3.872336428251376*^9}, {
   3.8723365534492617`*^9, 3.872336584399788*^9}, {3.872337800046241*^9, 
   3.872337847398449*^9}, {3.8723379615229197`*^9, 3.872337986627035*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"e44629ca-561d-4ee2-b3f8-80e672fd6462"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DoubleSidedApproach", "[", 
   RowBox[{"hook_", ",", "point_", ",", "SGYaml_", ",", "paramsYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MomentumPadding", "->", "Automatic"}], ",", 
       RowBox[{"DEBUG", "->", "False"}], ",", 
       RowBox[{"f128", "->", "True"}], ",", 
       RowBox[{"Phase", "->", "Null"}], ",", 
       RowBox[{"IncludeJacobian", "->", "False"}], ",", 
       RowBox[{"Phase", "->", "Null"}], ",", 
       RowBox[{"NPoints", "->", "10"}], ",", 
       RowBox[{"ApproachDirections", "->", "Automatic"}], ",", 
       RowBox[{"Seed", "->", "Automatic"}], ",", " ", 
       RowBox[{"LambdaMax", "->", "7."}], ",", 
       RowBox[{"LambdaMin", "->", "0"}]}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"approachLeft", ",", " ", "approachRight"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"approachLeft", "=", 
      RowBox[{"AnalyzeApproach", "[", "\[IndentingNewLine]", 
       RowBox[{
       "hook", ",", "point", ",", "SGYaml", ",", "paramsYaml", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"MomentumPadding", "->", 
         RowBox[{"OptionValue", "[", "MomentumPadding", "]"}]}], ",", 
        RowBox[{"DEBUG", "->", 
         RowBox[{"OptionValue", "[", "DEBUG", "]"}]}], ",", 
        RowBox[{"f128", "->", 
         RowBox[{"OptionValue", "[", "f128", "]"}]}], ",", 
        RowBox[{"Phase", "->", 
         RowBox[{"OptionValue", "[", "Phase", "]"}]}], ",", 
        RowBox[{"NPoints", "->", 
         RowBox[{"OptionValue", "[", "NPoints", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ApproachSide", "->", "1"}], ",", 
        RowBox[{"IncludeJacobian", "->", 
         RowBox[{"OptionValue", "[", "IncludeJacobian", "]"}]}], ",", 
        RowBox[{"ApproachDirections", "->", 
         RowBox[{"OptionValue", "[", "ApproachDirections", "]"}]}], ",", 
        RowBox[{"Seed", "->", 
         RowBox[{"OptionValue", "[", "Seed", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LambdaMax", "->", 
         RowBox[{"OptionValue", "[", "LambdaMax", "]"}]}], ",", 
        RowBox[{"LambdaMin", "->", 
         RowBox[{"OptionValue", "[", "LambdaMin", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"approachRight", "=", 
      RowBox[{"AnalyzeApproach", "[", "\[IndentingNewLine]", 
       RowBox[{
       "hook", ",", "point", ",", "SGYaml", ",", "paramsYaml", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"MomentumPadding", "->", 
         RowBox[{"OptionValue", "[", "MomentumPadding", "]"}]}], ",", 
        RowBox[{"DEBUG", "->", 
         RowBox[{"OptionValue", "[", "DEBUG", "]"}]}], ",", 
        RowBox[{"f128", "->", 
         RowBox[{"OptionValue", "[", "f128", "]"}]}], ",", 
        RowBox[{"Phase", "->", 
         RowBox[{"OptionValue", "[", "Phase", "]"}]}], ",", 
        RowBox[{"NPoints", "->", 
         RowBox[{"OptionValue", "[", "NPoints", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ApproachSide", "->", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"IncludeJacobian", "->", 
         RowBox[{"OptionValue", "[", "IncludeJacobian", "]"}]}], ",", 
        RowBox[{"ApproachDirections", "->", 
         RowBox[{"OptionValue", "[", "ApproachDirections", "]"}]}], ",", 
        RowBox[{"Seed", "->", 
         RowBox[{"OptionValue", "[", "Seed", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"LambdaMax", "->", 
         RowBox[{"OptionValue", "[", "LambdaMax", "]"}]}], ",", 
        RowBox[{"LambdaMin", "->", 
         RowBox[{"OptionValue", "[", "LambdaMin", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Left\>\"", "->", "approachLeft"}], ",", 
       RowBox[{"\"\<Right\>\"", "->", "approachRight"}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.872336691137381*^9, 3.872336695392254*^9}, {
   3.8723367799498253`*^9, 3.872336796826847*^9}, 3.872336831788434*^9, {
   3.872336875053851*^9, 3.8723368920227003`*^9}, {3.8723369567141943`*^9, 
   3.872337219619709*^9}, {3.87233725635091*^9, 3.872337365241027*^9}, {
   3.872337397320438*^9, 3.872337413208201*^9}, {3.8723375431819057`*^9, 
   3.872337547063486*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"e0f7f274-14cc-4fcb-8a98-9b11d67568e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DoubleSidedMonitor", "[", 
   RowBox[{
   "rawData_", ",", "SGYaml_", ",", "paramsYaml_", ",", "\[IndentingNewLine]", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cuts", "->", "All"}], ",", 
       RowBox[{"SelectedImageSize", "->", "600"}], ",", 
       RowBox[{"IntegrandToPlot", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"SafeLog10", "[", 
           RowBox[{"Abs", "[", 
            RowBox[{"Re", "[", "#", "]"}], "]"}], "]"}], "&"}], ")"}]}]}], 
      "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"monitorLeft", ",", "monitorRight"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"monitorLeft", "=", 
      RowBox[{"MonitorApproachResult", "[", 
       RowBox[{
        RowBox[{"rawData", "[", "\"\<Left\>\"", "]"}], ",", "SGYaml", ",", 
        "paramsYaml", ",", 
        RowBox[{"cuts", "->", 
         RowBox[{"OptionValue", "[", "cuts", "]"}]}], ",", 
        RowBox[{"ApproachSide", "->", "1"}], ",", 
        RowBox[{"SelectedImageSize", "->", 
         RowBox[{"OptionValue", "[", "SelectedImageSize", "]"}]}], ",", 
        RowBox[{"IntegrandToPlot", "->", 
         RowBox[{"OptionValue", "[", "IntegrandToPlot", "]"}]}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"monitorRight", "=", 
      RowBox[{"MonitorApproachResult", "[", 
       RowBox[{
        RowBox[{"rawData", "[", "\"\<Right\>\"", "]"}], ",", "SGYaml", ",", 
        "paramsYaml", ",", 
        RowBox[{"cuts", "->", 
         RowBox[{"OptionValue", "[", "cuts", "]"}]}], ",", 
        RowBox[{"ApproachSide", "->", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"SelectedImageSize", "->", 
         RowBox[{"OptionValue", "[", "SelectedImageSize", "]"}]}], ",", 
        RowBox[{"IntegrandToPlot", "->", 
         RowBox[{"OptionValue", "[", "IntegrandToPlot", "]"}]}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{
         "monitorLeft", "\[LeftDoubleBracket]", "iRow", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "monitorRight", "\[LeftDoubleBracket]", "iRow", 
          "\[RightDoubleBracket]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"iRow", ",", 
         RowBox[{"Length", "[", "monitorLeft", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.872337288859223*^9, 3.8723373863783407`*^9}, {
  3.872337432913715*^9, 3.8723374995953283`*^9}, {3.872337530599959*^9, 
  3.872337535231303*^9}, {3.872337640239726*^9, 3.872337643118925*^9}, {
  3.872337890180089*^9, 3.872337890915518*^9}, {3.8723380039041*^9, 
  3.872338070215763*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"4b21b7f7-cfe7-48c6-af83-4d75bff95b13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateLoopMomenta", "[", 
   RowBox[{"SGYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{"moms", "->", "Null"}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "loopMoms", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"loopMoms", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"\"\<k\>\"", "<>", 
            RowBox[{"ToString", "[", "i", "]"}], "<>", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"1", "->", "\"\<x\>\""}], ",", 
                RowBox[{"2", "->", "\"\<y\>\""}], ",", 
                RowBox[{"3", "->", "\"\<z\>\""}]}], "|>"}], ")"}], "[", "j", 
             "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"SGYAMLinfo", "[", "\"\<loop_momentum_basis\>\"", "]"}], 
           "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"OptionValue", "[", "moms", "]"}], "===", "Null"}], ",", 
       "loopMoms", ",", "\[IndentingNewLine]", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "loopMoms", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "j", 
              "\[RightDoubleBracket]"}], "->", 
             RowBox[{
              RowBox[{
               RowBox[{"OptionValue", "[", "moms", "]"}], "[", 
               RowBox[{
                RowBox[{"SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}], 
                "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "]"}],
               "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], ",", 
            
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "loopMoms", "]"}]}], "}"}]}], "]"}], 
        "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8723197663748493`*^9, 3.872319878388023*^9}, {
  3.8723204646716423`*^9, 3.87232053298739*^9}, {3.872320583013748*^9, 
  3.872320584391259*^9}, {3.872320614931924*^9, 3.87232065244759*^9}, {
  3.872320740944005*^9, 3.872320744171915*^9}, {3.872321117442194*^9, 
  3.872321123697048*^9}, {3.872321154970739*^9, 3.8723211588327227`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"6f17d930-b8b7-4106-a3e0-aa5d5813e952"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BuildESurfaceEquation", "[", 
   RowBox[{"Esurf_", ",", "SGYaml_", ",", "paramsYaml_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "externalMomenta", ",", "externalMomentaEs", ",", "loopMoms", ",", "q", 
      ",", "EsurfEq", ",", "edgesToMass"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"And", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Esurf", "[", "\"\<IncomingEdges\>\"", "]"}], "===", 
          "Null"}], ",", 
         RowBox[{
          RowBox[{"Esurf", "[", "\"\<OutgoingEdges\>\"", "]"}], "===", 
          "Null"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"Return", "[", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Eq\>\"", "->", "Null"}], ",", 
           RowBox[{"\"\<GradEq\>\"", "->", "Null"}]}], "|>"}], "]"}], ";"}]}],
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"edgesToMass", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"e", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "->", 
          RowBox[{"PDGtoMasses", "[", 
           RowBox[{
           "e", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"e", ",", 
           RowBox[{"SGYAMLinfo", "[", "\"\<edge_PDGs\>\"", "]"}]}], "}"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"loopMoms", "=", 
      RowBox[{"GenerateLoopMomenta", "[", "SGYaml", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"externalMomenta", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"p", "\[LeftDoubleBracket]", 
           RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"paramsYaml", "[", "\"\<CrossSection\>\"", "]"}], "[", 
               "\"\<incoming_momenta\>\"", "]"}], ",", 
              RowBox[{
               RowBox[{"paramsYaml", "[", "\"\<CrossSection\>\"", "]"}], "[", 
               "\"\<incoming_momenta\>\"", "]"}]}], "]"}]}], "}"}]}], "]"}], 
        ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "15"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"externalMomentaEs", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"p", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"paramsYaml", "[", "\"\<CrossSection\>\"", "]"}], "[", 
               "\"\<incoming_momenta\>\"", "]"}], ",", 
              RowBox[{
               RowBox[{"paramsYaml", "[", "\"\<CrossSection\>\"", "]"}], "[", 
               "\"\<incoming_momenta\>\"", "]"}]}], "]"}]}], "}"}]}], "]"}], 
        ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "15"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"EsurfEq", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"q", "=", 
            RowBox[{"(", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], "[",
                  "eOUT", "]"}], "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], ".", "loopMoms"}], "+", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], "[",
                  "eOUT", "]"}], "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], ".", "externalMomenta"}]}], 
             ")"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"q", ".", "q"}], "+", 
             SuperscriptBox[
              RowBox[{"edgesToMass", "[", "eOUT", "]"}], "2"]}], "]"}]}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"eOUT", ",", 
            RowBox[{"Esurf", "[", "\"\<OutgoingEdges\>\"", "]"}]}], "}"}]}], 
         "]"}], "]"}], "\[IndentingNewLine]", "-", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Esurf", "[", "\"\<type\>\"", "]"}], "==", 
          "\"\<s-channel\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{"Total", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], "[", 
               "eIN", "]"}], "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}], ".", "externalMomentaEs"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"eIN", ",", 
              RowBox[{"Esurf", "[", "\"\<IncomingEdges\>\"", "]"}]}], "}"}]}],
            "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Total", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "=", 
              RowBox[{"(", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], 
                   "[", "eIN", "]"}], "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], ".", "loopMoms"}], "+", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], 
                   "[", "eIN", "]"}], "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ".", "externalMomenta"}]}], 
               ")"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"q", ".", "q"}], "+", 
               SuperscriptBox[
                RowBox[{"edgesToMass", "[", "eIN", "]"}], "2"]}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"eIN", ",", 
              RowBox[{"Esurf", "[", "\"\<IncomingEdges\>\"", "]"}]}], "}"}]}],
            "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"EsurfEq", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{"EsurfEq", ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "20"}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<Eq\>\"", "->", "EsurfEq"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<GradEq\>\"", "->", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Simplify", "[", 
             RowBox[{"D", "[", 
              RowBox[{"EsurfEq", ",", "lme"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"lme", ",", "lm"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"lm", ",", "loopMoms"}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "|>"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.872315093586947*^9, 3.872315126822302*^9}, {
   3.872316675145135*^9, 3.872316677338965*^9}, {3.872316711051702*^9, 
   3.872316782197468*^9}, {3.8723168188438463`*^9, 3.872316999369183*^9}, {
   3.872317036093876*^9, 3.8723170726581984`*^9}, {3.872317278617683*^9, 
   3.872317290672374*^9}, {3.8723173707077427`*^9, 3.872317434568973*^9}, {
   3.8723174836875257`*^9, 3.872317537742866*^9}, {3.872317578115327*^9, 
   3.872317586228591*^9}, {3.87231761671445*^9, 3.8723176936885*^9}, {
   3.872317727055449*^9, 3.872317760459903*^9}, {3.872317809962789*^9, 
   3.87231784210351*^9}, {3.8723181540692997`*^9, 3.872318154433124*^9}, {
   3.872318228293661*^9, 3.872318320569419*^9}, {3.8723183691366177`*^9, 
   3.8723183707233*^9}, 3.872318422743218*^9, {3.872319783702969*^9, 
   3.8723197908669157`*^9}, {3.872488417470605*^9, 3.872488474130528*^9}, {
   3.872488750533667*^9, 3.8724888053124437`*^9}, {3.872489216836151*^9, 
   3.872489227802636*^9}, {3.872496044585532*^9, 3.872496049585944*^9}, {
   3.872496080450096*^9, 3.8724962036048*^9}, {3.872496421709475*^9, 
   3.872496428035095*^9}, {3.872496501851768*^9, 3.872496534276272*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"1d3f569c-9d91-487f-b8da-d483dcdac142"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindPointOnEsurfaces", "[", 
   RowBox[{"Esurfs_", ",", "SGYaml_", ",", "paramsYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"AcceptThreshold", "->", 
        SuperscriptBox["10", 
         RowBox[{"-", "16"}]]}], ",", 
       RowBox[{"DEBUG", "->", "False"}], ",", 
       RowBox[{"QuietMode", "->", "False"}]}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"minimizeRes", ",", "loopMoms", ",", "ECM"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"AnyTrue", "[", 
        RowBox[{"Esurfs", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", "\"\<Eq\>\"", "]"}], "===", "Null"}], ")"}], 
          "&"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"Return", "[", "Null", "]"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ECM", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
         "NoDeformationHyperparams", "[", "\"\<CrossSection\>\"", "]"}], "[", 
         "\"\<incoming_momenta\>\"", "]"}], "]"}], "\[LeftDoubleBracket]", 
       "1", "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"loopMoms", "=", 
      RowBox[{"GenerateLoopMomenta", "[", "SGYaml", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "QuietMode", "]"}], ",", 
       RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"minimizeRes", "=", 
          RowBox[{"NMinimize", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"SetPrecision", "[", 
             RowBox[{
              RowBox[{
               FractionBox["1", "ECM"], 
               RowBox[{"Total", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Es", "[", "\"\<Eq\>\"", "]"}], "2"], ",", 
                  RowBox[{"{", 
                   RowBox[{"Es", ",", "Esurfs"}], "}"}]}], "]"}], "]"}]}], 
              ",", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Log10", "[", 
                  RowBox[{"OptionValue", "[", "AcceptThreshold", "]"}], 
                  "]"}]}], "+", "4"}], ")"}]}], "]"}], ",", 
            RowBox[{"Flatten", "[", "loopMoms", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PrecisionGoal", "->", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Log10", "[", 
                 RowBox[{"OptionValue", "[", "AcceptThreshold", "]"}], 
                 "]"}]}], "+", "2"}], ")"}]}], ",", 
            RowBox[{"AccuracyGoal", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Log10", "[", 
                 RowBox[{"OptionValue", "[", "AcceptThreshold", "]"}], 
                 "]"}]}], "+", "2"}], ")"}]}], ",", 
            RowBox[{"WorkingPrecision", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Log10", "[", 
                 RowBox[{"OptionValue", "[", "AcceptThreshold", "]"}], 
                 "]"}]}], "+", "2"}], ")"}]}]}], "\[IndentingNewLine]", 
           "]"}]}], ";"}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"minimizeRes", "=", 
         RowBox[{"NMinimize", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SetPrecision", "[", 
            RowBox[{
             RowBox[{
              FractionBox["1", "ECM"], 
              RowBox[{"Total", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Es", "[", "\"\<Eq\>\"", "]"}], "2"], ",", 
                 RowBox[{"{", 
                  RowBox[{"Es", ",", "Esurfs"}], "}"}]}], "]"}], "]"}]}], ",", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Log10", "[", 
                 RowBox[{"OptionValue", "[", "AcceptThreshold", "]"}], 
                 "]"}]}], "+", "4"}], ")"}]}], "]"}], ",", 
           RowBox[{"Flatten", "[", "loopMoms", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PrecisionGoal", "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Log10", "[", 
                RowBox[{"OptionValue", "[", "AcceptThreshold", "]"}], "]"}]}],
               "+", "2"}], ")"}]}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Log10", "[", 
                RowBox[{"OptionValue", "[", "AcceptThreshold", "]"}], "]"}]}],
               "+", "2"}], ")"}]}], ",", 
           RowBox[{"WorkingPrecision", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Log10", "[", 
                RowBox[{"OptionValue", "[", "AcceptThreshold", "]"}], "]"}]}],
               "+", "2"}], ")"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}],
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "DEBUG", "]"}], ",", 
       RowBox[{"MyPrint", "[", 
        RowBox[{
        "\"\<FindPointOnEsurfaces found the following solution with \
evaluation \>\"", "<>", 
         RowBox[{"ToStringFloat", "[", 
          RowBox[{
          "minimizeRes", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], "]"}], "<>", "\"\< : \>\"", "<>", 
         RowBox[{"ToStringFloat", "[", 
          RowBox[{"loopMoms", "/.", 
           RowBox[{
           "minimizeRes", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
         "minimizeRes", "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], "]"}], "<", 
        RowBox[{"OptionValue", "[", "AcceptThreshold", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Association", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}], 
            "\[LeftDoubleBracket]", "lmi", "\[RightDoubleBracket]"}], "->", 
           RowBox[{"Chop", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "loopMoms", "\[LeftDoubleBracket]", "lmi", 
                "\[RightDoubleBracket]"}], "/.", 
               RowBox[{
               "minimizeRes", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}], ")"}], ",", 
             RowBox[{
              SuperscriptBox["10", 
               RowBox[{"-", "16"}]], "ECM"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"lmi", ",", 
            RowBox[{"Length", "[", "loopMoms", "]"}]}], "}"}]}], "]"}], "]"}],
        ",", 
       RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.872318509916318*^9, 3.8723186550283613`*^9}, {
   3.8723186893371572`*^9, 3.8723187639253807`*^9}, {3.872318801206976*^9, 
   3.872318849352809*^9}, {3.872318970683792*^9, 3.872319137664674*^9}, 
   3.872319206783442*^9, {3.872319238159182*^9, 3.872319272879203*^9}, 
   3.872319554084572*^9, {3.872319632716873*^9, 3.8723197032766867`*^9}, 
   3.872319798451762*^9, {3.872320003057926*^9, 3.872320086874934*^9}, {
   3.872320940070775*^9, 3.8723210524653378`*^9}, 3.872321096089657*^9, {
   3.872321537575192*^9, 3.8723215461522503`*^9}, {3.872321835873314*^9, 
   3.872321836796836*^9}, {3.872490532940528*^9, 3.872490579597076*^9}, {
   3.872490899796286*^9, 3.872490950346612*^9}, {3.872492047715104*^9, 
   3.872492078477171*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"fca95ff8-65c9-4ecf-94d7-8622802c2d48"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MapFromXs", "[", 
   RowBox[{"hook_", ",", "xs_", ",", "SGYaml_", ",", "paramsYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"basis", "->", "Automatic"}], ",", 
       RowBox[{"f128", "->", "True"}]}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "riffledXs", ",", "momsMap", ",", "allMoms", ",", "ECM", ",", 
      "selectedBasis"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ECM", "=", 
      RowBox[{
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
         "NoDeformationHyperparams", "[", "\"\<CrossSection\>\"", "]"}], "[", 
         "\"\<incoming_momenta\>\"", "]"}], "]"}], "\[LeftDoubleBracket]", 
       "1", "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"selectedBasis", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "basis", "]"}], "===", "Automatic"}], 
        ",", 
        RowBox[{"SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}], ",", 
        RowBox[{"OptionValue", "[", "basis", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"riffledXs", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"xs", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{
           RowBox[{"iMom", "*", "3"}], "+", "1"}], ";;", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"iMom", "+", "1"}], ")"}], "*", "3"}]}], 
         "\[RightDoubleBracket]"}], ",", 
        RowBox[{"{", 
         RowBox[{"iMom", ",", "0", ",", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}], 
            "]"}], "-", "1"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"momsMap", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RFM$Parameterize", "[", 
         RowBox[{"hook", ",", 
          RowBox[{"iLMB", "-", "1"}], ",", 
          SuperscriptBox["ECM", "2"], ",", 
          RowBox[{
          "riffledXs", "\[LeftDoubleBracket]", "iLMB", 
           "\[RightDoubleBracket]"}], ",", 
          RowBox[{"f128", "->", 
           RowBox[{"OptionValue", "[", "f128", "]"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"iLMB", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}], 
           "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetMomentaAssoc", "[", 
      RowBox[{
       RowBox[{"Association", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "selectedBasis", "\[LeftDoubleBracket]", "iEdge", 
            "\[RightDoubleBracket]"}], "->", 
           RowBox[{
            RowBox[{
            "momsMap", "\[LeftDoubleBracket]", "iEdge", 
             "\[RightDoubleBracket]"}], "[", "\"\<Momentum\>\"", "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"iEdge", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"SGYaml", "[", "\"\<loop_momentum_basis\>\"", "]"}], 
             "]"}]}], "}"}]}], "]"}], "]"}], ",", "SGYaml", ",", 
       "paramsYaml"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.872499861302561*^9, 3.872499983012285*^9}, {
  3.872500090837838*^9, 3.8725001031366787`*^9}, {3.872500136635151*^9, 
  3.87250031576978*^9}, {3.872500394802186*^9, 3.872500397681246*^9}, {
  3.8725004456307573`*^9, 3.8725006532035*^9}, {3.872500842242984*^9, 
  3.8725008433946877`*^9}, {3.8725009484157047`*^9, 3.872500982699686*^9}, {
  3.872501061115576*^9, 3.872501066910388*^9}, {3.8725010984744883`*^9, 
  3.872501111977243*^9}, {3.872501166225005*^9, 3.8725011750664177`*^9}, {
  3.872501319333795*^9, 3.872501348986001*^9}, {3.872501415458663*^9, 
  3.872501485628469*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"0869e065-b14d-46c9-8222-18d93b393f4b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Graph functions for supergraphs analysis", "Subsection",
 CellChangeTimes->{{3.872339054271967*^9, 3.872339060486682*^9}, {
  3.872339111526726*^9, 3.8723391218779993`*^9}, {3.872450565365534*^9, 
  3.872450574098299*^9}},ExpressionUUID->"09280b95-664e-4508-ae9e-\
be413d6d6abb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetSuperGraph", "[", 
   RowBox[{"SGYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ShowVertexLabels", "->", "None"}], ",", 
       RowBox[{"Size", "\[Rule]", "300"}]}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"DirectedGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"e", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "\[Rule]", 
       RowBox[{"e", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"e", ",", 
        RowBox[{"SGYAMLinfo", "[", "\"\<topo_edges\>\"", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"VertexLabels", "->", 
     RowBox[{"OptionValue", "[", "ShowVertexLabels", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"OptionValue", "[", "Size", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.872446718045072*^9, 3.872446747702936*^9}, {
  3.8724467818545847`*^9, 3.872446829608667*^9}, {3.872450423558331*^9, 
  3.8724504563940783`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"aa5cb4cc-bceb-42a7-abcf-49def91eb3ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateAllLMBs", "[", 
   RowBox[{"SGYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{"DEBUG", "\[Rule]", "False"}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"g", ",", "spanningTrees"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{"GetSuperGraph", "[", "SGYaml", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"spanningTrees", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"TreeGraphQ", "[", 
          RowBox[{"UndirectedGraph", "[", "#1", "]"}], "]"}], "&"}], "]"}], 
       "[", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"VertexCount", "[", "#1", "]"}], "\[Equal]", 
           RowBox[{"VertexCount", "[", "g", "]"}]}], "&"}], "]"}], "[", 
        RowBox[{"Subsets", "[", 
         RowBox[{
          RowBox[{"EdgeList", "[", "g", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeCount", "[", "g", "]"}], "-", 
            RowBox[{
             RowBox[{"SGYAMLinfo", "[", "\"\<topo\>\"", "]"}], "[", 
             "\"\<n_loops\>\"", "]"}]}], "}"}]}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"DirectedGraph", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"EdgeList", "[", "g", "]"}], ",", 
          RowBox[{"Function", "[", 
           RowBox[{"e", ",", 
            RowBox[{"Not", "[", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"EdgeList", "[", "st", "]"}], ",", "e"}], "]"}], 
             "]"}]}], "]"}]}], "]"}], " ", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"st", ",", "spanningTrees"}], "}"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.872446449018859*^9, 3.872446597292671*^9}, {
  3.8724466412532463`*^9, 3.872446651145527*^9}, {3.87250214019982*^9, 
  3.872502143439701*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"04d0761f-15af-4426-a937-d107fbf15bee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphsMinusEsurface", "[", 
   RowBox[{"embeddingGraph_", ",", "Esurf_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{"IncludeBoundaryEdges", "->", "True"}], "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "diff", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"diff", "=", 
      RowBox[{"Graph", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"VertexList", "[", "embeddingGraph", "]"}], ",", 
          RowBox[{
           RowBox[{"Not", "[", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"VertexList", "[", 
               RowBox[{"Esurf", "[", "\"\<graph\>\"", "]"}], "]"}], ",", 
              "#"}], "]"}], "]"}], "&"}]}], "]"}], "\[IndentingNewLine]", ",",
         "\[IndentingNewLine]", 
        RowBox[{"Select", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"EdgeList", "[", "embeddingGraph", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Not", "[", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"Esurf", "[", "\"\<edges\>\"", "]"}], ",", 
                RowBox[{"EdgeList", "[", 
                 RowBox[{"Esurf", "[", "\"\<graph\>\"", "]"}], "]"}]}], "]"}],
               ",", "#"}], "]"}], "]"}], "&"}]}], "\[IndentingNewLine]", 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OptionValue", "[", "IncludeBoundaryEdges", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DirectedGraph", "[", "edges", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"edges", ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"EdgeList", "[", "embeddingGraph", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AnyTrue", "[", 
                 RowBox[{"g", ",", 
                  RowBox[{"Function", "[", 
                   RowBox[{"v", ",", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"#", ",", "v"}], "]"}]}], "]"}]}], "]"}], "&"}]}],
               " ", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"g", ",", 
               RowBox[{"WeaklyConnectedComponents", "[", "diff", "]"}]}], 
              "}"}]}], "]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", "\[IndentingNewLine]", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"EdgeList", "[", "embeddingGraph", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AllTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{
                  "#", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "}"}], ",", 
                RowBox[{"Function", "[", 
                 RowBox[{"v", ",", 
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"g", ",", "v"}], "]"}]}], "]"}]}], "]"}], "&"}]}], 
            " ", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"g", ",", 
           RowBox[{"WeaklyConnectedComponents", "[", "diff", "]"}]}], "}"}]}],
         "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8724325346670322`*^9, 3.872432667445259*^9}, 
   3.8724333077250977`*^9, {3.872442109770862*^9, 3.8724422072025423`*^9}, {
   3.872442257253503*^9, 3.872442418916321*^9}, {3.872442518039648*^9, 
   3.872442578161991*^9}, 3.8724426390422077`*^9, {3.872442865734098*^9, 
   3.872442880269527*^9}, 3.8724429299042597`*^9, {3.872442964157023*^9, 
   3.872442976113945*^9}, {3.872443211449342*^9, 3.872443241429744*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"7cf73d5a-0621-4dbf-b025-f257c6252e73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateAllSGEsurfaces", "[", 
   RowBox[{"SGYaml_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DEBUG", "->", "False"}], ",", 
       RowBox[{"paramsYaml", "->", "Null"}], ",", 
       RowBox[{"AcceptThreshold", "->", 
        SuperscriptBox["10", 
         RowBox[{"-", "25"}]]}], ",", 
       RowBox[{"QuietMode", "->", "True"}], ",", 
       RowBox[{"GenerateExamplePoints", "->", "True"}]}], "}"}], "]"}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "g", ",", "gNoTreeEdges", ",", "\[IndentingNewLine]", 
      "externalLeftEdgeNames", ",", "externalLeftGraph", ",", 
      "\[IndentingNewLine]", "externalRightEdgeNames", ",", 
      "externalRightGraph", ",", "LeftAndRigthExternalTreeGraphs", ",", 
      "\[IndentingNewLine]", "allConnectedClusters", ",", "treeEdgesNames", 
      ",", "treeEdges", ",", "NameToEdgeMap", ",", "EdgeToNameMap", ",", 
      "Esurfaces", ",", "EsurfacesProcessed", ",", "\[IndentingNewLine]", 
      "sChannelEsurfaces", ",", "internalEsurfaces", ",", 
      "unclassifiedEsurfaces", ",", "softEsurfaces", ",", 
      "\[IndentingNewLine]", "tmpA", ",", "tmpB"}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{"GetSuperGraph", "[", "SGYaml", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NameToEdgeMap", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"e", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "->", 
          RowBox[{"DirectedEdge", "[", 
           RowBox[{
            RowBox[{
            "e", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            
            RowBox[{
            "e", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"e", ",", 
           RowBox[{"SGYaml", "[", "\"\<topo_edges\>\"", "]"}]}], "}"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"EdgeToNameMap", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DirectedEdge", "[", 
           RowBox[{
            RowBox[{
            "e", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
            
            RowBox[{
            "e", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
           "]"}], "->", 
          RowBox[{
          "e", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         
         RowBox[{"{", 
          RowBox[{"e", ",", 
           RowBox[{"SGYaml", "[", "\"\<topo_edges\>\"", "]"}]}], "}"}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"treeEdgesNames", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Keys", "[", 
         RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"(", 
          RowBox[{"AllTrue", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], "[", 
              "#", "]"}], "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "==", "0"}], ")"}], "&"}]}], "]"}], ")"}], "&"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"treeEdges", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"NameToEdgeMap", "[", "en", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"en", ",", "treeEdgesNames"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"LeftAndRigthExternalTreeGraphs", "=", 
      RowBox[{"WeaklyConnectedGraphComponents", "[", 
       RowBox[{"DirectedGraph", "[", "treeEdges", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"externalLeftEdgeNames", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"treeEdgesNames", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], "[", 
                "#", "]"}], "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
              RowBox[{";;", 
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], 
                   "[", "#", "]"}], "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "]"}], "/", "2"}]}], 
              "\[RightDoubleBracket]"}], ",", "1"}], "]"}], "==", "1"}], 
          ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"externalLeftGraph", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"LeftAndRigthExternalTreeGraphs", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Intersection", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"NameToEdgeMap", "[", "en", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"en", ",", "externalLeftEdgeNames"}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"EdgeList", "[", "#", "]"}]}], "]"}], "]"}], ">", 
            "0"}], ")"}], "&"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"externalRightEdgeNames", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"treeEdgesNames", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Count", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], "[", 
                "#", "]"}], "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"SGYaml", "[", "\"\<edge_signatures\>\"", "]"}], 
                    "[", "#", "]"}], "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "]"}], "/", "2"}], "+", "1"}], 
               ";;"}], "\[RightDoubleBracket]"}], ",", "1"}], "]"}], "==", 
           "1"}], ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"externalRightGraph", "=", 
      RowBox[{
       RowBox[{"Select", "[", 
        RowBox[{"LeftAndRigthExternalTreeGraphs", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"Intersection", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"NameToEdgeMap", "[", "en", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"en", ",", "externalRightEdgeNames"}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"EdgeList", "[", "#", "]"}]}], "]"}], "]"}], ">", 
            "0"}], ")"}], "&"}]}], "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gNoTreeEdges", "=", 
      RowBox[{"GraphDifference", "[", 
       RowBox[{"g", ",", 
        RowBox[{"DirectedGraph", "[", "treeEdges", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"gNoTreeEdges", "=", 
      RowBox[{"Subgraph", "[", 
       RowBox[{"gNoTreeEdges", ",", 
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"WeaklyConnectedComponents", "[", "gNoTreeEdges", "]"}], 
          "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"allConnectedClusters", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Subgraph", "[", 
           RowBox[{"gNoTreeEdges", ",", "#", ",", 
            RowBox[{"VertexLabels", "\[Rule]", "Automatic"}]}], "]"}], "&"}], 
         "/@", 
         RowBox[{"Subsets", "[", 
          RowBox[{
           RowBox[{"VertexList", "[", "gNoTreeEdges", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"VertexList", "[", "gNoTreeEdges", "]"}], "]"}], "-", 
              "1"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"WeaklyConnectedGraphQ", "[", "#", "]"}], "&"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"allConnectedClusters", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"allConnectedClusters", ",", 
          RowBox[{
           RowBox[{"AllTrue", "[", 
            RowBox[{"externalEdges", ",", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"#", ",", "#"}], "]"}], "&"}]}], "]"}], "&"}]}], 
         "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "First", " ", "identify", " ", "the", " ", "list", " ", "of", " ", 
       "edges", " ", "at", " ", "the", " ", "boundary", " ", "of", " ", "the",
        " ", "cluster"}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Esurfaces", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"<|", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<graph\>\"", "->", "cc"}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<edges\>\"", "->", 
           RowBox[{"Select", "[", 
            RowBox[{
             RowBox[{"EdgeList", "[", 
              RowBox[{"GraphDifference", "[", 
               RowBox[{"gNoTreeEdges", ",", "cc"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"VertexList", "[", "cc", "]"}], ",", 
                RowBox[{"Function", "[", 
                 RowBox[{"v", ",", 
                  RowBox[{"MemberQ", "[", 
                   RowBox[{"#", ",", "v"}], "]"}]}], "]"}]}], "]"}], "&"}]}], 
            "]"}]}]}], "\[IndentingNewLine]", "|>"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"cc", ",", "allConnectedClusters"}], "}"}]}], "]"}]}], " ", 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Then", " ", "split", " ", "the", " ", "original", " ", "graph", " ", 
       "into", " ", "disconnected", " ", "subgraphs", " ", "with", " ", "the",
        " ", "edges", " ", "above", " ", "as", " ", "boundary"}], " ", "*)"}],
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"EsurfacesProcessed", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Select", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"EdgeList", "[", "complementGraph", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AnyTrue", "[", 
              RowBox[{
               RowBox[{"VertexList", "[", 
                RowBox[{"Esurf", "[", "\"\<graph\>\"", "]"}], "]"}], ",", 
               RowBox[{"Function", "[", 
                RowBox[{"v", ",", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{"#", ",", "v"}], "]"}]}], "]"}]}], "]"}], "&"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"complementGraph", ",", 
            RowBox[{"GraphsMinusEsurface", "[", 
             RowBox[{"gNoTreeEdges", ",", "Esurf"}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Esurf", ",", "Esurfaces"}], "}"}]}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"EsurfacesProcessed", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Sort", "[", "eList", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"eList", ",", "alleList"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"alleList", ",", "EsurfacesProcessed"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Esurfaces", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"<|", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\"\<graph\>\"", "->", 
           RowBox[{
            RowBox[{
            "Esurfaces", "\[LeftDoubleBracket]", "iSurf", 
             "\[RightDoubleBracket]"}], "[", "\"\<graph\>\"", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<edges\>\"", "->", 
           RowBox[{
           "EsurfacesProcessed", "\[LeftDoubleBracket]", "iSurf", 
            "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<edgeNames\>\"", "->", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"EdgeToNameMap", "[", "e", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"e", ",", "es"}], "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"es", ",", 
               RowBox[{
               "EsurfacesProcessed", "\[LeftDoubleBracket]", "iSurf", 
                "\[RightDoubleBracket]"}]}], "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<complementGraphs\>\"", "->", 
           RowBox[{"GraphsMinusEsurface", "[", 
            RowBox[{"gNoTreeEdges", ",", 
             RowBox[{
             "Esurfaces", "\[LeftDoubleBracket]", "iSurf", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{"IncludeBoundaryEdges", "->", "False"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"\"\<externalStructures\>\"", "->", 
           RowBox[{"Sort", "[", 
            RowBox[{"Table", "[", " ", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"Intersection", "[", 
                   RowBox[{
                    RowBox[{"VertexList", "[", "g", "]"}], ",", 
                    RowBox[{"VertexList", "[", "externalLeftGraph", "]"}]}], 
                   "]"}], "]"}], ">", "0"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"Intersection", "[", 
                   RowBox[{
                    RowBox[{"VertexList", "[", "g", "]"}], ",", 
                    RowBox[{"VertexList", "[", "externalRightGraph", "]"}]}], 
                   "]"}], "]"}], ">", "0"}]}], "\[IndentingNewLine]", "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"g", ",", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "Esurfaces", "\[LeftDoubleBracket]", "iSurf", 
                    "\[RightDoubleBracket]"}], "[", "\"\<graph\>\"", "]"}], 
                   "}"}], ",", 
                  RowBox[{"GraphsMinusEsurface", "[", 
                   RowBox[{"gNoTreeEdges", ",", 
                    RowBox[{
                    "Esurfaces", "\[LeftDoubleBracket]", "iSurf", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"IncludeBoundaryEdges", "->", "False"}]}], 
                   "]"}]}], "]"}]}], "}"}]}], "]"}], "]"}]}]}], 
         "\[IndentingNewLine]", "|>"}], ",", 
        RowBox[{"{", 
         RowBox[{"iSurf", ",", 
          RowBox[{"Length", "[", "Esurfaces", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Remove", " ", "copies"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Esurfaces", "=", 
      RowBox[{"DeleteDuplicatesBy", "[", 
       RowBox[{"Esurfaces", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#", "[", "\"\<edges\>\"", "]"}], ")"}], "&"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"sChannelEsurfaces", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"Esurfaces", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"And", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"#", "[", "\"\<externalStructures\>\"", "]"}], "]"}], "==",
              "2"}], ",", 
            RowBox[{"AllTrue", "[", 
             RowBox[{
              RowBox[{"#", "[", "\"\<externalStructures\>\"", "]"}], ",", 
              RowBox[{"Function", "[", 
               RowBox[{"conf", ",", 
                RowBox[{"Xor", "@@", "conf"}]}], "]"}]}], "]"}]}], "]"}], 
          ")"}], "&"}]}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sChannelEsurfaces", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"AssociateTo", "[", 
         RowBox[{"es", ",", 
          RowBox[{"\"\<type\>\"", "->", "\"\<s-channel\>\""}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"es", ",", "sChannelEsurfaces"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"softEsurfaces", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"Esurfaces", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{"And", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"#", "[", "\"\<edges\>\"", "]"}], "]"}], "==", "1"}], 
            ",", 
            RowBox[{"Not", "[", 
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"es", "[", "\"\<edges\>\"", "]"}], 
                  "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"es", ",", "sChannelEsurfaces"}], "}"}]}], "]"}], 
               ",", 
               RowBox[{
                RowBox[{"#", "[", "\"\<edges\>\"", "]"}], 
                "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              "]"}], "]"}]}], "]"}], " ", ")"}], "&"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"internalEsurfaces", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"Esurfaces", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{"And", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"#", "[", "\"\<edges\>\"", "]"}], "]"}], "==", "2"}], 
            ",", 
            RowBox[{"AllTrue", "[", 
             RowBox[{
              RowBox[{"#", "[", "\"\<edges\>\"", "]"}], ",", 
              RowBox[{"Function", "[", 
               RowBox[{"e", ",", 
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"es", "[", "\"\<edges\>\"", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"es", ",", "sChannelEsurfaces"}], "}"}]}], "]"}], 
                  ",", "e"}], "]"}]}], "]"}]}], "]"}]}], "]"}], " ", ")"}], 
         "&"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"internalEsurfaces", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"AssociateTo", "[", 
         RowBox[{"es", ",", 
          RowBox[{"\"\<type\>\"", "->", "\"\<internal\>\""}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"es", ",", "internalEsurfaces"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"unclassifiedEsurfaces", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"Esurfaces", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AllTrue", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "sChannelEsurfaces", ",", "internalEsurfaces", ",", 
             "softEsurfaces"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Function", "[", 
            RowBox[{"classifiedList", ",", 
             RowBox[{"Not", "[", 
              RowBox[{"MemberQ", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"es", "[", "\"\<edges\>\"", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"es", ",", "classifiedList"}], "}"}]}], "]"}], ",", 
                RowBox[{"#", "[", "\"\<edges\>\"", "]"}]}], "]"}], "]"}]}], 
            "]"}]}], "\[IndentingNewLine]", "]"}], "&"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"unclassifiedEsurfaces", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"AssociateTo", "[", 
         RowBox[{"es", ",", 
          RowBox[{"\"\<type\>\"", "->", "\"\<composite\>\""}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"es", ",", "unclassifiedEsurfaces"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Esurfaces", "=", 
      RowBox[{"<|", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<s-channel\>\"", "->", "sChannelEsurfaces"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<soft\>\"", "->", "softEsurfaces"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<internal\>\"", "->", "internalEsurfaces"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<composite\>\"", "->", "unclassifiedEsurfaces"}]}], 
       "\[IndentingNewLine]", "|>"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Esurfaces", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"cat", "->", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"AssociateTo", "[", 
             RowBox[{"es", ",", "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"\"\<IncomingEdges\>\"", "->", 
                 RowBox[{"If", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"cat", "==", "\"\<s-channel\>\""}], ",", 
                   "externalLeftEdgeNames", ",", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cat", "!=", "\"\<composite\>\""}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"es", "[", "\"\<edges\>\"", "]"}], "]"}], "==", 
                    "2"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"EdgeToNameMap", "[", "en", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"en", ",", 
                    RowBox[{
                    RowBox[{"es", "[", "\"\<edges\>\"", "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                    "}"}]}], "]"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                    "Null"}], "\[IndentingNewLine]", "]"}]}], 
                  "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
                
                RowBox[{"\"\<OutgoingEdges\>\"", "->", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"cat", "!=", "\"\<composite\>\""}], ",", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"EdgeToNameMap", "[", "en", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"en", ",", 
                    RowBox[{
                    RowBox[{"es", "[", "\"\<edges\>\"", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    "}"}]}], "]"}], ",", "Null"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"\"\<type\>\"", "->", "cat"}]}], 
               "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"es", ",", 
              RowBox[{"Esurfaces", "[", "cat", "]"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"cat", ",", 
           RowBox[{"Keys", "[", "Esurfaces", "]"}]}], "}"}]}], "]"}], "]"}]}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"tmpA", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tmpB", "=", 
          RowBox[{"Association", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Esurfaces", "[", "cat", "]"}], 
                "\[LeftDoubleBracket]", "ies", "\[RightDoubleBracket]"}], 
               "[", "\"\<edges\>\"", "]"}], "->", "ies"}], ",", 
             RowBox[{"{", 
              RowBox[{"ies", ",", 
               RowBox[{"Length", "[", 
                RowBox[{"Esurfaces", "[", "cat", "]"}], "]"}]}], "}"}]}], 
            "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"cat", "->", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"AssociateTo", "[", 
             RowBox[{"es", ",", 
              RowBox[{"\"\<id\>\"", "->", 
               RowBox[{"tmpB", "[", 
                RowBox[{"es", "[", "\"\<edges\>\"", "]"}], "]"}]}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"es", ",", 
              RowBox[{"Esurfaces", "[", "cat", "]"}]}], "}"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"cat", ",", 
          RowBox[{"Keys", "[", "Esurfaces", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Esurfaces", "=", 
      RowBox[{"Association", "[", "tmpA", "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "paramsYaml", "]"}], "===", "Null"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Esurfaces", "=", 
         RowBox[{"Association", "[", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"cat", "->", 
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"tmpA", "=", 
                 RowBox[{"BuildESurfaceEquation", "[", 
                  RowBox[{"es", ",", "SGYaml", ",", 
                   RowBox[{"OptionValue", "[", "paramsYaml", "]"}]}], "]"}]}],
                 ";", "\[IndentingNewLine]", 
                RowBox[{"AssociateTo", "[", 
                 RowBox[{"es", ",", "\[IndentingNewLine]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"\"\<Eq\>\"", "->", 
                    RowBox[{"tmpA", "[", "\"\<Eq\>\"", "]"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"\"\<GradEq\>\"", "->", 
                    RowBox[{"tmpA", "[", "\"\<GradEq\>\"", "]"}]}]}], 
                   "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                 "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"es", ",", 
                 RowBox[{"Esurfaces", "[", "cat", "]"}]}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"cat", ",", 
              RowBox[{"Keys", "[", "Esurfaces", "]"}]}], "}"}]}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "GenerateExamplePoints", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Esurfaces", "=", 
              RowBox[{"Association", "[", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"cat", "->", 
                  RowBox[{"Table", "[", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"AssociateTo", "[", 
                    RowBox[{"es", ",", "\[IndentingNewLine]", 
                    RowBox[{"\"\<ExamplePoint\>\"", "->", 
                    RowBox[{"FindPointOnEsurfaces", "[", 
                    RowBox[{
                    RowBox[{"{", "es", "}"}], ",", "SGYaml", ",", 
                    RowBox[{"OptionValue", "[", "paramsYaml", "]"}], ",", 
                    RowBox[{"DEBUG", "->", 
                    RowBox[{"OptionValue", "[", "DEBUG", "]"}]}], ",", 
                    RowBox[{"QuietMode", "->", 
                    RowBox[{"OptionValue", "[", "QuietMode", "]"}]}], ",", 
                    RowBox[{"AcceptThreshold", "->", 
                    RowBox[{"OptionValue", "[", "AcceptThreshold", "]"}]}]}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{"es", ",", 
                    RowBox[{"Esurfaces", "[", "cat", "]"}]}], "}"}]}], 
                   "]"}]}], "\[IndentingNewLine]", ",", 
                 RowBox[{"{", 
                  RowBox[{"cat", ",", 
                   RowBox[{"Keys", "[", "Esurfaces", "]"}]}], "}"}]}], "]"}], 
               "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
            RowBox[{
            "\"\<Finding a point on \>\"", "<>", "cat", "<>", 
             "\"\< E-surface with id \>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"es", "[", "\"\<id\>\"", "]"}], "]"}], "<>", 
             "\"\< ...\>\""}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "Esurfaces"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.872417740620718*^9, 3.872417746643468*^9}, {
   3.8724179739628963`*^9, 3.872417979074836*^9}, {3.872418364928729*^9, 
   3.872418467057994*^9}, {3.8724185554400806`*^9, 3.872418624391156*^9}, {
   3.872418751352831*^9, 3.8724187625045137`*^9}, {3.872418869064064*^9, 
   3.87241887786061*^9}, {3.872419159512971*^9, 3.872419164898213*^9}, {
   3.872419824703141*^9, 3.872419936984585*^9}, {3.872419972554326*^9, 
   3.872420011971745*^9}, {3.872420046785643*^9, 3.8724200616469603`*^9}, 
   3.872420115488809*^9, {3.872420331653637*^9, 3.872420359089373*^9}, {
   3.872420391101027*^9, 3.872420403539049*^9}, {3.872421399340568*^9, 
   3.8724214399765043`*^9}, {3.872421536591714*^9, 3.872421576537034*^9}, {
   3.872421665520653*^9, 3.872421677480105*^9}, 3.872421716164135*^9, {
   3.872421873395987*^9, 3.872421886058717*^9}, {3.872422006747209*^9, 
   3.872422023574362*^9}, {3.872422191267127*^9, 3.8724222242903633`*^9}, {
   3.872422310236739*^9, 3.872422319957808*^9}, {3.872422469329338*^9, 
   3.8724225064006042`*^9}, {3.872422812950726*^9, 3.872422920434569*^9}, {
   3.872423013587637*^9, 3.872423128298774*^9}, {3.8724237004924917`*^9, 
   3.872423713512776*^9}, {3.8724238327755203`*^9, 3.8724239096942377`*^9}, {
   3.8724239644268103`*^9, 3.87242396908088*^9}, {3.872424167475555*^9, 
   3.872424257056582*^9}, {3.8724243563331127`*^9, 3.872424366389583*^9}, {
   3.872424587295705*^9, 3.8724245902955303`*^9}, {3.872424840911601*^9, 
   3.872424902655828*^9}, {3.8724249438222113`*^9, 3.8724249627472343`*^9}, {
   3.872425242437817*^9, 3.872425247125079*^9}, {3.872425361664522*^9, 
   3.8724253643702173`*^9}, {3.872425535675448*^9, 3.872425550466124*^9}, {
   3.87242571878172*^9, 3.872425732614937*^9}, {3.8724258122604103`*^9, 
   3.872425815909587*^9}, 3.8724259110828333`*^9, {3.872427048586275*^9, 
   3.872427056635412*^9}, {3.872428209055299*^9, 3.872428224064859*^9}, 
   3.872428263916563*^9, {3.8724283094570704`*^9, 3.872428316462954*^9}, {
   3.872428407355277*^9, 3.8724284326038303`*^9}, {3.872428482579937*^9, 
   3.872428532197364*^9}, {3.872428645284191*^9, 3.8724286563358192`*^9}, {
   3.87242868853539*^9, 3.8724287120378113`*^9}, {3.872428782417033*^9, 
   3.872428825820566*^9}, {3.872429148794066*^9, 3.872429154754822*^9}, {
   3.872430892188436*^9, 3.8724309343918047`*^9}, {3.8724309910645437`*^9, 
   3.872431032366528*^9}, {3.872431080731463*^9, 3.872431080976828*^9}, {
   3.872432762013074*^9, 3.8724327664160767`*^9}, {3.8724333146698837`*^9, 
   3.872433347895237*^9}, 3.87243338549796*^9, {3.872433725816*^9, 
   3.872433788295526*^9}, {3.87243388224163*^9, 3.8724338987900476`*^9}, {
   3.872434186286779*^9, 3.872434251125617*^9}, {3.8724343054795094`*^9, 
   3.872434307782465*^9}, {3.8724344262948236`*^9, 3.872434569027987*^9}, {
   3.872434801341199*^9, 3.872434910524953*^9}, {3.872435012261837*^9, 
   3.872435016009656*^9}, {3.872435075158094*^9, 3.872435145666563*^9}, {
   3.872435190363804*^9, 3.8724352507805977`*^9}, {3.872435353784307*^9, 
   3.87243539783562*^9}, {3.87243547462827*^9, 3.872435505894515*^9}, {
   3.872435553065176*^9, 3.872435736745573*^9}, {3.8724358764064217`*^9, 
   3.8724359896472588`*^9}, {3.872436773376493*^9, 3.872436823024378*^9}, {
   3.8724368604690943`*^9, 3.872436976409678*^9}, {3.872437193456026*^9, 
   3.8724373720703497`*^9}, {3.8724374132192*^9, 3.872437433202333*^9}, {
   3.87243747773939*^9, 3.872437501943997*^9}, {3.872437581235319*^9, 
   3.872437654341123*^9}, {3.872437695155208*^9, 3.8724377070477543`*^9}, {
   3.8724377729370527`*^9, 3.872437805081438*^9}, {3.872437853205217*^9, 
   3.872437853356351*^9}, {3.872437893745297*^9, 3.872437903367947*^9}, {
   3.872437933583516*^9, 3.872437965280032*^9}, {3.872438055392556*^9, 
   3.8724383397643137`*^9}, {3.872438370566545*^9, 3.872438384982922*^9}, {
   3.872438506182145*^9, 3.872438519019104*^9}, 3.8724386758812323`*^9, 
   3.87243877305899*^9, {3.872438891596027*^9, 3.872438905244541*^9}, {
   3.872438955265671*^9, 3.872438974891288*^9}, {3.872439005887752*^9, 
   3.872439221093254*^9}, {3.8724392798567533`*^9, 3.872439478522202*^9}, {
   3.8724395106170197`*^9, 3.8724396685978107`*^9}, {3.872439783661749*^9, 
   3.872439812978022*^9}, {3.872439863204687*^9, 3.872439903642282*^9}, {
   3.872440012278569*^9, 3.872440013959408*^9}, {3.8724400641201*^9, 
   3.872440072274724*^9}, {3.872440111753986*^9, 3.872440189306468*^9}, {
   3.872440230526745*^9, 3.87244024093295*^9}, 3.8724402956492443`*^9, {
   3.872440645031252*^9, 3.872440657515688*^9}, {3.872440930512995*^9, 
   3.872440937334365*^9}, {3.872441282426869*^9, 3.872441305054076*^9}, {
   3.872441360330633*^9, 3.8724413615411*^9}, {3.872442984599633*^9, 
   3.87244301220091*^9}, {3.87244334046108*^9, 3.87244334337957*^9}, {
   3.8724441684163923`*^9, 3.872444204956539*^9}, 3.872444303485293*^9, {
   3.872444694505313*^9, 3.872445008817165*^9}, {3.872445269692835*^9, 
   3.8724453143164797`*^9}, {3.872445524325554*^9, 3.872445603855362*^9}, {
   3.872445650769443*^9, 3.872445697862804*^9}, {3.872445819187561*^9, 
   3.872445868501133*^9}, 3.872446054534911*^9, {3.872449906940481*^9, 
   3.872450008349769*^9}, {3.8724501017697897`*^9, 3.8724501345328503`*^9}, {
   3.872486885188838*^9, 3.872487055615047*^9}, {3.87248709831603*^9, 
   3.872487119806962*^9}, {3.872487155542411*^9, 3.87248721471024*^9}, {
   3.872487266409984*^9, 3.8724873962660513`*^9}, {3.8724874906304617`*^9, 
   3.8724876424363317`*^9}, {3.872488736079875*^9, 3.872488742823434*^9}, {
   3.8724888574855347`*^9, 3.872489069607279*^9}, {3.872489288696262*^9, 
   3.8724893774589767`*^9}, {3.872489549866304*^9, 3.8724895514566507`*^9}, {
   3.872490022469452*^9, 3.8724900798243856`*^9}, {3.872490327331032*^9, 
   3.872490374086738*^9}, {3.872490410397951*^9, 3.872490493505856*^9}, {
   3.872490964122456*^9, 3.872491014848669*^9}, {3.872491062039665*^9, 
   3.872491230518424*^9}, {3.8724913156022177`*^9, 3.87249135159196*^9}, {
   3.8724914716887293`*^9, 3.8724915151423492`*^9}, {3.872491697178059*^9, 
   3.87249169764921*^9}, {3.872496231073058*^9, 3.872496302349064*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"1ee9318e-e52b-4a69-bfa0-8265d8a523c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayESurface", "[", 
   RowBox[{"SGYaml_", ",", "ESurface_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DEBUG", "->", "False"}], ",", 
       RowBox[{"Size", "->", "300"}], ",", 
       RowBox[{"Supergraph", "->", "Automatic"}], ",", 
       RowBox[{"ShowVertexLabels", "->", "None"}], ",", 
       RowBox[{"Colors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Darker", "[", "Green", "]"}], ",", "Purple"}], "}"}]}]}], 
      "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "g", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "Supergraph", "]"}], "===", 
         "Automatic"}], ",", 
        RowBox[{"DirectedGraph", "[", 
         RowBox[{
          RowBox[{"GetSuperGraph", "[", "SGYaml", "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "Size", "]"}]}], ",", 
          RowBox[{"VertexLabels", "->", 
           RowBox[{"OptionValue", "[", "ShowVertexLabels", "]"}]}]}], "]"}], 
        ",", 
        RowBox[{"OptionValue", "[", "Supergraph", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"HighlightGraph", "[", 
      RowBox[{"g", ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"OptionValue", "[", "Colors", "]"}], "]"}], ">=", 
            "iEs"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ESurface", "[", "\"\<edges\>\"", "]"}], 
              "\[LeftDoubleBracket]", "iEs", "\[RightDoubleBracket]"}], ",", 
             RowBox[{
              RowBox[{"OptionValue", "[", "Colors", "]"}], 
              "\[LeftDoubleBracket]", "iEs", "\[RightDoubleBracket]"}]}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"ESurface", "[", "\"\<edges\>\"", "]"}], 
            "\[LeftDoubleBracket]", "iEs", "\[RightDoubleBracket]"}]}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"iEs", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"ESurface", "[", "\"\<edges\>\"", "]"}], "]"}]}], "}"}]}],
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.872485890524786*^9, 3.8724860318326273`*^9}, {
   3.872486402864004*^9, 3.872486410722892*^9}, {3.872486502938905*^9, 
   3.8724865606378603`*^9}, {3.8724866364864187`*^9, 3.8724866527605753`*^9}, 
   3.872486723804948*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"05e17c16-60fc-4ae7-9db6-20cba9ff20ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayESurfaces", "[", 
   RowBox[{"SGYaml_", ",", "ESurfaces_", ",", 
    RowBox[{"OptionsPattern", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"DEBUG", "->", "False"}], ",", 
       RowBox[{"Supergraph", "->", "Automatic"}], ",", 
       RowBox[{"Size", "->", "300"}], ",", 
       RowBox[{"ShowVertexLabels", "->", "None"}], ",", 
       RowBox[{"Colors", "->", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Darker", "[", "Green", "]"}], ",", "Purple"}], "}"}]}]}], 
      "}"}], "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "g", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "Supergraph", "]"}], "===", 
         "Automatic"}], ",", 
        RowBox[{"DirectedGraph", "[", 
         RowBox[{
          RowBox[{"GetSuperGraph", "[", "SGYaml", "]"}], ",", 
          RowBox[{"VertexLabels", "->", 
           RowBox[{"OptionValue", "[", "ShowVertexLabels", "]"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"OptionValue", "[", "Size", "]"}]}]}], "]"}], ",", 
        RowBox[{"OptionValue", "[", "Supergraph", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<All \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"Length", "[", 
            RowBox[{"ESurfaces", "[", "cat", "]"}], "]"}], "]"}], "<>", 
          "\"\< \>\"", "<>", "cat", "<>", "\"\< E-surfaces:\>\""}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Multicolumn", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<ID \>\"", "<>", 
                 RowBox[{"ToString", "[", "iSurf", "]"}], "<>", "\"\<:\>\""}],
                 ",", "\[IndentingNewLine]", 
                RowBox[{"DisplayESurface", "[", 
                 RowBox[{"SGYaml", ",", 
                  RowBox[{
                   RowBox[{"ESurfaces", "[", "cat", "]"}], 
                   "\[LeftDoubleBracket]", "iSurf", "\[RightDoubleBracket]"}],
                   ",", 
                  RowBox[{"DEBUG", "->", 
                   RowBox[{"OptionValue", "[", "DEBUG", "]"}]}], ",", 
                  RowBox[{"Size", "->", 
                   RowBox[{"OptionValue", "[", "Size", "]"}]}], ",", 
                  RowBox[{"Supergraph", "->", "g"}], ",", 
                  RowBox[{"Colors", "->", 
                   RowBox[{"OptionValue", "[", "Colors", "]"}]}], ",", 
                  RowBox[{"ShowVertexLabels", "->", "None"}]}], "]"}]}], 
               "}"}], "\[IndentingNewLine]", ",", "2"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"iSurf", ",", " ", 
              RowBox[{"Length", "[", 
               RowBox[{"ESurfaces", "[", "cat", "]"}], "]"}]}], "}"}]}], 
           "]"}], "//", 
          RowBox[{
           RowBox[{"Multicolumn", "[", 
            RowBox[{"#", ",", "6"}], "]"}], "&"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"cat", ",", 
         RowBox[{"Keys", "[", "ESurfaces", "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.872446972060768*^9, 3.8724472125220346`*^9}, {
  3.872447541794037*^9, 3.872447599743909*^9}, {3.8724476485246897`*^9, 
  3.872447727681395*^9}, {3.872447907923586*^9, 3.872448165956706*^9}, {
  3.872448196817417*^9, 3.872448220056737*^9}, {3.8724484865625553`*^9, 
  3.87244856172613*^9}, {3.872448612126899*^9, 3.872448624344838*^9}, {
  3.872448655223287*^9, 3.872448744096716*^9}, {3.8724489194840117`*^9, 
  3.872449094073056*^9}, {3.872449185412538*^9, 3.8724492335734653`*^9}, {
  3.8724492786293716`*^9, 3.872449301487667*^9}, {3.872449368157666*^9, 
  3.8724494958323517`*^9}, {3.872449748797724*^9, 3.872449778482882*^9}, {
  3.872486034904601*^9, 3.87248604340337*^9}, {3.872486074274713*^9, 
  3.872486140581861*^9}, {3.8724862702313128`*^9, 3.872486276572991*^9}, {
  3.872486566481834*^9, 3.872486591981407*^9}, {3.8724866706729794`*^9, 
  3.872486697777934*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"a644d656-ce87-4df4-a7fc-b021db574304"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Study of integrand for SG_QG6", "Section",
 CellChangeTimes->{{3.7964455762510366`*^9, 3.79644557746381*^9}, {
  3.8141982301546926`*^9, 3.814198234923193*^9}, {3.869893269901395*^9, 
  3.869893282644928*^9}},ExpressionUUID->"5630c070-370b-4ddc-8b53-\
1eee323cc833"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QmYllV6J/zu2JnpzDeTTDLds30z1yTfN0vPNfky02wFRe37QrGDIIug
LOIOgqCgoqiIiKjIIiI0soigIChuqO2CImrbrbG1x0RbjXFt932B++M5JYx2
iyxSPFX4+13XnRhSBe/7nPPWW+85z//cf3XUSb1H/dH3vve9U36443/0Hj6x
fNy44af1+Zc7/o9+J54yZvSJI0fUnzh+5OiR4zofddiOP/z3O7729j/93vd+
sOO/AwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFqxjz/+ON54
44144YUX4qmnnopHHnkk7rnnnti8eXP88pe/jKeffjr+8R//Md5+++347LPP
8n64AAAAAAAAAAAAAAAAAMBBsH379nj33XfjxRdfTPnDrVu3xh133BFr166N
pUuXxpw5c+Liiy+ORYsWxbXXXhu33HJLyiY+/vjj8dvf/jZlFz/99NO8nwat
RDYXfv3rX6f5c8kll8Qpp5wS/fv3j27duu1TDR06NCZPnhwLFiyIW2+9NZ5/
/vk0VwEAAAAAAAAAAAAAAACAtmvbtm3xzDPPxIYNG+L888+Pfv36fW3OsLGx
MRoaGqOuviHq6uqjfsf/btjxZ1/3tU1NTTFu3LiUi836dH7wwQd5P00Okix7
+uyzz8b1118fZ5xxRvTu3XvXvMjmT+2OuVNdUxcVlTVRWl4dxaWVUVhcHgWF
ZdGxc0l06lIanbuWRdfiiiguq4yyiuqorKpJ31NX15Dm4c6/b9CgQXHhhRfG
pk2b4vXXX8/7qQMAAAAAAAAAAAAAAAAAe+Gdd96Jn//85zFz5swYOHDgrtxg
ll+trKpN2cKi0sroUlSecoftOhVHu45FX1+dilI+cWc2saSsKmUYa2rqdmUS
e/ToERMnTow1a9aknq8cerJx/dnPfhZHHXXUrvlUU1uf5lI2j9oX/J851KFz
aRSV75hrdb2jsdeg6DNwZBxx1Ilx1JiJMWz0+Bhw5HHRs//wqO8xMMprekSX
kpod31/ype8vSXMtm2dZ7nrnv5dlq9evXx9vvvlm3pcDAAAAAAAAAAAAAAAA
APiSzz//PLZs2RLnnHNOyp2mXGt9Q5RX1kRhcUV0+CKHmOUJu5bWRlVDn+je
98iUOczyh8eNnxYTzpwdZ81YGOdctDhOmzYnTpo0PUadOCUGH31y9B4wIuq6
D4jSym7RsbD8iwxsccq/lpZXRU1tlnttziOOHj06rrvuOnnENi7r3ZrNqVNO
OWVXz9/K6tqUQd2Za80yrd16DY7RJ50RUy+8MuYvuzVW3vjQPtfy9Q/GJYtu
SPPuyNHjo6q+967ca5azznq/ZnNsZ656xowZqU8xAAAAAAAAAAAAAAAAAJCf
jz/+ODZs2BDDhg3blW3NcqepT+sXWdTqhr4py3rm9Cti8Zp79iuH+OVasWFr
zLj8mjhhwrmpL2enwoovMrTFUVRSEdU1zXnEnj17xiWXXBIvvvhi3peJfZDl
Wzdv3hzHH398Gsfauvod41oZ7b/o+1tW3T2Gjzk15aGXXr/5W8+n3dXClXek
3GuWxe5SXL0r85rN74aGxmhqaopp06bF3//93+d9yQAAAAAAAAAAAAAAAADg
O+WTTz6J9evXx5AhQ1IWsaqmLvVWTVnALmXRZ+DIOHXqJbFw5aYWyyHurGXr
HojzZl+dso/FFQ1f9PksibLy6tQDtHv37jFr1qx46aWX8r5s7MEvfvGLOPHE
E3flWwuLm3v3di6qimHHTIhZC65r8fn0tXPshi1x9syrou+gUdG+oDRlbrMe
r/Vf5F2nT58uTw0AAAAAAAAAAAAAAAAALWzbtm2xadOmXf1bq6pro6CwuXdr
ZV3vOGXKRQekZ+u36fV6/qXL4vAhY6J9QUnq8Zr6bzY2Ro8ePWLu3Lnx5ptv
5n0Z+T3PPfdcTJkypbkn8JfyrcXlDTH2tBnxs+vvy21O/X4tWH5b6k/csbA8
9SsuKatM/V2z+bVgwYJ49913876cAAAAAAAAAAAAAAAAAHDIeeKJJ3b12qyu
qYuCwub+rTXd+sdZMxbGig0P5p5B/HJdvuSmGHz0yc39NwuKo6yiub9rv379
Ys2aNfHpp5/mfUm/8z788MO48sorU0Y0641aVFKZsqNdy+pi3OSZcfW6+3Of
R7urrFdxlnft0PnL86tbDBw4MG677bbYvn173pcXAAAAAAAAAAAAAAAAANq8
d955Jy6++OIvem02RJei8l39W8+8YGHqoZp35vAb864/2xgDh52Q8pMdO5dE
ZVVNei6jR4+Oxx9/PO/L+531i1/8IoYPHx6NO8Yiy4hmWdGCrpVx3CnntKr+
rXuqeVffEkcM/2J+dSmJqpq6NL8mTZoUL730Ut6XGQAAAAAAAAAAAAAAAADa
rPvvvz8GDRqU+qCWlFXt6rV56lmzY/n61tW/dU81e+Ha6N73yJTR7dy1LOrq
6qOpqSnmzp0bH330Ud6X+jvjk08+ifnz56csaO2OMSgoLE1jkmVFsx6pec+T
/a2L5q+Ouu4D0nMpLK6IhobG6Nu3b9x+++15X3IAAAAAAAAAAAAAAAAAaFM+
/vjjuPTSS1MWsaa2Ljp2KY32BSVx9HGTYsmae3LPFH6bynrQllQ2psxuaXlV
6ic6atSo+Pu///u8L/sh75VXXokTTzwxzavs2mdjUF7TI6Zfujz3eXEgasWG
B+OUKRelvrQdCoqjqro2PdesH3KW7wUAAAAAAAAAAAAAAAAAvlmWRTz++ONT
/rO5h2tRVDf0jVkLrss9R3igasl198awYyaknGVBYVnU1TdE7969484778z7
8h+ynnrqqdQbOOtzmvXTzfqeZmOw9PrNuc+HA13zrr4luvUekp5jcVllyrqO
Gzcu3nrrrbyHAQAAAAAAAAAAAAAAAABarb/7u7/7ahaxU3GMPGFyLFv3QO7Z
wZao82ZfHUXl9dH+S703ly9fnvcwHHJ+9atfRZ8+faKurj46di6JzkVVMfXC
K3Mf/5as5esfjGNOPiu9hroUlUVjY2OMHj06fve73+U9HAAAAAAAAAAAAAAA
AADQ6vzmN7+J/v37R11dw64s4jkXLc49L9jSdeU1d0ZTn6Gpb215RXXKui5a
tCjv4ThkPPnkkynjWlPbnCcur+kRly3ekPu4H6w684KF0bGwPAoKS1N+/Jhj
jol33nkn72EBAAAAAAAAAAAAAAAAgFbjueeeiwEDBqR+mx0KiqO0qikuu2p9
7hnBg1XLbtgSg446Kdp1LIrS8qqUdV2xYkXew9Lm/fa3v03zqrauOeNa3dA3
Fq68I/fxPtg14/JroqCoMgoKm/u6jh07Nj788MO8hwcAAAAAAAAAAAAAAAAA
cvfyyy/H0KFDo66+IToUlKR+mwuW35Z7NvBg14oNW2P4mFNT1nVnX9cbb7wx
7+Fps1555ZWvzKuK2p6xaNWduY9zblnXOStTX9fOXZuzrpMnT47PPvss72EC
AAAAAAAAAAAAAAAAgNy88847MWrUqKhvaIyOnUuiuKIh5i+7NfdMYJ5Z18FH
nxztOhVFZVVNNDU1xX333Zf3MLU57733XowZMyYavphXJZWN3+l5tbPOuWhx
tC8ojcLi8pSjnjVrVt5DBQAAAAAAAAAAAAAAAAC5+PTTT2PChAmpt2RBYWl0
KamJy65an3sWMO9avv7B6DdodLTrVBzVNXXRu3fveOqpp/Ierjbj888/jylT
pnwxr8qiS3G1efWlOn3a5alncHFpZcq6rl69Ou8hAwAAAAAAAAAAAAAAAICD
7uKLL045uy5F5dGxsDxmzrs29wxga6mlazdHt16Do31BcdTW1cfgwYPj9ddf
z3vI2oSrrroqzavC4oro0Lk0LpizMvfxbG113CnnpKxreWVzz+CHH34472ED
AAAAAAAAAAAAAAAAgIPmxhtvTFnE4rLK1Lf0zOlX5J79a221aNVdUV7TIzp2
LomGhsYYN25c6oHL7j3wwANpXpWVV6cc58Spl+Y+jq2xVmzYGgOPPD699mpq
62LgwIHx2muv5T18AAAAAAAAAAAAAAAAANDinn766ejZs2dUVtWmLOKYcVNz
z/211rrsqvVR0LUyuhSVpfzmFVdckffwtVpZv9sBAwZETU1dym8eOXp87uPX
mmvp9ZujuqHvrhz1qaeeGtu2bct7GAEAAAAAAAAAAAAAAACgxXz00UcxatSo
qKtviPYFxdF7wIhYseHB3DN/rbnOvGBhygOXllelrOtDDz2U9zC2Otu3b4/J
kydHQ2Njym3WNvWPq9fdn/vYtfaas+TGlKMuLC5Pc2v16tV5DyUAAAAAAAAA
AAAAAAAAtJh58+ZFY7duUVBYFsUVDbFo1V25Z/121vxlt8a8pTf/QWV/nvdj
Gz7m1NSjtKa2LoYMGRLvvvtu3kPZqtx6660pp9m1uCI6Fpan/GbeY9ZWatLZ
l6UcdUVlTfTq1SteeOGFvIcTAAAAAAAAAAAAAAAAAA64J554IpqamlJf0iyz
ed4lV+ee8dtZS6/fHIcddlh873vf+9o6bvy0fB/f2s1RWdc7OnUpjcbGxpg9
e3bew9lqvPXWWzFgwICoqq5Nec1xk2fmPp++rorK6+Pf/4e/3GOdc9Hig/7Y
+gwcmforNzQ0xqRJk/IeUgAAAAAAAAAAAAAAAAA4oD7//PM49thjo66uPmVc
h40en3vu8Mt15gULd5txzerwIWNyf4wXzV8d7QtKoqSsKuWFs9wwEZdddlnK
/nbsXBINPY6IFRsezH2sfr+y7O03za8v1+Tz5h30x7dg+W1R0LUy9cPN+uLe
e++9eQ8rAAAAAAAAAAAAAAAAABwwGzZsSPm5Ll3LUl/LJWvuyT17+OX6m58W
tPqca1ZHjZmYcsJ19Q1x0kknxfbt2/Me2lw9//zz0b179109gi++4vrcx+j3
a8l198aPfvxvW3XONauTJk1P/XBrautixIgR8dlnn+U9vAAAAAAAAAAAAAAA
AADwrX344YcxaNCgqKquTTm608+dm3v28MuVPZ49ZQ9bS8518Zp7omtpbRQW
l6fc8N1335338OZq+vTp0dDQGO0LimPw0SfnPj5fVz36DdvrjGueOddl6x6I
suru0blrWZpbt9xyS97DCwAAAAAAAAAAAAAAAADf2urVq1NurlOX0qht6h8r
NmzNPXu4s6685s74T3/1X9pMzjWrU6ZctKvv5ujRo2Pbtm15D3Eu/uEf/iGa
mpqipKwqOnQujfnLbs19bH6/Lpq/On7wgz9uEznXrLLMdza3qmuae7p+V+cW
AAAAAAAAAAAAAAAAAIeGTz75JAYPHhyVX/RynTZrSe7Zw52VPZYf/+t/t1fZ
w9aUc836bpZUNkaXouaervfff3/ew5yLuXPnRmNjcy/XoSPH5T4uX1d//T87
7lPGNe+c6/L1D0Z5TY/v/NwCAAAAAAAAAAAAAAAA4NBwxx13pLxcQWFZ1HTL
t5fr4tV3x/mXLoujxkyM//rf/2afsoetKeea1SlTZqbccF1dfUyaNCnvYT7o
Pvzww+jXr1+UV9ak63DZVetzH5PfrxNOPW+fM65551yb59ZFX8ythpgyZUre
Qw0AAAAAAAAAAAAAAAAA++2UU06J2rr6lJs7bdqcg5rXm37ZiviPf/mf41/9
6N/ED3/4J/uVOWytOdcl190bBUWVUVxamXLEL7zwQt5DfVDddttt6Xl3KiyN
pr5Dcx+P368sU/3nf/HjNplzXbLmnh3XtSKKyyqjqakpXnnllbyHGwAAAAAA
AAAAAAAAAAD22fPPP5+yiEWlldGluDqWrt18UPN6Z81Y+K2yra0555rVsGMm
RPuC4mhsbIzFixfnPdwH1amnnrorPz3lvPm5j8XvV0PPI/Z7ruWdc81q8Iix
0aGgJBp3vH5XrlyZ93ADAAAAAAAAAAAAAAAAwD5bsmRJymBmWcyjxkw86Fm9
Qz3nOmvBdSnnWVlVE0OHDo1t27blPeQHxWuvvZb6jGa9bLOetgc7P72nmjFn
ZRx22GH7PddaQ273gh3PIZtbVdW1MXr06LyHHAAAAAAAAAAAAAAAAAD2yfbt
22P48OFRWVWb8nKzFqw56Fm9Qz3nmlVVfe/oUlSe+uY+9thjeQ/7QbFu3br0
fDt0LonBR5+c+xh8uVZs2Bo/+R//a7fzqKKuV5vIua7Y8GAUVzRE1+KKdK1/
+9vf5j3sAAAAAAAAAAAAAAAAALDXnn766ZSPKywuj/KaHrlk9b4LOdfjJ5wb
7ToVR0NjY8yfPz/vYT8oJk2aFDW1dSk/fc5Fi3Mfgy/XmLFTdzuH2heUxsmn
XdAmcq5ZHXXspNSLuXHH63jVqlV5DzsAAAAAAAAAAAAAAAAA7LVly5ZFY2Nj
ysmNOnFKLjm9s2dedcjnXC+9an3Ke1ZW1aT+uYe6Dz74IHr06BElZVXRsbA8
lq7dnPsY7KxFq+6MP/2zP//a+fPHf/xPYvbCtW0q53r+pcvS3KqpqYsJEybk
PfQAAAAAAAAAAAAAAAAAsNfGjh0b1TXNPTdnzFmZS05v2Q1bYvTJZ8bok874
xvrJX/+0zeZcsyqr7h5diytS/9wXXngh76FvUVu3bk3Ps6CwLHoNODr3a//l
qmnst9v509R3aPqatpRzvXrd/dGpsCJlirNs8Ycffpj38AMAAAAAAAAAAAAA
AADAHr3//vvRvXv3KCmrjIKulSlvmndm75sqy7C25ZzrkaPHR4eCkpT/vOmm
m/Ie/ha1ePHi1Ce4XafiOGnS9Nyv/c46b/bV8f3v/9HXzp1/+Rc/isVr7klf
15Zyrln17D88OnctS3Pr0UcfzXv4AQAAAAAAAAAAAAAAAGCPHnnkkV09N3sP
GJF7Vm9P1dZzrlPOn5/65tbVN8SFF16Y9/C3qIkTJ+7qEzxz3rW5X/usVmx4
MP7zf/vr3c6dY04+a9fXtrWc63Hjp6VMcWNjt7jmmmvyHn4AAAAAAAAAAAAA
AAAA2KMVK1akXFyWjzthwrm5Z/X2VG095zp/2a0p91lRVRMjRozIe/hbzPbt
26Nfv35RVlEd7QtKYunazblf+6xGHH/6bufN//tf/0es2LB119e2tZzrtIt/
luZWbV19TJs2Le8pAAAAAAAAAAAAAAAAAAB7lOXhslxclo879+KluWf19lRt
PeeaVdfS2igurYympqZ4//33854CLeLll19OfYK7FldEVUOf3K95VlesuD3+
+b/4s6+dM9///vfjnIsWf+Xr21rOdeHKTc0Z6spDO0MNAAAAAAAAAAAAAAAA
wKFj5MiRKReX5eOynFzeWb091aGQc+3Rf3h07lqWcqBPPfVU3lOgRTzyyCPp
+RUUlsbhQ4/N/ZpnVV7TY7dzprii4Q++vq3lXLPqXFQVJWWV0b179/j000/z
ngYAAAAAAAAAAAAAAAAAsFufffZZysOVlFVFQVFl7hm9valDIed61JiJ0bFz
ScqB3nHHHXlPgxZx0003pefXvqA4Rp98Zu7XPOvVmvVs/br58sMf/knMW3rz
H3xPW8y51nUfEIXF5enav/jii3lPAwAAAAAAAAAAAAAAAADYrZdffjnl4QqL
K6K2qX/uGb29qUMh5zr2tBnRrlNRNDZ2i5UrV+Y9DVrE0qVLdzy/xtQneMKZ
s3O93svXPxh/+f/8t93OlwFHHve139cWc679d8z9gsLmXsGPPfZY3tMAAAAA
AAAAAAAAAAAAAHbriSeeSHm4zl3Lou+gUbln9PamDoWc65nTr0j5z/r6hrj8
8svzngYt4tJLL426Hc8ve55TL7wy1+s9bPT43c6Vf/1v/+9Yunbz135fW8y5
Dh9z6q5ewffcc0/e0wAAAAAAAAAAAAAAAAAAduuBBx5IebiOXUpj6MhxuWf0
9qYOhZzrBXNWpvxnTW19nHfeeXlPgxZx/vnnp+eXPc/s+eZ1recvuzX+2T/7
57udK+Mmz9zt97bFnOuYsVOjfUFxel1v3Lgx72kAAAAAAAAAAAAAAAAAALu1
adOmlIfrUFASI0+YnHtGb2/qUMi5zl64NuU/q2vqYvLkyXlPgxZx5plnpueX
Pc9ZC67L7VoXlzfsdp789f/q9I3f2xZzridOPD/adWrOua5duzbvaQAAAAAA
AAAAAAAAAAAAu5X1e8zycFn/x2PHnZ17Rm9v6lDIuV6+5KaU/6yqro3x48fn
PQ1axOmnn74r53rJletyuc5nTF+w2zly2GGHxYVzV33j97fFnOvY02aka569
rlevXp33NAAAAAAAAAAAAAAAAACA3dqwYUPKw2X9H48bPy33jN7e1KGQc523
9OaURaysro1x48blPQ1axFdyrotuyOU6/8/2XXY7R2q79d/j97fJnOvpF+7K
uV577bV5TwMAAAAAAAAAAAAAAAAA2C0513zqu5BznTJlyq6c6+yFa3O5zj/5
659+Yz/XP/2zP//G2tM8y+qf/V//4ivf819+8v/lOreybO7OnOt1112X9zQA
AAAAAAAAAAAAAAAAgN3auHFjysO1LyiOMeOm5p7/3Js6FHKuc5bcmLKIVdW1
MWHChLynQYs4++yzo6a2Oec6c961uVznb8q5tlT98Id/kuvcyvLqWW49e12v
X78+72kAAAAAAAAAAAAAAAAAALt1xx13pDxch4KSGHH86bnnP/emDoWca9bf
NMt/Zv1Os76nh6KZM2dGbV19ep7nXrw0l+v8Xcy5jjxhcno9Z6/rTZs25T0N
AAAAAAAAAAAAAAAAAGC3tmzZkvJwnbqUxpARY3PPf+5NHQo51+mXLk/5zywH
On369LynQYu44ooror6hMT3P08+dm8t1/i7mXAcddVJ6PWev661bt+Y9DQAA
AAAAAAAAAAAAAABgt5588smUh+vctSx6DxiRe/5zb+pQyLlOOX9+yn/W1zfE
vHnz8p4GLWLNmjVpbrXrVBwnTjw/l+v8Xcy59ug3LLoUlaVr//TTT+c9DQAA
AAAAAKBN+uSTT+KNN96IF154IZ566ql4+OGH4+67746NGzfGpk2b4oEHHojH
H388nnnmmXj11Vfj/fffj+3bt+f9sAEAAAAAAKDNyfbbsjxc1+KKqG7om3v+
c2/qUMi5njRpesp/Nu649qtWrcp7GrSIbI83m1sdO5fEkaPH53Kdv4s517Lq
7lFUUpmu/dtvv533NAAAAAAAAIBW76233or7778/Fi9eHGeccUYMHjw47bft
a/Xq1StOOumkuOSSS+LGG29MGdht27bl/fQAAAAAAACgVfv888+jZ8+eUVJW
FZ0KK2LFhq25Z0D3VIdCznXY6PEp/5ntdf785z/Pexq0iKyXaPb8uhSVR1Pf
oblc5zxyrv/yL36U27y6et390b6gJMoqquPwww/PewoAAAAAAABAq5T1an30
0Udj0aJFcdxxx+3KqTY2NkZdXUPU1NRFZVVt2ncrLqtM50Z37loWnbqURvuC
4rTXW1BYFoXF5VFcWhml5VVRUVkTVTu+r7auPhoaGnf9nQMGDIgLLrggbrvt
tnjttdfyfuoAAAAAAADQKh1zzDFRWVUT7ToWxfxlt+aeAd1THQo516Y+Q1P+
M9vXzPKgh6IPP/wwmpqa0r5vl5KaXK7z4tV3x8KVd+x3HXPyWXuca1lv3i9/
z9K1m3ObV7MXrk2v4+qauhg/fnzeUwAAAAAAAABajayvapZtnTVrVvTt2zft
1TY0NkZVdW3a0ywoLI12nYrSflt2tmxhSW1U1PaMhp5HRO8BI+KI4SfEUcdO
ijHjpsaoE6fEkBFjo9/gY9KZv9UNfaO4oiE6Fpan78+qQ/Z3FFdEeWVN1NXV
78q9jhs3LjZs2BBvv/123pcEAAAAAAAAWo3p06enM2WzvbZzLlqcewZ0T9XW
c65Zz9zORVVRUlYZ3bt3j48++ijvKdBiRo0atStDPe/qW3K/9vtaJ592wR7n
2pTz5uf+OHfWxKmXpmudnQ89d+7cvIcfAAAAAAAAcvfxxx+nXOnw4cNTzrS+
oSFlT7P+rO06Faf9ta6ltdF/yJgYN3lmzFqwJpbdsGW/9+wWLL8tzpi+IIaP
OTVqGvvt+jeyHrBZ79ea2rr0OHr27BkXX3xxvPDCC3lfIgAAAAAAAMjd6tWr
0z5a+07F6ezZvLN6e6q2nnO9/Gcb0z5mZVVt6qV7KJs5c2bU1Tek5zvl/NaT
B93bams51+zM6Gx/PHs9b9q0Ke/hBwAAAAAAgNxk+dZ169bF4MGD0/5ZdU1d
dCkqb+7Z2qk49Wk9fsK5cfEV16eziltqD2/Rqjvj9HPnxsAjj48uxdW7Mq9l
5dWpn2xTU1PMmDEjnn/++bwvGQAAAAAAAOTmV7/6VdrXy86r7dFvWO5ZvT1V
W8+5njZtTtq7rK9viNmzZ+c9/C3qpptuSnOrQ0FJDBs9Pvdrv6/V1nKu5TU9
omtxRbrmL774Yt7DDwAAAAAAAAfd559/HrfccksMHTo07ZtVVddGQWFp2qPN
9tNOmHBuXLHi9lz287I+sVMvXBR9Bo6M9gUlO6o4SsqqoqGhMbp37576u776
6qt5X0IAAAAAAAA46D766KPo2bNnlJZVRcfC8rh63f255/W+qdp6znXw0Sfv
6rl522235T38LSo7czh7nln2Mtszzvva72u1pZzrvKU3p735isqatGcPAAAA
AAAA3zWPPPJIjBkzZlf/1oLCsrSHVtvUP868YGGs2PBg7vt6O2vu0o0xdNQp
0aFzacq7lpZXRWNjY/Tq1SuWLl0aH374Yd6XEwAAAAAAAA6qiRMnRk1tXdrj
O2/21bnv6X1TteWc64oNW6O4vCGKSirT3uorr7yS99C3uGHDhkVlVU2aW3OW
3Jj7GOxLtaWc6/gzZjX3CW5oPOT7BAMAAAAAAMCXvfbaa3HuueemPdjauvro
0rU531rd0Df1T832afPez9tdzV92awwZMTb1d+1QUBzllTXpeRx55JFx3333
5X1pAQAAAAAA4KC59tpr015Zdk7sUWMm5r6X903VlnOusxZcl/ZTK6trY/To
0XkP+0Exd+7caGhojHadiuPEiefnPgb7Um0p59qj37B0HnX2Ot68eXPeww4A
AAAAAAAtbvv27bFx48bo169fNDQ2RnFpZdqXLKlsjNOmzWlV/Vv3VNmZwX0H
jUr7yZ0KS9M51dne37Rp0+KNN97I+1IDAAAAAABAi3vuuefSHlnXkooormho
1ft9bTnnOvrkM6N9p+JobGyMxYsX5z3sB8Wjjz6a5lZ2ZnJNt/65j8G+VFvJ
uV55zZ3pfOeyiuro06dPfPTRR3kPOwAAAAAAALSot956K84666y0F1lVXRsd
OpdExy5lMWbs1Fh6/ebc9/D2t86/dFlU1fdOedei0sq0tzxw4MDYsmVL3pcc
AAAAAAAAWtwxxxyT9v+y/bIL5qzMff9udzXqxCltMue6YsPWKKvuHoXF5Wmv
9Te/+U3eQ35QfP755zFo0KCoqKxJc+vSq9bnPhZ7W3uTc71w7qrcH+e4yTOj
XaeiqK9viOnTp+c95AAAAAAAANCinnzyyRg6dGjKgGZnOWf7kN16D0k9UfPe
uzsQteyGLXHc+GnRoXNpdOxcsqu3a3aW8rZt2/K+/AAAAAAAANBiVq5cGY3d
ukWHguIYPGJs7nt3h1rNmLMy7a9mWeIRI0bE9u3b8x7yg2bBggVpj7n9jrk1
4vjTcx+LQ62qG/qmfrnZ3vaDDz6Y93ADAAAAAABAi7n77rujV69eUVdXHx27
lKYermNPm5HOHc573+5A1yWLboiaxn7RrlNxlFVUp/3AqVOnxkcffZT3MAAA
AAAAAECLeOWVV6KpqSmKyyqjU2FFLFlzT+77dodSDTrqpOhQUJKyxCtWrMh7
uA+qZ555Ju25FpVURJeSmrh63f25j8ehUjPnXZvy05VVtTFkyJDUPxcAAAAA
AAAORRs3bkx72tU1demM3bLq7nHxFdfnvmfXkpXtrQ4dOS7tCXYtrojGxm4x
fvz4+OCDD/IeDgAAAAAAAGgRkydPjrq6hrRHNv6MWbnv2R0qtWjVXekc4ZKy
qujevXu8+uqreQ/1QTd27NioratPc2vS2ZflPiaHSg088vjm/HRjt1i6dGne
wwwAAAAAAAAt4o477kgZ1+z816y/abfeQ9I+bN77dQerTplyUbQvKIkuReXR
2NgYp556anzyySd5DwsAAAAAAAAccJs3b059N7t0LYvymh6xYsODue/XHQp1
/IRz015rfX1DTJ06Ne9hzsWdd96Z5lbnHXOroq6XuXUAau7SjWkvu1Pnruna
vvbaa3kPMwAAAAAAABxwW7ZsiR49ekRVdXPGtc/AkanPad77dQe7zrxgYbQv
KG3OunbrFmeffXZ8/vnneQ8PAAAAAAAAHFDZHtgRRxwRHTt1Tn03p5w3P/e9
urZeP7v+vigsqY2uxRUpi/joo4/mPcy5+Oyzz2LYsGFRXVOX5tbp587NfWza
eg066qR0LX/arl0MGTIk/vZv/9Y+NgAAAAAAAIeUJ554Inr37t28z9ipOHr0
Hx7L1j2Q+15dXnXG9AXpOuzcf7744otj+/bteQ8TAAAAAAAAHBDvv/9+6uc6
fvz4+OlPfxrtOhZGRW3PWHbDltz36tpyNfdyLYq6uvo4+eST8x7mXG3cuHFX
T9fSqqZYunZz7uPTVmv2wrVp/7pd+4Jo3759zJkzJ1asWBE33HBDPP/883kP
NQAAAAAAAHxrL774YgwcODBq6+qjfUFxNPQ4Ip0znPdeXd414czZ6Tzc4tLK
tP+6fPnyvIcKAAAAAAAAvpWsz+bjjz8e1157bcrJXX311VFaWho/bdch7Y2d
MmVm7vt0bbUWrtwUBV0ro2tJ81m6Dz30UN7Dnatsro0cOTLtQ2fZ3+NOOSf3
MWqLtWLD1ujWe8iO12fX1Mt16NCh6bX75dq0aVO8+eabeQ85AAAAAAAA7Jf3
3nsvRo0aFfX1DdGhc0lU1PWKRavuyn2vrrVUttea7eeXVVSnvei777477yED
AAAAAACAfbZ9+/Z47rnnYt26dX+QkZs8eXJzT9cOXaJzUVUsXHlH7vt0bbGO
GH5COle4vqEhTjvttLyHvFXYsmVL2mctKq2Mjl3K4vIlN+U+Tm2tJp19Wdqz
/mn7jlFQUBALFy78g9dwVitXroytW7fGRx99lPewAwAAAAAAwF7btm1bnHXW
WdHY2BgFhaXRtbQ25i29Ofd9utZWg0eMjXadiqO6pi769OkTzzzzTN5DBwAA
AAAAAHvtjTfeiNtvv/1rs3FZLV++PO0ZZr0iszzd4UOPzX2Prq3VuRcv3XV+
bvfu3ePZZ5/Ne9hbjalTp0bDjvmVnbvcrdfgWLHhwdzHq63UguW3pex5lkHP
sujjxo3b7et4Z61ZsyaefPLJdD8AAAAAAAAAtHbXXHNNOju3a3FFdOhcGjMu
vyb3fbrWWMvWPRDdeg9JZy/X1TfEyJEj44MPPsh7+AAAAAAAAOAbZX0dH3zw
wdTncU/ZuEsuuSTat28fP23fKeU1z5i+IPd9urZSi1ffHSWV2dnCZWn/ddGi
RXkPfavy2muvRb9+/aKqujbNrRMmnJv7mLWFyvLAPfoNa+7l2q5dNDQ0pEz6
nl7LO+vGG2+MF198Me/hBwAAAIDvnE8++SReeeWVeOqpp2LLli1x8803p3X6
uXPnxrnnnhvjx4+PUaNGxcknn5zOCbz00kvj6quvjg0bNsR9990XTzzxRFrb
k1sB4Lvg17/+dTpHuLyyJu2LjT9jVu77dK25Fq68I4rLG1Lf28bGbjFz5sy8
hxAAWtw777yT+pg//PDDqdfDqlWrYt68eekzdnZm/LBhw6JHjx6p33l2DsTE
iRNjxowZceWVV8b1118fP//5z+Oxxx6Lf/iHf0j30wEAAAAAB0fWxzHr57h6
9eq9zsRlNWbMmNQzsn2nrtGluDrmL7s19326tlBZ/9t2nYqjrq4+rZV+/PHH
eU+BVue2225LGeCi0spoX+AM5r2p4yecm/byKyprorKyMt0Dty+v55111113
xdtvv533FAAAAACAQ9Z7770XW7dujauuuirGjh0bTU1NaT00qyx/0tDQGHV1
DVFTWx/VNXVRWVWbsjyVVTVRVVO748/r0vpyfUPDjq9v3PW9WWV52Dlz5qR7
cl9//fW8nyoAHFBZzmTEiBHpfTDbb832XfPeo2sLdcGcldG+oCSKSyvT7wv3
3ntv3kMJAAdU9vk3u98lOxfq6KOP/spn7Pr0Gbs+fZbOztzP7qspq6iOkrKq
KC2vivId/938ebuu+fN2fUP6XL7z78jO18jOnco+wz/00EPOmAIAAACAFpKd
8Z71cdyfPFyWix0+fHjU1zdEh4KSaOhxRCxb90Du+3StubLzhLMsYnZPUnYu
YJYv5uudf/756R6t7Gzh7IzhhSs35T5+rbXOm331V/ams34P2dmU2b1s+/Pa
vuaaa+KRRx5JfSQAAAAAgG/vH//xH2Pt2rWpR0x2j2y2jtfQ2Jhyq9m9tV2K
yqNj55K0fryv1b6gODp3LUvrg1kmNluz33k/7rHHHhtLly6N//2//3ds3749
78sAAN/KFVdckd7fCgrLorSyWyxec88B3XPLznWet/TmP6hD4bznY04+K/3e
UFNTF0cccUTaSwSAtuzZZ59N97gcd9xxuz4DZ5+Hs8xqUUlldOxS+g2fo0tS
T4eCosp0dsbXft2OP89+5ygpq0z52IYvzpnK7veaMmVKbNy4Md544428LwMA
AAAAtHnfNgP36KOPxqeffpruzenXr186Uz5b3zty9Pjc9+haa104d1V06Fwa
XYsr0rrnqlWr8p4Grdr777/ffB5zfUO6TyvLUV+97v7cx7G11eVLbmpeey8s
S+dQzpgx4yvXMXuN7m+W/brrrounn37a/W8AAAAAsB+yc+Q2bdoUp5xyyq57
brPeMFmuNVvPa9ep+d7ZToUVUVnXO7r3PTKOGH5CjDpxSow9bUZMOX9+6r82
Z8mNsXj13THv6lti5rxr46wZC+OUKRelvMrgEWOj1+FHRU1jv7ROuPN+3Ox+
3iz3mt2Lu7Pna9bTJju/8u2338770gDAPvu7v/u7dFZEWXnz+915l1x9QPfc
ll6/OQ477LD43ve+97V13PhpB2Xvr6i8Pv79f/jLPdY5Fy3ep7932Q1boqZb
/x2/I5Sk3w0uueSSvIcUAPbZxx9/nPKlO7Ot2Xtads9a9vk3e4/b+Zm4uKIh
evYfnj4zjxk3NU49a3ZMm7UkZi9cG4tW3RUrNmzd9R65fP2DsWD5bXHR/NVf
fN6emT6XDxx2QnTrPaQ5C5tyr0XNZ22UV0VtXf2uXq9Tp06Nhx9+2L01AAAA
ALCPsvtqfvGLX6Ss6v7k3u6+++549913v/J33nfffWntrqyieU8xW+/LO/vX
2iq7/6hrWV3qTZqtsZ511lmxbdu2nGZB25Gdvdi3b99dOerDhx77lbXm73pl
a+/lNT1Sn4eGhsa0jv/RRx/9wXXM5tpTTz0Va9as2a/XfbZH8PLLL+cwAwAA
AACg7cnW6LLerUOGDElr59n9r9k9tx0KinflWnsNODpOmjg93Ueb3VN7oNYM
s0xsdv/ugCOPS2vSO3vQZOcvZuus2ePp06dPLFy4MH73u9/lfakAYK9kuZEJ
EyakHm3td7yvDT765AO+73bmBQt3m3HN6vAhY1p872/c5Jnf+Bi+XJPPm7fP
f/+sBWtS/7rSsqpoampK/d4BoC348MMP01ntgwYN2nWGVNaztf0Xn7O7ltbG
wCOPj4lTL425Szce0Pfn7DN79h564sTzo0f/4dGxsLz5fKnOJSnzmv1+kj2m
E088Me6//355VwAAAADYg2wNLTvj9vrrr9+vnNtNN90UL7300m7//iVLlqQ1
u64lFWlv7OyZV+WeAWwtlZ2zX1XfOzrsuC7Z2ubIkSPjvffeO4ij37Zla8DZ
PmtFZU1aJz76uEm5j2lrqJ9df1/qcZut2Wf3yWVr+XvKomb3123dujVWrly5
Xz8H7rnnHnMXAAAAAHYjO2dy3bp1u+67zXqppr6tHYtSr9Wsj0zWP2bZugcO
yhpidmbgzHmrY+QJk6O0qmnXfbjllTXpPMZevXqlvOtbb72V96UDgG+U7Rem
vejiiuhcVBWLVt15wN83/+anBbnmXJdcd2/86Mf/tkVzrlkNGz0+nYGR7VtP
mjQp76EFgG+083P2EUcckX4XqEyfs0ubs61ldXHUmIkx4/Jrdnz+PXDnR+2p
sh7w2fkY2e8GKfPaqSgKi8t39Xg94YQT0r05AAAAAMAfevXVV+Pmm2/er1xb
1v/xN7/5zR57j2b//2nTpkVjY7fo3LUsreNl64gHaw2xtVa2ttmt1+BdWcTD
Dz88XnjhhYM08oeOLJ+drQVn5yBma9XHTzg397HNs7L74Hr2H572oLMeDL17
944nn3xyr6/nm2++GXfcccd+/UxYtWpV/PKXv4xPP/20BUccAAAAANqObH08
W28bNmzYrnxrpy/uu63p1j/lUA5WtnV3lWVez790WfQZODI9ruxcxrKK6pR3
7du3b1r7y87JA4DWJjvP+dhjj017rdl72EmTph/w98nTz527x1xpS+dce/Qb
ttcZ12+Tc80ywgVFlVFUUpF+b8n2/QCgtcne/++6665dn7OzfGunLs2fs+ua
Do8zp1+R+qzmff9O1vvgpInTo6i8+feUL+ddTz31VL3TAQAAAOAL77//ftx3
3337lWXL+j0+9NBD8fHHH+/1v5fdAzN27Nh0X0x2dl52lu4lV67LfU0xr1p2
w5boNeDoXVnE7Gz8xx9/vAVH/NCW9RXI1oGLSyvT2vApU2bmPsZ5VLZO33/I
mDSvsvvlunfvHlu2bNmva/r888/H+vXr9+tnxNq1a+OZZ55JewsAAAAA8F31
1FNPxcknn5zWLrN14J39W7P7bs+5aHHKl+a9pvj7NXvh2ug3aHRaY8z6u1ZU
1qTHf+SRR8bdd9+d9yUFgK/I9sGy96nCovIoLm+IpWs3H9D3xSuvuTP+01/9
l1xzrhfNXx0/+MEfH5Sca1bHjjs7/R5QV98Qp59+et5DDABf8fTTT8e4cePS
+3/Nlz9ndx/Qaj9nZ7+fjJs8sznv2qko9aDPeqc3NTXF7Nmz46233sr7sgIA
AABALj777LN47LHHUt/F/cmvZefOZ/0e98fbb78dxxxzTDQ0NEbHLqXRtawu
Lll0Q+7riQe7soxrcxaxKJ0pmGURN2/efGAH+jsmy1POmjUrrWN3LalIa9gn
nHpe7mN9sNfF+xwxMs2r7N6zbD1806ZN3+q6fv755/HEE0/Etddeu18/L269
9dZ47bXXDtAoAwAAAEDbkJ0zOXfu3LRGl2VEsuxNtmZZWdc7pl54Zau87/b3
a9aC66Jn/+HpcWdnV2b3D2frr5MnT46XXnop70sMAMmkSZOi7otermNPv/CA
vhdOm7Ukfvyv/91e5UpbMuf61/+z4z5lXL9tzjXrPVfQtTKdL5y99z/77LN5
DzMApP4K2Rn42T1W6XN2cdv7nL30+s1x4sTzU2+I7EyJkrKq1C9iwIABcfvt
tztLHgAAAIDvjGwt7Le//W2sW7duv/JqN9xwQ+rv+G1lmbdhw4alc+k6dimJ
LiU1MWPOytzXEg9WLVlzT/O9QV9kEbO9wSwLyLeXZTKnTZuWrmnRF31dh4wY
G8vWPZD7uLd0LVh+WzqbMlsHr6xqnlfZa/ZA+eCDD+KBBx5IvZz3p//z/fff
n/4OAAAAADjU/fKXv0xr4I2N3aK0vPne1cKS2phw5sWxfP2Dua8l7mude/HS
qKrvndZbs54z2TmWffr0iZtuusk9uADk6oUXXkh7Ylkes6CoMpZcd++3es/L
8p3nX7osjhozMf7rf/+bfcqVtlTONTvXd18zrt8255rV0cdNivYFxSl7k53d
AQB5evLJJ2PEiBHRuON9v6yiOn3Ozu43G3/GrDb5OXvRqrti2DETdrzXlkTH
ziVR9cW5UmedddZ+954AAAAAgLbijTfeSOe+7U++Nevj+Ld/+7cpQ3igvPji
izF06NCob2hM58B36Fya7vHJex2xpWvOkhub7wfKsojVtWmNMssdc+Bk/Ypn
zJiRru3Ote0s/3n5zzbmPv4tVdlZ0l1La6NDQXFU19SlHhE33nhji1zf119/
PW677bZv9bMkGyMAAAAAONRka+g/+9nP0vpcbV19dOpSmtYnjxw9PuVm8l5H
/Da17IYtcdKk6dGpsCKtQ+5c3z7nnHPi3XffzfvSA/AdtWjRopTDzPKYw8ec
us/vb9MvWxH/8S//c/yrH/2b+OEP/2S/8qQtmXPNfn/487/4cS4518sWb0hn
XJRX1kT//v3j448/znu4AfgOys5WWr16dXMP1x2fswsKy9L70+ARY1NWNO/P
yt+2Zi9cG/U9BqbnVFRSkX6vGTRoUDo/CwAAAAAONR999FE8+OCDrbIH48sv
vxyjRo1Ka3SFxRVpzW7Akce1+ft9dleTzr4sCrpWpnP4amvro0ePHvq4tpBt
27al+8my+6yy3GeHHdc8u/ZZlnrFhq25z4UDVdmZ1MNGj0/3ymVr+VmP5L59
+6a+qy0p20d49tlnv1Vv6Oeee65FHyMAAAAAHEzvvfdeTJ48+Svn75XX9IgZ
c1bmvo54IGve1bdE975HfuUe3KynzvPPP5/3EADwHZOdLzF48OCorKpJ70tZ
TmRf39fOmrHwW2VbWzrn2tDziP1+PN8255pVt95D0h5k9vvNz3/+87yHHIDv
mOyMhenTp6f3oYrKmvQ5u6SyMc675OrcPxsfyFqx4cF0rlTHLmXN95TV1adc
b3ZvDQAAAAAcCrKc35NPPpnOtNufHFqWv3zttdda/HFm57xPmTIlrUmWf7Em
WVzREGfPvCr3dcQDVQuW3xZ9jhiZ9lcLi8qjoaExBg4c6Oy9g2Dz5s3pfOHs
mhcWl6cxyPZjL71qfe7z4tvW1AuvTOv32WumtLwqvYbGjBlzUO8ny/qy/upX
v4pVq1bt18+ZTZs2pV7TAAAAANCWvf7662lt7stnOg4++uT42fX35b6O2BKV
nSWY3YPbvqA0CgpL0/l7hx9+eDzxxBN5DwXQymT7lY899ljccsst6XzS2bNn
x9KlS1NeLjtP89NPP837IdKG/eIXv0j7Y12KyqKmsd9+vae15pxrdlbGYYcd
tt+PZ8p587/1Y5g49dL0e01dXUOcffbZeQ85sA9eeeWVeOmll/6gsj9vKdn7
fvZvZD+fb7755rj99tvTf2dnYOsJzb7KzpKaMGFCNO54ry8qrUzvR/0GH3PI
9k7I6pIr10VlXe90H1B2jkf2e07Wuz47ix4AAAAA2qoXX3wxNmzY8AeZsuXL
l8fixYtjyZIlu82drV27Np555pmDukaWrXVn/3Z2Fl22R5adCbtzfXL+sltz
X0fc31p2w5YYe9qMKCiqjPYFxelswWwNMluHffXVVw/a9f2uy/ZpJk2alK59
ZXVt6u2a3X911LGT4qprf577PNnXyjK6vQ4/Kr1GstdKXV19NDU1xfz583Pb
G8r2F+677779yrpmfaOzntNZ72kAAAAAaGt+97vfxciRI9NZe9l6XYfOpXHq
WbNzX0c8GDXj8muia1lddCho7jfTp08fWVcgyc7Tzfps/uhHP/rGHN4f/dEf
Rbt27dL+pfwL++qyyy5L779ZFuSkidP3672steZcszMlfvI//tdu/62Kul4H
JeeaZYmy322yM3d79uwZ77//ft7DDuyFbO/9Bz/4wW5/PmT79AdKdn9RloP/
yU9+8o3Z/H/6T/9plJSUpHPwf/3rXx+wf59D04cffhjjxo1LZ0l1KSpP7/Un
Tjw/vT/m/Tm4pWvJdfdG30Gj0j1BpeXV6V6nhQsX5j0kAAAAALDP3n777bjr
rru+kiHLzka+4oor4tJLL42ZM2fGnDlzvjZrlvVjzPqL5nlu8lNPPRWjR4/e
1ds1y4Z2LCyPY04+K63j5b2WuC91zkWLm8/Y61gUXYsror6hMXr16pX6637+
+ee5XePvsocffjiOOuqoXfMru/cqy7sOHXVK6rmb95zZU82ctzq69z3yi3xr
adTU1KXnctppp6Vse2uQ9We+55579jvv+tBDD7mPBQAAAIA2Iztj78gjj4y6
+obo2Lkkiisa4rKr1ue+lngwa/Gae6Jbr8HpvuPqmrqUgXn00UfzHhoOEY8/
/nhaN95dvfnmm3v192Sv1a9bl163bp1+ogdY9vqvqKjYr4zgj3/84zjjjDPs
E7BXsv3WAQMGpD2/7D3oihW379f72Nkzr2p1OddFq+6MP/2zP//af+OP//if
xOyFa+Pk0y44KDnXrLLn1bFLadqX3LRpU95DTwvxnntouffee7/x58N55533
rf+NF154Iaqqqvbr5+X3v//9dA7+I488cgCeLYea7Jz1448/PhoaG6NTYWl0
LqqKC+euyv2z78Gu7L0+uz+oqKQyvQdn53vo6woAAABAW5Bly+6+++60P5D1
al2wYEFccsklKdd64YUX7qp58+b9wX7CNddck9aOP/nkk7yfRpKtyd1+++1x
xBFHRGNjtyirqE551+yc2KPGTIyFKzflvpa4u1q+/sE4bdqcKKvuntYaC4vL
0/1NWa/N2bNnxzvvvJP35f3Oy+6NyPoa9+7dO537WFJWFe07FUfHLmVpfrXG
vGuWb+09YESaU9m9chVVzX2Bs/vnstd9a1zHfvnll2Pjxo37lXdd8/+zdxfQ
UVxtH8AP1pdSqFCnFCmlpS2UFguEuAsWAiF4Gtzd3SW4e3CCuxd3WigUK9pC
cVo8yWqeL8/dhg9CdmdWZzf5/8655/tOX/ZmZnZ2787M/d9n5Ur6448/RJ1n
AAAAAAAAAAAAZ/Xo0SNq3ry5qCPH2Q9P3zCaumCz4vcTlWgLVh+kKjUbinut
QcEhVKtWLXGPD8Aa27dvl8xIrF69WlZfP//8s9E+eI1MsI2FCxdSrly5rM4K
ent7i7V9AUzhWoD8vIxrvIVUrWPxGLZo3RFq0bE/tejQz2QrUfJHh+Vcg8Jr
G/0bVWs1Ev/GkTnX3kOmiOeU/Nx75MiRSr/1YAcYczOfoKAgu+ZcN23aRPnz
57d6zOeaszyXyRnnPIAyeE5P165dxXweN3cfcqvsT2Omr1D8mlep1qnXKDEG
e/kYsq5c6wIAAAAAAAAAAMBZ8XqXR44coblz54o6rWPGjHkl1yqVceXar876
nJizu1yHtnr16mKeEN+z47V4ub6rs+UR+flnz0GTyDeouri/WLGyj5jLw/cY
O3fuLOrUgnO5d+8ejR07VmSQ+fzyTD2/eA4W56kbNO1EY2esVPSc4sz0wNGz
X9Rv5Xwrr0fN2e/atWuL+svJyclKH0aTOKd68eJFWrVqlUV5140bN9KtW7eU
3g0AAAAAAAAAAIDX8NzbTp06/Tf31psqeQXRhDnrFL9XrWTjuq5BVaLEupUh
IaFiLUvc3wNrLF26FJkbFzJixAirsy4vt9KlS4s1NQGM4bWc+bkZP99r2XGA
3cc5zrA6Iuc6bPxCypYte4b9v5v/AzHe8r9zZM6V16Hm55X8rLJ+/frIo2VC
GHMzF1PvgS1yrryuONdjteW4HxUVhXWwQZwDQ4cOpfD/1rHg9eqHT1yk+LWu
0q1Vp4FiHOY6ETwPjXPmAAAAAAAAAAAAzoKzrX///Tdt3bqVJk2aZDTXairj
umHDBrp586bSuyILbyc/G+c8YuhLecSybt5Uu0FLGjxmnsgEKnEvcUr8JrF+
r4dv6It8a2CQId/arFkz2r9/P57zObk///xTPMNJy7uK+q5unuL99AuJEO8v
11NdsuGY3c+nBWsOivO5YdNOVNk72JBvreRNfv/lWyMjI2nevHlOm003huf8
8TNLnm9gSd51z549qIUMAAAAAAAAAABOg+/58j1FvmfH94R5bca4acsVn/vq
DG32sl1iPUhety80LIxatGhBz549U/otAxeFzI3rWLNmjU2zLmmtRIkS4hkD
QEb69u0r1h3m52nDJiy0+xjniJzrkg1H6cuvSxrt/+U8ryNzrtz8Q2pSZU8/
8Rz8xo0bSr/9YGMYczOPhw8firUi7JVzvXr1KuXLl88u436HDh1sfDTA1XCN
Bx5nPLz8qKybFw0YNUvxa1xnaTEtuorfPP4BQVStWjU6ceKE0m8XAAAAAAAA
AABkUTxn5p9//qGzZ8/Szp07acGCBTRhwgRZ+VZuU6dOfZEXW7FiBZ0/f94l
10G8cuUKDRky5EUe0ds3gMpV9BL38dy9gqneT+3Es7o5Cbvtdt+Q67aOmrxU
ZB+DwmuLv801Zt09/V7Ub23SpAnt2LGDdDqd0ocMzMDPY0aOHCnuB3MNBv/A
4NT31Ve8v2nnGD+b7tJ3jM3qMvD5NDL1fGrTZbCo28rz4fhvlXPzJE9v/xfn
FNdvjY+Pp0ePHil9mKzC+VyuIW1J1pUzsnyfXq1WK70bAAAAAAAAAACQxfH9
KsPcW38x93ZQ3FzF57w6U5syf7O4n8p1bvlea//+/V3ymQQoD5kb18DPV955
5x275F248Vq4AOnx8/M6deqIumY8Fsev2m/38c0ROdembXsb7bvYV9+9si6v
o3OujZp1FutY8G8g/k6FzAVjbuZw7NgxKlKkiKzx1ZKcq1arpYoVK9ptzOfG
11qQNfH65zzG+PgGinkznfvEKX5t60yN6z9E1msm5jDxXCL+HXTr1i2l3zYA
AAAAAAAAAMgiEhMTRa7z4MGDtGrVKnEvd+HChTRlyhSKi4szO+PKzyWOHj1K
ycnJSu+a1fh5+ahRo0Qeke9xBgWFiExg+f8yr+KeXnhtim3Vg/qNmEHTFmyx
+D5h/Mp9NGLiYmrXbShF1Iklt8r+/59t9fAVdTY5c8vb0apVK/HMBvlW13bn
zh3xWWvUqJF4X3keVkBQsDjHKlTyNrz/qY3PBa5LUCWiAUU1bEUxLbuJvGq3
/uNp4OjZNHpqAo2YtEScg136xon1lfn5L993Dq1el7z9q1C5it4vzieu+8DZ
7bRsKzder3Tz5s30/PlzpQ+LTXE9aq4pbUnelZ+fXr58GXWSAQAAAAAAAABA
ETw3n9di9PU3zL3t1GuU4vNdnbHxepF8/zOt7tuiRYuUfuvABSFz4xqioqLs
mnfJmzcv3b592677cPkvPa3ZpqNzl/Sk1tj1T4GN8DnB4wuPMwGhNR0yttk7
5zpzyQ7Kmy/jzHi2bNlo8Jh5r/x7R+dcuw8YL3778LPxmTNnKn0KgI1hzHVN
T58+pZMnT9K0adPI3d3drPHVkpwrP+O355jPrXDhwqjlngX99ddfFBkZSQFB
IVSmgoeoXar0Na0ztvmrD4j5cFwTIjR1PG7bti3WigcAAAAAAAAAALvgdQ95
nTWuV7hp06ZXcl2LFy+mGTNm0JgxY2TnW1/OuHJt0X///VfpXbQ53qe1a9eK
LGBaLjAkJJR8/YNEfdVybl4vMok8n8bDN5QCwiKpSs2GVKt+c2rQpCM1bdOL
mrfvS42adxHPHavXjqHgqlHkHVCV3Dz8X7w+LYfo5RNAgUEhIvvIf69evXri
mQHXyEXuLnPh+gL8vnL9ZL43nHaO8bPbgMBgsYYk12vg80JkrCt4/P/5Yqyl
nkecla3k4Stys75+ga+cTzVq1KDevXuL8/rmzZtKHwK7Sju+XGPakrzrli1b
6N69e0rvBgAAAAAAAAAAZCH//POPuCfMa9Xxvb56se0Vn+fqzI3XBOT7olxr
j7PBp06dUvotBBeDzI3zu3TpEmXPnl1WboXXr+U6XXxvn9ezXLZsGQUFBcl6
La9Nak9aHVGzXmqq0iSZarRQUachapqxREt7jujo9j08/3NGR44cEc/W+Llb
3Zh2DhnX7J1z5fV1jfXr6Rf22r93dM41btoKMa7zs01+ngmZC8Zc18C/p0uV
KkWff/65WAfCmjypJTlXrh8pp2/evvr164t1/Hk+wODBg6l8+fKyt23y5Ml2
OHrgrDjX3Lp1awoNDaOybp5iTteidUcUv5511sa1Hip5BYm5SvxbiD9nAAAA
AAAAAAAA1uJM5MOHD+ncuXO0a9cuSkhIyDDLNWfOHBo3bpxZ+VZufB+Ls3K8
5l1WyF/yM/Ft27bR8OHDKTo6+pVMYnBIqHjexrVXvX0DRb7Q3dOX3NwN+UTO
w7q5G7KHHl5+IsvKWVnOMvJ8Jb6XGh5u6I+fwXfp0kVkjzmjh9qtWQfnqvfv
30/Tp0+npk2bvjjHXm5h4eHifOFzjs8dbpy9Dg0Le5FlTd+6desmahnwOquZ
od6yuXifudY0Pzu1JO964MABevbsmdK7AQAAAAAAAAAAmRzfZ+/bt6+4B8j3
lQPDatGC1QcVn+Pq7I2zwJwJ5numjRs3xr08MAsyN86vTZs2svIqxubf85qY
ffr0EbUqTb0+Z86c9PjxY7vuy+7DOpFzzajV76iiwZM0tHyTlk6d11NS1nuc
43RWrVolnrPxGNO221CHjGn2zLlyrVZjn4Pcud8UmZb0r3F0znXeir0i58rP
0WNiYpQ+BcDGMOa6Bn42bk221ZqcK/+Of/PNNyX7rVy5MiUmJr72ep5bI2fM
5+bt7W2jIwaugOs+8JjOc7gqewfTrKU7Fb+OdfbGvxv4N5C3T4A4dseOHVP6
bQQAAAAAAAAAABeUlJRE165do0OHDolnAKayW/Pnz6eJEyeanW/lxvVFeR1H
rhGbFfEz8atXr9LGjRtp0qRJ1LlzZ6pVq1aGGUNTjTOtzZs3F/f3+T359ddf
M7wfD1kTnwt37tyhP/74g44fPy6e1/HnOj4+Xnx2hwwZQiNGjBB1lTnHumHD
Btq7d6/Is/L5+eDBA1Kr1UrvhtPgHDHXnrYk68rrBJw+fTrLfucBAAAAAAAA
AID9bdmyRdw3ruzpR+XdfWni3PU2nac6fdE2kWFJ3/i/22tu7JyEXaI2G2dg
2vcYTt0HjKceAyfSiImLadrCrbRkwzGr/8b81QfIL7iGqLfHawGOHTtW6bcS
XIirZ26ePHki+ub72PPmzRPPDrimGdehtOf97CtXrojnEvyMgvMkvXr1En97
06ZNdPHiRZv+reLFi0u+R/y8TUpsbKxkP7y+rz3p9UTNe6uNZl1fbtWaqajt
ADVNXqChHQd0dP1WCmWBZYedCj8P57VnOXdpyyynqWavnOvi9UepyBdfG+0z
unGbDF/n6JwrN64f5+XjL+q047lc5oIx1zKOHHOZkjlXPrZSfZYuXVpyXQo5
Y36uXLnEewqZ35kzZ8SY4u0bIMb0IWPjXf46e8mGo+JvDJuwkLoPnEC9hkwW
//+kuetpwRrbrZXVpE1PkXXl9fcbNWqENaUAAAAAAAAAAEASr0d4+/ZtkWvb
vHmzrHqFfA+cc3FxcXEWZVy5zijuXWWMc8acLeQat2fPnhXr2e3evVtk6zh7
zNngy5cvi+zi06dPUasVQAH8+Vy3bp1FeVee48JrCWSFGtYAAAAAAAAAAOA4
vEZbVFQUBQQGi7m3nfvE2XQeLNeFzZEjh9F53m26DrHZ35owZx3VbdzWZJ4m
rb2X/0MKqRZNg+LmWpV55SxtWTcvkYvhrDA/MwHICD/j6tev34sWEREheZ7W
rl37lddwO3HixGt9W5O5adu2LZUrV85oW7BgwSv/fv/+/eTh4WFyu/Pnz08N
GzYUa6zaAq8BO3v2bHJzc5M8Zj4+PnTw4MEXr/3zzz/Jz8/PZOOcUHo3b96U
/Ftvv/22eDYnhbeBMy2m+mrVqpVNjpUpPx8yXtNVqtVpp6J+49S0eJ2Wfvld
T0+f41mFPfF6s5zr4HF51OSldsuqvNzslXONadHVaH8fffKZ0UyMEjnXoCpR
Ys0PHs/v3bun9GkAVsCYazklxtw0SuZce/bsKdnn9u3bJfu5desW5cmTR7Iv
XkMcMjeNRkMtWrSgkJBQkddsnDoeuux19uy1VKt+cypQsAhlz57d6N/MlesN
KlHyR4qoE5t6nbzcuv1L/X3gH1LzvzWlqtCUKVOUfksBAAAAAAAAAMAJPXr0
iC5cuCDyk1xj0JyM1qxZs2jMmDEW5VvHjx9P27ZtQ74LAFwer6n7+++/0/Ll
yy3Ku/LzMznzZgAAAAAAAAAAAOTg+/Zci7R8RS8Kj6gv6rPYcv5t/5GzbJ6Z
yWiOb0jVOpQtWzaL5sGX+O4HUX/G0r/ftG1vMXc5OCRUzGVGDTjICNdyskVu
Y86cOa/1bU3mJigoyOTfq169uvh3vI5jaGioWdvKn8mYmBir8mL8XNLd3d3s
48R5JZVKJepoSf1brkuX3po1ayRfx9kjuerWrWuyr2LFill8jOTiJXCb9ZJX
01WqVW2qohZ91DRuroY279HR1esphCV2badr164v1p+YHL/RpuOysWaPnCvX
k8uTJ6/R/kytraFEzpVzOZUq+4ic66VLl5Q+DcAKGHMto9SYm0bJnKvUOJ03
b16xj3Jwnldq+3iuAGRuK1euFONJxdRxxdMvjOJX7nO562z+DVLyhwoWfQb5
O4nXgxo2fqHFf3/01ARxnc31cPl7nWs7AAAAAAAAAABA1pacnCzWXOQ1Ffl5
riWZrHnz5omcqiX51rFjx4p8LN/P5nUjAQAyi8TERFFrWU4t7PSNX3P48GFR
xxkAAAAAAAAAAMBSnOHg+aJePgFiDirXabF1bub7H03XgrJ2/i3Pff3s86JW
z4V/M89b1K7bUIu2Yf7qA+TlHy7mMPNc5vXr1yv91oITcuXMzcWLF6lgwYIW
b3ORIkXojz/+MPuY7dmzR1ZNNGONP4+//fab5L/LKHMzY8YMydc1bdpU9r4M
HTpUsr+rV6+afYzMtXWv5TVdpVqt1irqOUpN8Su1dOSknh4+xvrFluL6vn4B
QSLnOnvZLpuPzRk1e+RcPX3DjPbFuRlTr1Ui5xrduA25ufu8+O4A14Ux17XG
3DT8/NsW7xs3c3OuUvle/t/l4nVvpLYPtSkzt8ePH1NUVBT5BxjWrOg/YqbL
XWd36z+e8uZ72+rPItecrfdTO1qy4ZhF29GoWWcqW8GTQkPDRN1lAAAAAAAA
AADIWnQ6Hd29e1fcf966datF+au0tmDBApo0aZJF+da4uDiaNm0aLVq0iPbv
34+MKwBkWvfv3xf1qi35nuV1Xs+ePSu+uwEAAAAAAAAAAMzVt29fCg0LEzVS
Ylp2s/nc295Dp0rOe7Vm/u3MJTvo/Q8+ttl8+OzZs1OfYdMs2hbO2vAcZq6/
V79+fbGOKMDLXDVz4+3tTUWLWp8lz58/P508eVL28dq3bx+99dZbVv/d6Oho
yX+TUeaG8zFSr+PnmXLxM1ep/uLj42X3ZymVmqheB5Xdsq7pW2x3FY2aoaH1
O3X0x1U9aTJxuWt+nJ2U+tXP+d4791Poz79TxD6fOq+nY6f0tO+YjnYc0NGG
n3W0couWFq/T0pzlWpq6SEtj52ho+DQN9R+vph6j1PRdmRj6umSgGFfiV+23
+ficUbN1zrXfCONZcc688DoVpl6vRM61YdNO9H0ZLypSPIzqtjxAvUaraeAE
DY2crqHxczU0fbGW5q3U0pL1Wlq9TUubduvo50M6OvCLjo6f1tPvf+jp4jU9
Xb+VQncfpNCjJymUrCJKQeTb4TDmutaYm0ar1YqxkNfSN9W8vLwk/465OdfP
PvvMZH+RkZGy+2rUqJHk9o0ZM8bo6/nR/4OH+OJwZXPnzqXw8CpUvqIXVanZ
0OWus9t0GSzqsdriezStVfQIoCUbjpq9Lbzeh5uHP3l4+Yk8/YkTJ5R+ewEA
AAAAAAAAwM6ePHki1nPk9Rk5M2VprjWtLV68mKZPny6e7VqSceVsLGdkuS9k
XAEgK0hJSRHrtFtaN5vrQ9y4cUPp3QAAAAAAAAAAABfCzwV4nqintz9VcPez
eb047q9w0eJ2m3/Lc2RL/WC6ho0l7e133qMp8zdbsD3HKLhqFLm5e4vjyvf6
AF7mqpkbW7ZixYqJ55JSbt68Se+8847DtiujzA0/s5R6Ha/ZK9fq1asl+xs5
cqTs/qyxYLXWYTnX9C2ipYq6DFPTrGVa2n9cR/f+cVyOhx85JyYZcqi37xly
qBeuGM+hLlpryKFOWah5LYfaYbCaWvZVU0w3FdXtoBL7ZcvjVLB4A/qiRIDI
uS5ce8jm+ZiMmq1zrqXLVjLaT3CVKMnXK5Fzbdyiq8i5flwojCpX2WOz97Nq
UxVFtlKJjPlP3VXUKvXc6ThELeofD5hgOLfGzdWIzPPcFYYMNJ+DG3cZzkn+
rPA5yucqZ6f53OUsNZ/LfE5jOsXrMOa61phrLjlrUZibcy1e3PR1S7t27WT3
9d1330luH/8uMKXbCMP3xLINWrp2A5lXV8Kfu1q1apGvv6Eue9y05S51nT1h
9lrK/abltZ1NtZBq0RZtE+dueW2ukNAw6t69u9JvMQAAAAAAAAAA2JhKpaLr
16/T0aNHad26dVbnWl9us2fPprFjx1qUbx0/frxY0y6tL14zEhlXAMhKNBqN
qKedkJBg0XcwP1d9+PCh0rsBAAAAAAAAAAAuYPjw4RQWFi7mizZv39emc2+H
jI2nDz/6VNZcV0vn38a27mm3+fdl3bws2qaBo+e8qOkaExNDOi7GBPAfZG4M
rW7dupLHKiwszKHblFHmpk+fPpKv6927t+z3f+jQoZL9devWTXZ/1uB8HOfu
lMq6pm8NO6to6BQNrdispV9O60UGNX0O9ehvhhzq9v2GHCr/2/Q51GFTDTnU
7iMNOdQWfeyXQ7V3yww51xIlfzTaD9dz5XUlTDU5n908b+V75TXFS5Sy6hjY
K+fqiMbnOJ/rfM7zuc+fAf4s8GeCPxtjZmvEZ2V2guGzw58hrrPMn6m9R3Xi
M/bbOT2dv6wXmbpbd1Po30cp9DyRSOuCP2cw5rrWmGsue+RceR4VP2c31pKS
kmT18/TpU/EdJ7V9586dM9kP14l++TPepIdKrBFx+oKecInh3HiuB697xLVc
a0T95FLX2YvWHaEvvy5p1++ANl2HmL1d81buE/VgPbz8xbG9ePGi0m8zAAAA
AAAAAADYCNcMPHPmDC1btsym+db4+HiaMGGCRfnWMWPG0MyZM1/pb+/evci4
AkCW9ezZM5H1t+T7eOnSpXTs2DFKTk5WejcAAAAAAAAAAMBJ/fPPP1S9enXy
9g2gsm7eNHPJDqvm285bsZeGT1xEsa160FfffG/WPFdL5t9yLdePP/3cbnNv
s2XLRmOmr7Bgu46Rf0hNqlTZR8y/PXTokNJvNTgRzjB++umnL9q7774r63x8
+TWFCxemkydPvta3K2VuuJ0+fdro9vA9bkdvT0aZm3Hjxkm+rmHDhrLff67r
JdVfkyZNZPdnrd5xarNzdOGxyRT6UzIFN0qmwIbJ5Fc/mXzqJpNXnWTyqJ1M
7pHJ5BaRTOWrJ1PZqkn0Y3gSfR+aRCVDkujbwCQqEZBEX/klUTGfJCrqlUSF
PZLoc/dEKlAxkT6pkEgflze0T1JbUc9EKpX6uoo1kyiggfIZQke3z79qRF98
bci5zl99wC651vTNkTlXe7Xcud+06hg0ataZSqXlXKvuU/w8cKZWo4WK6rRT
UeOuKmreW03tBqpFvcm+Y9Uipx43S0OT5mtEDo9rRi/fpKV1O3S0da+O9hzR
0eETejp5Vk/nLunpyvUUunk3hR48TKFniSmk0dr+Ow5jrmuNueayR87VVjp3
7iy5bTlz5iS1Wm2yH86XN+iU8RoN0e1VIrvOWdgkTAlwKjzPjdc74nWPeAwf
NmGhS11nd+031u7fAR989CktWHPQ7G3jtbl4jS5eq4t/pwMAAAAAAAAAQOby
77//0saNG63Oty5cuJCmTJlCcXFxZudb+TVTp06lRYsWvdLnnj17sMY5AECq
O3fu0ObNmy36fl65ciVduHABawYAAAAAAAAAAMBr0mrMlKvoRXUbtzV7jumI
SUvo8yJf0vsffCwyJdbMc7Vk/m2nXqNk9V24aHHq3CeOZi/bJXJCXP+mgruf
rNf6BdewaC5yl75jxJzmkNAw6t+/v9JvNTgxOdmS1atXy+rLkZmbt99+m9q1
aydq3M2fP5/at29PFSpUEJkNuX3ExsYa3Z4yZcrI7ufLL7+k1q1bi+3g3My0
adPIw8PD7O+hjDI3/AxU6nUff/yxrPpufJ++aNGikv1FRERIv9km8ONVrr3I
NRi5FiPXZOR6qFyjkWs1cs1Grt3INRw55/pDBjnU4ulyqAUzyKEq0T5L3QbO
yJapkkSeUUkUGqN87s+erXCJZlT0q0AxnsxJ2IWcq8xmbc61bkw7Kvmjt8i5
etY4qvh5kJVa9eYqimqrEvWdm/VSU9sBauoyTE19xqhp8CQNjZ6poYnxGpqx
REvzV2lp2QYtrd2uoy17dLTrsI4OndDTr2f0dPaSni7/pacbt1Po/r8p9ORZ
Cqk1GHONcZYx11zOmnM9ePAgZc+eXXLbvvrqK1n9xa/USn52uJbzgAka8Vn4
52GKnfcQpBw/flxcZ1fy8CW/kAixDpIrXWdX8gyU1TdvX2WfEIpp2Y069BhB
teu3oGLFv5W9bTEtupq9bdMWbhU5Vx+/QIqMjKTnz58r/XYDAAAAAAAAAICN
abVaOnr0qEX5qcWLF9OMGTNELVZLarhOnDhR3P9O3+/u3buRcQUAeAnPf7l0
6RKtWrXKou9rXtPg1q1bSu8GAAAAAAAAAAA4iZSUFGratOmLGjMjJi42e47p
gFGzbJZJsWT+bakf3KTnj3/zPcWv2p/h66tENJB8fa433jD6elNt3sp9VN7d
l7x8AqhatWr04MEDpd9ycFKumLmJjo6mx48fG92GPHnyyOond+7cGfZz7Ngx
s7bFWMZ027ZtlC9fPtl9ZZS5kbst/MxTipzabtxK/+j5Ioe6YrOWFq7R0uwE
LU1eoBF127hmYr9xhhqK7QepqUUftaityHXduNaiOZmyoEbJiuZWbdEKeyTS
d8FJ5BaRJGrLcr1ZpbN6tmpflGxPhYsHiXF6yvzNyLnKbNbmXCOim9B3pX1E
ztWn1mnFzwM027Wyfgskz5/YNito+mJt6m85LS3doKXV27S0eY+Ofj6kE3Uz
f/ldT7//oacFi3dizLXxmGsuZ8y58jEuXry4rGMwZMgQWX3ymhVVm8of3/nf
dhqipoSNWvrrJjKvShgxYgSFhoZRmQoe1LHXSJe6zubr2Dfe+J9kv199UzrD
6+TF649SjaifKFu2bJJ9fFOyjGXjdJ1YqlDJW2SJt2zZovTbDQAAAAAAAAAA
dnL9+nVR909uZorXihw3bpxF+VZ+Hb8+o3537dqFjCsAgBFqtZp+/fVXWrZs
mUV5V66V/eTJE6V3AwAAAAAAAAAAFHb+/HkxL9Td05d8AquZXWNG6fm3XJeV
M6im+uQ6SuNnrTHax5INR+njTwtKblv3gRMsmn9b76d2olYuH2e5OUXIelwt
5xoVFSXWZTRl//79srMunItJr3nz5rJe2717d8ljwmv95sqVS1Z/aZkb7X/1
ULke2t+3dfTOO+9Jvjbf2x9S5777MsyhNu+tpooBk2R/H+Z77zuH5r6KeCif
VbVF+9QtUdSi9aidpHiWzlbtqzL96PNihpzr6KkJdsm1pm/IuR6nkKp16JtS
viLnGljvL8XPAzTbtR99pHOu5fwTZPVVMXSL0T5Cog9RbHcVteqrFnnDnqPU
otbmiOkaGjdXk3p+yauVWKVqFN26q6OHj1MoKZnXRc58Y641nC3neu/ePdm1
cT/55BOz6lD2Gq22+Lxv2lMt1svgfDamYtkfv68RERHk7RtIZd28afYy8+ux
K3md3abrEMk+CxctTnMSdpvsh+8xSPWTI0dOmrt8j9nHp/+ImeK3UVBwqKzv
JgAAAAAAAAAAcF3Pnj0Ta52Zykhx/VVek9iSfCvXfeX6r1wHNqO++fk715cF
AADTeC1Yrn1tSdaVM7InTpwQmVkAAAAAAAAAAMiaZs2aReHh4VSmgie16jTQ
ohyIkvNvew6eLNkn11OV6qdh006S/YRWr2vR8Rkybr6YfxsYFEIdO3ZU+i0H
J+VKOde8efOKDIccY8eOlfXZHzBgwGuvLVGihOTrPvjgQ7p5O1HUOLt6PYXO
X9bTybN6OnJST3uO6GjbPh2t26Gj5Zu0FFK1g6xt8ay6NsN6qJ8WrSnr9dmy
5aDiP/YizxpHKSzmUeprk0QtyMIlmon/Te734ZtvFXRo7ouzoUpnVC1tBSom
0rdBSVS5VhKF/aR8hs6WrXpzFZXxGk+Fi4eIsYQzHdZmWOU05FyPU2XvYPqm
lB99VjSMarZ4alYdRTTnbo7KuXpWP2TytR9+FiC5HTlz5aXAejdee23Nliqq
20FFMd1U1LKvmjoMVpNfldGyPhsxTfvT0d/09Ns5PV24oqdrN1Loy+LSY+6H
H35otI5rep06Sf+25pbZcq6nTp2iQoUKyf6emjZtmln97zigs8lngM+dsXM0
dOiEXmSnwfZ4Dgevc1TB3VvUB3e16+xqtRpL9snX4lL9TF2wmd74X27JvvqN
mGH28Vmw5iC5efiTp48/Va1alf755x+l33YAAAAAAAAAALAjzpkePHjwtVzU
okWLaOrUqRQXF2dRxnXKlCm0cOFCo7krZFwBAMx38+ZN2rBhg0V5V54bdenS
JUpJSVF6NwAAAAAAAAAAwMFiY2PJPyBYZGcmzF7rcvNvwyPqS/bZrF0fyX7i
pq2Q7KdgoS8sOj6L1h2hSp6B5OntL+Y6379/X+m3HZyQK+Vc5dZL4nqof9/6
V2TNpPosXSaIFqzW0qxlWpo0X0ODJ9ynbNmySb7u67IDZWc6ghvcpmzZc0r2
WSFoTYavr1x1n82+6+S0PG9/4dDcV6kQ18q5FqyUKLbZq04Shccql5fjHGqd
dipq1EVFzXqpqd1ANXUdrqa+Y9U0ZLKG4mZpxDnN5zaf4wkbtSJ7vXWvTmSx
D58wZLPPXdKLrPbNuyn04GEKPUtMIc1/j8yXL18uxg9ek6J9j+FWZTfltsyQ
c303/wcW73/8qv3it5GvfyA1aNBAvA/8GE2lJnryLIXu/ZNCN26n0OW/9HTm
op5+PaOng7/qaNdhHW3Zo6M123S0bIOW4ldqacYSLU2M19CoGanfbZM01DtO
TV2GqantALWor9iws4pqt1FRtWbI0TqquVLOtdj3nWXvV3CDO5Qjh/SY+2HB
wFdf1/BO6n+XHnM9gwaJOuVcr5y/2yYvMHy3LVyjFetJ8Hcbry/B323b9zwQ
NRql+sxMOVeeB5UnTx7Z31Fff/212XOjuM58REvbfldwfwMnaMS49O8jzBew
leHDh1NIaJgYS+TkQZ3tOtvdK9hkf/z7nnOmcvr67vtykttn6e+bej+1o/IV
vcTvpM2bNyv9tgMAAAAAAAAAgJ1x5unkyZMvslAzZ84UtVgtybdOmDCB4uPj
TWatdu7ciYwrAICF9Ho9nT9/nlasWGFR3pXreN+9e1fp3QAAAAAAAAAAAAf5
66+/xHzQyp5+5BNYzeIsyKC4uYrNv/22VFnJPsfOWCXZz5INxyhvvrdN9sOZ
u/mrD1g2/za2/Yv5t3wfDiA9JXKunKHjLB1n6m7+Vw/V3SNQcjva9dwp8i2c
4eMsH2f6ONvHGT/O+nHmj7N/afmJz79qJNlnvve+eyVz4RaySfI1nFnlbI45
WY4PCvhI9mss58rtk8JVbPZ9J9Xe/aCMQ3Nf3wY6f861UOVEKh2WRD515e/X
yznU5r0N52q3EYYcalpW6+UcavqsFtcGTp9D/ee/HCpnuR3hwIEDhppwlbyp
QZOOFo/X5jRb51znrdhLs5b+bHFr2XGA5PZ06DnildfIzd9k1MbNXP2iFnuP
Hj0c80aT4Xv56XPD9/Lfd1LoSuo5x+feiTN6kYnefdiQkeZzlDPTfM7OXGpY
HyCj72U+5zP6Xs7qzZVyrpXCtpu1b6425vpFrBW/Hzj3zedtnzGGNQJGz9SI
fDif3/NXGdYIWLvdkCPnzwHXIeXPxdnUz0fnbkMl/449c65c47Z58+ZmjfGf
fPIJXb582aK/N2iixm6fDa5b3XmomlZs1tL1W8i8WornvdWuXZt8/ALFGhVz
Ena53HX2V998b7I//t/l9uUfUlNy+2JadrPoGHGdex6vg0NCadCgQUq/9QAA
AAAAAAAA4CD87Gz8+PEW5VvHjh1Ls2bNksxX7dixgzQajdK7CgDg8pKTk+nY
sWNiXpQledf9+/fTs2fPlN4NAAAAAAAAAACws7Vr14rcTDk3T4pt1cPiLAjX
K23RsT+16NDPZJNTy83c+bf5P/jIZH85c+aixeuP2mQuL7fRUxMsOkZ9h08X
829DQkJFbR+A9OTkXKfOXPVK3okzeBnlndp232a0j/AGhyiqrfG8k1TmJnuO
3BQW89jMPNF8yX3L/dZnr7ymtOd0yde8mfdzs/Mb31YYKdmvqZyrf/Rlyp2n
gM0yB6YavxeOzH0V81Emu/pJhUQqUDGRCronUiGPJCrqmUTFvJOouG8Sfe2f
RJVrJVNMVxWNmKbJsGZgWg71/GVDDvXWfzlUrnnnqByqvd24cUOM1+6evhRc
Ncri8dqcZuucq7WtYy/pz27fYdNt9ve49h6P26Fh4TR16lSlTwGb4c8Efzb4
M3Lrv/UN+LPz2zm9+CztPWr4bK3fqRM5N/7MzU7QirqdY2ZraNhUjajn2X2k
mtoPUlOLPmqK6aai6PYqm9eYtGdzlZxrVh9z5bYS5QZJ/p2KfoNFfpPrKXNO
lOsrT5inoemLDXWXl27QijrMm/fo6OdDOlGf+ZffDfWaL/2pF5lPruP8+GmK
qOuc8l8E9OzZs1SyZEmzxvf8+fPTmTNnLP4c8zY66rPCGeQ5y7XiOOj1Nvoi
ygLOnTsnxu1KHr4UWr2ua15nv/+h6c+uu5/svjz9wiS3r35sB4uO0byV+6is
m5fIFNeqVQu1NQAAAAAAAAAAMrknT57Q3r17Re5pxowZZuVb4+LiaNq0abRo
0SLJTNX27duRcQUAsLGHDx+KOtmWZF0TEhLo1KlTeA4AAAAAAAAAAJCJDRky
RNQ94RzHwNFzXC4zw7VVucaqqf4+/ayw/Pm3vtLzb7v0jbNo32cv2yWOs69/
ENWrV49SUlAfKTOQW3eP649xDpXrkaXV3eM6ZVyvjOuWcf2yoMiFLpG5yfvu
12ZnJNyr7Jbctxw53zI7G/PexxXN3pZyAcutztx4RRynnLlM13+2RSvwRW2H
5VjCY5Pp0woyc6he/+VQ/Qw5VK4DWzI4ib4PTaIfwpOoTNUkKl89mdwikqlS
ZDJVrp16zOokixqsfvWSKaBBMgU1SqbQGMPfTb8tXEuOPxOrt2np9j18VzK9
Xk+RkZHk7RtIZd28rapTqtSYbW1zdM71p1bdqZyboQ771q1blT4FXIZOR5SY
RPTwcYr4/P75dwpduKKnU+f1dOyUnvYd09GOAzra8LOOVm7R0uJ1WpGhm7pI
S2PnaGj4NA0NmKChHqPU1HGImlr2VdNP3VVUr4OKatowR+sqOVeMufKanJwr
/xtbjps8VpXxmZ56LN80a2z/8KNCNCP+BO0/rqPjp/V0+oKeLl7T0183U+jO
/RR69CSFkpLJZKb07oMUh/0+eLnx53D8XI34jZusctz3iitavnw5haeOH2Ur
eIp65K44Zn9S4HOT/QVXkb/uRsFCX0huX6deoyze/7Dq9USmmMfsCxcuKP32
AwAAAAAAAACAHXDm9OTJk7Rs2bJXck9TpkyRlXGdNGkSLViwQFaWChlXAAD7
un79Oq1bt86ivOuaNWvo2rVrmHcHAAAAAAAAAJAJcd6Sc5ecv5yTsNvl5t9y
bVWp/kr94Ca7v+pRP0n2Z2mdGW7+ITWpsqefmH978+ZNpd/+LCGjHOrZ/3Ko
h0zkUCfGG3KogycZcqhdhqmp7QC1qGnVsLNK1EOt1sy2detcJXNjSc4lIPqK
rOxHeGzii9cU/6GH5L8v8EUts7elcpU9NsnceEeepHzvfmNWtuXl9uZbBSX/
TZFvWsjapxotDLUUG3dVidqKXGOx2wi1qLk4dIqhBiPXYuSajFybkWs0cq1G
rtnItRu5huPGn3WGHGp9Qw412EQO1R6N6wv3HasWNer+fYTnERnp0aMHBQaF
iDF71JRlLjdmW9scnXMNqhIl6ufymH316lWl3374D2f/OAPIWUDO+nE2kDOC
nBXkzOCBX3S086CONu3W0aqtWlqyXkvzVmpp2mKtyOeNnK6hgRM0VL2ea6wt
gTFXXnN0zjW08UP6vHhDs8f+Dwr4UlD9m7L/Dme763ZQiaw3Z745+80Z8P7j
1VS2ahJ9G5REJUOSqHRYEv0YniT+W9o6E+6RyeTx0joT/qnje2DD/8b3n6wf
33nbuC4u/5bgXDu8auDAgRQcbFhPasi4+S45ZvOaGrxWk7HGa07J6Wfeir2U
PXt2ye2Lm7bc4v1v3r4vlXXzFGP22rVrlX77AQAAAAAAAADAhjjHdOXKFVq9
enWGeafFixfTuHHjjOZbx48fT3PnzpWdn9q2bRup1WqldxsAINPT6XR05swZ
sXaoJXlX/r5+8OCB0rsBAAAAAAAAAAA2cvfuXTEPtLKXH/kF13BIRsXW8297
Dpok2V8lryDZ/XGGVaq/0Op1Ld7/Bk07UflKhtpwe/bsUfoUcAqcQ32WaMih
3rxrvB7quh2GHOqC1VqascR4DrVpT0MOtXYb2+dQ7d1cJef6UcFgs/ctsN51
yX3Llj3nK68p8q309wX/G3O3xaPafptlbkIb/0tFS7aj7Dlym5Vz+aRgBWrY
9pDkv6vbqLfIoR79TU+/ndOLmojXbqTQrdTPCmdBnycaaifaAtdVdPQ5zxkZ
zuHuSv2c8/cAmMZrTIeHh1OZCp7UtttQlxuzrW2OzLnOXb5HHGcfv0CKiooS
9XQhc1m6dKnk+TRv/iq6cTuFLv2ppzMX9fRr6m+Tg7/qxHcWZ/LXbNPRsg1a
6tZ/u9E+ajc9bPK3CcZc18u5+tX5g95+v7RZ4z63Yt93ofDY5zYbQ0sEJGVY
g92c9nK99sJp9dp9zKvX7hmVTL51k6lZ6nk+a6lWZM55TNfa6PeJq2rQoMGL
9aR4TMlqY/bLLaxGPclty5EjBy1ce8jiv9F/5CxxrENCwiguLk7ptx8AAAAA
AAAAAGzk/v37tHXrVsms06xZs17Lt44ZM4ZmzpxpVmaK/xYyrgAAjpWYmEiH
Dh0Sz2/Nzbryaw4fPiz6AAAAAAAAAAAA13b06FGRt6zg7k3Rjds4ZI6rreff
duo1SrK/oPDasvtr0aGfZH/WZIK79B0j5t9yTmnevHlKnwKyZFQPNaMcavp6
qJPmG3KoQyYbcqhdh79eD5XrNzo6V+fMzVVyrh8U8DN73zxrHJXctzf+l/+V
13xRsp3kaz7/qrHZ28J5Gql+qzVYR91HGuqhDptqqIc6ZaGhHuqitYZ6qBt+
1tH2/Trad0xHm3b8TT816U7FvvzWeKYoWzYKCAigVatWkUajEffppbZj7Nix
Dvus945TO+Q8r9NORXGzNKKecrLKYbuXKfz2229i3K5Y2Yeq1GzocmO2tc2R
Ode0vExwSCgNHjxY6bce7EBOzpXXhpfj559/NtrHL7/88tq/V2v+/7eVl3eQ
yW0o9YO/WOMj/W8rrn/Nv63aDTT8tmrURSW+X/m3lauNua6Uc+Va7rnzfCr5
t1451rk/oPKBq20+nv5Yxfqcq71aocqJosYs14jn3/x8fvJ5yucrn7d8/vJ5
zOczn9d8fvN5ztcSfE3B1xZ8jcHXGnzNcTb12oOvQfhahD83/Pnhz5GzevTo
kRivPbz8ydu/ikteZ9uqDRw9O/U3sHQt108/K2TV35m6YLMYt/0Dgql169ZK
nwIAAAAAAAAAAGCl58+f08GDB2XnnLimK69/xvlW/r9Tp06lRYsWmZWV2rJl
C6lUeHgJAKAUrs3KNVotqe3KNWG5NqzOVgvFAwAAAAAAAACAw61cuVLMv3VU
XTh7zL9t1XmgZH/Va8fI7k9Ohqayd7DF+z9i4mIx/zYoOMRmuZmXsxJpOdSz
/+VQD/2XQ92y5/UcqrF6qC/nUF2tHqqrN1fJub7z/g9m71v5wJWS+5YnX9FX
XvN12QHSmZVS1UQOdewcQw51zvKMc6hcD/XUeUM91NFj50r2u2nTJos/kzdv
3qQDBw6IPCvX3+R1f/l++pMnT175d8uWLZPcju3bt1v7FSEL14Wt0cJ+n/cG
nVQ0eYFG1ELM6vXdrMHrR0dGRooao2XdvOxeH87ZMjOOzLlyfffyFQ311635
PgDnpWTO9WVBQaZzrmXKlDF739asXS+dKSvwBa3fqaPlm7S0cI2WakRJ50QL
FqtGES3NGytKe86U7NdVcq6e1Q+LfLDU33m5cT1erq9rj7G1fHXnzbm+3D6r
lEjfBSVR5VpJFPaTbY8BX6twnWS+duG6yW36G65peO0OvsYZNUNDE+ZpaMYS
LcWv1Ir6y1yHmesxc11mrs/Mv024XjPXbeb6zff+SaEnz1JIpSZKsbDUPP/u
S1uXIrJuM5e8zrZFm5Owmz4p8Lmsz0rtBi2t+ltLNhyl8u6+5O0bQDVq1EAd
dgAAAAAAAAAAF6XVaun3338XeSVzM04TJ04Ubf78+Wa/FhlXAADnkJKSQlev
XqU1a9ZYlHddt24dXb9+XendAAAAAAAAAAAAC0yaNIlCQsNE7rL/iJkuOf+2
SZuekv3VjG4quz+utyrVX7mK3hbv/4zF28XxdvcMolp1Wr6WQ+W515xD5bnY
nEPludnpc6g8h5vncvOcbuRQM1dzlZxrzlz5KDz2+Suv4dxL3Q4qiummopZ9
1dRhsJp6jFJT//FqGj5NQzXqjpPct2++LSNyqH/+nUK376VQ3Jgp0q/55huz
v/s6dOgg2a8jcm3t2pmunZcrVy6xVrEjcNbD1udzbHeVqH/LuXtEDWxn6NCh
FBJiGLt7Dp7sUmO2tc1ROddF645QJc9A8vT2Fzml+/fvK/22gx24Ss41X758
Zq87zPN4pPYtfX6W17aXO+by5iQmEf37yDBe87jN4zevJ8HrSvD6EjsO6MR6
E2HVpevEhkavo5+6G35H1DQzR5vW7J1z9avzh6jLKvU30lr2HP+j7yqOsevv
xnLVXCPn+nL7tEIife2fRG4RSRTcWPnf3lKtalMV1WqtovodVdSkh4pa91NT
pyFq6jVaTQMnaGjkdA2Nn6uhaYu1NG+llpas19LqbVoaEreNKrqHU5kKXtS0
TS+XvM62tvF1b9FiJWR9Xt59732KX7nP6r8ZGFaLKnv6ibH77t27Zn1vAgAA
AAAAAACA8v766y+RT7I017Rnzx6LXrt582ZkXAEAnIxGo6FTp05RQkKCRd/t
O3fupIcPHyq9G1kSP6O5ffv2aw3PbgAAAAAAAABASr9+/SgoKERkZcZMX+GS
828bNOko2V+UGf11HzhBsr9SP7hZvP9cZ6asmzd9+Y0/fVo0QvG522jO1RyV
c41scvi1HCrXQ526SCvqoZb6IVByOzZvO0IPH6eInIucDGPFihUl+4yOjn7l
NVxzWs7c+L///tus777ChQtL9umInOsPP/xgchsqV65s921Iw3l6W5zDnP/g
erpcVxrsY9euXSK/UcHdmyLqxNp1zG7evq9TZWbk5FxHT02w+u8MHjPPUHs9
9TdSp06dlH7LwU5cJefK7ejRo2btm6uPufy7IimZ6NGTFLpzP4X+uplCF6/p
6fQFPR0/raf9x3W086CONu3W0aqthmxhzbpDJP9OafdBFNlKJbKL5oxtIY0e
UL73Sso6Ptzyvvs1eUUcs/vvxpLBrpdzTd+KeSdS2WpJFNBA+d/htv5N/3Gh
UDGWdOo92iWvs61pIyYtoQ8+/ET2Zya2VQ+b/N3Ies1EDV3+nXT27FmzvqsA
AAAAAAAAAEA5T58+FXkkS3JMXPeV679yHVjOz5j7er4/nZycrPQhAAAAI549
e0b79++3aIzg58HHjh3D97wD8bHOmTOn0WdC/L4AAAAAAAAAABjTtm1b8g8I
FvNvud6KK86/rdu4rWR/IdWiZffXc9Akyf6+LVXWqmPg5R9OX5X0o48LhVFo
44eKz8NGc47G9cvcQ6Rzrq27rKDF67S0couWNu4y1EvjvMexU4b8xx9XDfVQ
V6zeadfMDdcilYvzOXLmuI8dO/aV1/GavXJeN3nyZNnbcvz4cVl9Gsu58j10
3h9TTS8j+MtrFWbPnt3kNvTt21f2flnj6fMUqtHCsvp5nBXiumYrNmvp5l1k
Wx0hMTGRatasST5+gVTWzYtmLtnhkPE7K7Xoxm2ofEUvkZNZu3at0m852Ikr
5Vyz6phrjmHDhkn+Hf43LCV1uFKpiR4/TaF7/6TQ9VspdOlPPZ25qKdfftfT
wV919PMhHW3eo6M123QUXKWNrP3gVvjruhT+k2N+3xf2UD6naov2SYVE+sI7
UdR4DY9V/je5LVpJ9wlUoIhhPal+I2Y4ZOxylpxrq84D6Y3/5Zb9mfn0s8Ki
jrot/nbjFl2pfCXD+H3gwAGrv1cAAAAAAAAAAOwlJSWF2rdv/0rbsWOH0pvl
cFyr7+TJk7Rs2TKL8ksHDx6k58+fv+iPs65879/Dw4MKFCgg2fg+ObJPAACu
gdcy4PrblowXvN7vhQsXZM3lseX2ZrQtPP+Ax7/MijPJcp7XAgAAAAAAAABk
pHHjxuTrHyTm3y5YfdAl5982at5Fsr/a9VvI7q9b//GS/ZUuW8mqYxBcNYpK
lPIVOdfAejcUn4eNJq9xDrVeBxX91F1FrfqqqeMQQz3UARM0oh7quLmGeqhz
V2hFDpXrixnLoXJdMq5PxnXKuF5Z2q1UV8rcvPHGG3Tt2jVZ21K7dm1Z89z3
7dv32msLFiwo+bqPP/5YrPMrhZ8Ze3l5WZW5adGiheRr+ZmqlI4dpWtRc91O
R9iyR2fWZ6FaMxX1Gq2mDT/r6MFDZFuVMHr0aAoNC6cyFTypXfdhDhm/s0qb
k7CbylX0Ji+fAKpevTo9fPhQ6bcb7ARjrvOPueYwJ+dqjnPnzplcc/jlNmbM
mBevU2sM60jc/zeF/r6TQpf/0tPZS3o6cUZPh07oafdhnRh/127XUcJGLc1f
paWZS7U0MV5Do2dqaMhkDfUZo6auw9XUdoCamvVSU6MuKopqq6LqzVWi/qnS
+VRL22cVE+lr/yQqWzWJvKOTKOwn5X/n27p9U34YFfzCsJ7UsAkLHTJ+KZ1z
nb/6APmFRMj6rKS1d997n8bPWmOzbWjRsT+VdfMUOdetW7da/b0CAAAAAAAA
AGAvnLNJf69k+PDhNv0bzpyv4fvHV65cEffgLckr8b2f+/fvZ9g3ryMs9/7U
li1bHLznAABgDR4/Ll26RKtWrbJo/Ni4cSPdvHnTIdtqzfNjVyb17Bs5VwAA
AAAAAAAwJSoqinx8DfXgHJUfsfX822bt+kj2F1EnVnZ/nfvESfZXwd3PqmNQ
tVYj+ra0j8i5+te5qPg87MzQuKZkZKvXc6g9/8uhjphuyKFOW/x6DnXnQUMO
9fhpQw714jXjOVR7k5O5iY+Pl9WXvTM33L777jt68OCB0X74HnPXrl1l9ZUv
Xz5RpzK9+vXry3p9ZGQkqdVqk/vVq1cv2c81jWVuZsyYIfnamJgYk9tx9uxZ
evPNN032kTdvXoetH9xthFryMxbRUkWDJmpEbvvJM2Rblfbbb7+JDIe7py95
B1SlJRuOOmwcz+ytY6+RVKaCB4WGhtHgwYOVfqvBjjDmOv+Yaw575VwbNGgg
ax+6detm9T6YY9kGLYXEJFNQo2SRefWrl0w+0cnkGZVMlWsnU6XIZHKLSKby
1ZOpTNUk+iE8ib4PTaKSwUn0TWCSyJkW90uiYt5JVNQriQp5JFFB90QqUNFQ
X9WWuVauO/td6t/leq28rUpfNziifVWmL31ezLCe1JjpKxwyfimZcx09NYE+
L1xM9mde/NbN9zaNmrLMptvRvsdwsQYI/0Zas2aNQz+TAAAAAAAAAADmcETO
1VnzNZxP5ZyqJfkkzsVyPpbvh2eE73vzWo1y71E5as1hAACwLX5O+euvv1pc
D3z37t30+PFju26js47D9mRqn615XgsAAAAAAAAAWUdERAR5+wZYndtUcv5t
265DJPurEtFAdn/tug2V7M/TN8yqY8C527Scq2/ts4rPw3ZU43qodf/LobY0
UQ91znJDDnXlFtP1UO8+MORQk1Wc7VD602QbcjI3PXr0kNWXIzI33L744gtx
H1ifLgx8+/Zt2dkQbi1btsxwW/bv3y+7Dx8fHzpy5MhrfZw5c4Zq1qxp1tx7
Y5mb69evy3q9sWwUP3uVUy+vX79+Jt8jW7l9L0XkxDP6zNZuo6JRMzTi85fk
mMgtyMTP75s1a0aBQSEiQzNg1CyHjeOZuS1ef1Tkht09fEVG5vjx40q/1WBH
GHNf52xjrjnskXN9/vw5vfXWW7L2oXz58uTm5mZVmzhxouxt4zVd7Pm7PTw2
mUJjkim4UTIFNkwmv/rJ5FM3mbzqJJNH7WRyfylHy3VZfwxPotJhhjwtZ24j
W6uoSU+V+L3fYbBa/PaP6Wa4FuBrAqWvS+zdiv/Qkwp9aci52rJeqammVM6V
1516443/mfWZ/+DDT2jExMU235ZOvUeLY85j+IoVK8z9GgEAAAAAAAAAcJis
mHPlDOqhQ4fEvXlz80icYzp58qRkHVpz1l/khpwrAIBre/LkCe3Zs8eirCuP
LZyVlVrb11LONg7b28OHD6l06dI2f14LAAAAAAAAAFlL9erVycsngNw8/B2W
IbH1/NsufaXrr/oEVpPdX2yrHpL9BYTWtOoY1IxuSt+l5Vxr/a74POyXc6jG
6qG+nEM1Vg81fQ5ViXqork5O5obzFq1bt6ZJkyaJLOXs2bPpwoULr/XlqMxN
WuPsZkhICNWoUYMKFy5s9uv52aQxZcuWNauvr776SmxLeHi4qH9n7rZwM5W5
kdsnryWwfv16sW/bt2+njh070v/+J50DeP/998X9eEdYsl77yvcAfwdMmKcR
n2eN1iGbABbic4tzHG7u3hRSLZqWbDjmsLE8s7beQ6aIfExQUAg1b978tSwh
ZC4YczPmbGOuXPbIufIzbkv2x9LWpUsXWdt18Zpe8euGtNaws4qGTdXQ2u06
cQ2g1ck7tvz1ytcIDx8brhn42oFfz9cS/BuEry34GoOvNfiag689+Bpk2mKt
uCYZMV0jrlH4WqVT6jULX7vEdjdcy0S2Uhldw8NR7cvS3V/kXCfMXuuQMczR
Odf5qw+Ql38Vs8/zkqXL08wlO+xyDDr3iRPHPDz191FCQoJZn3cAAAAAAAAA
AEfKSjlXnU4n1kdcvny5RTmkvXv3ynpuyvfu33jjDbPuVSHnCgCQOdy8eZM2
btxo0TizatUqunTpktFa4ZZylnHYEY4dO0ZFihSRNfYi5woAAAAAAAAApoh6
rpxzrey6Ode+w6ZL9lfWzVt2f1Eytq9qZCOrjkFEdJP/z7nWPiNrrjTP1eY5
28ZyqDzXm+d889xvYznU46cNc8d5bvzL9VCRQ3UenPOwJBcxZ86c1/pydObG
mla1alW7HBdrmqnMTdeuXe36t+Pi4uSdMFbizz1nQri+2owlWvH9oJOZTwHl
JScnU7169cg/MFhkOgaOnuOwsTwztkVrD5NvUHWqWNlH5Ie3bdum9FsMdoYx
17bHxV5jrlz2yLmGhYU59DjIzblOXqBRJLvJ1yNt+qtpykIN7TqsEzXhnRVP
RUhWET1+arjmuX4rhS79qaff/9DTL7/r6cAvOvr5kI4279HR6m1aWrpBS/NW
aml66rUUr/cxMvXaatBEDfUarabOQ9Viv5v0UFGDTiqq1Vo6R5vZ67lOnLue
Cn/xlfnfP7Uaidrp9joGnXqNQj1XAAAAAAAAAHAJWSXnev36dVq3bp1FuSPO
K926dUv23/L39zf7fhVyrgAAmQePrbzmwcqVKy0adzZv3kx379612fY4wzhs
L0+fPhXrKk+bNo3c3d3NGnuRcwUAAAAAAAAAU2rXrk3evgFm5UCdbf4tz7GV
6u/Lr0vK7i+kah3J/mJb97TqGFSr1ZjKlPdJPe7hNHfpFZFD5bnWxnKoPEfb
xsvGgZM6f/68RbkIV87c5M+fn+7cuSN5bFq0aOGwbeJmKnPDz1S5lp49/u7n
n38u8ouO8CwxRXzf4PvFdfHaooaarj7kFxJBi9Ydcdh4ntlap96jDbVcg0Oo
SZMmpNWioHFmhzHXOGcac+Wydc6V12yWU4Pdlk1OzvV5IomcpSNyrfx3esep
adFaLf16Ri/+Nvw/tYboybMUuv9vCt24nUKX/9LT2Ut6cayathyYOjaHiHEl
btoKh4xjjsq5xk1bTu/l/9Csc/vtd96jrv3H2f0YtOs+jMpU8BS/jdauXav0
KQIAAAAAAAAAYFRmz7k+fPiQdu7caVHOiPNJnFPSm7FQd0JCgkX3ZJFzBQDI
fHi+DdcXXbp0qUXj0P79++nZs2dWb0dmyrmeOnWKSpUqJeYz5c2b16rnoci5
AgAAAAAAAIAxd+6nkH9QAyr5Y4CYf7tw7SGXnH/L9WBy5swlOa9Wbn8/lq8s
uX29h0yx6hiEVIsmd08/Mf9WTtYAsg6+35o7d26z7wMqkbnJli2b1XmO7Nmz
i5yeHImJieK+qbV/U26Tytzwfdx8+fLZ9G9+9NFHdO7cOVnHA4CpVCqKiYkR
2Uweyzv0GOGQsTyztVlLf6aKHgEvxua9e/cq/daCA2DMNc7Zxlw5bJ1z5TUt
HLX/aU1OznX9Tp3dcq1c333UDA1t+FknMpuo8W650aNHU3BIqBibh41f6JCx
zBE5V96XvPneMeu8Ll3WnaYv2uaQY9CiQz8q6+aJuuwAAAAAAAAA4PQya87V
mmwRv4Zfa+56wFxTrkCBAhbdk0XOFQAg87JmzQVeP+G3334jjUZj8d/PTDnX
AwcO2Ox5KHKuAAAAAAAAAJCG6+8cPqGnqYu01KyXWsxlLvJNCyryVaCYfztr
6U6XnX/76WeFJfuck7DLZn1xDVlrjoFPYDXy8PYX829tsQYcZC79+vUz+z6g
ozM3nO/s3r27Vfcuc+bMScuWLTPr2Dx48IDKli1r1d/lrFB0dLTkv5OTudmy
ZQvlyJHDJvdykXEFS3Emk8eTyl5+VMHdj6Yt2OKQ8TwztTqNWotcTGhoGHXr
1k3UcYSsAWOucc425kqxdc710KFDNhnfzWlSOVfOnTbpYZtartWaqaj9IDXN
WKKlfcd0oiYp2M706dMpNCxMXGf3HTbdMWOZnXOufA3M60fJPZ9z5XqDGjXv
4tDxvFGzzlS+krf4XcSfYQAAAAAAAAAAZ5XZcq68P1yDlWuxWpIn4meunEey
ROfOnS2+J4ucKwCAc/r777/Fs82xY8dSjx49qEmTJtSyZUsaNGgQzZ49mzZv
3izWOTDm+vXrdPr0adF4XcyJEyfSiBEjzG7jx48Xf4vXwU/r7969e7L2wZ7j
8JUrV2jRokViG/v06UO9evUS+8jPXC9evGhV3xlBzhUAAAAAAAAAbIHnQZ+7
pKfF67TUdbhazGVOP7/5y9LdqdCXQWL+7biZq112/u2Pqdsv1aecGqzzVuwV
ta6k5utyDVlL93/JhmNUvpIPefsGUEREBLI08Bquoebj42PWfUAlMjd87rZv
396i+5a8pi4/r7TEkydPxNx1S/5unjx5xPPV+fPnS/5buZkbXsfxk08+seo+
7meffUZnz5616HgAMH52ERYWTuXcvKhqZKPUscbycSqrtf4jZorfQb7+QVS9
enW6du2a0m8nOBDGXNOcbcw1xdY5V55bZc3YbkmTyrnuPWp5LdeotirqN05N
Szdo6bdzekoyryQCmIl/H4anfnbKVPCgjr1GOmQ8s2fOdd7KffR5kS/lf+8U
LEIjJi1x+JheM7opVazsI763zp8/r/RpAAAAAAAAAAAuypbZGmONa8Slv6fS
rl07ydddvnxZ9n7YK1+TPlvD2928eXPq2rUrjRkzxqx86+rVq8U+WTpn4vff
fxfrPFp6T3b37t0WHwcAALAtHj/5Wdk333wj6zs8d+7cVLt2bVq3bt1r40hU
VJTdnudVrFhR1v7YehzmNSX4d4ibm5vkNvLz74MHD7547Z9//kl+fn4m25Ej
R4z+beRcAQAAAAAAAMBSf99JoY27dDR4koZqt5Gu9fOt22j6rGiIyHcMHD3H
Zeff1m3cVrLPiDqxkv30HDxZsp9vS5W1av9nL9sljreffxA1a9ZM6VMGnBTf
g506dSqVL19e1EKTOi+VyNyk4exMhQoVZN2vfOutt8R9aVPPfuXi556FChWS
fa+U7+OeOHFCvNbWmRvOSY0cOZLy589v1v1b3v4pU6ZQcjLCJmCdO3fuUK1a
tSggMFiMMe17DHd4tsQV24zF26mSVxBV+i8Ts3DhQqXfSlAAxlxpzjTmGsPv
i9TfMee5Ke+zOWO6Ldro0aNNbhPXX5Wba+W6r2Nma2jzHh1du5FCer21RxjM
wd8JPK6Uq+hFsa16OGRMs2fONbiK/PkgHr6hFL9qvyLjekBoTVHfno8916QG
AAAAAAAAAJDLVbI13O7fvy9rn2yZrzEnW8PHcMCAAS+yrBMmTKDvvvvutcb3
5PleslS2xhg+7p6enka3IyYmRnJbkXMFAFDe1atXKTY2lnLlymXx2BgeHv5K
XXB7jsU8fslhy3GYa6a7u7ubva38W0WlUtGZM2ck/62p57XIuQIAAAAAAACA
XE+epdD+4zqaGK+hn7pL51rTtzK+C+njQqH0Y3lP6tBzhMvOvx0+cZFkn59+
VkjUUjXVj09gNelta9Taqv0fPTVBZJCCgkOoX79+Sp9C4AI4v7Znzx5RE236
9Ok0btw4mjRpkniWuHjxYlqzZg3duHHjtdc5KnOTZuvWrdSrVy+qU6cOlStX
TuRhSpcuTcHBwWINX37Om5SUZLPjwviZKh+bVq1aiXu6hQsXpjfffJPef/99
8bfDwsKoU6dO4p7ty+yVuXn8+LHIu/K94lKlSoln3C/3+c4779CPP/5IkZGR
NG/ePNJoNLY6FAAi/8a5Dg8vfyrr5k2jpixTJGPiKm3RuiNUJaIBlXPzpNDU
7wqulanVapV+G0FhGHONc7YxN6s5eVZv9JquRgsVdR6qptkJWjr4q47+fWRZ
7QOwnXPnzokxmWuLyllvyRbNXjnXuGnLKUeOHLLmJtSP7aDYuL54/VEqV9Gb
vH0DqGbNmuI7CwAAAAAAAABAiqtla7jdu3dP1r7ZKl9jabaGM7F8f3jUqFF2
uUe8YMECo/1Vr16dVq1aJfl3kXMFAFBWfHy8WLvXFuNjkSJFRJ1vZs+x+Msv
vxTPQ3U6ncl9s9U4zM9n8+TJY/H28vOqjOrImzMWHz582GbHDzlXAAAAAAAA
gMxFoyU6fUFP81dpqeMQNVVtan629eXmXmUXfVwojL4v40UNmnR02fm3nF99
+533JPs1leWdMn8z5XrjDen7LeMXWrX/3QdOEDnXsLBwmjlzptKnFGRijs7c
uBJHZW54fj0/Hz916hT9+++/NthyANP4mQDPp3Bz9yZP3zCatXSnYnkTZ29c
X69MBQ8KDAoRtXD//vtvpd8+cGEYc41DztU2eo3+/1qu0e1VNGiihlZs1tKZ
i3pSqZXeOkiP6yjzvAFPb38xHrvqdTY3rs8qa55EzYaKjuuT4zeK62z/wGBq
166d0qcAAAAAAAAAALgAV8zWcHNkztXabA2v/zt8+HCb3yN+9OgRffTRRxn2
9b///Y+uXLmCnCsAgBNLTEyk6Ohom4+RXC+c15u3d86V65XzusNcD94YW4zD
+/bts8lvFTnH2tRYzOuF8+8mXs/fVPPy8pL8O8i5AgAAAAAAgCNhfq19/HUz
hdZu19GACRqKbGVdrjV9C4i+InKu35TypcCwWi49/1ZOLdY8efLSiImLX3vt
nITdVLRYCcnX5//gI1qy4ahV+x/TshuVq+gl5j3v2LFD6dMLMjFkboxD5gYy
q2fPnlHTpk0pJDTMUKe0el1asOagorkTZ2xpa05wzTcej3meBoA1MOYahzHX
erfuptD4uRratk9H12+lUArKtbqEmJgY8vMPEuPNrKU/u+R1dvzKffS/3G/K
miNRrPi39OXXJa1qjZp3sXj/+w6fLo514eIhVL1OHO0+rKOHj/FhAQAAAAAA
AIDXuXK2hpujcq62ytZUrlzZ5veI27RpY7SvHj16iH+DnCsAgHNSqVSSz0et
aZyj/PXXX2nDhg2y2tq1a2nixInUrVs36tKli2Tr37+/yLmmtZ07d2a47r21
4/DNmzfpnXfesetvCmvG4ozwsZfz/gAAAAAAAAA4ypptOmrRR01jZmto3Q4d
nb2kp6RkpbfK9fBcTJ6TOW6uhhp1sW2uNX0Lj02kAkUjqVgJfyrr5kXxq/a7
5PxbbqMmL5V1XyZHjpzkF1yD2nUbSp16j6Za9ZtTvrfflfXaej+1s3r/g6tG
kbunr8jVXLt2TenTDTIxZG6MQ+YGMrM///xT1CflOqVlKnhSVOqYau0aDZmp
DR23IPU3j3fqWOwnxuJZs2Yp/ZZBJoAx1ziMuZBVDR06lIJDQkX2clDcXJe8
zm7TdYjD5k9wC4+ob/H+N2nTk0qX8xTreJUPWi3ud1RtqqK2A9Q0d4WWTpxB
7WMAAAAAAAAAcJ5sDdeAS//ahg0bysrjqNXybnJYc9/ambM1fHyzZ8+eYT+f
fvqpWBOWIecKAOB8eD2IqlWr2nVMyZ07t+w1IV7G48f+/ftfybDKbUuXLqWj
R49ScvL/T5S1NucaFhbm0Gc0yLkCAAAAAABAZsR1ZQZP0rySo6zWTEWt+qpp
7BwNrd+po3OX9JSsUnpLnQvPteQ5lzz3kudg8lxMe2Zb07fiP/Skz4sFi/m3
w8YvdMn5t2nt+zIV7Xcf7M08ou6rNfvO9XA4T+zjF0i1a9cmvV6v9OkHmRgy
N8YhcwOZ3ZEjR8TzIb8AQx05riXuyCyps7axM1aSW2V/qljZh8LDw8Vaqzqd
Tum3CzIBjLnGYcyFrGr16tViPYWybp7UrF0fl7zO/qGcdK0NWzZrcq5BVaLo
m+99RM7Vt/bZDO991Gypor5j1bRqq5auXkdtZAAAAAAAAICsxpmyNTxPIP1r
hw8fbtP9tea+dWhoqEPvC8m9R8zHzc3NzWg/fD86DXKuAADOp3PnzmaNDx9+
+CGVLl3a7LUX5s2bZ/E23r17l7Zs2WJR3nXFihV0/vx5MV5ZMw5zbtaR47A5
Y7EpyLkCAAAAAACAM3r6PIViu5vOaXL2tXU/tahXunGXji5cyVp1NXgu5ZXr
KWJuZZ8xaopo6dhca/pWxncRfVwolH4o50nN2/d1yfm3aW3AqFmULVvGa3da
22pGN7V63wePmSfyRlzXZ8CAAUqfipDJIXNjHDI3kBXwWuCcr/HxDRRjT6tO
Ax2WJ3XGNmneBnL3CqYKlbwpLDyc2rVrR4mJiUq/TZBJYMw1DmMuZFUXL14U
47C7h6/IYLradfaSDccoV643HDqHwtKc65yEXaKG/RclAqjAF7UoPDZR1r2Q
+h1VFDdLQzsP6uifhwi9AgAAAAAAAGR2zpStceac66RJkxx6T8ice8SzZs0y
2keFChUo5aWFzZBzBQBwLocPHzZaj/vlljNnTurSpYvIm76M63l/++23ssaV
yMhIq7aVx5PLly+LNU0tybty/fWEhASLxmFWpkwZ2WPol19+Sa1btxbPZHk8
nTZtGnl4eNhtLDYFOVcAAAAAAABwVn9c1VONFuZlN6s3V4laphPmaWjTbp3o
Q61Rek9s58HDFDF3cvRMjZhLqWSuNX3zqXVa1Dzh2ieBYbVcbv5t+hYlo39z
27elytLi9Uet3neup1fOzVPMd16zZo3SpyVkcsjcGIfMDWQV8fHxYszx8vEX
Wdf2PYY7NFvqLG3K/M3k6RdG5St6UWhYODVt2pT+/fdfpd8eyEQw5hqHMRey
Kp6rWLduXfL1N9RWn7lkh0tdZ09dsNnm19VSzdKca++hU8Ux/qxoCJUoN9ji
eyOt+qpp1jIt/fK7npJVSp9BAAAAAAAAAGBLzpatccac68OHD2nnzp1UpEgR
2fdzPv74YwoMDBT5milTpohmr2zNgwcP6P3338/w9dmyZaOjR4++8u+RcwUA
cB4qlYpKlCgh+b1csGBBOn36tNF+eB1rU3W901r+/Pltst1qtZpOnDhBy5Yt
Mzvr2rt3b7PG4TTHjh2TPX5GR0dTUlJShv1s27ZNPGe25VgsBTlXAAAAAAAA
cGbrduiszl9y9rXdQDVNjNfQ5j06uvSnnjRapfdMnqRkouOn9TRzqVbMlVQ6
y2qqca2Tz4pFU9GvA8Tc0GkLtrjU/Nv0jevOlHXzMvvZidF7X+9/SNMXbbN6
v3m7OGNT2ctPZI5u3Lih9GkKmRwyN8YhcwNZBa8zOnHiRDHueHgbsq4tOvQT
Y5ISeVMl2riZq8nDN1RkXENCw6hhw4Z0584dpd8ayGQw5hqHMReysri4OApN
HXt4/O3Wf5xLXWcPHD3n/9i7D+goqr4N4AdEmmBBUREUKSKCSie99wQIvTcj
HREQROkgTaT3EjqR3pH+0jsfRToqCgJSpCPZZEvyfNyLQRJ2M7Obzc5ueH7n
3PO+6s7dmdmFmbn7f+612zO12mZrzlXMdfVpRV85f5db+E92GScRc7f1/EGP
xT8Z5VhUUpLW3yYiIiIiIiIispUzZmucKeeakJAgMzULFizAd999p3osx8PD
Q863umfPHjx8+DDVe2dGtkbMYWpp++bNmz/zeuZciYicx6RJkxT/Ts6TJ4/M
lCoRa6Uq9fXCCy/Ydf/v37+P7du3OyTn2qZNG1XXzh49eijut5gD4sUXX7Tb
tVgJc65ERERERETkzJKTgcETDXbPZIpaw87f6TFhrgEbdpjw28UkGE1aHy1k
zeMvfyRh0Vojvh2ut3o9W61bWfeRKPR+OCpU8UHnb4e5VP2tuTZ/5T5E12uJ
bNmU52RNr31a0d1uud8fJi2S9c3BIWFo27at1l9Zeg4wc2MZMzf0PBG1EsOH
D/93XdfHc1rUa9oOs5ftcmjeVIvWZ+gUVPUMRFUPP5kzaty4MS5cuKD1R0JZ
EK+5lvGaS8+z3bt3y+uvm6c/qtdt7lLP2R27D8rQs7QtzZacq7ifqeIZgA/K
BOGt96ohvNn1TBkzadQ5Ed9PMWDjThNu3ErW+qtFRERERERERFZwxmyNM+Rc
xT6cPXsWS5cufZLJCQwMVDWOI8a8NmzYgBs3blh8f3tma/bv3y/XbDW3bb58
+XD16tVntmHOlYjIOYi5uUuVKqX4d7KYO0Ftf2+++aZifwaDwe7H8tdff2Ht
2rWZmnNVMzdHwYIFLa7jmlbXrl3tci1WgzlXIiIiIiIicnb/xCfj828yP+9Z
q10iugzSY+K8xzWH5/9Mdkj29frNZJm1HTbFgIZfulauNW3zid4n1z4pU84f
oVH1MrX+ts2XfRTHNDKac01p/YdPxwelP7H4m4fF8aA3C+Gz9j3setwt232N
Sm4+iIqqhvnz52f+F5See3/88Qf69+//TBN5twcPHqS7LTM3zNxQ1mIymTB+
/HhZdxAYFIqKVX0QGFYTo6Yuy/SsqRZt7vI9aNm2u8z0engHIDIqCi1btsSf
f/6p9UdBWRSvuZbxmkvPM7FWSN26deEfGCKvvVPjNrnMc3bXnsOteoa2R2v8
WSerj7vnoAnyev9pxXBU8u7psDGUtr31mBJnxIFjSYhXV0pCRERERERERBpw
1myN1jnX9evXm83pvPPOO4rH9vLLL+PUqVPyXCixR7ZG/MZVoUIFi9sOGzbM
7HbMuRIROQdxvVH6+1hcq8W1Ua2iRYsq9nnv3r1MOR5z80RYm3MV656bc/fu
XVU1joMHD1a9v7dv30aOHDkydC1WizlXIiIiIiIicgW/XkiSOVRH5zbFe341
WI/JcUZs3m3CH5eSYcpg9vVhPLDvSJLss3VPvebZVHu2qJiHKFyyEYqVCpE1
oqOnLdc8o2LPNn7majSO+RLlK3uhaPFSePW115E9++O1Xl/K9zIKv1sMZT+t
LNePGTRqtv3zNiv2wMMnBN5+QTJjdOnSJfv8ASPKJMzcMHNDWZP4Tb9GjRoI
C49AFQ8/VHLzQ/uvBsh10LW+VturDZ+4UGZ4RZ7ILyBYXne7desmf78hcka8
5vKaS1nbqFGjEBkZJa9LX3w9WPPrZFZr1es0h5unn7zeb926FTfvJMsxoB+m
GdC4s2PGoqLbJKLH93osWGPE2fNJGR57IiIiIiIiIiL7cdZsjdY510GDBj2T
x4mNjVWVrRk4cKDqfbBHtmbChAkWtytevLica84c5lyJiJxDVFSU4t/H4eHh
WLFiheqm1J9o9+/fz9TjSkhIwKFDh7BgwQKrc67iOrxz585n5kvevHmz4nGJ
66rIw1pDzXrtzLkSERERERHR82TN/0ya5zhFq90uEd2GPF5zY8seEy5cTj/7
Kv7b6V+T8ONqI7oP1cvaRa2PITNbOZ+pePu9CJSv7CPXQNO6XjWz249rDmD+
qv0Oea/eQybL/HBYWITM2hA5O7HuFDM3zNxQ1vTzzz+jWbNm8vckH78gVKzq
jaDw2hg2Lk7za3NG2szF29G8TTeZI6rq4SevuSLzMm3aNMV504m0xGsur7mU
tR0/flxejzx9AuAXXF0+h2p9zcwqbfysNfI5OyAoFPXr15c1JU8TS4qc/zMZ
S9cb0WuE3mFzsDXolIghkwxYv92EqzeU1zUhIiIiIiIioszjrNkaZ8y5fvvt
t06Xrbl+/TpeeeUVi9utXLnS4vsy50pEpD0xF0HevHlVXTvt2fLly+ewY7xz
54685lqbcxWvWbRoEY4dO/aknmHGjBmKx/bee+9ZvY8jR450yO+1zLkSERER
ERGRKxk2xaB5jtNcq9M+UWZYpy0wYus+Ew4eT5K53EETDKj/RdbOtaZtwQ3P
4633IlGqbCDcvIIwa+lOzetWs0qLrNn4yRozYu41Imcn5tbduHGjxSbGaF3Z
77//jnnz5qXbrly5ovVuEmUaMY/4sGHD5HUpNCwcVR9do0ROpH6z9pg0d53m
101rmpiz4qveI+DhG/pkDdeoqGpo0aIFDh8+rPWpJlLEay6vuZS1JScno02b
NggJDZfX2gE/zND82plV2mfte6CSm4+sV500aZLiZ5GoBw6fTMKMxUZ07Kd3
2FhLq2/1mDjPgL1HkvBPPHOvRERERERERI7izNkakXMtU6ZMqibGg+3J2pxr
69atnS5bI+ZttbRNcHBwuu/LnCsRkfbUrE+aGa1s2bIOP9ZLly5h9erVVuVc
U5qYR0P8pjpixAjFY/P09LR638S8EMy5EhEREREREaX2MB5o3dNxdYRqW3jL
BHjWScDHYTq86xmPt6rEo5BbPEr4x+PTCB08ausQ1CQBUTHa76sjWslyPVC4
WDgqVPHGl98M1bxuNSu04RMXynrmwOBQNGzYUP6eRkRE5Az27t0r86Ai7yrW
Qqvs5oPK7n4yNzJ9wRbNr6HpNbEenlgvPSA0Wl5nxTp54RGRqF69usy6PHz4
UOvTS0REJK1atUpea8V641G1mmh+Dc0KbcairajiGSDXphfn9uLFi1Z/Lrfv
Jsv5zkbNMKDZV46Z56xG60R0G6LH/JVGnPo1CUaT/b9vRERERERERPTY85St
MSe9nKe5nGuTJk2cKluzY8cOi68X68qeOnXK5uNnzpWIyDG6deumybW4du3a
mhyvyWSS16fFixdblXNNaaKuUOnYGjRoYPV+iboQ5lyJiIiIiIiInnX+z2TU
aqftGqkir+rbIAHlo3Qo5quTuVY1LVX2tY4OwU21z6RmRvOusUeu6frRpwHw
8gvDnOW7Na9fdfUWXf8zVHH3RVS1apg7d67WfwyJiIhS0el0mD17NmrVqoXI
qCj4+gejUlUfmR35vOO3mPbjZs2vpU+3uNWP863BEbVlvtXdy1+uSSsyLuJ3
sl9++UXrU0pERJRKfHy8rE0ICg6V164hY+Zpfj119da6U2+5jntERCT69euX
4c8oORn441IyVmw0oe9oPWo7aOyqXsdEfDfegLVbTbh8jWu9EhEREREREdnT
85atSSHmAd2zZ4/V+ZqaNWs6VbYmPDzc4us7deqk+L7MuRIRaS80NFSTa/HQ
oUM1PW5RgzF+/Hirc65qztcXX3xh9f4cOHCAOVciIiIiIiIiC9ZtNzk8uynW
Y60SnYBSgTqZV1WbbVVq7zzqq6R/PMpF6uDp4tnX6q0S0bGfHrGLDGjU9EuE
hkXImtGO3b7TvH7VlduQsfMer+UaFIq6devi3r17Wv8RJCIiMuvatWv44Ycf
5HqoEZFRcn00cS9QxcMfTVt1xcgpSzS9ps5cvB1dew5/sn6rm6c/QkIf51tb
tWqFnTt3IjmZ+RAiInJOCxYseLKma1j1+nJdcq2fV121TZm/Ud6fpKzleubM
Gbt/XnoDcOx0EmYvNeLLgXo5ZuKIsZnPeiRi3GwDdh0y4f4/vK8hIiIiIiIi
yojnLVtjNBpx4sQJuYacyMpYm3ONjo52qmyNr6+vxdeL9VzffPPNdJuaz+rV
V19NtY2Hh4c9PgoiIvqXWONci2vxpk2btD50/O9//7M65xoREaF4bDExMVbv
i7jOMudKRERERERE1jhxLknmP3+9kASDUeu9yXzDpxoytS4wrEUCPOokoEyo
DkU87JdrVZV9dY9HyYD/sq8hzbTPsFpqzb5KxKgZBmzdZ8Ltu//VTx4+fFjW
inr7BqGqZyCmxm3SvI7VFZtYby4ksq6sYxbnc968edr9oSMiIlLp999/x3ff
fSevXZGR/67v6ubzeN6GsJpo82UfDJ+40CH5HHEP8nW/0ajVIAaV3f3kPnh4
BzzJt7Zs2RLr16+XtRtERETOTKzp2qRJEwSHhsnr2TcDxmn+zOqqrUHzDvLe
RNynDBw40CGf370HydhxwIQxMw1o0d0xmVeRre0ySI+5y404fvb5GC8kIiIi
IiIisqfnKVtz8eJFrFq1KlVWRm3OVWwntu/atatTZWvSy7lmVsuXL589Pg4i
InpEzFGdO3fudP/e/eCDD1C/fn27t9u3b2t9+DblXOvVq6d4rRLrr1tr1qxZ
zLkSERERERGRVUStWufv9LKOrWbbRPn/J8w1YMMOE367mASjSes9tK94HdCm
l95utX+RMQnwqZ8gs6XFfHQOzbVaaoWqxsv1YyvXcJ6sa532ieg3Ro8VG024
cDkZ6S151qdPH1kzKmpH6zVtp3kdqyu2Lj2/l/XLIovTrFkzWddMRETkKn77
7Tc557hY3zUqKgpBIWHw9AmQa7zKvKlPCOo2aSPXWB0zfYVdrp0zFm1Dn6FT
0LJtdwSF15bv83jtVj/4B4QgPCLyyfqtGzZsgMFg0Po0ERERqbZu3Tp5HRNz
Nnj6hj267m3V/LnV1dqg0XPkvUFAYIis5bh8+bImn+WffyVj9RYTBow1oG4H
x+RexZhO/0fvt2qzCRevcK1XIiIiIiIiovQ8L9ka8V5btmwxm5VRyrmKdV/F
+q8pc4mKf+dM2RrmXImIXNulS5cU/97t1q2b1ruZaWzJuYp5vpXO2UcffWT1
vnTu3Jk5VyIiIiIiIrLa1RvJqP+F+dq4Wu0er+EwcZ4BG3eacP7PZJfPvv5x
KRm129leCxjYOAGVaujwQYAOb1fVPtcqWjHfeJSP1MG3gQ5RMdrnWsXaHyIz
PWeZET+fsW7tDzHWJH6jCAgKlTWk/YZN07ye1ZXaxDnr5Fq4Xj6Bso5569at
mfeHiYiIKBNdu3YN8+fPl7+piGuayLyKORx8/YNk/rRi1cdZVHHdCwiNRmTN
xjL/2rz1V2jbpR+69voBvYdMxuDRc9F/+HR83W8MOnYfhJj236Bhi46oUbcF
giPrwMsv7EmGtrKbr7yGBj66D4n4N9sq7ktE7vb//u//kJSUpPVpISIispq4
folaAnFtq/TomifWJdX62dWV2uylO+EXVO3R/Ye/vDcQNZLOQIzPnTiXhHkr
jOg6SI8arR2Te23eLRGjZxqwfb8Jd+8z90pERERERET0tKyerUlISMCBAwew
YMECszkZpZzrjBkznpmne9KkSU6VrWHOlYjIte3YsUPx792+fftqvZuZJr2c
a2xsrNlrt5prpmjnz5+3al+KFi3KnCsRERERERHZZPf/mVTXs4ns61eD9Zgc
Z8Tm3SaZGzW5WPZVZHbVHm9o8wS4107ARyE6FPbQPtMq2rue8SgbpoNnHR3C
W2ifaxWt5deJGDfbgJ0HTbj3IGN1jnFxcbJ21N3LX641M33BFs3rWl2hxa0+
gKhaTWRGR6yJ27t3bzlfLBERkSsT2Zxz587J+4MuXbrIdV7FfYK41gV8WAq+
H5WF98fl4FGuIqpWqIpKlT2frMdqvnmhSkV3uJevDM9PysOn7MfwL10aYT4+
sl/RmjRpgtGjR2PXrl34559/tD4FREREGSZqD6Kjo5/MKSXmgtD6GdZVWpOY
znJOjPDwCLm2e2JiotYfp1kPHibL8b3xcwyI6eGYzKuY56zTAD1mLTXi6Kkk
6LnkPRERERERET3nsmq2RvxWc/bsWSxdutRivlVNzlXMKZqW6FNNtuby5ctW
7bOt2RrmXImIXJtYE0Lp710x1p9VpZdzFdfhGzduYP369amu3ePGjVN1vYqJ
icGZM2dgUlEsfOjQIVV9MudKRERERERElkyJM9pc1ybWR+02RC/72LLHhAuX
nT/7OjLWYPZYIj9LgHf9BHwaoUNRb53mmVbRCrnF48MgHapE6xDcVPtMq2j1
Oibiu/EGrPmfCZev2TdLaTQa0alTp8drzbj5ILpeS/y45oDmta3O3tp16S/r
lYNDw1G/fn05LkVERJTV3L9/H/v27UPs9Olo9WkZhBd775kWVqwoQksUQ0jJ
4gj+oCSCS5aQ/xxWvKjZ19f6oDiGdvlS/oZy4cIFzhNBRERZUsqcUh7eAXDz
DsLEOes0f4519tZr0ET5nO0fGIIaNWrg1KlTWn+Mql25noyftpkwaIIB9b9w
TO5VjA/2GaXH8o1G/P5nMnhLRURERERERM+brJit+euvv7B27VrFfKutOdeL
Fy+qysFMmDBB9T5nJFvDnCsRkWsTtQRKf+9as0749OnT4ePjk26bOXNmJh6R
dZRyroKoh/jtt9+wfPnyJ9fvAgUKKJ63V155RR7rmjVr0p1/QvSv9nrKnCsR
ERERERFZYjACXQbp7VbbVqd9Ir4epse0BUZs3WfCn38lIylJ66P8jy4BaNdH
j6hH+xrQKAEVq+tQ0l+Ht6tqn2sVrYRfPCpE6eDXUIeoGO1zrTVaP84yz19p
xKlfk2DM5Byz+C2jdu3aCAoJkzWl7bsO0Ly+1ZnboFGz5foyPv5Bsm5Z/H5G
RESUpT26sbzXuTVufBGD822a4eeWDbG7cW1sqFsdi2uEYUZ4IMYG+WCwjxt+
8PfE1FB/xFULwerakdjWsCYONa+Hc62a4Er7lrj7qB/Dz4e1PiIiIqJMJebX
7tatm1wTvbK7L0Kj6mHu8j2aP886axsbuxJVPQPh6R0gn7Pnzp2r9UdoMzEX
3elfkxC3yojuQ/WIbuOY3GvTrokYMd2A/+014dYdhl6JiIiIiIgo68tK2Rox
7+j27dtV51ttzbkKRYoUUTxvb731Fh48eKC43xnN1miRcy1UqFCGPy8iInrs
559/tlu+ctGiRciePbtiX1OnTnXAkamjJueaQq/X48iRI1i4cCG8vLxUnbeq
VavK30vENV/UJ967d++ZfejZs6fqayBzrkRERERERJSea38no0GnzKt1q9sh
ET2+12P6QiO27TPh0lVtsq/XbyZj404Tvhmux7ue2mdaRXvPKx4fh+vgVVeH
iJba51pFa/WtHhPnGbD3SBL+iXd8PeKGDRtkLanIbooMZ//h0zWvc3XGNnH2
T/DwCYG7lz+iHp2v0aNHO/yzIiIicrh/c672asy5EhHR8+D69eto2LAhQsPC
5XN2g+Yd8OOag5o/1zpbm7FoG/xDaqCKhx8io6LQo0cPmRPOKh7GA/uOJGHS
fCNa97TfnHdKrUNfPWIXGfF/J5KQkKj1WSAiIiIiIiKyv6yQrXk682JtxlU0
Ua9gbc61SZMmqs5bnTp15P6lJ6PZGpGlvX37ts1tzpw5iu+7dOnSVNskJnKg
hIjIXsTfqy+88ILi38VibdLdu3eb7UNca8aOHYucOXMq9lOyZEkYjUYHH6Vl
1uRcU4i5LcaPH6/6+inm7Bg4cKC87ov7BdGvuJadPHlSrmuith/mXImIiIiI
iEgNkWl0ZJayXsdEmTedsdiIHQdMuHI9Gcl2jlSK+r39R5MwOc6INr1S1++5
1dJpkmt9xz0epYN1cKupQ0gz7TOtoomM85BJBqzfbsLVG86xzsaYMWNk1tXD
21+uozJq6jLN612dqYna28Cwmqji7ivX5OnUqRN/AyEioudDkok5VyIiIhuI
eoMaNWogMCgUFat4o12X/po/2zpTm7dyL6rVaopKbj4ID49A8+bNZV1MVibm
vduww4Shkw1o+KVj1nqt1S4RPX/QY8k6I369kKTJPHhERERERERE9ubK2Rqx
Dupvv/2G5cuX25RvXbt2Lf766y+b8jW7du1SnYfx9/fH/v37n+lDq2xNWsuW
LVN8323bttn9fYmI6D9q1yYVLTo6GrGxsZg3bx4WLFiAAQMGoGjRoqq3F9dN
Z2LLdTjFp59+atV1VKxHXq5cOZQvXx7vvvuuVdsy50pERERERETWmLbAqGne
sv4Xj2vdZi4xYudBE/6yMvsqltg4/WsSflxtxNfD9Ihuk36NXpnQzM+6vl01
HiX841Gxmg7+jRIQFaN9rlWcF7G+7sI1Rpw975w1heI3nG7dusn1U6p6+MHL
PxyT567XvO7VGdrc5XsQVauJrL0NC4+Qc5yKtXmIiIieC8y5EhER2UzU24k5
pXz9g2TWtUf/MZo/4zpD+3HNATRo1l6udRsSGi5rI8+dO6f1x+VQYmzo3O9J
cqxIzEtXs61jcq+NOydi+FQDNu0y4e/bzjH3GhEREREREZEtXDFbc+PGDaxf
v96mfKtYm/Ts2bNI+rfgxNZ8TaVKlazKxZQqVQrh4eGIiopC2bJlNcvWpMWc
KxGR9tTkHu3RBg8erPWhPiMjOVdxXXTEeWPOlYiIiIiIiKxlMAJdB+kdUsem
tom1RnuN0GPWUiN2/59JrjXxdPZVrAP70zYTBk0wyJysNX1HfpaA973tn20t
+qjPTyN08K6nQ8Rn2p9D0dr21mPqj0YcOJaEeJ123zFr3LlzBzExMYiIiERl
d18EhEZj+oItmte/atnmr9qP2g1bpaq9PXPmjNYfFRERkeMw50pERJQh48aN
k1lXL59AVHLzRb9h0zR/1tU243oQzdt0k7lfsdZt9erV5VoizztdAnDw5yQ5
ltSuj+PGCp8evxL7QEREREREROQqXClb8/DhQ7murC35VpHLPXjwIBISUj+4
25qvcdVsTVrMuRIRae/WrVt4++23M/Ua0qVLF60P06yM5FyFtm3buty1mDlX
IiIiIiKi58P1m8kyW6p1LtNSC2+ZgKCmCQhrkQDf+gnwrKtDSDPb+wtqkoBC
bhnLtRaqfBXFPY/iI+8N+NQ3DlVDV8ItbDV8ax5ASOOLj95H5/DzlFXWw7h8
+TIaNWqE8PAIVHbzQWhUPcxaskPzOlhtam8PoFHLTjLjGhQchho1amDv3r1a
f0RERESOxZwrERFRhphMJrlGSFRUNXh4B6Cyux8Gj56r+TOvVq3Nl31kxtU/
METmf1euXKn1R+SUxNiSGGMSY01izMkRY1vRbRLR43u9XGNWrDX77/Iw9BzS
6XRynjexxtCUKVMwcOBATJ06VdZuXbx48cnaQURERERERFpyhWyN0WjEiRMn
sHjxYpsyrlu2bJHzlZuTkXyNK2Zr0mLOlYjIOWTm/AkdOnRAcrJz1mFmNOca
Hx+PTz75xKWuxcy5EhERERERub6mTZuidOnSii127j7N86wpLSomAX4NE1A+
SofivjqLWdPC7vH4ICBevs6rrg6hzdW/h3tty/2aa29Xjcf7HqdR+KNByP9a
ecXn5dx5C6FY2S/gVX1HpmVea7V7vO7tknVG/HYxCU46pGKTX375BfXq1UNo
WAQqufkgrHp9zFi0VfNaWEc2sY5r4886ydrbgKBQWXu7YcMGrT8aIiIix7N7
zvWI1kdERETkcImJiejRoweioqLg7uWPKh7+GDhipubPvo5sYh3X1p16y+ds
X/9g+Zw9d+5crT8alyDGnMTYkxiDEmNRYkzKEWOEYl6+oZMNWL/dhGt/Z6GB
L7Lo9OnTaNOmDfLkyZPu2GuuXLlQpkwZ9O/fX65JREREREREpBVnzdaI7cQ8
QWJ+L1vyratWrcKff/6Z7ntkJF/jitmatJhzJSJyHiNHjkT27Nntdt146aWX
MH/+fK0PK10ZzbkKN2/eRKVKlTJ0rrJlywYPDw+HXIuZcyUiIiIier6I+fsO
HTpksVman8+c69evmx0HFeOnBoMhE4+CnibOt9rnza1bt2L6QqOqGrOQxn+i
gv+cZ1rl4MWI+uyBTXVrYo3VKtEJKBWoy9Baq4U94mUfFVRkX8uGpZ91fd8n
HuUiHvVT5w7eL9Ph0XnKZtOzfIG3vRDU4Be71Pd17KdH7CIjDp9MQqJe629Y
5jp27Bhq1aqF0LBwmXUNCI3G+FlrNK+LdUSbtXQnatb/DBWr/pdxXbp0qdYf
CRERkTaYcyUiIrILkQXr1KnTk6xrJTdffNV7hObPwI5oc5fvQcMWHVNlXCdN
mqT1R+KyEhIhx6bEGJUYq3LU3HitvtVj0nwj9h5JwsN4y/tnr3FujnE7zo0b
N+TfTbaMvYq1k6ZPny7XriYiIiIiItKCs2Vrbt++jc2bN9uUbxXrvp48eVLV
M1ZG8zX2ytY0bNjQIdmatJhzJSJyLqtXr0b+/PkzfB0ODg7GmTNntD4cRfbI
uQr379+Xv5nYcq5y5syJzp07o127dg65FjPnSkRERET0/Ni0aZPi/f/y5ctV
92evZyiynZj78L333lP9zClyrkYT8NVg5do094j1Fvvxid6rqi4trEUCPOok
oITHAbxWfBxeLpq6vVHunNUZV7FN2n5Ee/PTfU+yr971/su+Rn6WILOsKdsX
8YhHmRAdPGrr5P6J1/jVPoL8r36U4fGPHC++jIoB86yu32v2VSJGxhqwdZ8J
t+8+f+tWiL8vateujbDwCFRx94WbdxD6DpuqeX1sZrYx01fITG+lqj4ICgmT
40iLFi3S+qMgIiLSDnOuREREdiPqFbp06YKoqGrw8g2Uuc9GLTth9rJdmj8P
Z1abMHstQqPqoeKj5+yUuaQmT55s83oo9CwxZvW/vSY5htW0q2PWeq3ROhHd
h+oRt8qI078mIaX81p7j3Bzjdgwx150149iWWtmyZfHbb79pfThERERERPSc
coZsTUJCAg4cOIAFCxZYnW8V2+zdu1fWGqllj+fmjGRr8ubNK+cLnzNnjkOy
NWkx50pE5Hz+/vtv+RtIrly5rLqmiPkqIiMjsX//fq0PQTV7j1+LcXNrxmk/
+ugjmSkV9xGOyrnOmDFD8X2YcyUiIiIiyhrEeKW96n8E1gBpr2fPnlY9q4uc
q3DjVjIafpl+PZotOdfImAT41E9AuUgdivn8t45qjjwfmu3n1Q+WW51zzV2g
ttm+8hX57pnXikzrR8E6uNfWoXINHQKbPLvPoU2uIM9LRWwaTzfXsmV74dG5
25Duua3TPhH9xuixYqMJf1xKBksuIX/DadKkCSIjo+Dh7S9rcJu26orZS3dq
Xitrz/bjmgPo/O0wVHb3QxUPP5ntjY6OxsaNG7X+CIiIiLRlYs6ViIjInnQ6
HQYOHChrCAOCQh7nP0OjMXziQs2fje37nH0Q3fuOQlXPQDl3VmhYOKpXry7X
JaHMI8ayxJjW8o1G9B2tR+12jsm91v8iEYMmGNC9d5zdxrk5xp35tmzZIuuS
7TX++sknn1hVk01ERERERGRPWmVrkpKSZF3FkiVLbFrDdcOGDXLfrWXP52Zr
szX+/v44cuTx7z3OnHM9deqU3d+XiIiUieuaWBtd1ByK+fEKFiz4ZO11MS9F
8eLF4e7ujrZt28q/z+/cuaP1LlstM8avxT3F9u3b0b59e3h6eqJo0aLIkycP
ChQoIM9Z+fLlERERgeHDh6e6l1CTcxVzgtj7+MUa9ERERERElDUx55q1nD17
Fjlz5rRq3Dwl5yocOJaE6q0s16CpzbkGNk6QGdIPAnR4u6r5bOoLuUqY7ceW
nGuu12qY7evpnGsx33iUj9TBt4EOUTGWa+OiYuJRsHCQ3WqsUlquPAUR3Oj3
J+8jznPn7/SYvdSIn88kQW/Q8IvjxG7cuIGuXbvKGlz/wMc1uL5BURg4Yqbm
dbP2aGNjVyIyurHM8Hr7BiIqKgrNmjXjWAwREZHAnCsREZHdiVqFuLg4mfsU
8yxV9fCTz9ot232NWVlgXqnxs9agep3m8jnb0ydQzp3VsGFDHDx4UOtT/9wR
Y13HTic9+l4Z0WmAPt0xR3u0Cv5z7TbOzTHuzHX58mW88cYbdh9/bdq0qdaH
RkREREREzzlHZmuuXLmCtWvX2pRvFc/H58+fR7KNE7Db+7nZUrbm9ddfR7ly
5WQWWNSNpK2j0CrnSkRErkVcZwyGrFOc6ejxa3G/cOHCBaxcufKZewo1Odc+
ffrg4sWLNt93pLVu3Tr53idOnLBLf0RERERE5FyYc81agoKsz2c+nXMVZiw2
2pRz/SRgLz4K0aGwh7psqiNyrm+V+g6edXQIb6G+Ju4Tr/F2r7FKae+WrIax
swzYedCEew+4YKtaYpxp5syZsgY3PDwCbp6P13at07g1Js5Zp3kNrS1N1A5/
3vFbVHLzk2vLBIeGySzvgAEDcPfuXa1PORERkXNgzpWIiCjTHD9+HC1btkRU
VDX4BQTLrKuXfzi+HTgeP645oPlzs7Vt9qPn7NadeqOyu9+j5ougkMfP2T17
9rRpXRKyv7v3k7F9vwljZhrQorv9M69qcq5LljDnqjWj0QgvL69MG3+dNGmS
1odIRERERESUir2zNffv35eZUFvyrQsXLsTRo0czvD/O8tzMnCsRET2PtLoO
i7Fd8dvSokWLrMq5du/eXb528+bNuH37dob3Q9Szp7y/2B8iIiIiIspamHPN
OsTzoy21P2lzrkYT0G2I3uqca4Eyu63Kpjoi51q68iCr6uHEWq4vvWx+v+zR
smXLJtfcJduIuTnbtGkj61QDg0JR2c1H1q+KvOiMRds0r6lV0+av3Ieveo+A
p2/Y47Vp/YPlGq4NGjTApk2b7DZvGRERUZbAnCsREVGmevjwISZMmPDvvFKR
8PAOkPNKhVarj8Gj52r+DG3Nc7aX3+PnbB//IPmcXa9ePbmmCZ+zndeffyVj
1WYTBow1oG6HjOde1eRcPcIXyfcT7yve3xKOcWeecePGWTWW+uabbyJHjhyq
t3nnnXe0PkQiIiIiIqJModfrceTIEZlVtSXjumPHDjx48MAu++Isz83MuRIR
0fNI6+uw+G1p9+7dVudcRRP16vv374dOp7PpvcX8IaKPp+9xfv75ZzsfIRER
ERERaYk516xBjEWLGh575FyFG7eS0ajzf/VlUY9aQOMEfOCxzqlyrsX94lEh
Soc3itgn51o5SF1W+OUCn6Jy8GKENb2GiBZ34F1jNwq9X1PVtq1bt9bgG5J1
iN9uxPhE7dq1ERkVBV//IFnH6uYdhPZdB2DWkh2a19iarbtdtR89BoyFX3B1
WTPs6ROA8IhImdkdOXIk7ty5o/WpJSIicj72zrkeP6r1ERERETml06dPo1On
TvIZNSQ0HFU9/eSza7XazTBsXJzmz9TpPmcHVXvmOfv777/HzZs3tT6tZAWD
ETh+NglzlxvRZZAe1VtZn3tVk3MVY39Pb9PqWz0mzjNg75Ek/BP/X+6VY9yZ
Q9QglSihPMfga6+9JsfLRL2UIGqeRD32Bx98oGr89cyZMxofKRERERERkf2I
Obx+++23VGuXWdNEzvPq1at23SdneW5mzpWIiJ5HznIdvnHjBrp162ZVzjWl
LVmyRP42ZTKZrHpPMWZs7n7n2LFjmXSURERERETkaMy5Zg1fffWVTRlXSzlX
YeNOE9xrJeCjYB0Kuz/Olb72obY51/e84vFxmA5edXUIb/lfTdrbRaPtknMt
WDhIuc7qLXdEtLj9ZJvPv0mU9XB7DpvQuXN3xe1z586N+Ph4B39Dsp7r16/L
ulVRvxoREQlv3//yrm279EPswq2a19yKNnfFHnzdb/STfKuHtz9CwyLkfos/
t2K8hoiIiCxgzpWIiMhhRP5sw4YNaNq0qXxmDQoORRWPf/OutZriu5Gz8OOa
A5o/Z89Zvhvd+ox8km8Va9CmPGd36dIFJ0+e1PpUkh3c/ycZuw6ZMH6OAZ/1
UJd5tSXn+nSr0ToR3YboEbfKiBlzt3CMOxOsXr1aVcb11KlTZrcX+fWKFSsq
9jF+/HgHHxkREREREVHmEPmR9evX25RvXbp0Kc6dOyfHfOzNWWrDmHMlIqLn
kbNch4XZs2fblHNNaWvWrMHly5dVv58YI7bU19GjrAchIiIiIsoKXD3nev/+
fdmveE6ZNWsWxo0bJ+f62b9/P4xGo93fL8X58+cxf/58DBs2DL1790bPnj3l
e4vx0V9++SXT3tecEydOIEeOHDbnXLdt2yb7idcB+48mYUqcEW166WV9V7lI
XaqcqbU511dKxuGVYrFmW/YX3zSfAy1Q58lrXi0Ri0JlY1G8Uiw+9pqB8r7m
2ytvVDDbV6FitS1u41vzQKpaNrEua/YXcqd7rrJlewFRzc9gyCQD1m034eqN
5FSfhdo1CcTvEGQf4neZXr16yXrW8KfyrpXd/VCvaTv0Hz4d81budWjN7Y9r
DmL4hAVo3qYbPHxCnqq7DZf72bZtW+zevVvOu0pERETpYM6ViIjI4cS6iYsW
LUKDBg2e5F2rejzOu4psaZsv+2D0tOWOXbt15T4MGjUbjWO+hJtXkNnn7F27
dvE5Owu7cj0Za7ea8N14A+p1NJ97zWjO9enmHrHe4XVCz8M4d2BgYIbHTVeu
XKnYR40aNey630RERERERI4m1ioTNQW25FtFHdihQ4eQmJiYafvnLPka5lyJ
iOh55CzXYUHNtTi9nGtKE2v13L17V/H9Lly4kG4/zLoSEREREbmeuLg49O3b
90mrVauW4nNGvXr1Um0j2pEjR8z2b+sz1BdffIHKlStbbHPnzk31elG75u3t
ne5+FyhQAM2aNcPhw4ftcu5EhjE2NhZubm6K58zf3x979ux5sq14vhJ1POk1
UbNkLVG/5+PjY3E/2rRpo7ivvQdvwdfD9Ihu82yNWFRMAkr42Z5zzf5iIcX3
16p9UKFnqmN1C1+ruE1IWC0Rt0jXmDFjFPsR64uQfYm8t6jDk+u7RkbCLyAY
Vdx9Ze2rqIGt07i1XO9l/Kw1mVJzO33BFvQaPEnW3Hr5h8v3reTmAx+/IISF
RzypuxVjMialLxERERE9ZjQy50pERKSRf/75R9YENGzYUD7ThoSGw8snUM4t
JZ55fYOi0LRVV/QeMlk+E9t7/qhxM1c/eo4fgbpN2sDN+3G2tbKbL3z9gxAe
Hin3qV27dnL+tsxYl4SclxhWOfVrEtp3nQv3gF4oVbGXHOd7u2i04picmBNP
vDal+dTcb3XOdfrcg3K9WUs4zm1+nPvatWuK7yXGuZWIOu133nkH+fPnt9i8
vLzscp6IiIiIiIgcTcxzdPz4cTkHmS0ZV1GzdefOnUzfT2fJ1zDnSkREzyNn
uQ4L9sq5irZw4UK5/+nN1SHuk5T6sVTbTkREREREzql69ep2yQjOmDHDbP+2
PkOFhoam+37R0dHydRcvXkRERIRV+5otWza0bNkSN27csPm8nT17Fp6enlaf
J5ERFs9dJ0+ezJSxVVEXld45W7ZsmeL7ekRuTHf9gtDmCSjsnvVzrsU/6ay4
jaj/UnLmzBnFfsqWLWvL15BUOH36NAYPHizXbRA1r2JtF1//YFT1fLz2jGg+
AZFo0Kw92n81AD0HTcDwiQtlTa6oo1WqtZ25eDtGTV2GvsOmotPXg9H08y4I
DK/1pG+RrRXZVlH/GxUVJfehW7dusmaRdbdERERWYs6ViIhIc/Hx8VixYgVa
t24tn3HFs25QSBi8fYNQ+d/5pUQLDKuJek3aIqb9N+j87TD0GToFP0xahCnz
N2L+qv3PPF/PXb4HE2avxdBx8/HtdxPQsfsgNG/TDbUaxMDLL+xJv+J5XjzX
p6zdKpqY52rv3r18zn7O2WOcu5zPFKtzrj7Re1G9VSK6DNI/+h4bcfxsEgxP
LbfKcW7z49xq1mEVY9lERERERETPIzHHvZhXSDw72ZJvXb16Nf7880+H7a+z
5GuYcyUioueRs1yHBXvmXFPa0qVLce7cObO/Aald795ec0YSEREREVHmc+Wc
6y+//IIiRYrYvM/vv/++fP6x1vbt25E3b16b31fU3x07dszuY6t3797Fm2++
abavXLly4fz585j/41LF91XKuYrmU1+XpXOujTonongpP8VtxHdQifj9Qayx
kF4/oiZNp9NZ/V0k9cQcpeLP1Lfffvsk8xoRGYWg4DB4+QWggrvHk5rZlFbJ
zQ8evqEICI1GWPX6qF6nOcJrNJS1umKN1ioe/s9sU8HNCx4+fggICn2ynoxo
HTp0wIIFC3Dp0iWtTwUREZHrYs6ViIjIaYjxDjGuNmvWLLRq1erJ8294eIR8
JvasWBWVK3s+89wsW1UfuHkFwScw8vHztWeA+deJ+aMqusG7spvM0kZGPp4/
Soxnfv311zJve/36da1PBTkJLXOuaV9ft0Mi+o81YNVmE3z8OM5tbpxbjNGl
t0327NkdsuYQERERERGRs7l9+zY2b95sU7518eLFcj4ik8nk0H12lnwNc65E
RPQ8+uOPP9C/f/9n2vDhw/HgwQOH7ouaa7GYu9SW+xxxDb969Wqq91uzZo3q
7cU9ifhti4iIiIiInJur5lz9/PxQrFixDO+3yB8ePaq+vn3nzp146aWXMvy+
DRs2tPvYaseOHS3XHNX6Gl0H6VEleKHi+6rJuYpWLlKXpXKuXsG9sGSdEb9e
SIKY+kmptixnzpyqfxtQsybCqVOnrPq8yXb379/Hnj17MGnSJLRp0wbh1cJQ
LqrUo+90aZQL/wjlQ8uifMgnKB9UDuUDKqC8X0VU8KmMCt5VH/1vlUf/XOnx
vw989N+DH70u9ONH25VBuYhH20d9iNBqwWjatCl++OEHbNq0iTW3RERE9sKc
KxERkdP666+/sGHDBvks3KxZM0R8Uhbhxd5DaPH3EVKyOII+KInAUqXgX7o0
/D4qC5+yn8Dr43Lw/vjTR///40f/roz8b+I1wY9eG1KiGMKKF5V9RFQsj/bt
22PKlCnyeV481xOl5Uw516dbwcLB6b7n8zrO7e/vn+42FSpUsOfXg4iIiIiI
yOklJCTgwIEDcv5sa3MfYpu9e/ciPj5ek313lnwNc65ERETaUnMtFuvVi9rx
hQsX2pR33bFjh7y/MBgMVt83HTp0iFlXIiIiIiIn56o5V3u2EiVKqKqPu3Ll
Cl555RWH7Zc1Y6uHDx+Wc9yb6ydX3rcR3vymrKuqFGS/nGtUTALeKacu5/q+
TzzKReiQM4/z5lz79u375HyKtVXFGqvpvf7DDz9U/fmI+k6l91+1apXq/si+
Lt46j34H26Lr2qb4fFYt1P8+FOFfecGzWXmUr/bh4wysmebW8BOEdHJH7UFB
aDmtBr5c0Ri997TGyctHOR5CRESUGeydcz1xTOsjIiIiyrIu/jAIB5vVw8Z6
1bGweigmhfhhkI8bulYuj5Yfl0aNksVkhlW0uh+WQOtyZfCNW0UM9/PAtLAA
LI0Ox9aGNXG0RQPcmDVN68MhF+CqOVd7NlcZ5xZzB+bLly/dbUS2/WkXLlyQ
dU9jx45Fnz590K9fPzmH3bJly+TxEBERERERuaqkpCScOXMGS5YssSnrsXHj
Rvz9999aH4ZTYM6ViIhIW9Zci+/evYutW7fadP8jxoq3b9+OuLg4q7dl1pWI
iIiIyLkx5/q4NWrUSPFcRUZGOnSf1I6t3r5rwkdlq1rsp7xv7JO6KnvmXEWr
HGK5xquY2x6419YhrPl/ry/+SWe8XOBTsy179pxm+8mb/32L21hqOXK+bLav
l18phBIly+Hjj8uhXLnUTdRFpRBrqyqdp5CQEFWfj9CrVy/F/kaOHKm6P7Kv
+8m3Mcs40GybqR+AKfd6Y9zVHhjx+1cYc/lrTLrdCzMS+lvc5lbyVa0PiYiI
KGtizpWIiMhlPJw8RvFafLPT57j9ZSvF1+kWztX6cMgF2GOce8ToWPy0zYRB
Ewyo/0Wiy+VcXWWc+9KlS4rbfP/997LWe/r06ShTpozi68X47qhRo5CYmJhZ
XzEiIiIiIiK7E/P2rFmzxqZ8x4oVK/D7778zp/EU5lyJiIi0Je5N5s2bl25L
O2/h5cuXbbofmjx5shwTjo2NtXrbgwcP8h6KiIiIiMhJff311yhUqNCT9uqr
r6qqTXl6m6JFi+Lo0aNm+3eVnKtox48ft7g/CxYscPj+WBpb1RuAY6eTMGup
EV8O1KOc92SLfbxasDKqfa7LtJxrRmq80raXXi5htp+qoSus6ke0t4tGm+1r
2LBhqv5ciPkulc5Tw4YNVfUliAyrUn9dunRR3R/ZV3o5V1sac65ERESZhDlX
IiIil6Em56q2MedKathjnPvpMW6TCTj9axLiVhlR/3PLY4XOlnN1hXHuw4cP
K24jxnHLly9v9XuJ3ypETRQREREREZEzu3fvHrZt22ZTvnXRokU4duwYDAaD
1ofhdGzJ1hAREZH2TCYTTp8+bdX69qNHj8YPP/wg29ixYzF79myr7qkOHDjA
rCsRERERkQtQU+eyfPly1f05Kuf68ssvo1OnTnJdWTE/35dffomqVasiR44c
qvuIiYmxuD8VK1ZU3U/JkiXRoUMHuR+ihkfMG+Tt7W1z/Y94lPrjUjKWbzSi
72g9arf7by2B0CZXkDNXAQt9ZIN3jV2p6qqycs61eqtEmfudvdSIwOCaFuuj
1BDfcaXz1LFjR9V/DmbNmqXYX+vWrVX3R/bFnCsREZGLMBiYcyUiInIRds25
Lpij9eGQC7LnOHd6Y9z2zrnmePFlvF+mA8r5TEF531h8WrUjipWsghdecP1x
7hTr11seU7ZHy5Ytm5x3kIiIiIiIyNno9Xo598/ChQttyrju3LkTDx480Pow
iIiIiDKFTqfD/v375fh+evdEok48JeP6dJs4caKc10LtvZV4L2ZdiYiIiIic
myvmXMW6mmKuQ0vvnzdvXlX95M6d22w/Bw8etGpfxLOWOWKN0Pz586vua8iI
NRgZa0DTrokW66Te+/Azi9sXKdnkmddntZxri+6JGDvLgB0HTLj34L/nzVq1
apntS23OVTzrKp2nnj17qupLWLZsmWJ/jRs3Vt0f2RdzrkRERC6COVciIiKX
wZwrac1ROdeO3+xHwy8tj99ak3N9p3g9hDe7bnEc9oUcrjnOnTbnqmbs1R5t
8ODB1n9xiIiIiIiIMoHIT/z666+ydsSWfKt4rrp6lXUIRERE9Hy4desWNm/e
bPa+KC4uDmPGjDGbcxVtxIgRmDp1qnwds65ERERERK7P1XKu9evXR1JSUrr7
sGvXLtV1N6JGJ602bdqo2rZHjx6K5+PAgQN48cUXVfWntI6pV/WdEGu2mts2
x4v5ENLoQpbLudbtkIiB4wxYvcWES1ctP1tmNOcqnnOVzlO/fv1U9SWsXr1a
sb+aNWuq7o/s617yLeZciYiIXAFzrkRERC7j4ZSxzLmSphyVcxVj3GJ4+tzv
SVi4xohvhusR3ea/3KvanOs7xeogKiY+3fFTz6j/IceLrjfOnTbnGhsbq2q7
jLbs2bPLWigiIiIiIiItXb9+HevXr7cp37p06VKcO3dOsS6KiIiIKKsR2dML
Fy5g5cqVqe6PJk+ebDHj+nQbNWqUXPdVzT3Xvn37mHUlIiIiInJSrpRzzZcv
H27cuKFqP8Qzi5ral/79+z+zbenSpRW3K1iwoMX57dPq2rWrqn1JL+caFfMQ
r7xe3uK2pSsPMrudK+ZcazZbhXkrjDj5SxKMJlWnOMM5VzXfF2vWAxC/WSj1
FxISoro/si9751xvJ1/T+pCIiIiyJuZciYiIXIZdc64/ztb6cMgFOTLnmpYu
ATj4cxKm/mhEkeLKOVc5Z2HjS6rGUMu4DVc1tty7d/9n9kurce60OddJkyap
2s4e7a233kJ8fLyq4yEiIiIiIrKnf/75B7t377Yp3yqeaQ8dOoTExEStD4OI
iIhIU0ajESdOnMDixYvl+jVqMq5Pt7Fjx2LOnDmK91979+5l1pWIiIiIyAm5
Us5VzbzyKe7cuYM8efIo9hkWFpZqu7t37yJbNvNrplqbebxxKxmbdpnQb+R1
ZMueQ7HP9HKuH3uMtrhd3vzFENnyXpbJuaatg1IjoznX77//XvE8de7cWfX+
iPUTlPrz9/e3+jjJPphzJSIichH2zrme/FnrIyIiIsqymHMlrWmZc32amnHu
Ep9+pXoMNazpNbzwgvI495tFQuTasmKNWbHW7O3b9hvnTnH79m3kyKE8zp12
fHfMmDGK26RtIn8bEBAgx1Bfe+01q7YdPXq06mMiIiIiIiLKKJHFOH78OBYt
WmRTxlU8g4paJSIiIiL6jxiLnzhxotU5V9FGjBgh51+cP39+uvdhe/bsQVJS
ktaHSkRERERET3GlnOv27dutOrbPPvtMsc+PP/441TabN29W3EbU8pgbY47X
AfuPJmFKnBFte+tT1SO98Y6/Yr+Wcq4hjf9EjpwvW9yucvBii3VQzphzbdAp
EYMnGvBO4ZKq6qDUyGjOddy4cYrn6bvvvlO9P+IYlPoLDw+3+jjJPu4l32TO
lYiIyBUw50pEROQyHk4dx5wracqVcq4ekZusmi/w3VLNFfvM/1rZVNv411xn
8zh3egIDAxX7TTu+O3y4ujVpRROZ1vHjxz96FDA82V7Mqb9y5UoUKFBAVR+F
CxfmPPxERERERJTpxHPHhQsX5POKLfnW1atX49KlS1ofBhEREZFTEfdYYp37
lHum2bNnyzVabcm7jhw5EtOmTUNcXByzrkRERERELsJVcq65c+dGYmKiVccm
nkGUjq1IkSKptpkxY4biNu+99558rckEnPktCQvWGPH1MD2i2yRarEUqU1V5
vVBLOdciJRtb3OaNdwLTrYFyhpyrOC/i/IjzJM6XOG9CyZLOk3ONjY1VPE99
+vRRvT/idwyl/urUqWP1cZJ9MOdKRETkIphzJSIichnMuZLWXCXnKsa59x7W
IXaRER366lWNyVbwn6N4bLlfKpxqm3I+U1SPc1tD1AUp9Zt2fFesr6q0jWjZ
s2dPd67Ly5cvo1SpUqr6OnbsmNXHRkREREREpNatW7ewadMmm/KtixcvxqlT
p2BKKZ4hIiIiIknMf7hjxw6z91CixnfUqFE25V3FGPXMmTMt3p/t3r2bWVci
IiIiIifhKjnX0qVLW31sYp4dpWN76aWXUm2jpk7no7Iecj1SsS6p2nyoWHNV
qV9zOVePKMvry2bLngN+tY84Zc61TS+9XNdWrG8r1rk1x5lyrmr+HHTv3l31
/ixcqHzemzVrZvVxkn3YP+d6XetDIiIiypKS9XrmXImIiFyEXXOucbO0Phxy
Qa6Sc007zn3rTjL+t9eEkbEGNO1qfrzZs9o2xWN7IcdLVs+7+EFpD5z+9b95
CdVQM79f2vFdNfNRita/f3/F91+/3vL49NNNjPMTERERERHZm06nw/79++Uz
qLX5VrHNvn37EB8fr/VhEBERETmdf/75B+vWrUv3fkqsyzplyhSMGDHCprzr
uHHjMGfOHLN979q1i1lXIiIiIiIn4Co5V09PT6uPTczvrqbm5elnk969eyu+
/p3idVXnQlOaV7Xtiv2ay7kWLGL5vLxfpoPi+zoy5/rFt/uxcacJN24lq/p8
nCnnumrVKsXzFBMTo3p/Jk+erNhfu3btrD5Oso+7zLkSERG5BOZciYiIXEf8
tPHMuZKmXCXnmt44d3Iy8MelZCzfaESfUXrUbvc49xrc8Lyqce6omPgn47gf
lP9G9Th3/S8SMWiCAT9tM+HK9fTHdvfu3avYb9rxXbFGq9I2hQsXVl1DpHSO
RWvRooWqvoiIiIiIiNQQa6+ePn0aS5YssWkN140bN+LmzZtaHwYRERGRU7p6
9SqWLVum+t5q7ty5mDBhgk1ZV5GRnTRpEubPn8+sKxERERGRE3KVnGtERITV
x3b9+nXFY8uRI0eqbTp0/EJxm/fLtLc65+pdY5div+ZyrgXe9rb4erGea648
BdNtauqfXsz5aqptXnvTzaacq1KNV1rOlHPdtk15TYTo6GjV+zN48GDF/nr0
6GH1cZJ9MOdKRETkGphzJSIich3MuZLWXCXnas04t94AHD2VhLEzrigemxgr
fnocV4xh2zrOHdMjEePnGLD7/0x48DB17vXAgQOK/aYd3z137pziNtacl4kT
Jyr2FxUVpbo/IiIiIiKi9Ig59tesWWNTvnXFihX4/fffkZysbr54IiIioueJ
uEc6efKkHN+35V5r1qxZGDNmjE1515EjR2L69OnP9Llz505mXYmIiIiINOQq
Odfg4GCrj+3o0aOKx/b666/j0tVkrN5iwsBxBnxQ7kvFbd4t1cLqnKvIsCr1
a23ONbNajhfzmT2GDn31+Kr3JptrvNJyppzrhQsXFM+Lu7u76v358kvl79GU
KVOsPk6yD3vnXO8k39D6kIiIiLIk5lyJiIhch11zrvNnan045IJcJeeaWePc
OXMVSDWWW/zjTnYZ567ROhFdB+kxd7kRJ84lYfWanxT7TTu+e//+fcVtunfv
rvp8bNiwQbE/Nzc3q88zERERERHR0+7duyfnTLclc7Fo0SIcO3YMBoNB68Mg
IiIickp6vR7bt2+36V4rbRN5VZFbtSXvKnKyIi/7dH87duyAyWTS+hQRERER
ET2XXCXnWrFiRauPbfXq1YrHlv/VYqnqdj6s1F9xm7eL1rA651rOZ5piv86W
c23aNREjphvwv70m3LqTbNPnK+ZaEnVY5tq7775rtp8hQ4ZY3MZSq1Klitm+
OnXqZPb1aX9PEM+kOXPmTPe8FCxYUPV3T6wXoHSet2zZYvV3muzjbvLfzLkS
ERG5AHvnXI2njmt9SERERFkWc66kNVfJuWbWOPdLLztmnLty4HTFfs3NY5g3
b950t+nbt6/q83HmzBnFfahcubLV55mIiIiIiEgQmYvDhw9j4cKFNuUsxBpg
Dx480PowiIiIiJzWrVu35Li3PTKuKW3+/PmYPHkyRowYYVPedfz48Zg7dy6z
rkREREREGnOVnGv+/PmtfmYYN26c4rG98nr5VHU6H3uOVdwm36ulra7/KVb2
C8V+nSXnmjtPPvxxKRnJyRn/fN955x2H77/aNmDAgFT7+uGHHypuc/fuXVXf
PTV9iTVkSRvMuRIREbkG5lyJiIhcR/z0Ccy5kqZcJeeaWePcFSpUxPGzSXLd
1S6D9PjEU3mbzBrnNpdzLVGiRLrb9O/fX/X5OHLkiOI+iM+BiIiIiIjIGsnJ
yfj111+xbNkym7IV4lno2rVrWh8GERERkVMT4+PHjx/Hhg0b5Li+PbOuooms
qsis2pJ1FRlZkZUVmVnRl1hvlllXIiIiIiLHcpWcq2gHDhxQtQ8inylymqVK
uyn2+U7xeqnqdCoFKp8P0YIbnreq/idPvvcU+3SWnGu+fPns9vk6c8417RoB
1apVU9xGzRqsYl7OF154Id1+cuXKxedfDTHnSkRE5BqYcyUiInId9s25ztD6
cMgFuUrOVTS149wp3N3dFfts2LBhqm3mzV+iaow0M8a5u/RcjWOnk6A3/Lc/
/v7+6W7TuHFj1edD1Jwr7YM1/QnxOqteTkREREREWcz169exbt06m7IU4hnl
l19+QVJSktaHQURERORSEhMTcenSJRw6dAhr1661a9515syZGD16tE1511Gj
RmH69Omyn23btrHWl4iIiIjIgVwp59qpUyeL29++m4yt+0wYGWtA066J8K6x
S1UdTxm34anqdIIa/KJqu489Rquu/fGusUdVn8y5Oralzbl+//33itv06dNH
8c/Apk2bFPsRdV2kHZFLZc6ViIjI+SXrE5lzJSIichHMuZLWXCnnmt44d1oi
E6tmrFPU3Tzt4sWLqrbLzHHu2u0S0Xe0His2mtCn/+h0t3n//fdhMBgsnIXU
xBit0j706tVL9TkWug3RY+NOE1iWTkRERET0fPnnn3+wa9cum7IT4jlUPCOK
fAYRERERZVx8fDz++OMP7Nu3DytXrsxw1jUuLg7Tpk3DyJEjbcq7jhkzBrNn
z2bWlYiIiIjIgVwp55ozZ075DCMkJAKHTyYhdpERHfvpn6m5KVSstqqaG8+o
Lc9sm/ulworb5crzJsKb/62i/kenOqvqLDnXQoUK2e3zdaWc69GjRxW3KVWq
FJLFgsHp+PzzzxX7GTp0aLp9UOZizpWIiMg1MOdKRETkOuJjJzLnSppypZzr
0+PcSurVq6dqrHPnzp3PbFukSBHF7fLmexORLW9m+jh3SONLyJY9R7rbjR07
VvF8iBr0119/XXEfNm7cqOr8phg2xSD3s9MAPU6cY9iViIiIiCirMxqN+Pnn
n7Fo0SKbMhPiufHu3btaHwYRERFRlnb//n388ssvcl6SpUuX2px3nT9/PiZN
moQRI0bYlHedMGGCHHMW95BERERERJS51NT/iPlo1MrMnKto775XBl0G/IVa
7RIt1tuU+KSLqr5yvJgfES1uP9NH4RINVW1f6P2aiPzsfrr1PyXLfa2qL0v1
PyJLG9b0quoW0fwa2ve6hinzbmD3wZuYOWuO4vuK57/bt28/aenNNZmVc64i
v1qwYEFV58uSK1euIHfu3Ip9HD58WMWfJsos9s653k3+W+tDIiIiypKYcyUi
InId9sy5xs+L1fpwyAXZc5w7s3OuopUtWxY3b9602I8Yq+zevbuqvvLnzy/n
uU+rSZMmqraPrlkHOw4kYOI8A1p9++yckvYY5xbtrfei0t2uQIECuH79errn
d9CgQYrvnyNHDpmHtUbcKmOqfR062YDrN9Of75CIiIiIiFyPeNYS8w7Zuj7Y
6tWrcenSJa0Pg4iIiOi5I+7jRH3z6dOn5fqqixcvtvpebs6cORg3bpxNWVeR
kRW/Q6RXX01ERERERBmnpv7nm2++Ud1fZudcRcubvxgq+M9BVEx86jnhG11A
4ZKNVPdTtHRrs/U2nlGWjyFte72QL7yq73ymD7/ah/H2+9Gq+0mv/kepxfRI
xIS5Buz+PxMePExde7Ns2TLF9xXPfJn1+ZYoUQJ58+Y127Jly2a2n1y5clnc
xlJ74YUXLH9fLGwzbdq0Z/Y3JiZG8Xy98sorOHbs2DPb3rt3DxUrVlTcXqyj
kJTENQG0xJwrERGRa2DOlYiIyHUw50pas+c4tyNyrqIVL15c1takHSu8evUq
mjZtqrqfdu3amd0XMce92j78/f2xf//+x+9/Ixnrt5swZJIB4Y2P2G2cu1Kg
8mf0+htFsHTlXiSbiZgOGzbM4pjy002sgWutHQdMz+xv7XaJmLvcCF2C1d0R
EREREZETunXrFjZt2mRTvlXkKE6dOgWTyaT1YRARERHRI+K+TMybePz4cWze
vBkLFy5UfW83Y8YMjB492qa86+TJk/Hbb7/J3C09zh+LeSf/+usvnD17FgcP
HsSWLVuwfPlyOfeoyBUPHTpU/q/4Z/HvxX8XrxOvF9uJ7Xk+iYiIyJ7EvcXD
hw/x999/48KFC3JcT9x/7N27V2bBfv31V3kfcvfuXRgMBq13l9JQU//z0ksv
oUOHDhg/fry8z4yNjZX3l+Y4Iuea0nK/VBgFi4Ti7aI1kCffe1Zv71PzgMXs
6CtvVLCqr5de+UDuy5vvRiD/a2Ws3pf06n/StvpfJGLwRAN+2mbCX9fTv7fX
OueanpIlS5rt56effrKqH6FWrVpm+xK1T9Y4ceKEqs/qxRdfROvWreWz8YoV
KzBw4EC88cYbqrYVz7qkLeZciYiIXIP9c64ntD4kIiKiLCs+dhJzrqQpW8a5
7T3GLdgyzi3mxQsPD0fNmjVRtGhRq7c/evSoxf2pVKmSVX2VKlVK7ktUVJRc
c9ae49yRLe/hxVyvKW6fLfuLKF6mOWo3mYTBP6zFwEEjrTqve/bssfr7c/7P
ZIvj8c27JeJ/e01ms7eUNYkaufv378vMuahZ+/nnn+X3SmQixO8p4jdQ8Vvo
xYsX5brMOp1O610mIiKiLCalDuvatWuy5urw4cPYvn071qxZg7i4OEyZMkXW
ic+aNQtLly7Fxo0bsW/fPpw8eVLeo9y5cwdGo1Hrw3Aa4n5NzOsjnhutzbeK
bcS55T0fERERkXMT+YQrV67gyJEjWLduneK9n7ivnjp1KkaOHGl11lXci2/Y
sEHOo/I8EpkQMVYqssKNGzdGtWrVnmniN4aIiEiEh0cgNCxC/q/4Z/Hvzb2+
UaNGGDVqlHy2EZ8jERERkVo3btzAjh07MHfuXAwZMkTOEy5qL8zdc1hqYh7y
b7/9FhMnTsSqVatw5swZ5l81JDKFttSqiPlszLGmBkhMc3j2fBIWrDHi/Q+C
bdoPW9tb70WlmyUVtTiO3J/06n+i2yTi62F6/LjaiDO/JcGa6SGZc7Uu5yqE
hYVl2mecP39+ue4racv+OdebWh8SERFRlsScKxERkeuwa851LnOuZD1bxrnt
Mcadli0514y06tWr2/28ZNY4t2jFP+mcqe8t1qW1RUIiUL1VYrq/GXQdpJe/
Z1DWIvIj4s+1qGsbPHiwnN9S/Lmy5ndP0erWrYuvvvpK1ritXbsWv//++zNr
NRMRERFZInKtly9fljXdos7ecq14NURGRiFc1otHIiLScp24uKfp1q0b5s2b
J2v94+PjtT5MhxPzl5w+fRpLliyxaQ1X8XmIeU2IiIiIyPUkJCTIOWDEnHWr
V6+2eM8n7pdFnmHEiBFWZ13F9s/DnCh6vR6HDh2Sa9l+9tlnT545xHNJUHAY
/ANC4O0bBHcvf1Rx90XFqj6oWMXbcnv038XrxOvFdn6Pthf9iP5S+m7ZsqX8
XMTnl5iYqPUpICIiIici1oIXcxSLe4XPP/881Twb4n4iNCwcQSFhCAgKga9/
8KP7jUB4eAfAzdMPVT385D2Ip08gfPyC5H1MYFAoQkLDERYeIcdeU/qrXbs2
+vbtK9dF/OOPP7j+vAOJnLEt9SK21gBdvZGMddtNGDLJgAad/qsbKVjYcTlX
MWd8SOOLiuumFi3dSrP6nza99JgcZ8T+o0l4mIGfG5hztT7nunv3bmTPnj1T
PuN+/fpZvT9kf8y5EhERuQbmXImIiFwHc66kNVvGuV0951qgQAG5vpOStm3b
ajbOnbZFtLiD/K/Ztk6sUsuTJ49ce9NWzb5KP+cqmsjCjphuwM07/A3LVaVk
HebPny9zqTVq1HiSGYlI9btn6DO/e1Z285X1V26e4rfPAPnbp186v302bNgQ
Q4cOlWs7iHmEiYiIiJ4mauFFTfz48ePRokWLVLXiwY/uR/wDQ+T9hrjveHwv
kk6teKo68cBH9yjB8h5F3Nuk5GCjo6PxzTffyPVfL1y4oPXhZzqRGxbr39qS
b2XtGhEREVHWI/IQ58+fl5mI5cuXP3MPOHv2bIwdO9bqrKuYP0/Mq3Lq1Ck5
9piVnDt3Tj6v1KtXTz5TiLFPkUcVzxwyz/rvs4iHbyiCI2qjet3maNiiI2La
f4Mvvh6MHgPGYsAPM/D9hAXyf8U/i38v/rt4nXi92E5sn5KNFf2K/oOCQ5+M
tYo5BsVnI34HIiIioueTmMNP1HGI3KkY5xT3CBEp9yZ+QTK/+vR4qZtXEPyC
qiE0qp6856jXpC2atuqKFm27y/uQWg1iEBHdCIFhNeHpG4ZKbr5Ptq3k5iN/
Hxbjs2Jd+pRxWzHfh7hnFPMdU+YSc9bkzp3bITVA0S32WqwPUZdzzZbhWpds
2bKjUtBCxXqVxzU3t5H/tY8dVv/TouMqbNxpwvWb9hsrZ87V+pyrIOZtt/fn
K9YSyGrPsa7qdvJ15lyJiIhcQHJiAnOuRERELiJ+hovkXFmjmmXZMs6tVc41
W7aMj3OLefrE2K8a4jefTz75xGHj3N/0X42eP+hRs6353KhfnaN4IUdeu79v
+87jMjS23mWQXtXvBqLVaZ+IBWuMSNTb/HbkQCKfILKtkyZNQqNGjZ7M5yuy
qSLLKnKrT9YYePS/7t7B8A+pgfDqDRBd/zM0aN5B/ubZtnNftOrYE00/74K6
TdqgWu1mCI6sA5+ASFTx8H/y26fIw4o5gEVWNjz8v98+O3fujJUrV+L27dta
nxIi+n/2zgM6qmrr45+iiIr41OdTQRG7YkEIIYX0XqgBQkd6h4TeO9J7Cz2U
kNBLkC69I02aCooKKAjSSZmS7C/7xMQAmbl3JjNzZib/31p7LR8v98y5586d
U/b+7w0AAJLgdcmJEydETDzXA8iOx4oQMdyVfQKo4iOx4oFhUVS1VhOKbtyO
mmatR9p1HUzd+o+j/iPiaMjYedR7yBTq3GsEterUjxo2j6Ga9VpQWLV6IoYr
d33C65vKfkL7KnSv/6xNOB8Oa16dbW1y584d2r59u1n61qVLl4rno9VqZd8G
AAAAAACwIrwuv337ttBx7tq1S+hUc9aEc+bMofHjx6vWurL+knPq8bVcN/bS
pUuyb69A8NhwDdVu3brlalv5nJP3FBUqZZ9/+gZVFTqRPsOm0syELZS4/kiB
bdaSrdR32DRqnNUun83mnLXy5/Ln52heY2NjRb4g5KQBAAAACgfXrl0TNeVr
1aol1gKcd5jPOTkvYM56wScwkho060TdB2St4aYvpfgVu01eiyxJPkTT4r+h
gaNmU+vO/SmyZkOq6O6bq3ut7B0gciXn5BTkNQnXV8zIyJA9RE4La5pNjRkx
FAO0ZavhGCDv6ubrXJ96+gV674uuBYpzeeLJp6iC/yLVsSpsIQ2v0Iv/LV/A
GJsnqOS7dRT/zhx9pxLQuZqnc+U9EOdxt1SMValSpcRvLLAPLK1zvWNhnaue
dPRL5mn6NfOsRdsFAAAAHA3oXAEAAADHwaI61wWzLdq3TI2GNIf3iz7yfwPn
xdRzbhk61xdeeIF69uxZoLPGp556ipKSkkwamxs3bpCLi0vBztefeELUp1R7
zp2WTvTdqQyanaSj9gMe1pByLsoiRZ612PnrRy6Dc9tu1UdDMxJ0dOBYBj1I
UT9Gw6ZqTfIdsDXrmU67D+shobdTdDodbdu2jdq2bZsbk8V1zTj/bo6u1c0r
UOhBOvX8mkZOWULxK/eYHYs1Y9EmGjBypqhHwLmB89Yg4FpsrKvlfrDvYdSo
UaJ+BAAAAAAKBznrEtaWCm1reISoByDybfwTj+UfUp2atOpKfYdPp9mJ3xY4
TnxJ8mEaPS1J1Evi3B2VPANy47K4PhKvTSL/qfM6ceJEUf/UkUlPTxf7Nd4r
maNx3b17t6jxBQAAAAAACh+sT+Az9NOnTwv/QGJiIsXFxdHYsWNN1rqycRu3
bt2SfVsmc+TIEZGrj/csnL+P9RzijDPLWOsR02skTY1fbxFdq5JNW7CBYvuM
oio1G+X2gfsT+k9ewY4dO9LBgwehdwUAAACclKtXr9LkyZPF2SVrSznvRU7N
VldPf4qq11LkA2RtqrXWIwtW7aWh4+ZTs3Y9xdmtOFutxGergblrEvZDc94U
6F0tD+dz51qT5sYAXfozk5K/1dOQyVryrb7J4DUF1blWaZFK73za3qw4l2LP
vUGVQteaHKfCFtbkL3rtrQizPpfz0rsEJNKXPnNUx/9YEuhczdO5Mpyjs0+f
PqI2QkFirEJDQ+nPP/80ux/A8tirzpXrwh7O2EJLdGNokW4EpRL8aAAAAAo3
0LkCAAAAjoM96lwzrv5BaauX0t0+saLd9B1bLNIusF9MPeeWpXPluIvOnTub
ddZYsmRJ2rhxo1njc/fuXeFrMedzn3vuOVHracGCBWafc/99K5O+3a+nsbO1
1DA2nXxqHqbnSrxboLPXJ4sUo0/dxxg826/eOp26j9DQknU6Onchg/R6w+Mz
ZYHpOtcc6zlKQxd+g+/KXmAdyebNm6l58+biO891yzxzYrJcvSikSjS1iR0o
dB8J6w5Zzfc5d+kO6v91nMgf7OkTml3r1d1H5BjOqT8wdOhQunDhguwhAwAA
AICV0GctQLdu3UotWrT4d10icm6w3tSXqtX+irr2G0szFm60epz44jUHaPiE
hdS0bQ9R4+ChtUlkpMjFMW7cOLpy5YrsYTMJjiH76aefRGyMOfrWDRs2iLg5
AAAAAAAAcuDzRV4jso6S/Qhq9K6Pal1ZK8u6Uc7HYu+cO3eOevTokVsjzdM7
e8/CZ5ptYweJ/H620LYaMq4Z267rYKrsm33Gyv3L0ZZ07dpV6JMBAAAA4Bxw
rhCu31qjRg2hb/XzD6aKbtk+3qq1moh68qw/lbEmmTBrlch37OETIvrDuZX5
vJfXJO3bt6dDhw7JHj6ng2Nrpk+fTq6uriIvu1L8SM9+s2nSfC017ZH+UDyH
e/hGg9cUXOea/besV/3PqxVVxbkUeep5evfzGAprct3sGJUcqxi4lJ4t/pbq
GJvX3vSh2P6Hads+PU2bHm92/E9BUKNzPXPmjOr2HE3nOn/+fJPbehSuJ+3h
4aHqvchrZcqUEe8UsD9uZl61G52rjrR0IeN72qCPf6jNwxlbLXfDAAAAgIMC
nSsAAADgOKTMm2EfOldd1k776CF6MGXMQ23e698NtVwLCaacc8vSuebAetVK
lSqpOmt8/vnnqVu3bnTv3r0Cj9GqVauodOnSqs85WTt87NgxcW1BdK554RTr
v/yeSQtX3CBXr/b09DMvmXT2ylby3ToUWPe8SWf80R3Tafg0LX2zQ09/XHs4
z/v8FboC+Q+qtkwXPpNbd5A/Xhb8/nO+3JYtWwp/Itcoc6+cXSPN2z9CaFu5
DoAMvyfraTnfb51GbYWmhXP9co3X8IhIqlq1Ko0YMcLha6gBAAAA4GH279+f
W781JM+6xDeoKnXuNYLmJG2XFifOtV5HTF5MdRu3y1qb+Igar75+2XpXrpEw
bdo0unnzpuwhVIS1B6xTNUffyrE0rI9FrQUAAAAAAKDEpUuXaNmyZUJzMXHi
RNVaVzbOH/nDDz/Y5bqTa9hyv0X91vCIf+q3elFlvzCK6T1SmobEkC1ctY+6
9B0jznqz9a4Bot/cfz5fvXbtmuwhBQAAAICZcG6QpUuXUu3atbP1rQHZ+lY+
u6z/VUeaNHet9LVI7ppk9T5RS9Y3sEqu3jUnB0evXr2Q49hK8Fnwzp07xfo6
Li6Oxo6bQL36TaZmbWdRaO0F5Bq0jALrXcg3lsMWOtcccwtdR++X60El361N
//lvBaFBLfHyF/Tqm8FU+uMWVDFoOYV/davA+ta8Ftk8hTwittDbn7Sml15z
z/rM0lSkyLNU9JmX6cVXvqD3PwmjqlExtGnrKRGrk4Ol4n9kY0mdq6Px22+/
ibxMERER9OWXX9Lrr7+e9eyLiHt/6aWXqGzZshQQECDizQ4fPiy7u8AI9qBz
vZX5Fx3M2CRqtz7aXnYt1wdWuHMAAADAsbC4zvUsdK4AAACAtZCtc8346xql
rVlOd/vG5ttm+nbUci2MPHrOPWHCBJoyZQrNmTOHEhISRGxKfthK55rDpk2b
qE+fPlS3bl2qWLGi0KCWK1eOQkNDqXXr1rR27VpKTU21yJjkwDE1PDbt2rUj
T09Pevvtt+nZZ5+lV155RXw2n4F26dLlsTzo1jrnvnsvjYaPWkwVKtWgV18v
R0WLvZKnzSeEDvb5Fz+gN96JonLeMymo/kWLnPc375lOUxdqae93eopfWTCd
a47V6ZBOKzbqSKuz1NMCajh79izFxsbm1knL0ZEEhNUUeX0Xrz0o3eeZY1x/
oHn73uTq6S9qzPr4BYr6rqwpmTlzpkX07AAAAACQxy+//CLimUQtpNBw8shZ
l4TWoN5D7WtdwsZ5QBq37JKdi8PNW9RI4FgyjinjWH6tVit7SB/j/v37tGfP
HrP0rUlJSWJf5wh1tQAAAAAAgP3AZ+qcJ4XzpSxatEj4GTg/zPjx4xW1rmzr
16+nP/74Q/ZtCPR6Pa1ZsyZXR8Lnk3xO6eEdLHLysJ5U9j5FSVsS22eUqDdb
4Z98gpyzJyoqipYvXy7q8QIAAADAcWDtVYsWLcR5akBgCFV09xFzPOtbp8av
l772MGSL1xygHgMnkHdAdg4OzhkSHh4hchxzbnY+wwSWg/WZv17OpNWb9TRw
ooZqtUtXHcNhS52rbOP87J0Ga0Se9+NnMkhj5HgfOlfnhPeu2BM5HpbXuf6t
6nN1pKHzGSdovX6e0faOoJYrAAAAIIDOFQAAAHAcLKpzjZ+l7kO5duuxI/Rg
6ji6E9vaYHt3+3WlTA3iV4F6bK1zdSRsdc7NNVE37bxPwyb/SY27PLDJeb9L
1TR61zeVvoxMJd96nPOyYO217K2hA8fsL0e/s3H79m0RS5ZTc8DT21/4Ef1D
qlPf4dNpSfIh6T5OQzY78dtsvauHX7amJIA1JVWofv36tGXLFlGfFgAAAACO
A+emmTVrFlWrVk3EM4laSFy/NbCK0LdyfXfZ6w9jNn3hBmrQvLOIIeNYsoCg
ELHG4tw7J0+elD28Ao7N4L5wbQdzNK7bt28X60cAAAAAAADMRaPR0NGjR0X+
lJx15sKFC2n27Nk0depUGjdunEGtKxvnn7x79660/l++fJm6du0q1vqBQaFU
0c1H5Lxp2aEPzV++S/q+xBSbv2I3te7cP2v/4ivqveXsYTp37ky//vqrtDEG
AAAAgDru3LlDo0aNys0X6OaZnS+wRnQzmjh7tfS1hlrjHBycK8TdK4hcKnmT
r3+Q8Pk2btyYDhw4IHuYHZqbtzNp+wE9jZ+rpcZd1etaC5vO9avu6TRxnpZ2
HtTT7bvqYwygcwXAfvg780+b6lz58w5kbKAE3SjFtlDLFQAAAPgX6FwBAAAA
x8GWOteMG9cpLXmV0K+qaQ+1XIGpQOdqGFnn3L9dyaQ1W/Q0aJLWpLycphjr
W19zTcm1N9xS6MOAVHKtnkaBjcxvt+9YjcgrCiwPx4SxJjS75kCQ0GRU9g2l
bv3H2V2dNGMWt3gzNWjWSfTf1cOHgkLChD+3d+/eoi41AAAAAOwf1l42a9aM
IrPmcM5dwfFMHNcU03skLVqzX/p6wxSbNGcNVY9uJmLKOLYsNCxcrE2mTJlC
KSkpUsaX839cvHiRVq9ebZa+dd26dSKeHwAAAAAAAEvBuowdO3bku/7kc/T5
8+cbXJ+yRvbYsWNCM2tLOLderVq1KDwikjy8svMFVq/TlKbMT5a+DymITVuw
gWrWayHux8PLT+QdqlmzpqihCwAAAAD7hPOGNGrUSPh5uTZ7hUrZeYyHjpsv
fW1hrs1dup2atOoqfL6VPHwpJDTb5ztx4kSRIxEok561PD56OoPmLtNRh4Ea
i8WCOJvOtXb7dBo8SUtrt+rp9z/Mj0WBzhUA+8EWOlctaeinjGOUrJ9jUluo
5QoAAAD8S2ZaKnSuAAAAgIOQMj/OujpXvZ60J4/SgxkTjdZuRS1XYAmgczWM
PZxza3VE3/+QQQtW6ihmqIaqtrSM7rVsyMM610ftLc8U+jTrbzxrpVHYV6a1
Xa1VOk1frKM796B3tQQPHjzIze0bHBJGru5cc8BH1EblHP6yfZjm2ri45RRW
rZ6Ix/L0DqCIiEiqXbs2bdu2TfaQAwAAAMAAXF903rx5VLVqVaEHdfP0FXFM
jVrE0pyk7dLXFwWxwWPmiFq0fD+cU4RrELRs2ZLOnz9v0zH++++/RTy+OfrW
5cuX05kzZ0iv19u0zwAAAAAAoPBw5coVSk5ONmu9umrVKrpw4YLI62JNtFqt
qDHL56lBwaHk4uZNHt7B1HvoVFqSfFj63sNS1v/rOPL0yb4/rlXL9zt27FhK
T4efEAAAALAXMjIyaNGiReI8NSQ0nFw9fEVt+TaxAx0uX6AhGztjGQVF1BLa
XR+/QHGu2rZtW7p06ZLs4bc7eBl84bcMWrFRJ/KH12xrnZznjq5z5XiTLsM0
tHCVjk79mCFiZiyBPcT/WALoXIEzYGmd693Mm7lt38j8g/ZnrKfFKmq3Pl7L
dSSloZYrAAAAkAt0rgAAAIDjYFmd68zcdjNu3qC09avp3oDuZrWV/u1miaMC
HBXoXA1jj+fcd+9n0u7Depocr6WmPcz3e7zrY1jjmp+945NK5SJSyaduGkU2
V/cZdTuli5yaOoTZmw3X8WJ9RW5uX1cvCqtalybOXi3dZ2kJW5J8iLr1H0tu
lQOpohvXds2Ox+I4NFvXdwAAAACAcW7fvk09e/YUczXXcGU9KNccGDk5Qfqa
wlK2YNVekUuE7401vGHhEVSjRg2hO7U2XOPgwIEDlJiYaLJegK/ha1EnAQAA
AAAA2ALWa5w7d07kWTFH77px40a6du2aVfrGOQN79+4t9i2ss+Dz1Kq1m9DM
hC3S9xvWsNmJ31KN6GbiPvn8mO+7e/fudO/ePauMLwAAAADUw7knhg0b9tB5
amBYFE2YtUr6GsLStnjNAWrduf8/56rZ9eajo6Pp+PHjsh+DdK7fzKSte/U0
eqaWGsRYR9fqDDrX5j3TacoCLe39Tk/3HlgnL449xv+YA3SuwBmwtM7178yr
9EPGd7ROP6tA7RzJQF5+AAAAIC/QuQIAAACOg0V1rlltab8/Tg/iJplUu/Wx
Wq59u6CWKzAL6FwN4wjn3JevZlLyt3oaOkVLdTqo84uENEkzSeP6qL1RKYU+
DEilitXSKLCh8ue16aehI99nSB0nR4TfP65vyvoK1llwDdf2XYfQ4rUHpfsq
LW0zFm6kKjUbiXgsjj/Lice6e/eu7McAAAAAAMqu2dS8eXORe8PTy1/M2Y1b
dhG6UNnrCGsYa3e9AyJEXSSu/8Rrk/j4eKvUneLaq2fPnjVbI8AaXK4BCwAA
AAAAgK1JS0ujQ4cOmZWrhW3v3r10//59i/WHNa6xsbHZ+xbv7H1Lm5gBItee
7D2GNY3vj8+NWVfikbVf4/vv2LEjzlYBAAAAiaSkpIicgZFVqpCXT4BYlzRs
HkMLV+2Tvnawpn09aRFV9g0V+Y25fi3nENy/f7/sx2FTUtOIDp3IoJlLdNS2
v8YmulZH1LlGd0ynYVO19M0OPV25Zh1d66M4QvyPGqBzBc6ApXSuM3V9aJy2
Pc3TDS5wW6jlCgAAADwOdK4AAACA48A1WAs8X7dvSrfqV6NbDapbZO5P37ZJ
9rAABwU6V8M42jk31009/VMGLV6jo67DNVStVf661y8jUwukc33U3vRIobIh
qeQRlUahXxn2VQycqKFLf9rGR+Ho7Nmzh6pXr04hoWFU0c2bvPzDafTUROm+
SWtawrpDIu4sbzxWu3bt6NatW7IfBwAAAFCo+f3336lRo0YiB38lD19y9fSn
vsOmSV87WNvmLt1B1es0FTFoXG+Bta4zZsywqNb18uXLtG7dOrM0AatXr6aL
Fy9aRXsLAAAAAACAKdy8eZO2bdtm1rp26dKldPLkSdLpdAXqA9dLE1qSyEhy
r+xHLm6+hWLfktcGjpxFrh5+ooYaj0OXLl0oNTXVQk8ZAAAAAGrRaDSivjzP
x+zzZN9nlz6jpa8VbGVxizdTcERtcsm67+CQMOHzdmbtXUYG0Q8/Z1BSso56
jtJQ9da2qdnqaDpXHpfuIzS0ZJ2Ozp7PIL3e9s/K0eJ/DAGdK3AGCqJznasb
RFO0XWiEtjkN0TYSNlvXv8A61+8yvpU9LAAAAIDdYXGd67nTsm8JAAAAcFoK
onO93bwu3awZTH8Hu9PfQW50MyqkwPO+qOWaniZ7WICDAp2rYRz9nPt+Sibt
O6qnaYu01KJXem4t1zfcLKdxzc/KeKdSuYhU8o5Oo4hmj/svZiXqRN9A/hw+
fFj4+9jvx37P0KrRNGvJVuk+SVvZgJEzc+OxIiIjqUOHDhat6wAAAAAA9Vy7
do2aNGkiNK6u7j4iF/+4uOXS1wu2Ms7D0aR1t39qzgfl1nUtKLdv36bt27dL
1QEAAAAAAABgaX777Tdau3atWevcNWvWmJ3HRa/X0+DBg0W9NNaSVHT3paHj
5kvfT8gwrqHGuYlY68vamr59+5JWq7XC0wYAAABAfvC6ZNiwYeIc0TNrXcK5
N9j3KXuNYGubv2I3RdRoIHzdnNe5Vq1adPbsWdmPx2L8+Vcmbdypp6+na6lu
J/m6VnvVubbqo6EZCTo6cCyDHqTIfmqOH/+TA3SuwBm4kfmHyTrUOF1vGqdt
R0O1jXP1rZbSuS7WjaI0soMfKgAAAMDOgM4VAAAAcBxM1rly7dYG1ejvcG+h
bc1rltC5opYrKAjQuRrGWc65c2B/S4ve6fRRYCqVdLeu1jXHXq+UQh/4p5JL
tVQKaPCvT6NBTDp9s0MvJU+nPXP69GmKiorKereyNa5VohpT/Ird0n2RtraR
kxOokmdAbu2B7t27U1oa8jkAAAAAtoS1mK1ataKIiEhy9fAhb/8Imhq/Xvo6
QYa16tTvobquK1euNGtMucYU77GSkpLMiv3fs2cP8n8AAAAAAAC7hrUdfMa5
bNkys9a8W7ZsoRs3bqj+PNbFTpw4UazTK3sHkIubj6hrKnsPIdNY48uaGk9v
fzEuo0aNMks/DAAAAADT4Pl20qRJ2esSnwDh6+3/dZz0tYEsYx93WNW6WesS
bwoNC6e6deuKvCiOCOfw3n8sQ+QXb9lbI13HqmQB0T/Qh+X7PWafuH5NYU2u
W03nWq9zOo2M09KmXXq6dsP+1p/OEv/D+YEGDRr0mI0ePZru3bsnu3sAqEKt
znWubiBN1sY+VLs1PyuozvUoarkCAAAA+eIIOteMa3+S9uQxi7cLAAAAOBop
8bPU1W5tUe+h2q35WUF1rqjlCgpKQc5AoXN1jHPuHI6fycj1MUQ2TyO/+mlU
oUoqveebKvSottC9lvJIoU+CU8k9Kru2bIeBGjpxNkP20NgFv/76K0VHRws/
H/v7wqvXp/iVe6T7IGXZiMmLRe0FrsEQGVlF1GTQQxgNAAAA2ITU1FSKiYkR
tdXdPLPmY+9gmjxvnfT1gUxr2raH0LoGBIZQ1apVRT1WtWRkZNBPP/0k9LHm
xPpv2LCBrl69asUnDgAAAAAAgGVJSUmh/fv3U2JiosnrX77mwIEDog0l+G9Z
S+LtGyjW6z0HTZS+d7AH6zt8utDWeGWNC49PfHy89R86AAAAUMjhdYxYl/hl
r0u6DxgvfU0g2+Yu3U4BYTWpopsPhYVHUNOmTenmzZuyH5UiOj3RmfMZtHiN
jrp9raFqreyvZqs1zFSda4026dR7tIaWrtfRTxczKMPOwz6cLf4HAEdGrc51
graTUX2rJXSuqOUKAAAAGCYz1U51rlotab87SA+mjMlu98KPlmkXAAAAcGDU
6lyN6VstpXNN37ZR9nCAQgx0ro5zzp2WTtS8p2H/S3izNKpcJ40+D0ul0l6p
NtG8sr2d9VlfhKdS234aunjJ/nJ62oq///6bvvrqK+HfYz9fUHgUzV26Q7rv
UbYNGj1b1GDgWgzsF546darsRwUAAAA4PazJ5PwSnGfCvbKfqLE+dsZy6esC
2bYk+RDV/6qjiBUPCg6lGjVq0KlTpxTHk/WprFM1R9/KuljWx2bYe4AQAAAA
AAAABrh+/Tpt3rzZrPUw14Q9c+aMwdx3+/btEzlo/ANDhJakQ7eh0vcN9mQx
vUeKcfELCBZnq6bk6gEAAACAaezevTt7XZI17/L8277rEOlrAXuxuMWbyds/
gip5+Iq8il26dCGNRiP7kT3G5auZlPytnoZO0VKdDoVD1/qovfFOTUWda7v+
GpqVqKMj32dQqoOVZHCm+B8AHJ3rmVfsRud6NAN7ZQAAAMAQ9qZzzbj6B6Wt
Xkp3+8Tmtvlg6jgL3S0AAADg2NiLzvVu31jUcgVSqV27NnSuDnLOPWWB1iQf
RnDjNHKrmUYfB6VSKXfbaF7fcEuhiGZptGi1Y+T7tBTp6ekUGxtLERGR5Orh
S94BETQzYYt0n6O9GNdgYH+wj1+QiMdau3at7EcGAAAAODVz584Vcy7nmeB8
E8PGx0tfD9iLLV5zgKrXaUoulbwpNCyc6tevb7DO6v3790V8mznx/ElJSfTd
d9+JdSIAAAAAAACOTmZmJv3yyy+0evVqs9bH69ato99///2hNvl/s38iOCRM
5KJp2DyGliQflr5nsDf7qk33rPHxErl6oqKixHMAAAAAgGW5ePEi1apVK3dd
0qhFrPQ1gL3ZxNmrya1yIHlU9hNnzxMmTJD92OjOvUzafVhPk+O11LRH4dS1
Pmqhjf4kt9Dkhyyg5npqGfMNjRy/kVat2Sb7sRUIXgsvWrTIqF25ckV2NwEo
FKjXuXa0qs6Va7mmU6rs4QAAAADsFnvQuWZqNKQ9coAeTBqdf5s//2SFOwcA
AAAcj5QFs+1C55q+dYPsoQCFnJs3b4pc7Ibs22+/ld3FAuEs59x7v9MXyJ8R
mWX+9dOoQtVUet8vlV6vZF29aymPFHKrmUr1OqfTyDgtbd6tp2s3nLfW6/jx
4ymySna9NPbvTZqzRrqv0d6sTexAoXUNCAqhatWq0ffffy/7sQEAAABOCesy
Oc7Izz+77kCPgROkrwPszeav2E1B4VFU0d1H5Cnp1KnTQ3pUrVZLJ0+epKVL
l5oVw881lu7cuSPxWwAAAAAAAIB14LXyiRMnzF4rs7/h1q1bYv3dvn17Cg+P
oIpu3hRRvQEtWrNf+l7BHm3x2oNUtXYTcskap7Cs8WrVqhWlpKTI/ioAAAAA
TgPPqzy/8jzL822Vmo1ErjzZawB7tMFj5godsLdfoDiD3rRpk02flVZHdPJc
Bi1YqaOYoRqq2hLa1vwsqm069R+voZWbdPTL75mU6bxhGgAAiVha5zpHN8As
neuxjB2yhwIAAACwa2TqXPV/XqG0lUkP1W591FDLFQAAAPgXe9C5ilquacgn
BQAwztXrmVS3k2V9NFxz1Ss6jb4IT6W3vVKtpnd9xyeFfOul5n5u674ampGg
o4PHMyjFSX7+2H/Hfjxv30Dh1xsydp50H6M9GtdiqNOwjRgjrp3WqFEjobMH
AAAAgOXg/C116tT5p+6AFzVt20P6GsBebdqCDeThHSzylHC+ksmTJ4saVVy7
wdwaVcnJyXT58mXZXwMAAAAAAACszv3792nPnj1mrZsTExOpR48eFB4eTm6e
flTZN5RmJmyRvkewZ5uTtJ28/SOyxsuXIiOriLyLAAAAALAMY8eOFfMrz7M8
385O/Fb63G/P1q7rYJFfMfCfWvO///671Z4N6zN/vZxJa7boaeBEDdVqB11r
fsZ6306DNTRvuY6On8mgdI3VHgkAAORiDzrXBNRyBQAAABSxuM71hzPGP0+j
Ic2h/fRg4ih17aGWKwAAAJCLPehc07d8I3sYAAB2DuckjR2msbrvI6RJGrlH
pdEnwamiFqul9a6fBKVScOOHP7N663TqMVJDick6Onchg/R62aNtOuy3Y/8d
+/HYn9e+6xDpvkV7tviVeyggrCa5cu20yEjq37+/0JMAAAAAoODodDqKiYmh
8IjI7HpINRqIuj+y5397tmHj40UODh+/IAoJCRGx4ubE6S9fvpzOnj2btZ51
wAUtAAAAAAAABeDq1au0YcMGk9bPw4cPp/Lly1OFiu5iPT5swgLpewNHsFFT
E8nFzSe3ftqBAwdkP34AAMjl2rVr9Oeffz5m/O8A2DO7d+/OzWfM8yzPt7Ln
fHu3JcmHqHqdpqL2bXh4BHXu3FmcTVuKW3cyaccBPY2fq6XGXaFrNWRNuqXT
hHla2nlQL8YMAABsjT3oXFHLFQAAAFDGVjpX/ZXLlLoike72jlHd1oNpyOcI
AAAA5CVl4RyVOlcPq+hcuQY7arkCAJSYvlgnxS8S0CCNXKql0gf+qfR6Jcto
Xbmd8pGpopZsfp/JNWuHT9PShp16+uOa/fticrUk4RHCj8f+PPbryfYt2rtN
mruWXD39qbJ3gPAbr1u3TvajBAAAysjIEHFXx44do40bN9LWrVvFf//222+U
np4uu3sAqCIhIUHMrR5efqJOqex6SAtW7aWxM5ZTz8GTqHn73lS7YWtq0aE3
9R0+nabMW2c366bWnfuLfCUVKlQkT09Pmj17tkl1qA4ePEipqdjbAwAAAACA
wgvnsTt//jytXLlScQ0dHx9Pvr6+VL6Ci1iH817BVmv/2D6jKKJ6A6tYzXot
bHIPbWIGUIVKXhQSGkaNGzemBw8eyH78AABAaWlp9NRTT9H//d//5Wv8+w+A
PXLnzh1q0KABBYeEiXVJuy6DpZ9VOorNWrKVPHxCyKOynziTXrp0qdnPgWuP
HjudQXOX6ajjII2oTSpbQ2qPxrVsB03S0tqtevrtiv3HUgBgCpcuXaImTZpQ
w4YNDdrJkydldxM8gmydK9dy1VCa7GFwCpCzBgAAnBs1OtfzrRrRjy0bPmb8
78Z0rpmadNIc2kf3J4w0WUfDbZ/c+A3t2bOHvvnmG9q/fz/99ddfEkfKeeE5
/fTp0xhrAABwAJR0rjlz9lkfFzrrXSHXfvCpYBGdq6Farrdv36Zz587Rjh07
aNmyZSIP9qZNm+jEiRMiLzbq3lkGaBmAI8C5N2X7S9hYl+odnUblIlKpjHdq
gfWub3qmkEdUquLntuiVTtMWaWnfUT3dT7G/3z721+VqSXxChD9Ptk+RjTUj
k+etExoStsl2pCPJsW79xwl/cWBQKNWqVUvMbwAAYGt++eUXGjJkCH388cdU
pEgRg3FYzzzzDPn4+Iga1FyvEQB75Ndff6Xq1auTf2CImGMHjJwpbZ4fO2OZ
qN9etOgzBt8rtqefLkql3nqHatVvRfErdkvr7+I1Byi0anTWuFWm8hUqUN26
dVVpXLds2UJ///237EcPAAAAAACA3aDRaOjo0aOUlJRkcB3dunVrKl++Qtb6
25P8Q6rTwlX7bLb2r+jua3SPUhB7ocR/bLZ/CQqPokoevhQZWYXi4uJkP3YA
pMNxWvn93qxZs4a0Wq3s7hUKOEbO2G/k119/LbuLAOTLxIkTs+bTSHJ196GQ
KtG0eO1Bq8zfnGfPWrk2jNnU+PVWXZf0HxEnzqIDAkOoZs2aIv5GDRzy9PPv
mbRio476jdNQzbbQteZnrPeNHabJWi/r6PsfMkhruZK5ANgdkyZNUtxzcfwk
sC9M0blWn+VOHjGfGLXgGDcKifFQbQ1j61CXLl2MGmuogXGQswYAAJyfzJQU
o3qWax2b01NPPmlwLpgT5v+YzlV/5RKlLk+gu706m6Sd2VynKkV//D69+UJx
g59XokQJcnFxEbE7vG9H3nnz2Lt3r8gXU7p0aYw1AAA4EMZ0rkpz9qzP3n9Y
51rTNJ3ro7VcL168SKNGjaLy5csrntuULFlS1A88cOAANK8mAi0DcCR+vZxJ
tdvbp08n9Ks08ohKo7IhqfSmh/l613d9U8ivvrrPrNYqnboO19DiNTo6/VMG
6fRynw/76aKiooTfjv13/b+Ok6bN4PqoVWs1IRc3Xyr1VhmhGTGkI+G/4b/l
a2T1l21J8mFR/7aimzdFRETSoEGD5D5QAOwExGTZBvZnBQUFmRW3+sQTT1C1
atVE3C4A9gLvC3v06EHhEdk15us2bidlfuf6seVdK5v1bv3npVeoZce+lLBO
Tm6OSXPWiHVShYpuYl8+fPhwg3H5/JvMe3jsxwEAAAAAAMgfro3GuVwfXUtP
nz6dKlasSOVdKokz1a8nLbLpuv/tdz90eJ0r2+hpSVShkjf5BQSLM4rff/9d
9iMHQCrffvutwXfzu+++k929QkFISAh0rsDh+PHHH6lq1ark4xdELm4+NH7m
SqvN3eVcPK22BjFmwyYssPq6hHMY5vh7hw4danC8r9/MpK179TRmlpYaxNhn
DIQ9WLOe6TRlgZb2HNHT3fs4fwaFB3vUucJvr8xfmZdV61w/CCspZS48cuRI
vn3H8/0X5KwBAMgGv8nWR0nnuql2VaNzwQBP1+y/7dSCbjWpRff6dTW5NtwP
LRpQnY/eN2s+f/PNNyk+Pl7UNzOVwvj9unLlCjVo0MDmYw0AcH4K42+qDFIW
Gda5Ks3Z/d57q0A61/TN60UfOB9S586dRby8OfOJt7e3qD9qKoXtOwYtA3A0
9HqisbO11H2ERliPkf9az1HZ1mv0v9b7H+sz5l/rO/Zf4zyobP3H/2sDJmTb
wIn/2qBJWmGD89iQyf/a0CnZNmzqvzY8y7p9raGGsekU0CCNPg1NpY+DHrdP
8rPgbPOOVq7t+qjV6ZAu+pT8rZ4uX7W9j2fYsGEUERkp/HZR9VpK0WNw3bMa
0c3o6aKP61qVjK+pWbe51Npp0xduIFdPf/LyCRR1cQ2dLwNQmEBMlvX55ptv
6OWXXy6wT4xzmo4ZMwY6N2AX7Nq1S8ylnt4B5O4VRLMTt9l8Xh85OYH+++rr
BX633iz9Lk2cvVrK2qRN7EARa1++ggsFBgbS4sWLH9ovL126lE6ePEk6HRLn
AwAAAAAAoAaOp1i/fn3umrp+/fpZ622u5VqZoiXk53nuOcM54gtqttS5sjVo
3lnkOVLSlABQGMCZqlyMjX+OITYe2CM9e/ak8PAIkTuiWbueVp23P//SzWpr
EGNmC53rjIUbydXDj7x9s/29p06dEuObmkZ0+GQGzVyio7b9NdL1o/Zq0R3T
RczF+u16unIN/iZQeLFHnSvWmMqYonN9L+gNKXOhoTgkSz7fEydOUFxc3GNm
Tk4qvia/to4fP25yW2pBzhoAgGww51ofJZ1rQOk3jc4FA1y/pFt1IujvEE+h
mbndor5JmpkhXpXo+aefLvC8/vnnn4vviylY+vtl7/P+6NGjqXjxgvtBzBlr
AIDzgznbNhjTuSrN2QXRuYparqmpdObMGSpbtmyB5xKuGZ6UlGTSvRemvTq0
DADYFq2O6OS5DIpfoaOYoRqq2tI2+Vib9kinyfFa2n3Y+rlN+feb/XTsr2O/
Hes1bR2T1bH7MHr5v/8r8G8bt9Gpx3Cb9z/HOnQbShUqeVFoWDi1b98eeYBA
oQf7AOuSkJBgdn4ZQxYdHY3fLiAV1ly2bNmSQkLDhEazS5/RNp/P+w6bRkWf
KWax9+qtMu9T/Mo9Nr+Phav2kXdABFWo6CFqunKsW048Pucyvn//vuzHDQAA
AAAAgMPBe+Zz584JX0+FChWovIsbubj50rQFtj1TnZO03aLnAY+arXWuMxO2
PKQpuXDhguxHDYA0cKYqj1u3blG5cuUUfyMRGw/sjWPHjon5s7JPdt7AuUt3
WHXeLvuFi1XXIYbMFjpXttad+wu9sI9fOFWN6i7ydNdog5qt+Vn11ukiz3nC
Wh2dPZ8h8p8DAKBzdVRM0bm+4/ealLnQFjrXTz75JN92OGbVVOrUqZNvWyNH
jjS5LTUgZw0AwB7AnGt9jOlc10VFKM4Fj2pmTNG59vWw7H64SJEitHr1atX3
bunvlz3P+5wPU+ZYAwCcH8zZtsGQztWcOftmzWD1tVw3racbN27QW2+9ZdG5
ZPv27arvvbDs1aFlAEA+d+5lCu3ppPlaoUW1hX+ItbWssV2wUic0t1oLl9zq
06cPhf2T35f9draMX2JrGzvIor9rbJz/39b3wSb0JP4R5OHlL/zJO3futOzD
AsDBwD7Aevzyyy/0wgsvWPz3ky0mJkb27YFCzObNm8Uc6l7Zj/xDqtPiNQds
OpdPi/9GxHNb+r3y8g+XsjbpM2zqPzVdK5Kvry8lJyfTtWvXZD9mAAAAAAAA
HB7OI1rZy0ust5u07mbztf6IyYutciaQY7bWubI1b99bnFFzTddRo0bJfsQA
SANnqnI4fPgwlSlTRtVvJGLjgb3Rq1evXF9vRxvkA/740y+tug4xZLbSuc5f
vkvohT/6zJ9eKx1BvlHHpOtJ7cla9dHQ9MU6OnAsgx6kyP72A2CfQOfqmPyV
eUm1zvVtr4Ln8TfHbKFzff/99/Ntx5zY2Zo1a+bbljV0rshZAwCwFzDnWh9D
Otff2jahz/77iuJc8JjOtaU6neucMH+rzO9Fixal/fv3q7p3S3+/7HXe5/z9
sscaAOD8YM62DfnpXM2ds9XqXO/2jiH9gwcUHBxs8bnkf//7H125ckXVvReG
vTq0DADYJ5f+zKR12/Q0ZLKWare3je61Vrt0GjRJS2u26Om3K5lUkLLMXHuA
tSRePoHk5hVI85bttGns0ri45fRMsWct/rvGOQG69B1j81gsth4DJ4r4tpDQ
7JquqJsNCjPYB1gHrnfp7u5ulXVhjvF5EQC2hvPvtG7dmkJCsmu5skbTlnP4
4rUH6cNPlP2f5lqzdj1tvi5JWHeIAsJqZo2nJ/n7+9O2bdtkP2YAAAAAAAAc
njt37gj/j19AMLm4+dD0hbat5crGZ5/WPBeQoXPlmq5cG9fXP4iqV68ucuwC
UBjBmaptuHfvHh0/fpxmzJhBnp6eJv1GIjYe2BNcAz3H18vazPgVu60+Z3/w
8edWXYcYMlvpXNnadRlM5V29qWSZMPrIZbB0balMq9c5nUbM0NKmXXq6eh1+
bwDUAJ2rY2KKzvUt91elzIXQueYPctYAAOwJzLnWJz+d6/a6Nah0CXUaC3N0
rhfbNKYSzxS12hz/xRdfkF6vV7z3wqBz/fvvv+nFF1+UPtYAAOcHc7ZtSF08
12Jztlqda/qmZIqLi7PaXFKtWjVV9+7se3VoGQBwDHRZS9/TP2XQotU66jpc
Q9Va2Ub32qRbOk2Yp6UdB/R0645pviXOi8/58Tm/b5uYATaNW1qwai+9VSb/
31xL2Esvv2oTX+6jxnXnuKarp3d2TVeOkwCgsIJ9gHXgeozWXBeyvf3225Se
ni77VkEhg32zPHd6evmTb2AVoTu15RzONZjUviOcU6PEiy9RkSJFTFqb2Hpd
wtZ76NTcHBzIcQQAAAAAAEDBWblypdi7uLr7UJ2GbaSs8xu1iDW6/3j66aIF
spdfkbN/qf9VR6qYNa6RWeObmJgo+1EDIAWcqVqHkydP0ueff05vvfUWFS9e
vEBnp4iNB/bE5MmTKSIy29fbqlM/m8zX731Q1uo+ivzMljrX2YnfZq1JfOn9
soH0WukqFNLoD+l6U1tZjTbp1Gu0hpau19GPv2RQRobsbzkAjgd0ro6JKTrX
UhWV685Yw6BzzQY5awAA9gzmXOvDOtcr7ZrSngZRNN6/Mrm98ZpJc4E5Otc2
X35m9Xl+4cKFivdeGHSunTt3touxBgA4P5izbcNfc6ZZbM5Wo3PNqeVqaI6z
hHHs8A8//KB4786+V4eWAQDH5N6DTNp3VE9TF2qpeU/baF6rtkynjoM0NG+5
jo6fyaB0jeH+3bp1S+TF5/z4nCd/1pKtNo1ZatKqq8lzwhNPPGnSNXWbtJcS
j9Wp59fCnxweHkHDhw+33ZcOADsD+wDrULduXVW/gRyz1bBhQ5o2bRotX76c
hg4dSq6urqp/Q6dOnSr7VkEhg7+jPHdWqORFsX1G2XTuXpJ8iF57403F9+L5
4iWoYfOY3FwanLdjwMiZ9HrJt1S9V2NnLLf5umTRmv1U2TeUKvsEiFj8n376
SfajBgAAAAAAwKFp06YNBYeEiXwyttRb5LXQKtEG9x28t5HRJ0vYqKmJYlyD
gkOpefPmlJmJmmGg8IEzVeuwd+9ei/nVERsP7IXU1FSqXbs2+QcEC7+krWrM
l3n3I6vHrzxqxYo9S1Pj19t0XcL5N8q5eNNrpcOpgv9i6fpTa1rb/hqalaij
wyczKDVN9jcbAMcHOlfH5JoJOtc3vnzZ5nMh52q5dOlSvn139thZ5KwBADgS
mHOtw0NzwfPPF2guMFXn+kf7plS0iHLccsmSJWnBggV05swZsV8/e/asiL0r
UaKEqn5xPI8Szq5zvX//PhUtqlw31xZjDQBwfjBnWwdL7t/M0blyLddVq1ap
ar9cuXK0Zs0aoani+eTw4cNUq1YtVde2atVKcSycfa8OLQMAzsEf1zLpmx16
Gj5NS9EdbaN7jWqbTv3Ha2jlJh398nsm5Q0Lylt3oG7jdjaPWeIcuEq/S6xt
9QuuRmOmLxUaDTb+b/+Q6uL/U7r+7Xc+kBKPNSdpu7g/1hCzlpjnPwAKI9gH
WB4+z3n22WcVf/8qV65MKSkpj12v1+upX79+qn5DfX19bX+DoNBy8+ZNMWf6
+AWJOXTu0h02nbu79R+n+E6wxpXXIfldz/lC3nnvY8U2vmrdXcrapHXn/iLW
jWs78H4RAAAAAAAAYB4//vijOFP19A4gn8BIkTNHxhq/vKuXwX0Hr/1l9MkS
tiT5sDj79fTyF+N86tQp2Y8cAJsj40z17t27ou0lS5bQ/PnzRX1I9jUfPHiQ
dDqdVT6T+fnnn2nx4sXCd85nln369BGfzX55S+fpgs4VOCPbtm0T86Wbpy9V
r9PUZvN19wHjqW3sIItYiw69Fd+5J598knoOnmTzdcnIyQki/8bbH4RQ6Y9b
SNeiWtIaxqbTmFla2rZPTzduIa8IAJYGOlfHRK3Odby2IzVY40c153katWbz
qlGLeTUN2rD4vkKfMXPmTMXvS5EiRWjjxo0G++7ssbNYywMAHAnMudbBknOB
qTrXFdXDFNt0d3ena9eu5dv3y5cv07vvvqvYRrFixUijMVLYiJxf58rrHXsZ
awCA84M52zpYc85W0rlyLVeu+x4cHKzYtqenZ74x9kz37t1VzSWGrs/Bmffq
0DIA4JxkvZp07kIGLVmnox4jNVS9tW10r+yzGjs722fVrHm73LoDwycstHm8
UvEXlHPncF1UQ2107D5M1Rw3Y9EmKTFZrB1mDTH7lznXAwCFkcISk2XLeCy+
L6XfPc4xc+fOHaPtcE0UpXaefvppMZ4A2ILVq1fn5t+o91UHm8/bn35RUfGd
UIql6tpvrGIbLm4+UtYlXOuA13z+gSEij5JWq5X9yAEAAAAAAHBIZs+eTZGR
kUJL2iZ2oJT1PdubpQ3HalSt3URavyxhHboPQ56eQgDHEXEtIs6NrHSOVdgo
yJlqx44dqWLFigZt4cKFD/39nj17yMvLsG6e7eWXX6bGjRvT0aNHLXJ/GRkZ
NGfOHHJzc1M8R/Hz86N9+/blXvvrr79SQECAUeNz4PxAbDxwRvr370+hYeHi
3K/v8OnS53BTjf3Frh5+iu9cyw59pPXPN7AKffK5P71WOoL8a5+Srk8112q2
Tad+47JzY//8SG5sAIDlMVfn+scff1BCQgKNGjVK+Jt79+4talzwPvTQoUNZ
7675L6+t/faOmEfFFJ3rEG0jRZujG2iwjSW6MaSldPFMDcWX5rVZs2YZ7bup
z3fFihVib5Cfvfbaa/m2Ex0dbfAaQ+bi4pJvW3Xq1DF4zYkTJx7rL9byAABz
+f3332ndunUip8CgQYPEHornCa4zlp6ebpXPxJxr+Vg5RqbOtZPLF0bbY30G
1xU1hhr9Jht/Z41hzvfLkeZ9JV2RLccaAGBbCsOczRSGeVumzjV94zpRl5U1
qMba5VxSPCaGYD/We++9p9g/Y/moGGfeq0PLAEDh4EEK0YFjGTQjQUet+mis
7ssKiD4n/HGffulP3v4RNq87MHpqouJvkqunv2I7HO+k1M6w8fFSfJ9Dx80X
fuWQkDCKjY2V/RUDViQtLU3E15w7d052V+wOZ47JkhWPxf5Mpc/bsmWLYv/Z
T/rcc88ptrVr164CjxUAauC5MuSf/Bu2nrs5J4bSu/Dxp18qtrNw9T566eVX
qdizzxm0Dz8pJ2VdwhZRowG5V/YTemJDvzEAAAAAAAAA4zRr1owCg0LF3mXi
7NXS1vfPFDOcH7Vdl8HS+mUJmxb/jRjfgMAQatSokTiDAY4PP8fr16+LGr18
dpWYmCh8oJs2bZLdNbujIGeqISEhRs83qlevLv7ut99+o/DwcMXzkLzGcWRN
mzalv/76y+x7++GHH0SObFM+N8e3zrEsp0+fVvxbQ7mrERsPnA2O6+B32scv
SPhU41fukT6Hm2qcM1jpfQsIqym1j21iBlB5V296vXQ4lfOeJV2vqtaqtkyn
joM0NG+5jo6dzqB0lKkBwKaYqnPlvOne3t6KNSw4prF9+/Z09epVk/tk7hrT
3n32jKX89l4BnvSJ/zuPWb99rSyucz2ZsVd8Pq8rlfrcunVrxTEw9fmWLFnS
YmtjS9uAAQMe6y/W8gAAU+A4Pp6Lueajsbn1qaeeIldXVzpw4EDutaylMTbv
sfFvkjEw5yrPuabGyjEyda6+b5Uy2l61atVUjd9HH32k2DfOCWgMc75fjjTv
BwYG2s1YAwCsj6PO2QzmbdvkHDVF53q3V2dRy5V9kErtRkVFKY7fxIkTFdtR
0gc5814dWgYACifXbmTSpl16GhmnpXqdLV/r9UvfecIf92VFb2rZsa/NfYJd
+o5R/D3iv1Fqp1OP4YrtdB8wXorfc/Hag+ThE0LevoFCT3Lt2jXZXytgIbhW
Oj9Pzk3BcVg5MVm//PKL7K7ZHc4akyUzHqt+/fpGrytevLjq/EW811Dqx7Jl
y8waIwBMgd9Fnit5zuS5k+dQW87ZauqwxvYZJTWeylL3WaGSF4VHRNKECRNk
P3YAAAAAAAAcjosXL4q9i6d3APmHVJe2tp+ZYNw/N3zCQun7j4JaUEQt8vTy
F+PN5zDAMbl37x6dP3+edu/eLfJR8xnqo4Yz1cex9pkq5+Z+8803TT7bzLEy
ZcrQjz/+aPJ97dy5U5Wv2pDx7wGfyZt7rsoxMOZ+9qOG2HhgD2zfvl28F5U8
fKlOo7bS525Trd/XM+jJJ580+q69VeZ9WrBqr9R+jp+5QuTfePuDEHr745bS
9avGrEm3dJowT0s7Dujp1h0UbAVAJmp1rrdu3aIGDRqYvBZ54YUXRN0VUzB3
jWnPPnvGFn772HUNH9G5diiQzjW7lqtGzOVcQ8bYZ3/++eeiFo2ln68jxc4y
0LkCANTC+gw1+ra8xvuSmJgYSklJEdcr/b2hc4ccMOeaP+caG1uZOtcPX/qP
0fZ47acGfoZKfePzM2M4u871448/tpuxBgBYF0eesxnM27bJOWqKzjVtw1rx
+d26dVNsl/W/SnDtM6V2Pv30U6NtOPNeHVoGAACnq//pYgYtXa+jXqM1VKNN
wXWvZcq2E/449suNmb7U5j7BnoOUcxyoiccaNmGBYjs9B0+S5vts1LILVXT3
EX7mdevWyf4qgQLAddM5dof3tzxXPhqPtWrVKqF/BQ/jjDFZsuOxlPYe/P+r
pU2bNor9mDZtmknjA4A5rF+/XrwbrllzZqMWsTafr6vV/sroe/DEE0/SnKTt
UuOpLGEcC89rP//AEBE3gZpIAAAAAAAAmMbKlSvF3sXFzZtadOgtbW1v7EyU
fZ/xK3ZL338U1Lh2mkslb4qMrCLO3oBjoNFo6NKlS3TkyBFxHp6frjWvrVix
gnQ6nexu2x3WPFP19fWld955x+yzzRzjvOLHjx9XfU+sdX7++ecL/Ln16tUz
+1yVv2vx8fE0f/58o+bj46P4GYiNB/bAmDFjKCw8Qpz39R46VfrcbYrxWetL
L79q9D3j2vVjZyyX3tclyYfJ2z+CPvrMn14rHUHBDX6TrmfNsVrt0mnQJC2t
2aKn365kUiakrQDYDWp0rrwWrlChQoHWRgMHDlTdJ2tqbpw9j4qlda7fZ+wV
Gmel+FVeP3NcrTWeryPFzjLIWQMAUMO8efMUc+kozWlqdBkyda7OPucaG1tL
zgWm6lyff/ppo+2x30ANajQcrIcyhrPrXFkTYy9jDQCwHo4+ZzOYt22Tc/Qx
nWuN/HWuObVcGa5Nq9QuPxslMjMzhS/MWDvslzeWm8qZ9+rQMgAAHiU1jejw
yQyalaijtv01Jvu8QhpeEX64Dz8LIE+fUFqSfMjmPsGRU5Yo/h4NHjNHsZ3+
X8cptjNqaqI03+fgMXOFfzk0LNwkHwOQD+eQ4L3soUOHaM2aNYoxWbymA4/j
bDFZ9hCPVapUKaPX1apVS/XzadKkiWI/xo0bp7o9AMxlyJAhYq7kOXPgqNk2
n6/Lfu5i9D0o8+5H0uOpLGUhkXVyayKZcw4CAAAAAABAYYbP90JCs/cuw8bH
S1vXd+41wuD+5b//e0P8zezEbdRj4ESRSygwLErse9y9guj9jz4jFzcfiqzZ
UGhiFq7aJ32fkp+NnJwgxjkkJIx69eol+9EDA3D+pOvXr9OpU6doy5YtlJSU
pHiOmteOHj0q+xbsEmueqVrS3nvvPbp7967i/Vy5coVefPFFm/VLKXZFCY57
V/oMxMYD2XCMTcOGDUU+O54vZy3ZKn3uNsUq+4YqvmdtYgdK72eOcV7jci4+
wr/uFposTddatWU6xQ7T0IKVOvr+hwzSIlUEAHaLGp1rQWJO89r06dNV9cla
mpvCkEfFkjrXRN1YUctVTR1fztGiFmeOnWWQswYAoMTq1asVa2SrsRo1aij+
jSyda2GYc42Nbd65YN7MOJoe7JuveZZ6Q/FzTNG53s6yGh+8+5DVjggX9e5y
jGvmKcHnqCVKlDDaLx7nTIUERs6sc+V7zzuu+ZktxxoAYB2cYc5mMG+rzzk6
s3Vzi83ZhnSuObVcGSVtcdGiRVXXNVNTE/fMmTMGr3fmvTq0DAAAJa7fzKSt
e/U0ZpaWGsQo13p1D98k/HBfVPCh+k07SfEHzl++S3Gd0rhlF8V2uP/G2ihS
5CmaL7F+AddOcHHzJT//YPF7jdz09gvvb//66y86efIkbd68mRITE1XHY/Hf
3r9/X/Yt2CXOFJNlL/FYH3zwgdHrOnXqpPr5fPrpp4r94FrFAFgT3jNGR0eT
X0CwiLXmNYIt5+qEdYeoWLFnjb4HQRG1Hrpm8rx11KnHcGrSqivVrNucouq1
pGbtelJsn1E0bcEGqTFXSta6c39Re4p1rsuXL5f9+AEAAAAAAHAY+Owo795F
Zs1UY2eiH5X9kqpENaaizxRTdf7w3HPFxZ5m7tLt0vcreW3h6n1U0d2XfP2D
KCoqCueqdsS9e/fo/PnzwlfO+0pTdK2P2p07d2TfTr6wdjchIYHatWtHffv2
Fedjv/76a4Ha5N8QzqvI56WzZs2inj17Ur9+/fKNp3KUM1W2+vXrK957RESE
TfsEnSsoDHDtbD7f8/QOEPksZM/bplhM75GK71h5Vy/p/cxrfYdPF3riku+E
UdlKo2yqbW3WM50mx2tpzxE93b2PGFwAHAU1OldL2QsvvEBXr15V7JO1NDeW
NHvNo2JJneupjH2ilq/SZ/I8bwrOHDtrCljLA1A44fzezzzzjM1+p2TpXC1p
9jrnqj3TyXxw36AudYCnq+LnmFrPNa89mDFRVR8f5ciRI4r9qlChgmI7zqxz
tRSWGmsAgOVxljmbwbytft5OXRJvsTk7P51rdi3XB9mflZoqaqwaa/Ojjz5S
1W+mcePGin1cu3atweudea8OLQMAwBQ4JOLCbxm0YqOO+o7VUM22j+teP/MY
TyXLhAl/XK/Bk6X5BMt+Ybx22gsl/iPqDhi6fmbCFir+gvG8O59+UVG67zOi
RgPy+Kdumpp8QsB28LqPa8/v2rWrQDFZfL29gpgs9aYUk2Uv8Vhca/jWrVsG
jdfpauCYRDV5kc6ePauqPQDM5eeff86OycqaK8Oq1rX5PD01fr3y78NXHWlJ
8iFq2bEvlXpLOc/W2+98IGomcVy27HXIo8Y1p3JqzQ8ePFj24wcAAAAAAMBh
4LOQbD2JP4VUiZa6rg8Kj7L4OcTzxUtQt/7jpO9Z8lrec1XWVQI5aDQaoafi
+KB169YVSNea17Zu3Sr71h6DYwBCQ0MN+sBdXFzo4sWLJrXZvXt34TPn/NCP
thcQEJDvNY50psr2/fffG+wP54i0dX+gcwWFgW3bton50dXdh5q07iZ9zlZr
nFfjPy+9YvT9Kvbsc+LMVnZf89qMhRvFmeo7HwZT6Y+aW1XXWqdDOg2doqX1
2/V0+Sp0rQA4KrbUubL16NFDsU+OoLlhs8c8KpbSuXIt1+u3/6LXX3/d6Oex
dpn3YKZg6vPt1q0blStXLl/Lb+/CxrWIDF1jyAzFWL/xxhsGr1Fbozg/sJYH
oHASGBho03nBGXSu9jrnOoLOVX/xZ1V9zAvXXVGjW+E1pBLmfL+cdd639lgD
ACyPs8zZDOZtWTrXoMdruX6zJvezuLaqUpvBwcGq+s2w7kKpPWN1Rp15rw4t
AwCgIKRriI6ezqC5y3TUYaBG+MfKlG1LZT4IFv64KfOTpfkEm7frpfib9OEn
X9DE2asfu5b/jf8/peubtuku3feZt26asZwNwPpwTNbvv/9Ohw8fFs/CUjFZ
HP9kbyAmyzwzFJPliPFYSnTt2lWxD0899ZR4bwCwJhs3bhRzZEU3H7E2sPU8
/fXERYrvQr2vOtDb735o8nv83/+9Qd0HjJe+Fslr85btpAqVvMk/MIQaNGgg
+/EDAAAAAADgMOzYseNfPUmrrlLX9V9UcLfaeUS12l9J37fkGO8Rea/I4755
82bZX4FCA+e449x5p06doi1btlBSUpLFzlHzGue9sidYw/vKK8a1V2wvvfSS
6nM7Pms0dD7LPtvTp0/ne50tz1RLlCghcirPnTuXFixYQJ07d6ZKlSqJc0G1
bTRv3txgf7g2gtp23n//fWrfvr3oB4/xjBkzyMvLy+bnqoiNB45AXFwcRURE
Ss9pbKqpydVhD77d/MzTJ5Q+/DSAXisdSeFf/W0xXWu1VunU7WsNJazV0Znz
GaTTy/52AQAsgbk6V147/u9//6Mnn3zSpOvU1CJxFM0Nm73lUbGUzvVUxn5q
27at4udNnTrV5O9cQfYQj8Lrckuts2vWrJlvWyNHjjS5LTVgLQ9A4UNNjWxL
m7PoXO1xzrV3nauptVw5NpP373z+ptSnsmXLkk6nU2zTknM+48jzfl6sMdYA
AMviTHM2g3nbPnSud3t2yq3lyrA/WanNevXqqeo3wxpWpfZiY2MNXo+9ujLQ
MgAAmKvX0sjTuyp9USGQ3LwCRW0yWf7AxWsPinpnSr9NRYs+I3yHtRu2Fsb/
zf+mdN3/Xi9F8St2S/d7Dhw5S/iZw8IjaPz48bK/AoWKR2OyeB1n6Xis1atX
51vHVCaIybJ8TJYjxmMZY9++far8ox9++KHV+gBADuyrDY+IEHNl32HTbD5P
9xxs3Zza/NvZsHmM9PVIXvMPqU5ePgEiVvzGjRuyvwIAAAAAAAA4BLzPj4zM
1pN06z9W6pr+jVJvW3UfE924nfR9S85+jcebdTyzZ8+W/RVwajhXLtfM3bNn
j4g1sIauNa8tW7aMtFqt7NvORY0PNa/xuRrXBlAiKsqwnqtDhw4Gr7PVmSr7
8u/cuWOwD88995yqdooVK5ZvO5xv0pS+GMrtzHEJXNPKVueqiI0HjkDv3r0p
OCRMzJPjZ66QPmersSFj5xn0M+XY+x99JtV3bcxqRDejT8v50WulI8i31vEC
aVtb9tbQ9MU62n8sg+6n2JePEQBgGUzVuQYFBdHevXvFupy5f/8+7dy5kz7+
+GPVbfA1xrCV5sYZ86hYQueaqBtHew/sVpwL3d3dRZyLqSB2Nhus5QEofHh6
epo0L4wePVrE1fHZVK9evUy6Xu3vIeZc68fKydK56n/9xWi/+Hn4+PjQ559/
Tq+99prq++b1wbZt21TdO3Su2dhirAEAlsWZ5mwG87YJOtfEBVbTuaatX/3Q
Z61atUqxTWP+uUeZP3++YnutWrUyeD326saBlgEAkMOFCxeEpsHDy5+qRDWW
7hMcNmEBFSmifo5Wa8WefY7GTF8q/f7YpsavF37mwOBQsS4B1oX9N7aMyTp+
/LjsW34IxGTl34eCxGQ5ajyWIfj+PvhAOccA27Bhw6zSBwDy0qNHj9yYrPxq
uFvb2nUdbPF1SH5mL3HibNwXN08/sSY8evSo7K8AAAAAAAAADsGIESMoNCxc
7F2+nrhI2np+SfJherpoUavvYbr0GS197zJ6aqIY75DQMBo8eLDsr4BTwTlv
L126REeOHBFxAtY+Q33U9u/fL3sIchkwYIBZ74i/v7/Rdk+cOGEwhv2///0v
3bx50+C1tjhTjY6OVoyf5zN2teeZ+dVcbt26tapre/bsabQfzKFDh+jpp5+2
ybkqYuOBI9CoUSPyDwwW82T8yj3S52w165d33jOu1WJ/1ehpSdL7ashadOhN
5Vy8hc7VLewbk3St9Tqn04gZWtq4U09Xr0PXCkBhwBSdK+cu0OvzL+b8559/
ilg+Ne38/PPPRvtkC82Ns+ZRsYTO9ZR+n2LcsbH84kogdjYbrOUBKFycO3dO
9W/58OHDDZ6DTJgwwSSNiT3oXJ11zrVnnauaWq6suVR7r3nn//j4eFX3zUDn
mo0txhoAYDmcbc5mMG/L17mKWq4PHs75tWjRIsU2+/Tpo6rfzMqVKxXba9Cg
gcHrsVc3DLQMAIC87Nq1S2gaXN196Ks23aX7BNn6fx1HzxcvYfK+w5C99sab
NGx8vPT7yrGEdYeoorsv+foHUa1ateyu9qejw3n/L1++LGKykpOTbR6TdevW
LdlDkAtisgxTkJgsR43Hyo+//vpLdd6e119/nR48eGDxPgDwKA0bNiS/gGCq
UMmbFq7aZ/N5ulWnfhZbgxizJ554kvoMmyp9XcLWNnYQubh5izUhz50AAAAA
AAAAZWJiYkQeO9aTTFuwQdp6fsbCjTbZw/zv9VK0eM0BqXuXmQlbsvMHBoWI
vMLAfPjs7Pr163Tq1CnaunUrJSUl2fwcNa+xxtYe4DrBBXlP1qxZY7DtGjVq
GLyO8z8bw9pnqsWLFxfnhGoYP368qrEYNGjQY9eqqT/26quvGoypeJQuXbrY
5FwVsfHA3klLSxPnet6+geTlHy79rFGNcf4MpffKOyBCej+NWbf+48S65PXS
4fSl7zyjutYabdKp12gNJSXr6MdfMsiMsnwAAAdHrc6Vf8+V4LWNmrbYD20M
a2tunDmPSkF1rlzLdfmqZYqf06RJE8V+GwKxs9lgLQ9A4YJzRaj5HVeTP4/P
y5Rqbqv9PcSc+zDWiJWToXNVquXKmKO9jIuLU3XPOUDnmo0txhoAYDmcbc5m
MG/L17mmrV/12GfNnDlTsc2BAweq6jfDuYKV2mN/oCGwV88faBkAAI/C9dsj
q1QRWpKYXiOl+wRzjLWupu47DBn7GWXfz6MWEFqDvHwChJ/CnnSRjgjrhG/c
uCHyWMqOyVq/fr3s4cgFMVnKmBuT5ajxWI/CdXtLly6t+jsxY8YMi34+APlh
DzFZzdr1tNgaRMle/M/LdlFfofeQKSImKyIikubOnSv7awAAAAAAAIBD0Lhx
Y/IPyK6btnC17XP05NjgMXNV70E+/OQLCgirSbXqtxLakTdLv6va98vWskMf
qXsXzh/o4uYjciPVrVtX9lfA4bh//z6dP39e+MdXrFghVdea15YvX26wXpUt
Yc0v5/DP+51/7733xNkd5wTnnIKfffaZ0XfEUBz68ePHDV7j5eWlmAvT2meq
amIZcmB/xrPPPqvYZmho6EPX3b59W9XvDedmVwvnW1STqx06V+DsXLlyRZyp
enr7U0T1BtLPGpVsSfIheuvt94y+U/x7PHH2aul9NWZDxs4T68BS74RRWbcx
j2lb2/bX0MwlOjp8MoNS02R/SwAAslGrcz148KBiWzqdjl5++WXFtnbv3m20
HWtqbpw9j0pBda7f6/Yp7i14natUk9cYiJ3NBmt5AAoX3t7eiu/8u+++SxqN
RlV7XL9EzbwgU+fq7HOuvepcH8RNUtUvc7SXvAbgs0i1QOeajS3GGgBgOZxt
zmYwb5ugc01aaHGda361XNWOoyl+qY0blfNPBwcHG7wee/XHgZYBAJAf06dP
p/DwCOGH6z8iTrpPkK1lx7703HPFTd53GDKul8axW+w3lX1vOVY9uhl5ePkJ
v/OFCxdkfw0cDs7DwOO2d+9eu4rJ4rnWHkBMljrMicly5HisvCxatCjrd/Y5
1b+jH330kfCZAmBt/vjjj9yYrPDq9aXM0Y1bqtuX57USL75EZb9wobKfu5hc
k75R1ufJXpd8PXGRWAuGhoXT6NGjZX8NAAAAAAAAcAiqV69OPn5B5FY5UOp6
vkP3YYr7jtfeeJP6Dp+e7/UxvUdS0aLPqNq/fPzpl9L3L5V9Q8nF1Z0qVqwo
zgVXr15tlnGON0va2rVrLWacC9gSxv3inIDz5s2jqVOninPBgtjEiROtYpyv
j8+9CmIbNmwosEVEROR+1zk3Nee75n9nn3WOJScnC/+0oXeEfcp5/55t06ZN
5O7unu/f8xku1w3gvzFm7Ec29Jn8bDlftyFTk/947NixtGXLFtWm5py2TJky
Ii9ljo0aNUrxGh4Pfj+3bdum2r788kvFdjlunc+lzbXmzZsrfkaLFi1o+/bt
JtmOHTssajt37rSY7dq1y2LGGhtLGmv1LWXsY7KU7du3z6K2f/9+1ZaQkECV
K1emim5eVLtha+lztZJ16jFc8Z3yC64mvZ9KNi5uuThTfev9EPqwfD9qEJNO
Y2ZpaetePV2/adxXBgAofKjRuXp4eKhuj/9WqT1exxjDmpobZ8+jUhCda5Ju
PCUkJSh+Bq9BCwJiZ7OBzhWAwgPnUFMTB8XnKGr5/vvvVc01MnWuzj7nqta5
3r9nU52rmlqujDnayxzjOE81QOeajS3GGgBgGZxxzmYwb8vVueZXy5VR45uK
iYlRPRbsd1Nqz8/Pz+D12Ks/DLQMAABDjBgxQmga2A83csoS6T7B6nWamr3f
UDJZepn8rEGzTuRSyUv4H2bNmlWgGAFLxi6oMUvHXigZx3twvArHeLGvnmvI
T5kyxWo2efJks43jnEyNkTElZketVa1aNfd7zzFZ7dq1E7FE/P/lxBVxjBWv
bw29Lx988MFDcUg5ZshnxjFIHJP26N8/GgNlbM3I+xJj8VMuLi6K7/mYMWOM
xnU9ampjsnL+nn8zlf6ex4LjLJXi0/JauXLlFNsdMmTIY3Fyphq/R+Hh4Sb9
dr700ks0Z84ci8QLKllBYxpNNa7BbEvj3whbmqXiYtWaJWJ5p02bRq6urlnr
Ek+Ro0LGHF2/aSfV7wdrWr9q3Z0WrzmQe/2S5MPUtd9YKv6COr3ry6+8Kq6R
uS7h2gi8FgwOCaN+/frJXp4CAAAAAABg96SlpYkcPd6+geQTGCl1Pd+oRazR
Pcezzz1PE2atMtrG0HHz6amnnlZx5vEUxa/YLfV+A0JrUIWK7lS+fHmaO3eu
9Lx39mbx8fHi/JTj6Fm7yGdl9m58Pm4P45YTL1CiRAnhtzX0twsWLKCSJUvm
+44888wz4gw7799zrIChd6patWqq+te3b1+DbQwbNszotUoxXnx+zPdkynh1
6NBB+bzj5ZcfuqZVq1aK17zyyismP7uGDRsqttu9e/cCfT+io6MVP4P/Rvb3
GFZ4jX0HPC/ymao95NQzZlyb/Y1SbyuuNybPWye9r0o2Lf4bcaZaoVIItWjd
jRTSwAIACjlqdK6cZ0UthuIP8xr7oI1hTc0Nx5WYQrNmzRTb5DzeeeFYBKVr
OA6XY3xNISAgQLFdc3Wuc3UD6XvtPhGXqbRG//XXX03q96MgdjYb6FwBKDyc
OXNG8X1nO3/+vEntcs0HpTZl6lydfc61R52r2lquTEG0l6xR4lhPJaBzzcYW
Yw0AsAzOOGczmLfl6Vzv9uyYby1XhrUdSm0OHTpU9TjwPSq1FxYWZvB67NWz
4VrCfA5mynz9+uuvo7YgAIUI1jKwpoH9cKxxkOkP7NRT+XyxoMa6E9l+T7bm
7XtnjXll4Xfu37+/dB+4PVpOTBavMRwhJov7+GgMk6xxQ0yW+vEyNSbLkeOx
uEbjm2++adJvZvHixcV1sr/XsMJj/DuTE5PVoHlnKXN0I5X1XLlefP8RcUbj
nN4oVVpVWyMnJ0hdl8xYuFGsBQODQyk2Nlb28hQAAAAAAAC75+7du0Ln6uUT
SAFhNaWfNS5ee5DmLt1B0xZsoPEzV9DXExfRgJEzqcfAiTRqaqKqNnyDqqra
v/QZNlXqvYZUic7VufLZoex9rGxbuHChyD3H+ePGjRsn/YzUHOPzTNnjmOPn
5vPFgQMHKv5906ZNDb4j/Dzy/i1/V/P7Oz6XVXuWac0zVe6HqeM1aNAgxd8K
Pl/Oe42a888PP/zQ5L5wvQVrn6tC5wqzdxswYMA/Z6qVqXm7XtLXJcasbazy
7wevSWT3U43NTtyWfaYaFCJ8TQAAYAw1OldTaqk0adJEsT1ZmptixYpRenq6
6ntheD5Tuh/2c+eF8x4pXVO6dGmT+sHwvkqpXXN1rgm60TRvwTzF9jmWuaAg
djYb6FwBKDxwLQ2l971UqVImt6tGX4I513pzrj3qXPW/XVR9j/Xr16ePP/5Y
nL89//zziv3I71ncuXPH6GdA55qNLcYaAGAZnHHOZjBvy9O5piXnX8uV4RpP
Sm2yjkcta9asUWyvVq1aBq/HXj1b6876bFPmadZxnD592uJ9AQDYL926daOg
4FDhh+M4KFm+wElz11LRZ4qp+q16+umi9P5Hn5FPYBVh/N/8b2qufe75F2jG
ok3SfZ9tYgfm6lx79eol3QduD8a1x3k94agxWRwLJXsM2RCTZdp4mRqT5ajx
WC1btqSiRdX9TuYY63W5fq3s7zSscBm/kzkxWV+16S5lju7QfZiqd0RNvdme
g5XjFtgaNo+Rui6Zk7RdrAUDgkKoffv2spenAAAAAAAA2D23bt0SOtfKPgEU
FFFL+lmjJWzsjGUib7nS/qVNzACp/QyrVo8qVPQQe8cZM2ZI38fa2hYvXix8
1NOnT6cJEyZIPxO1hPG5sOxx5Xx/derUETUR1fw916A19L7kvR/OAZ3f3/C1
gwcPVt0/a56pmnOWyWf4as478uZRrFGjhuLfu7u7m9wXNee70LnCnN34NyLn
TLVlx77S1xTGrOSbZRTfJ64zL7ufaoxzjIgz1cAQatOmjezlKQDAzlGjc+V1
pFrsWefK+gJT2bdvn+L9sF4hL2pibD09PU3ui5qYVXN1rsczdorxUWr/4MGD
Jvf7URA7mw10rgAUHlatWqXq3MFU1Jw7YM613pxrbzpXU2q55sePP/4o4mO9
vb0V+5RjLVq0MNomdK75Y42xBgBYBmecsxnM25J0rrVCxTrAEImJiYptsg9J
LUlJSYrtNW7c2OD1hX2vznNzTi03tca67BMnTli0HwAA+ycmJoYCg7J1rnGL
N/8/e+cB3tSRvf1vQ0IKCbtp/2wqCdn0TQEDxr13DJhmML0ZTO+9d9N7aKaZ
3kxvCb1nA0kgEAJJqAm9g23Jss7HGWPHxpLulSxpVN7f85xnN1h37r1zdTVn
Zs57jrS9wNjqyuvwYpz/bxkaO31loeP53/hvatqIr58kfe+zVaeBos9537lr
167S98BlGMe4pKSkiHi0cePGSY+nKqpNnjxZep/m9itistSbuTFZzhaPxfUw
/P39zfIJ2T777DPURIFJMdbn58ZkNU7qJmWM5hqtSu/ISy+/SgvXHlTV3hdl
PBXb8w+JkeqXpCzdgZgsAAAAAAAAzMAVda5sr73+luL8JaFxW6nXmKNzrei2
OtfH11RHjRolfV3UFXSulthrr71W6P147rnnCnzmk08+MfgeRUVFmXUuW66p
fvnll2bfO3//lH4rihUrVuAYpRgPNv6MudfC6+C2WFfNb9C5whzd8utcm7ft
Ld2fMGYDRirXEnjz7fekX6daw5oqAMAc1OhcN2zYoLo9R9a5WhIve+HCBVV7
2NnZ2XnH9O7dW/Hz8fHxZl/Lvn37FNu1ROc6RNuQvt23RbHtTz/91OxrNoS7
x87mAp0rAO4Dr5cpve/R0dFmt6umJhrGXNuNuY6mczWnlqsSpmI28xuvQZoC
OldlrNXXAADr4IpjNoNxW47O9Xb7RJPnWr16tWKbTZo0Ud0PavbHWrZsafR4
d52rp6enm6zLZsxCQkLo2rVrVrkGAIBz4Qg619S0/VTyny8q/lZ96eFNC9ce
MtoO/+1LDy/l+cjrb5lsxx6WX+da1BgLZzVX0riycQ0F2X1qqSEmy/RvRv6Y
LGeKx+L90lKlSpntF8bGxoraILK/lzD3NEfQuY6ZtlyVT6K2vUYtuyq2V+bh
/cr0S1B7AAAAAAAAAPO4c+eO0Ln6+odQcGScVH/emvbfryoorxvUaCD1GsMr
1crTuXJ8iux5rGxzhfqunKdNdj9aYmXLli289/Daa3l/79y5s8F36M033zT7
nm25pvrf//7X7HtXEyv+/PPPFziG15GVjgkICDD7WnjN1Nrrqo8bdK4wRzeO
Xcqr59q6p3R/wpgFhlVWfJfqNe0g/TrV2szF23LWVEPDKSkpSbZ7CgBwcNxJ
58p+n7lcvnxZ8X6efPLJAse0adNG8Rj+jLkcPHhQsV1LdK4TtB2pUdOGim2P
GTPG7Gs2hLvGzj4OdK4AuA+cy1/pfa9cubLZ7c6YMQNjrsQxV57ONaFwLddp
E8y+RyXU1MVgu3r1qtE2oHNVhzX6GgBgHVxxzGYwbkvQuYZ70b1xI0yea/v2
7YptVqlSRXU/DBkyRLG9bt26GT3eHefqZ86coa+++krVOJzfunfvTjqdrsjn
BwA4Jx07dqSQsByd69R5G6XsA3buo1wj/amnitO4GasU2+K6rvxZpfY4Z7DM
vc+kjgPydK48nsneA5dtnLOfa5FzTVRet5cdW2WJTZw4UXo/WmqIyTL9e5E/
JstZ4rH4O/nii8r5A/JbyZIl3VZ3D3Mc43XF3Jishi26SBmjOQ+/0vtSKa6e
6va6D5ig2N5/PvqvVL9kxqJv82KyWrVqJds9BQAAAAAAwOHJzMwUOle/gBDy
C46W6s9b0/yCohXnL5VrNJR6jUHhVfJ0rpxHT/Y81tFs3rx5Yi9/0qRJNHr0
aOlrpmqM14Vl95slxnEWheb3//mP+Bvrj3nt9PG/Fy9enJKTk80+ly3XVN99
912zr8fYenF++7//+78Cx9SsWVPxmHLlypl9LYmJiVZdVzVk0LnCHN3yr6k2
krSmqmRzlu+iZ559zuR7xDlHpy3YIv1a1Rrnj+Y1Vc4nzXmlAQDAFO6kcw0N
DVV9H7kcOXJE8X5efvnlAsdwrJPSMebUZMmF+02p3cI611YKtVwb0dTbveiF
F5432S7HJ1tLW+GOsbOGgM4VAPdh8eLFiu+7JXXU+vbtizFX4pjrSDpXa9Zy
zYXzaZYoUULx+rZt22a0Dehc1WGNvgYAWAdXHLMZjNtm6FyXzLfKmH2zdiW6
P2WsyXOxxlKpzYoVK6ruh3bt2im29/XXXxs93t3m6sePH6c33nhDsc/y26uv
vkrr1q0r0nkBAM4Pa91DwyPFPtyElDVS9gFrN2yt+JtV3jtIdXvlvQIV20ts
10fq3mezNr3EfjPvO3OMiuw9cEczZ4zH4noJsvvNUkNMlunfi/wxWc4Qj8X5
Yliba45fyLVwubat7O8iDMbf35yYLG9KaNxW2jhd/OlnTL4zcbWbqm5r1NRl
iu9g6Q8+keqXcK4TEZMVFiHWOgAAAAAAAADK8H5PQFCoWeuWjm5lyvsozl/q
Nmkv9Rq9/MPJo7wXVahQQexx8V6dJcbHWsvWrl1rNVuzZo3VbPXq1bR06VKa
O3eu2FMdN26cWMO01Dg/oS2M6/KuWrWqSLZy5Uqr2YoVK1SZob1sDw8P8bcW
LVoY3pdITKTly5ebbf369TP6TvIe87Jly4war/uZeqefffZZEVfC3xW11qhR
I8Xfivfee4+WLFmSZxw3oXQMr0PzZ/l61JqavIRdu3alRYsWWWzx8fGK54DO
FSbTWJuRu6Zap2Eb6f6EIWvRwfjvWK59/N8y0q/THBs/a7VYUw0Lj6QePXrI
dk0BAA6OO+lcOce2ufD8RXEvrXTpAsdwbIHSMVWrVjX7WmbPnq3Yrrk614na
jtQ0papiu/7+/mZfrzHMfb7Hjh0TMdSG7O233zbYDvsgxo4xZuXLG45bbtu2
rcHP//DDD6TVai3uB+hcAXAfNm/erPi+v/XWW2a3izFX7pjrKDrX/LVcf/rp
J5NrceZqSyIiIhSvb8IE47VkLfl+Ocu472h9DQCwDq44ZjMYt+2scw33otut
G9P9yWNMnovrgbLewVSbrKtUS0xMjOI1fvPNN0aPd6e5+vfffy902Er9ld94
z4/rGAMAwMCBAyk8IkfnOmrqUin7gKHR1RV/t6rUbKS6Pa4poNRe9TrNpe59
NmjeSew3877zgAEDpO+BO7pxLBbHO3HN1FGjRtlcs8rnsMS4Lq0lcTLmxO1Y
w/LHF7G1bl1Ya84+Nf+tefPmBt+hZs2aFWrHmOWPgTKVM4djskzFT33xxRcm
3+vcmCxT6xuPW+PGjRV/LzgmK/fzTZs2Vfw8x2OZG6sWHa1cL6Vnz57is6bi
61irynVZ1fqETz31lIgxM9WmNeME1VhR4xrNtbS0NLsax5ja06wZH6vGihrP
y99hnjPxGClzrH7t9bes5kcMHT9f8V38ooynVL9k7PSVeTFZvXv3lu2eAgAA
AAAA4BQ0bNiQgkLChS89Z8VuKb58/WYdhTbVlKUs3aG6vTfffldx/pLUcYC0
uUvq6gNUtoIfBQaHUZ06dWR/BZyO7OxsunLliogP2rp1q1hHk73uy8brM3q9
Xnb3mM13331X6P1o2bKl6ONXXnml0N/q1q1r8blsGVvBdvDgQbOuh3NbK7VZ
u3btAsfwuqaa9coLFy6YdS2lSpVSbNOS3NX5MTc2nr/P1jJ+b61pHNNhLcvK
yrKacTyENU2j0VjNuIa7tSwjI8Oqlp6eLoxjXTj+o6JPIFWp1VjqOqMx+/iz
rxTfI0fV6Bqz4RMWCD8wIjKKhg0bVqTfGQCA6+NOOtcXXnhB+ArmwHoCpft5
PCZ4ypQpisd88sknZl0HwzW6ldo1R+fKtVxTsgbQh77KfuuIESPMvl5jmPt8
za2vYk/jmCpLgc4VAPfh0KFDqn5TuKaUOfj4KOcFxJhruzFXtc717h2b6lzz
13KtVKmSybZefPFFs/qhfv36itfHtTGMYcn3y1nGfUfrawCAdXDFMZvBuG1f
nSvXchW5KBR0rsxHH32k2O6tW7dUXbuatriGrDHcZa7OfcD6YbVtPf3008g1
AQAoAOdwj4yMFvtwA0elSNkHLPPw3Eq/X+boSRondVNsLyA0VureZ426ieTp
HSjyOnBcUe5evjVjDNSYtWMklMwacR183Zyr4ccff6QtW7YInajsWKxcO336
tOxX2iIQk2W6zfwxWY4cj3Xv3j3Fmrf57eOPPxbvEQCOxF9//SXWKb39gimy
cm1p4/Snn3uYfH98AiJUt9Wh5wjF99Gc9mxhQ8bOy4vJ4nwPAAAAAAAAAGU6
depEoWERwpeeOHutFF++om+o4nyjfffhqtqatmALPfnkU4rtDR4zR9rcZer8
TaK/Q0IjqE2bNrK/Ak4Pa8EuXrwo8ulyTL3MddarV6/K7g6z+fXXXwu9Hxwf
XaNGjcLzfh8foXGzFFuvqXI+ZrXw+quatUeu1Zufs2fPqjpu0qRJqq/F0Lq2
JeuqSiA2Hjg6N27cEGuqvv7BFBJZTeo6oyGbvnAr/eMf/1B8j5InLZJ+reZY
ryFThF8SFR1D06ZNk/01AAA4OO6kc2Vz9Twqj+tcR5vQuXIt14mXuqsaC48e
PWrWtZrClWJnOZe6pcCXB8B9YG2Cmt9ac955rlOlpk2MubYbcx1B5/pg+sQC
50pKSlJsj/NmqSUsLEyxPa7NZwxX07nmH/cdra8BANbBFcdsBuO2GTrXpalF
G7Mf1XJVq3NVypvAZqoGay53796lYsWKmWyH9Zqm9MzuMFeHlgEAYA3mzZsn
tJa8D9e131gp+4Befsrzh5r1Wqpur2bdFortcQyYzL3PyNh4oeHhsZM1PcBy
HCkea9u2bbK7wyIQk2Xa8sdkOXI8Ft+7Wr+wXr169ODBA9XXCIC94N8XHhv9
AkLIJzBS2jjNNZFMvUOv/t/rlJq2X1VbcfFNFN9J2XUWug+YIHzB6OgYSklJ
kf01AAAAAAAAwClITk4WuWLYl5al/axWu5nifIPXXtW0FVtdOU76ueeepwVr
Dkqbu+TWTQuPiEK8iQ3gmoCcX5fXzFavXm3XddXDhw/Lvn2z4TXpx9+R2NjY
Qv/2wQcf0LVr14p0LluvqRYvXpz++OMPk+3kUrNmTVXrj7t27Sp07FtvvaV4
3GuvvSZiBZTgnJj+/v5WWVdVArHxwNHh9yEuLo4CgkKpvFcgLVwrb6w2ZB17
Jiu+Qy+/8pr06zTXWncZLOrM83r2ypUrZX8NAAAOjrvpXF09j4panWtuLdfW
y2ortvn222+rvs7H0VBGoX9zh9hZNcCXB8C9+PTTTxXfea4rdfv2bVXtRUVF
qfqdwphruzHXEXSu+Wu5MqNGjVJsb/fu3ar74s0331Rsb8aMGUaPd2Wdq6P1
NQDAerjamM1g3LafzvVmfKW8Y+5PGq14vhEjlOvU9OnTp8Ax2Zcvkf7+vQL/
xrXZlNoJDAw0eS3uMFeHlgEAYA02bdok9t/KefpRYrs+UvYBPX1DFH/H/IKj
VbfnFxSt2F5olNx8xqyz9Q8MocqVKwudJrAeMuOxFi9eTBkZhfcQHB3EZJm2
x2OyHDEe6/jx4/Tkk0+qamf0aGW/HgCZ8NwlKDhMxC7PXblHyjjNdYyUci81
aN5JsZ3Zy3fR8y/8U/G97DFwolS/pEWHfuThmROTtW7dOtlfAQAAAAAAAJyC
BQsW5OQPrOBHHXqOkOLLt+2mHK/J+Yv7DZ9usp3JczfQM888q9gWa2dkzl26
9B0j5orc77Nnz5b9FXB5eG3r1KlTtGfPHlqxYoVN11VXrVpF2dnZsm/ZLG7e
vKn4zrzzzjt07ty5Ip/L1muqbJ999pnJtV9ex+zSpYuqtl544QWD+9J169ZV
dXz16tUVazH07NlTVVtK66pqQGw8cAa4xklIaLgYJ79O3Sx1vH7cOPev0jsU
HBkn/TrNtYTGbamCV4BYUz1w4IDsrwAAwMFxN52rq+dRUatz5Vqu/PfQNso1
eBITE1X1Vy5ayqST2d/TGt0M+ktfuK/dIXZWDfDlAXAvmjRRzkHOxp/j331T
qK2FhjHXtmOubJ3r47VcGc5zpNRe69atVV0397WafuDvkDFcWefqaH0NALAe
rjZmMxi37aRz/eCdvFquanWuR44cUWz3ww8/JL1WS9rD34k2740YwDdfoJ2m
TZsqtjNs2DCT1+Lqc3VoGQAA1uKnn34S+2+e3oFUPaG5lH3A8Eq1FH/LSv7z
RUpZukOxrVlLtovPKrXHe4+y9j1nLt4m9pmDQ8LFmAdsC/thp0+ftks8FtvJ
kydl37LZICbLuBmKyXLEeCzWBappo2vXriavBwBHoHv37hQWHinGyrHTV0ob
rzlW3dT79PwLJRVjxrgevdJ7yXpa1sPKuk9xnXVbCF+QfUKe1wMAAAAAAACU
4bUm9qFZ35DQpJ0UX57XQp96qrjivOPV196g4RMXGmxjyNh59NLLr6paV+gx
aJLUuUuDxM5UvqK/6Pdt27bJ/gq4FbyeduPGDbE/uX37dlq6dKnV11XPnz8v
+zbNIjMz0+T78u9//1usS1sDe6ypspUuXVo8i8c1x3/99Zfq9Ue2li1bGrwW
rq+gtg3OeW1IN3bs2DGqVq2a6naU1lXVgNh44AwMHz48r878oNGzpY7Xj9s7
7/5H8R1K6jRA+nWaa+ExNcnTO1j4JZxPFgAATOFuOlc2V86jokbnmlvLlf/+
1uevKbY5f/58k9eXy1X9RdqbvZbmZw0XbW/QzTX4OVePnVULfHkA3Auu96L2
t6Vhw4Z0586dQm1wvRIenzh3oNq2MObabsyVrXN9vJYrc/ToUcX2nnjiCVq2
bJnJa75//75Yi1Nq67nnnhPrkMZwZZ2ro/U1AMB6uNqYzWDcNkPnumyBxWN2
n88/LnCMGp0r9ynXB1Zqe361v+vEao8UfN68/vvMM88otvH999+bvBZXn6tD
ywAAsBasb4uJqST24QJCKknZB2zetreq37ToqgmKbUVXSVDVVrcB46Xtew6b
kCr2mcMjImnAgAGyvwJuBfsq/J0/ceIE7dixwybxWEWNmZEBYrKMm6GYLEeL
x+K1mBIlSqhqo3z58uTp6VkkmzBhghlPHADzmTJlCkVFx4ixUmYMdfsewxXf
qZde+T+jcWO1G7ZWtY7Cde1l3WOuBYZVJl//EBGTdf36ddlfAQAAAAAAAJyC
P//8U/jQPn7BUmuQcY1VNWsCnGMnLLoGteo0kHoNmUJNW/eg4IiqVLz406qO
L1X6Q+lzl4jYWuTtFyT6/cyZM7K/Am6NTqejy5cvizyaW7ZsocWLFxd5XZX1
s84Gv1eG3pd//etfIg7LWthrTTXXONd3ZGQkVa1alUqVKmX28aZyaHl4eJjV
FufQ5mvhOs4c/2HutZhaV1ULYuOBM7BkyRKKeTg+cu6+1p0HSR+zc23Gom9V
rZGO/nqZ9Gs1x+at3EsengH0/ichVOrDajR2VibtPKijW3dM15cAALgv7qhz
ZXPVPCpqdK4Ts3JquU660kPVWPjLL78Y7XMNZdCJ7O9otW5agfOy/aU/Y5Xn
+/777wtthyEzdv1PP/200WOMmbE5FJuxY6ZPn260b5SALw+Ae8Fxgf/5j3Ke
nVwrWbIkJSUl0cSJE6lXr17UqFEjVVo4jLn2G3Nl6lwN1XLNhderlNrkmn2b
N282ePyvv/5Kfn6mc+/nWuXKlU3euyXfL2ca9x2prwEA1sPVxmwG47Z9dK59
K3oU1LlOHKXqnGpqCJd8ujjtSahG94b3I8r3bG7fvk1ly5ZVPJ731h5/po/j
ynN1aBkAANbg0lU9bdyho2FTtfTuxwlU+qNQoSeZtWSb3fcCJ8/doOo3jXPv
VK/TnFLT9hdqg/+N/8afUWrnuRIv0Py0fdL2Ptt3Hy72mTkuQ21ORmAb2J+4
cuWKiDnaunWrVeKx2K5evSr71swGMVmGzVhMliPFY/F3zpL2LLXOnTsX+XsA
gCl47ZFjlstV9KdGLbvKi1VatZdKPF9S8Z0oVuxJCgiNFTHi3fqPo3pNO9AX
ZTxVv1MDRs6UGpPF9Z/YBwwKCRfrJAAAAAAAAAB18B5sQkKC8KV5rY99axk+
/cBRKWblKrbUug+YIHXuMmf5LvLw9KfA4DCqWbOm4j4hsC+cN/vChQsiTzGv
YVmyprpo0SK6deuW7Fsxi2effbbQu8L/tnfvXquex95rqkWx2NhYk9fD3w97
Xg8bdK7AHTh8+LBYU/X0DqS42k2ljtn5rXOf0Yrvz7PPlaCFaw9Jv1ZzLHnS
IrGm+s5/wuk/X3ahSk0zhMU2y6R2AzUP/ZYs+uF4Nmm0sr8ZAABHwV11rrnm
anlUlHSuQ/PVcm23SjlXP8ds8xrD41zRn6fdutU0P2tYIX0r20YjtVyL8nwN
YSz+3BI/Oy4uzmBbXJveFsCXB8D9mDRpkkW/7UUxjLm2G3Nl6lx1584YPd+o
UaNUXf+TTz4pdBzt27cXccKsB0lMTFRVDy7Xdu3aZfLerTnmM4427jtSXwMA
rIsrjdkMxm076VwffsYSnauaGuFsTz3xBDWNqyr0JKtWraKBAwfSK6+8ourY
kSNHKl6HK8/VoWUAAFjC/QdE+w9n05TULGreU5O338b2Udl+9FbpCLEfZ6wm
ma3to0+/Uv279Pa7/6G4+CbUustgYfz/+d/UHh8SWU3q3mfNui3I0ztA7Dcf
PHhQ9lcD5IPjsbgWB8cDbNy4UcRWWRKTtWfPHtm3YjaIySpspmKyHCkeKzo6
Gr4hcCn++OMPMUZyjZ7wmJpSx+yYuLo2fZ8+/dxDekwW+37sA0ZERtGgQYNk
P34AAAAAAACciiFDhghfmn3q/skzpPn1gWGVbTp3kb2eyjZ4zBzRz+ERUdS3
b1/Zjx4okJ6eLub3nAM6LS1N9bqqoZzRjgrnT3w87yZrzteuXWv1cznLmupL
L71Ely5dUryfFi1a2HU9EzpX4A48ePBA1B3xDwwhT58QSl19QPrYzZbQpJ3y
GukX8tdIzbU2XYdQmfJ+9O93ouirgFkF9t3zW/WkTOo3TkNpW3R05oKeDEiY
AABugrvrXItijphHRUnnOlHbKe9vtZKV+ysoKCjvfjIpnY5nH6RVuq8Nalvz
2yX9Gas/X0M4WuysOcCXB8D90Ol0VLFiRbuOCxhz5fVtLvo7t62qc703or/J
83ENFK4hauv7Dw0NVbx3V9e5OlJfAwCsiyuN2QzGbTN0rssX2lfnmq0j7Y+H
KfTTj2127y+88IKo+6qEK8/VoWUAAKjh4fBPJ05n08I1WdR1uIaqJGYa3WPz
CFlMr/E+XDk/at62t5T9wD7DvrbLb9ozzz5HU+dvkrbvuXDtQfLyDye/gBDh
Y6gZ04A8MjIy6OzZs3To0CFas2aN6ngszuPB9dedBcRkFTY1MVmOEI/FeV2f
fvpp+IbApeCaPPHx8aJGj8yaSGxzV+6ht0u9b5N3qXjxp2ncjFXSY7KatelF
Hp5+Qlu8cuVK2Y8fAAAAAAAAp4LXTtiXLufpTw0SO0vz62ct2UalSn9ok7kL
z4m4lqrsuUuTVj3y5i4rVqyQ/eiBmdy5c4dOnTpFu3fvpuXLlxtdV12yZInQ
yDo6fI2enp6F3pcuXbrY5Hy2XlO1Rk1oXl9W+26yHu/zzz+323omdK7AXejY
sSOFhUeKvBDJkxdLH7vZoqrUUXx/Yqs3kH6d5hpf82dfBtJr70STX9WDRvfg
H7cGnTNpbIqWtu/X0c3bEL0C4E5A52qZOWoeFVM61/y1XNnC2nkpttetWze6
pD9Lu3SraJ6R2q2Fa7nOs8nzNYSjxc6aA3x5ANwTXoN67rnn7DYuYMyV17e5
WFvnqtmzXfGcnTp1sum9c73306dPK16Hq+tcGUfpawCA9XGVMZvBuO14Otfs
G9cpY30a3e3XVXx2c81YesIK+2GGrF+/fqru3VXn6tAyAABM8dcVPW3YoaMh
k7UU39a4rvVxC6pxVOzDffJFoNS6aR6eATb/TWuY2EXqvueYaSvE/nJoWAS1
adNG9lcGmMm9e/fot99+EzVOWQtkSuvKNWGdAcRkFTa1MVmOEI/F9Yft6RfC
NwT2YvDgwRT5qCZS3+HTpI7do6YupeJPP2P1d6lRC7k+Sa6FRlcXtXM5Vhzr
tgAAAAAAAJgHz8vZl/b1Dya/oGhauPaQNN9+2oIt9NY7pa06b3nv/Y9pxqJv
pM9b2LhmrY9fsOhvrhMKnBfe67x+/TodP36ctm3bJrSt+ddVf/zxR9mXaBK+
/po1axZ6Xz777DPSaDQ2Oact11Q5xzTH1Rflt+LJJ58UuR/N4dq1a+Th4VGk
8/JacO3atS1aVzUHxMYDZ2H+/PkUExNDHhX8qEWHftLHbjZP3xDF96dZ657S
r9Mcm71sp9jTfv+TEHr93aoU3fiO6j35/BbbLJPaDtBQyrIsOvJzNmm0sr9B
AABb4m46V1fPo2JK5zoxq1OBv5Wv8Zliey2/rqNK21qwlutZmzxfQzhS7Ky5
wJcHwH3Zvn07Pf/880X+zff398eYmw9HiJUzhDV1rjfiwijr9EnFc2ZlZVFI
iPKc11JbtWqVqnt3B52ro/Q1AMA2uMKYzWDclqVzHVmwca7deuxHuj9tAt3p
2KLQOfp4lbP6fQcGBor6xGpw1bk6tAwAgPzce6CnfYezafJ8LTXrobFoD40t
pskDevP9WlT6o1ChJ+GYKBn7glyv7fU337HZ71loVDXpe5+tOw8Stel4nzkl
JUX2VwgUAY5nunXrFv3yyy+0c+dOWrZsWYF4LP5vrdaxN6URk1XYzI3Jkh2P
tW/fPviGwCXZuHGjiF0uX9GfEpq0kz5+d+g5QtRftdZ7VKt+kvR7Yps6b6Pw
/YJDwqlu3bpiXAAAAAAAAACYR8uWLUVOO/atR05ZItXHn7tyD9Vu2Jqee67o
+8Eenv5ivVb2vIVt3IxVon9DQiOoSZMmsh85sDK898t5p1nfunnzZlHv1VZr
k9agV69eBt+ZKVOm2Oyctl5T5fWAdu3aWfRb8cYbb4h1HEvgOr+8/mPJeTnH
O39X5s6da9G6qjkgNh44CydPnhTvFOe0C46Mkz5+s334yReK70+n3qOkX6c5
1mvIFOGXvPleJH1Utp/F+/OPW7WWmdRnjIZWbs6iP87rCUu1ALgW7qRzdYc8
KsZ0ro/XcmX7j9fbiu21WWGeznWTbr5if7hq7Ky5wJcHwL05cOAAvfrqqxaP
C7wGNHHiRIy5jyE7Vs4Q1tS53kqsp0rnyty4cYM+/PDDIvXF4/bUU0/R7Nmz
VT8Pd9C5Mo7Q1wAA2+HsYzaDcdscnesiq+tcs2/eoMxNa+luv25GfQK2Ww8t
qnQpq40lb775Jl2+fFn183DVuTq0DAC4Nyz1P34qmxaszqLOQzVUubn6mq1K
9qlnMr3xbqTYl+vcZ7S0vcEx05bTK//3utV/ywJCY2nBmoPS9z65Xq6Xb07N
tKNHj8r+SgErkp2dTVevXqVjx44JP4TrEPD/d2QQk1XQLI3JkhmPxZpq+IbA
FeH5dWxsLPkFhFBF31BKTdsvfQwfPnEhvfb6W0V6f54qXpzqN+so/V5yrWPP
ZCpbwZeio2NEjAUAAAAAAADAfFJTUykmphJ5ePpRk6Tu0v18tukLt1JkbDwV
K/ak2fOWd0t/RL2HTpV+D/ktsV0fUZuOcwfOmjVL9iMHNoY1rpmZmbIvwyBr
1qwxmG/76aefpps3b9rsvLZeU82F10YrVKig6reiRIkSYp3w7t27Rb6/lStX
0jvvqM+ByrmxDx8+LI61h86Vf3eUzoHYeOAI8P5Iw4YNKSQ0XOz3cp4I2WO4
mj3fASNnSb9Oc6x6neb0eVl/eu2daKoYtcFqe/WPW72OmTR6ppa27dfRjVsQ
vQLg7LibztXV86gY07k+XsuV7eVS/1Jsr9fuZmbpXC/rzyn2havGzpoLdK4A
AF6vadu2LRUrVkz1mFC6dGmaPz8np8CgQYMUP89520yBMdfyMdfeOleu5crH
ZP32q+q+uHfvHrVq1coqNfpY48V1Dc3BXXSujOy+BgDYFmcesxmM23J0rnf7
daUHMycbrN1qzK61bUqdyn9FTxRxPImIiKC//vrLrGfhqnN1aBkAcD/+vKyn
9dt1NHiSlmq1sZ6u9XHzid0p9uP++1UAVYqrJ3V/kOOwPv2iaLkjco1rr7Vo
31f6nifbxNlrC9RMY10kcF2ysrLo+vXrsi/DKIjJ+tusFZMlIx6Lz2lv33Dk
yJFF6icA1MLvZXhETg6OgaNSpI/jbLOWbKOISrWoxPMlzX53vPzDhS8g+x7y
W2Tl2lTRJ1CsY3z33XeyHzkAAAAAAABOyblz54RP7esfQt7+EQ6RpyfXxs9M
o+Zte1OlavXJwzOA3nz7PXrqqeJ585RnnnmWXn3tDfrvVxUooUk76fVoDRnn
LvQLiiYfv2DRz6dOnZL9yIGb8scff9C//mU4Rr1mzZo2Pbe91lRz2bRpE/Xs
2ZPi4+OpXLlyYs3zyy+/FHv2iYmJtHr1akpPT7fqPfJ+yY4dOygpKYm8vb2p
VKlS9Oyzz9LLL78szh0dHU0dO3YslFvSHjpXAJyJmTNnirwQnB+CfQDZ47ga
nasj6HHV2szF24RP5ekdSl+Vq0pNut6w2d59fottlkmt+2lo1tIsOnwsmzId
t+w5AMAIanSu33//ver2unbtqtiekp9oS81NLq6aR8WQztVQLVe2l0op7ymO
ONletcZ1s4paroyzxc7aqpYactYAAHI5e/asGI+DgoLoxRdfLPA7wLXRWCcT
GhpKKSkpIuYvl06dOin+jvzwww8mz40x1/Ix1xo610mh/ornydW5ci1Xc3Wu
uezcuZOCg4PN0mfl2iuvvEIjRoyg+/fvm31eZ9S5FnXcl9XXAAD74IxjNoNx
u+g6VzVjttC5tmpENxOq0PUoP7pROVi1vvVx21wzliq8/hr9w8yx5N1337W4
npirztWhZQDA9bn3QE97v9fRpHlaatrddrrWx/fG2g64RxW8udZoGJWt4EdT
5m2Quk+4cO1BatttKJUq/aFFv13PPleCYuLq0uQ566XveeZayw79Rd9Gx8TQ
1KlTZX/VgBuDmCzbxWQhHgsA68F6fI5hLl/Rn2rVT5I+jue3eSv3UuvOg6i8
V6DwVV4o+fdvKucQYB3s62++Q56+IaLukGy/ypBNTFmTl3+jTp06BdZ9AAAA
AAAAAObRoUOHvDw9/YZPl+7vmzJed522YIuY18i+FjU2aPRs0a9h4ZEiVzsA
MuD6smXLljW6bmdpDm212HtN1ZnAuioABfntt9/EmqqPfzD5BEZS6uoD0sdy
V7IOPUdQ2Qq+FBUVTcOGDRN9fuW6nrbs1tGIr7VUp7199vbjWmZS79EaWrEp
i34/pyc9yr0CACzAHpqbXFwtj4ohnesk7d+1XGdm9aXx2vY0VNtY1HnNNUM6
WHPtsv68qvu3tuYFAABcDY1GQ+fPnxc5DHU6ndHPJSQkKI4Lly5dMnkujLm2
j5UzpXPNbzfrVxN6VkOWW8vVUp1rLlwXZc6cOeIZ+Pr60gcffEAlS+bkvXji
iSfopZdeEv8WEBBAffr0ETVFMzIyLD6fO4/59u5rAIAcnGHMZjBuF13n+rix
jpU1rbn/fatpbbpRLZyuh1X8e/wugs411453bUejRo4U9/7VV1/Rv//977xc
Cqy1/vTTT0V+BdYbHzp0qEj9787jNgDAuch6OOT+fCqbUtOyqNMQDVVubp/9
r8bdMmnCHC3t/k5Hd+7lbH5NmDDh4W90jNBiJnUcIH2vMNe4hlvthq3pSw9v
evmV1+jpZ54t8LterNiT9M9/vUTvf/ApRVdJoI49kyll6Q7p153fRN2B4L/r
Dvzyyy+Sv3nAXUFMlmOCeCwACnPr1i2qUqUKBQSFihz5nCtf9nhuyuau3CNq
0jtL7FizNr1EXQeu7/D111/LftwAAAAAAAA4Nbyewmt+FbwCKLZGA+n+vitZ
tdrNqPzDfuX+TUtLk/2ogZvSpk0bo2t2r776qsnYCmuANVXjYF0VgMK0a9fO
afJvOJMtXHuIgiOqkpdvkPBLDP3+ZmcTnTqTTUvXZ1GPZA1VbWGfff+6HTJp
1AwtfbtPR9dvQvQKAFCHPTU3zoQlOtdx2nZCwzo1qxuN1LagQfm0rdbUuW7W
paq+D8TOAgBA0dHr9fT666+bHBNYA8F6EVNgzDWMo+lcc2u5FlXnagytVkvZ
Nsg/jzG/MKKvFd5LAIBrIXvMZjBuqx+3M1YsVjduJ1Sm260b59VuNZinwgo6
V+3/DhS6Rv6u2KJuDMZtAIAjc/GyntZt09GgiVqq2do++1t8noETtLT2Wx1d
uGR4f+vEiRM5OX79gskvKNqhdRrzVu0VdQdmL98l/VrUGGt1c+sOcA4MAGSB
mCzHBPFYABhm6NChIjc+5+Bo132Y9PHcVYz9KC//cPL1z8m/wXUeAAAAAAAA
AJbz4MEDqlmzJgWFhIs1wHEzVkn3+13BJs5eK+aDgcFhVK1aNbp7967sRw3c
kP3799M//vEPo2t2zZs3t/k1YE3VOFhXBaAwGzZsyMm/4R1AleLqSR/PXcUG
j50r/LzQsAhq3LixqpjZ9Ayi737KpumLsqhlH41dYgLYWvXV0MwlWfS/o9mU
kWmHLx0AwCmB5sYwluhcJ2g70lBtI4PaVmvqXK+orOXKIHYWAOCOcJ3GI0eO
mDSOj1ULf15pTOB6X0pgzDWMI+lc89dytYXOVXfxPKUvX0iZ27dYtV0GYz4A
wBlxtTGbwbhtfZ0rj8/5a7faQud6b2jfnOSFdgLjNgDAkbh7X097/qejiXO1
1KSbfXStXBeW68POX5VFx37NFnVj1dC6deu8HL99hn4tfc/QVaxyjYaingPv
K3MdeQBkgJgsxwXxWAAY5vDhw2Ls9PYLEnXRU9P2Sx/TXcG69R8nfL2IyCjq
1KmT7McMAAAAAACASzB58mTy9vZ56Gv7UK36SdL9flewhCbtyMPTj2JiYmjS
pEmyHzFwQzhX8+eff25yzW7z5s02vw6sqRoH66oAFCY9PZ3i4+Mp+FH+jeTJ
i6WP6a5gsdUb5NWYX758uUXP5uoNPW3do6PkaVpKaG+fmIG4lpnUa5SGlm3I
otNns0mPcq8AgEdAc2MYS3Suo7VJihrXoupct+gWmHUfiJ0FALgjHPug9Bv+
1FNP0bVr1xTbunfvHvn6+iq2V758ecW2MOYaxnF0rhUL1HK1ls5Vr8kkzYE9
dG/sMNHmne7tSP/gQZHbfRyM+QAAZ8TVxmwG47b1da7XI31MalytoXM1VMvV
lmDcBgDIhDWlrC1ljWnHwRqhObXHPhVraFlLy5pa1tZawqZNm8T+nKd3IIXH
1KSFaw9J3zd0dhv99TKxj8z1HLiuw/379638jQNAGcRkOTaIxwLAMHq9XtRB
z83B0X3ABOnjurNb6uoDFBRe5WF/elNgYCBt27ZN9mMGAAAAAADAqdHpdHTs
2DGaOXMmlStXjsp4VBA1SMdMWyHd/3dmm5Cyhjw8/SkgKJQqV65Mf/75p+xH
DdyQESNGmFyve/HFF0mr1dr8OrCmahysqwJgGH43YipVovIV/UUuXtnjurPb
sAmpYn2atcO1atUS8XNFhfWmrDtl/SnrUFmPao94AtbXjpyuFXrbazchegXA
nYHmxjCOqnO9or9g1n0gdhYA4I4kJycr/oazNWjQgLJN1O26e/cu+fj4qGqL
z6kExlzDOIrO9fFarkXVueounKP0ZQuErjV/m5kb11jcpikw5gMAnBFXG7MZ
jNtm6FxXOobO9d6QPnat5cpg3AYA2JsLl/S09lsdDZygpZqt7bMPxecZNFFL
67bp6OJl6+xDaTQaqlevHoWGRYj9un4jZkjfO3R2i4tvIvaRY2Iq0axZs6zy
nAAwF8RkOTaIxwLAOPy7wTk4vHwCKSCkEs1P2yd9bHdm6zZgvPDxypQtJ3Su
XGf+4sWLsh8zAAAAAAAATsm5c+eET71w4UJhjRs3pjJlyoqarlzzS7b/78wW
V7splfP0F7Vcx40bJ/tRAzeE6yGWKFFCMcbCHmBN1ThYVwXAMHfu3BG5d4ND
c2q6Dh4zR/rY7qy2cO1BioyNpwpeObVcU1NTbfLMMjKJ/nc0m2YszqJWfTV2
iTVgS+qjoemLsui7n7LFNQAA3AdobgzjiDpXc2u5MoidBQC4Izt27FClc2H7
8MMPadq0aXTo0CE6f/68yGM4f/58ateuHX300Ueq2uA6c1euXFG8Loy5hnEM
nWtFutWiXqHPZf12yqx70WdmkGbfLro3eojB897p0d4mtVwZjPkAAGfE1cZs
BuO28+lctd/tt3GvFQbjNgDA1ty5p6fd3+lowhwtNe5mH10r14XtPFRDqWlZ
9POpbFE31hakpaXl1XQNjqj68Hz7pe8hOqsNHT8/L79v9erV6ebNm7Z5aACY
ADFZjg/isQAwDtdGSkxMpIiIKDGmtus+TPr47qw2Z8Vu8g162I/lvKhMmTLU
s2fPvHj87du30+3bt2U/bgAAAAAAAJwCXuPjNY5cfzrXZsyYQZ6enlTGo7yY
v/QZ+rX0eYAz2oCRs/LWVKtVq0ZXr16V/ciBG7Jx40bF9bpdu3bZ5Vqwpmoc
rKsCYJxFixY92u8NwH5vESw3byDniE5ISKD79+/b5fldv6mnb/bqaNQMLdXt
YHksQlj9DAqt97eF1DVu4Q0yKalPJk2er6UdB3T0+zk9nbmQY3+c/9v43/Pb
b/mMa9Tmt1Nn/rZf//jbTv5e0H757W87cbqgHT/1t/38mB379W87etJ28RMA
uCLQ3BjGEXWuV/Xm56tF7CwAwB3R6/VCC6NG72INq1WrlqrrwphrGEfQuRqq
5WqOzlV37gylL5lPd7q1NXleW9VyZTDmAwCcEVcbsxmM286lc82p5Wr/hUSM
2wAAa6PNIrE3Mm9lFnUYrKHYZvbRtjbtnkmT5mlp7/c6uvfAOjVbleCarlx7
IDwiUuzbte8+XPoeojNa6uoDFBpVjSp45+T35fwhAMgAMVmOD+KxADDNvn37
xFjq4x9Mnj4hNG3BFunjvDNasza9HtVy9aCwsDBasGBBgZj8xYsX0/fffy98
QQAAAAAAAEBhMjMzRb5g1o08rnHNtQ4dOoi8MpxfxicwkmYt2S59LuBMNmf5
LvILjhY5GHkeyH0NgAzatm1rcq0uOjrabteCNVXjYF0VAONkZGRQo0aNcvZ7
K/hSq04DpY/zzmYzF28jL/9w8vYNEn7Jhg0bpDxLvZ6EhnTFpizqPVpDcS3V
xymwtvXD4HR6rfwDs+3Nig/ok9B08oxjDax96ssWxaakZkl5PgA4K9DcGMYS
nesoG+pct+oWWnQfiJ0FALgran7HrWFcF+7AgQOqrgljrmHk6FzjFGu5Kulc
9RnppNm7k+6NGqzqnLas5cpgzAcAOCuuNGYzGLfN0LmuWqJS5+prM52r5tA+
G/eYYTBuAwCswfm/9LTmGx0NGK+lGq3so2ut1SaThkzW0vrtOvrzsn10rYZg
zVuunqSCdzBNnbdR+l6is1nbrkOEloT3j7lWJtfUBEAGiMlyfBCPBYAyXHs0
OjqGPDz9qHpCc+njvLPZ2OkrH/adP5Up5yli7ocPH240Ln/FihV06tQpkTsN
AAAAAAAAQJSdnU0nT56k5cuXG/Wjc41z3fEaBueX4bXB+AatpM8HnMnqNe1A
ZSv4UWRkFLVo0QJ5eIA0YmJijK7TlShRgk6cOGG3a/njjz+of//+hSw5OZnu
3r1r8lhXXlNlsK4KgGly8wf6BYSQh2cAjZuxSvpY70xWs15LsR4dFRVNHTt2
FD6hI5D50D36/lg2zVqaRa37aVTFIPjVSqdSvuZrXfNbKd90+jwynXxrZlBU
Y/m61vzWaYhG5C0HAKgHmhvDOJrO1ZJargxiZwEA7kz9+vVtqpd54oknaMmS
JaqvB2OuYay5ppN9+5bZOldjtVyN6Vx1Z/+g9MXz6E63NmbpaDI3rbV21xUA
Yz4AwJlxlTGbwbgtSecaa77O9e7g3lJquTIYtwEAlnD7rp52HdLR+NlaatTV
PrrWys0zqcswDS1YnUXHT2WTTs7PpkF69+4t9CTlPP2oco2GtHDtIen7ic5i
E1LWUHmvQPL1DxH7x/aqlQmAIRCT5fggHgsAZc6fP09xcXEUHBIuYsV7DZ4s
fbx3Fpufto9Co6s/7DcfKlO2LCUkJCjG5rNxPfDLly/LfvQAAAAAAABI5a+/
/hJzcjU+dK6NGTOGPDw8yKO8p5i/9Bg0Sfq8wBms7/Bpor8Cg8OocuXKdPz4
cdmPH7gxvXr1MrhG9+STT4r5srPgymuqDNZVAVBm6NChYp+ofEV/sUY4b9Ve
6WO+M1iPgROFX8Lr0VWrVhX7W47KjVt62rZfR6NnaqleR+MxDjFNMqh8lXR6
o2LR9K5s/67wgP4TmE5lY9MpsM7DtiVqXBPaZ9LVG8jZCIC5WLpvD//SfjrX
rbpFFt9HUeIyAADA2cnIyKBGjRrZRC9TrFgxmjFjhlnXgzHXMHJ1rsZruebX
uerTuXbrDro3cpBFteJsXcuVwZgPAHBmXGXMZjBuO4/OVVYtVwbjNgBADZzT
86dfsmnuiixqP0hDsc3so21t1kNDU1KzaN/hbLpv22lMkeAYrurVq1NIWITY
x+vQc4T0PUVnMNaShMfUFPvFvG88cOBA2Y8SuDmIyXJ8EI8FgDqWLl0q8kd4
+QaRp28ITZm3Qfq47wzWpFUP4cuVLVuOfHx8aObMmWbF6O/Zs4fu3bsn+/ED
AAAAAABgV3gvaefOnWb5zrm2ePFioSmJjo4mb78gquAdTONnrZY+N3Bkmzxn
vZjn8XyP532zZ8+W/RUAbk56ejp17tyZPv74Y7E29/rrr4v9kp9//ln2pZlF
jRo1XHZNlcG6KgDK3Lp1i+rWrUvhEZGiZnqD5p2kj/uObhNT1gj/jf049kvM
qfsgG72e6I/zelq5OYv6jNFQtZaF4x8iG2aIuqxF1brmN9bOfhyaTp5VMyis
vv00rpxT/MjPjlFnFwB3wZX37BlH0rle0/8puzsAAMCpSU1NpS+++MJqehmO
A7VnLQmMubbTuZqq5SpqsO7eTumL5tKdrq0t0rfaq5YrAAC4Cs4+ZjMYt83Q
uaYtlaZzlVnLFQAATHH2op5Wb9VR//Faqp5kH11rfNtMGjpFSxt26OivK86V
S5THHN6/8/UPpnIVA2j018uk7y06ujVq2VXsE/N+cZ06dejGjRuyHyNwcxCT
5fggHgsAdeh0OvF7JurNV/SnyNh4kV9C9tjvyDZg5EyhcQ0ICqWIiAiaNGmS
RXH6HMv1008/UVZWluyvAQAAAAAAADZFq9XSkSNHhFbVEt95x44ddOfOHTF/
6d69O0U/qp8WFF6FZi/bKX2O4Ig2Z8VuUV+O+4nnex07dsTcAzgU/D47K7w/
sXnzZqP27bffyr7EIvH777/T/PnzTdrFixdlXyYA0vnf//5HsbGxomY6rxV2
HzBB+vjvqDZn+S4KjozL8Use+nHsz2VnO6+OUqMloQNNWZZFbfoXzPsdXDeD
PgiyntY1v73jmy60tD41Myiqse3iMBavhc8IgL1x5T17xlF0rt/oFsvuCgAA
cBn2799P9evXp2eeecZsncxbb70l6sxt27bN7teNMddWOlcjtVzbNHn492p0
o1Ig3WqeUCR9a14t1/R0G/ciAAC4Fs46ZjMYt2XpXIPMq+V6UF4tVwAAyM+t
O3raeVBH41K01LCLfXStVRIzqetwDS1am0UnTmeTE4dAkF6vp0GDBoncFhW8
Asg/JIZmLdkmfY/RUa3X4Ml5WhLWBx84cED2IwSgAIjJckwQjwWAei5dukTx
8fEUHp5Tf6Bes47Sx39HtYmz1+bUQ/IJFH7J1KlTRR+eP3+e1qxZY1HMflpa
Gp05c0b4iAAAAAAAALgS7OP+9ttvtHLlSot85XXr1hWau1+/fp3q1atHEZFR
5PFw/lKlVmNKXX1A+lzBkWzh2oNUPaH5o7yBUSJv4JUrVyR9CwAAAADXZc6c
OWKNkGuUcm7jkVOWSPcDHM3YL6lWu5nwS9h/4zq47M+5Ejdv62n7fh2NmaWl
+p1yYid8aqTTOz620buy/bvCA3o/MJ3KVkqnwDoZFNPEOjEZfcdqCMvUANgf
V96zZ/Lv24+bl0zN5lQrZGPOdra5zhW1XAEAwPrcvHmTdu7cSQsWLKDk5GRq
27YtxcXFkZ+fn8gZnpCQQG3atKH+/fvTjBkz6Ndff5V6ve405hY1Vs4cneuN
auEF/u1W87p0o0YkXQ/3ytPM8L8VVeeKWq4AAGA5zjZmMxi31Y/bsnSudwf3
Qi1XAIA0OCfpD8ezac7yLGo3sGBOUlta854amrogi/Yfzqb7D2T3gnW5e/cu
NWnShCKjosnD048qVatPqWn7pe81OppxrdvyXoFif5j3iWfOnCn70QEAAAAu
Cefuyl9/oGPPZOl+gKNZytIdol5Ubj2kDh06iLpUuXDeA67rvXTpUoti+Ldu
3epyMV4AAAAAAMB9uXr1Km3atMki33jZsmV04sQJo3W+jh8/TlWrVqXQsAgq
W8FX5OpZuPaQ9DmDo1jjpG5iXhcSGk5VqlShH374wc5PHwAAAHAPeD2wd+/e
Irexp3cA+QRE0OS5G6T7Ao5kTZK6P/JLIoRfcvToUdmPzaawRvTMBT2t2qyj
PmM0VDEug173tJ3eNdfeqPiAPg5NpwpVMyisvmWxGQntM+nGLYhcAQC25az+
F1Wa1FHallbVuaKWKwAAAGAe5uhcRS1XUbs1jm5UCjComSmqzhW1XAEAAADj
ZKQtk6Jz1RzcK/vWAQBuRO7+S9oWHfUbp6HqSfbRtca3zaRhU7W0cYeOLl11
/T2U06dPU7Vq1SjsUe20hMZtEY+Vz6bO30Q+gZFUwTtA7A/36NHDqetmAgAA
AI4O54DivBK+/iHCNxkwcqZ0f8BRbH7aPqoUV0/kJ+G6A1w/iuP2DfHgwQOh
G160aJHZ8fx8DNeuT8f6PAAAAAAAcFLYH963b5/F/vDBgwcpIyND8TzffPON
mL/k5upp0aGf9HmDI1ibrkNEfwQEhYn+Wb9+vR2eOgAAAOC+cG7jxMREioqO
FvnxOE/ejEXfSvcJHMHadhv6yC8JFX7Jhg0bZD8uu8P5xHce1FGddpn0nn+6
zfWuufaOTzr9NzKdfGpkUFQjdbEaB44YzjEDAADWRIbOdU7WILqu/0v2rQMA
AABOhVqd662mtQvVbrWFzjVz0zrZXQIAAAA4LKp1rlHW07milisAwB7cvK2n
7ft1NDZFSw0620fXWiUxk7qN0NDitVn0y2/ZZCQ9v0uza9cuUTstKCRc7PMl
tusjfc/REWzWkm0UHBlH5Sr6U1RUNDVr1oxu374t+3EBAAAALo1er6ehQ4dS
TKVK5OUbJGqqj5i0SLpfINsWrDlINeu2ENpfzk8SFxcnakspce3aNdq8eXOR
6lchxwcAAAAAAHAW2Hc9duwYLV261CIfeOvWrXTjxg2zzrlgwQKhmfAPDBVr
qx16jpA+f5BpXfuNFf3gFxAi+iUlJcVGTxsAAAAA+fnzzz8pISGBIiOjRJ68
8JiaNHv5Lum+gUzrNmB8Ab9k1qxZsh+TdE6dyaa2AzTkVT2DPgtPp7e87KN5
/XeFB/R+QDqVqZROgXUyKKZJ4biN0TO1srsHAOAmWFvnqqatb3VLZN82AAAA
4HRk37qpup6rkl6mqDpX1HIFAAAATCND56o5sEf2bQMAXBDOHXrk52yavTxL
7KfENrOPtjWxl4a+XpAl8oE+wNRDsGTJkgLxWO27D5e+9yjT5qzYTZGx8Xn1
0mrXrk0XLlyQ/ZgAAAAAtyAzM5M6d+4saql7egeSp28IjZuxSrp/IMsWrj1E
9Zp1pLIVfCkkNFzkJ9mzR/0cnbXDv//+O61atcqiWP+1a9fSxYsXbfjEAQAA
AAAAKDrnzp2j1atXW+Tz8nFnz561+NyTJ08Wa6u+/iEiN02XvmOkzyNkWI+B
E8X9+/gFi/4YM2aMmI8AAAAAwD6cPHmSatSoQeERkeTxcEyOiasr9jxl+wgy
rM+wr8nD0z/PLxk1ahT8kkdwN+w4oKNGXXNiM0LqZlD5Khn0YXA6vV7BPrrX
Nzwf0Ech6VShagaF1sugeh0z6c49PB935PLlyyJX0e7du2n9+vW0b98+unLl
iuzLAi7OWf0Ju+pcUcsVAAAAsAzVOtd6tte5opYrAAAAYJqM1cvtqnO9O6gn
arkCAKwC75n8cV5PqzbrqO9YDVVraR9da+12mTT8ay1t3qWjy9ewP2KMqVOn
5sRjBYQIrSvn3pe9BynD5q3cS7HVG4iYLN4Hrl69uqp6aQAAAACwHnfu3KGk
pCSKjo6hCl4B5BMQQeNnpkn3E+xtrHFtnNRN+GZBwWHCV1u3zrL1c61WSz/8
8IPIb2JJ7P/27dtR2x4AAAAAADgcN2/epG+++cYiH5frvh49epSysrKKdA3Z
2dk0YsQI4a/7+AcL/71Vp4HCn5c9p7CXtes+TKynevsFUczDfhg0aJCorwsA
AAAA+3LkyBGqWrUqhYVHirE5ukoCzVqyXbqvYE/jOq6scfX2feiXxFSiAQMG
FNnfc0UyMokWrM4qELPBdVb94zPoq+h0es8/3S6aV7bIRhk0eb6W9h3OpnsP
EM/h6nAez7p169I777xD/+///T+DVrJkSfLw8KD4+HgaN24cpaN2FrAi9ta5
fqtbKvuWAQAAAKfEUXSud3p2QC1XAAAAQAH1Olc/q+hcUcsVAOdmxYoV1LFj
R5tY3759Fc9/87aetu3X0ZhZWqrfyT661qotMql7soaWrMuik79nU3a2HTra
BeB4rJEjR+bEY/kFi71Pd6vrmrJ0h8htzPfO+79VqlSh//3vf7IfDQAAAOCW
XL9+nRo3bkxR0dFU3iuAvPzCKHnSIun+gr0sNW0/JTRpJ2LkA4JyNK4ci19U
7t69S7t27bJIB7B48WL6/vvvSaPRFP0BAwAAAAAAUAQyMjLo0KFDtGjRIot8
271799L9+/etdj2cV4a1ney3+z3KIxjfoJXL11DjnIG58xbOn8j336dPH8wZ
AAAAAImwn8N7nLzX6eHpR0HhVWj8rNXS/QZb24I1B6l5297CL/H2CxYa1+7d
u1NmZqbsR+LQXLmupxFfaw3GXUQ2zCDv6hn0WXg6ve1tG43re34PhL4295yV
m2dS56EaocH9+VQ2GUudwvlqvvvuO6PG+XDUwPVEDc0X0tLShI8PrMfFixcp
ISHBqLbVlL311ls0Z84cEdMCQFGxp86Va7ne0F+SfcsAAACAU+IoOlfUcgUA
AACUsafOVdRyRb5lYACsGTsPnK/VknViNfbKK68UOl+mhujwsWxKWZZFbfpr
KLaZfbStLXpraNrCLDr0YzalZ0joaBeBc9kOHDgwp66rf048VoPmnYTOQvbe
pK1tQsoasc/L+72871u5cmWhAQEAAACAPP78809q2LChqOvq6R1A5SoGUNd+
46T7Dba2GYu+oUpx9UTujaCQcOGbzZo1y6p9e+nSJVq/fr1FmgDOpXPq1CnS
65FbHwAAAAAA2BeOa/7ll19o+fLlFvmyGzdupCtXrtjk2nhtdcyYMcJ/Zz+e
/fngiKo0Ztpy6XMMW9i4GasoNKpazrwlOCc3z/Dhw6FxBQAAAByA/fv3U1xc
HEVERlH5iv5UwTuYegycKN1/sJVNX7iVYms0EHvb/oGhwi/hnN2cGwWogzWl
7QZqTMZkhNTLoPJVMujD4HR63dM6Olfv6ukmz1mzdSYNnqSlddt0dPFyznr0
li1bFGNZVq5cqeq+v/32W6NtIB+29UhOTqbnn3++yDFKn3/+uXhmABSFM3bU
uW5DLVcAAADAYhxB54pargAAAIA67Klz1ezfLft2gQOCNWPn4quvvrKpzpVD
238/p6cVm7KozxgNVWtpH11rnfaZIq/olt06kWMUWA/WmHM8Eu//BQaHiTil
yMq1afLcDdL3KG1lPQZNEvu7vM/L+72878u5jgEAAAAgH9ZjJiYmUkxMjMjD
z7FKdRq2odnLd0n3IWxhg8fMIZ/AyLzcG+yTcY0qW8AagZMnTxZJI8C5iwAA
AAAAALAHnAdn3bp1FvmuvGdx+vRpm+dq4faXLl0qcugJXYlXwEPfPoBaduhP
89P2SZ9vWMM4J2LrzoNEHiJeTw2PiKTY2FhKTU1FLhwAAADAgThx4gTVq1eP
osW6apBYV61ZryXNXLxNuj9hTes1ZAp5+YeL9dTQsAixnjpp0iSRgwSYB5fK
3LxLR/U6Ksd8cA3WgNoZ9FVMOpX2T7dI4/pmxYK1XNVYk26Z1LBlKmKWnIhB
gwZZNU6pWLFitGrVKtm3BZwYe+lcc2q5Yg8NAAAAsBRH0LlmbkYtVwAAAEAN
GWtW2EXnendgD9RyBQbhGGusGTsP//znP22mcy3x/Cuq9jisYVVbZFKPZA0t
XZ9Fp85kiz0WYDtY8zB79myxD8j6inIV/cnTJ4S69B1DC9cekr5faS3jfVze
z+V9XW/fIFErrm7duvTzzz/LfgQAAAAAyMfdu3epT58+Beoi+YfECE2obH/C
Wsa63QbNOwm/xNM7kKKioql69eq0Y8cOm/dvZmYmfffdd2KuZ4lmYM+ePXT/
/n2bXycAAAAAAHBP7ty5Qzt37jToi86ZM4dmzpxp1FddvHgxHT582O41Rn/8
8UeqX7++yNfjFxDycA7jK2q7Dhk7T/rcoyg2fMKCnBquD+ctvg/vi++P11Ox
nwMAAAA4JtevX6du3bqJddXgkBwtKGtCuw0YTwvXHpTuWxTFpszbQHG1mwq/
xMs3iKKio6latWoibzsoGg/SiVKWZYkYDbXxHJGNMsi7egb9NyKd3vZWp3P9
IOiBRbEjZQLnIWbJSeA5mS1ilYoXL0779u2TfXvASbGXznW7bpnsWwUAAACc
Gtk6V9RyBQAAANRjXZ1roPFarvt2yb5V4KBA5+o83Lx502YaV7F2/MzLNtW2
tuyjoemLsui7n7IpPUN2b7onrFmoVauW0H/m1k+rFFePxs9aLX3vsijG+7bd
+o/Ly+3Lehne3+3atStdu3ZNdrcDAAAAwACch2PBggWiLlJkZJTQgrJvEt+g
FU1bsEW6f2G5X3KIeg+dSr5BUUK/GxgUJvySpKQkOnPmjF37+NatW2KOZonW
dcmSJfTTTz+hTgIAAAAAALAaWq2Wjhw5IrSquX7nvHnzaMaMGaJG1+jRo2ns
2LE0f/58gz4q54xhjaws+NzJycnCvw+P4DlMgJjDVK/TnCamrJE+FzHHJs9Z
n5cvsMLD++AarnxfQ4YMEfsQAAAAAHBcdDqd8KeqVq0qcutx7l8e06Oq1KGR
U5ZI9zPMtTkrdlOLDv2ovFcglfP0o+DQnH3eDh060Llz52R3t0tx8bKeBk7Q
WhTrEVovg8pXyaCPQtLpdU/DOtfPI9NtpnOdkbJC1T0iZsl2sM7elnn5v/ji
C/H7BoC5nNEft7nOlWu53tRfkX2rAAAAgFOTffOGVJ0rarkCAAAA6rGHzhW1
XIEpoHN1HjgGyJl0rgntMyl5mpa27tHR1Rt62d0HHnH58mXq0aOH2B8MDYug
8hX9ycMzgBondaNZS7ZL38s015InL6bIyrXzarjyfi7v6/L+LvZBAAAAAMfn
xIkTlJiY+Ki2a5jIWVHBO5hadx5Ec1fuke5rmGOjpi4TOUREzQGfQIqMjKbY
2FiaPn26qLEqi/Pnz9OaNWss0rumpaUJfa5eD38eAAAAAABYBvuSv/32m9hn
SE1NpZSUFJoyZYrQtI4cOTLPjGlc161bR3/++afs28jj4MGD1Lhx40dzmHAq
58nrq/5Uv1lH+jp1s/R5iSnjnEINW3QR68Hl8uULbNCgAe3du1d21wIAAADA
DP744w/q1KnT33u+Xjk5ODiXhTPk4EhN20+d+4win8BIkS/QLyCEomNiRA3X
5cuXY5/Xhhw+lk1JfTQWx4HENMmggNoZVCYmnUoHpOfpXL+Ktp3OtVzIEmrc
LZMmzNHS7u90dOee4fVqxCzZjnbt2tk0XomN8yABYC720Llu1y2XfZsAAACA
0yNT5ypquWaglisAAACgloy1K22uc0UtV2AK6Fydh1WrVjm0zrVqi0zqOVJD
yzZk0emz2YRQeMeFY8s2bNggarvGxMSQf2Co2D+s6BtKbbsOcQpNyYSUNVSj
bqLYr+V929DwCLGPy/u5vK8LAAAAAOeBNaBz584VuSq47ryvf4jwTbgmape+
Y0TMk2zfw5Rx3Fit+kk5fklFfwoJy/FLWrduLXS8jgDHhf3888+0dOlSi/Su
W7dupRs3bsi+DQAAAAAA4GRcuXJFrGtPmzaNJkyYQKNGjSqgbc21MWPGiJjm
/D4o6xt++eUXys7Oln0bhcjIyBCaXdZh8PpqQFCoyNlTrmIANUjsTFPnbZQ+
T8lvrL9t1LKrqJPm8XCuxevBfN1xcXE0Z84cSk9HjA8AAADgjLCftHHjRqpT
p87DsT0njyDnsuAcHAmN29LE2Wul+yGPG6/1du03jgJCKuXkMfYLosjIqLza
8pcuXZLdrW4By4jXfquj2u0yi5z/PLJRBnnXyKCGXTKpSTfz21Orc81/TGyz
TOowWEPzVmbR0ZPZpM3KuS/ELNmGe/fuUfHixRWf0xtvvCH2engvgucYx48f
p0mTJlHJkiVVxSzx7wAA5mJrnStquQIAAADWQabOFbVcAQAAAPOwtc717oDu
qOUKTAKdq/PAsT4mdarFn6Ynn3qaihV7mp6wwJ557g2z9xw4z+eMxVn0v6PZ
lCGvRBWwENYq8PeK64xxHVQf/2AqW8GXfAIiqH2P4Q6pd2V9a52GbYT2hWsl
cM2BmEqVKCEhgTZt2uSQcW8AAAAAUAfXHe3Xr5+IZeDYJq7VzrFOHPPEetf5
afuk+yL5bfys1fn8Ej8KDA4T8WTx8fG0evVqh6w58ODBA9q/f7+YB5qrdeVj
uHYVYuABAAAAAIAp7t+/L+KaFyxYQKNHjzaoazWlcWW/89ChQ0JL6uhcvXqV
xo0bR5UrVxY5e1g/6vFIW8K5cIaMfXhfaw9Kma/weYeOn0/xDVqJ+q05+tYQ
cZ28HszP5vLly7K7EAAAAABWgDVoKSkpIodFTg6OMOGT8Lpl/EOfJHnyYulr
qSlLd4j9Z7/gaLHm6+UbROEROfrW9u3b048//ii7G90Sros6dUEWVW5edL1r
alqO2PTiZT2t366jwZO0VKuNcruW6FwftxqtMmnAeC0NGrkVMUs2gPX0Ss+o
YsWKRucXFy5coNKlSyu28cwzz5BGo7Hz3QFn5w/9z6p0riMt1LnuQC1XAAAA
wCrI0rmilisAAABgPrbWuWr27pR9i8DBgc7VeWjbtq3R/i1RsnSR9x3UWN0O
mTRyupa+2aujazdRsNVV+PXXX6l79+5/a0r8cvSu3v4R1KrTQJq+cKvUfc+F
aw/R8IkLqWa9lo/pSGJEzYTZs2eL/VsAAAAAuAbff/+98H3ZN+FYJ69Heleu
75rUaYCoRSTLL1mw5iANHJVC1Wo3+9svCQrLq4U0c+ZMunPnjuwuVOTatWu0
efNmi2q7Llu2TNSpRX4RAAAAAADAaLVaunjxotgDWLNmjajdqkbfakjj+s03
34jcfM4G5+xJTk4W+tHoR/Vdy1X0z5vH1G/WkQaMnEVzVuy26XyF8xbyfIVr
yvoF5WhIOFcgX0+uvnXYsGF05swZ2V0GAAAAABvAOTgmTpxIVapUEeuVvJ/K
vgD7BMERValFh340ZtoKsfdqL21rz8GTqHpCc1H3Xuw/+/2tb23ZsiXt3r2b
9HrEHcjmzAU99R6tKVIsyfRFWYXa5VSQx09l04LVWdR5qMagntYaOtdcqxhl
XI9pq5gl3g/gtnk+w3ELEyZMEGvoBw4coKyswn1iLX777TdKTU2l4cOHU+/e
valnz57i3OvXrxfxH9akS5cuJp/PP/7xD5HryBRqtLJs586ds+q1A9fHljpX
1HIFAAAArIfVda6J6nSumVvWy751AAAAwOnIWGc7nauo5WrDNTPgGji7ztUd
1oxzCY+oZLR/X3snxia61riWmdRrlIaWb8yi387pCVtMrg2/Sx06dMjTu/oI
vWtO/YHKNRqKOmr20rxyvYGRU5ZQ87a9KTCsck5MVkX/PH1r1apVafLkyUKj
AQAAAADXg2Obdu3aJWKd2DeJyMvFkVOHILpqArXtNlTUVLW1X8Kx6ANGzqR6
zTqKuvfsl5R/zC+ZNGkSXbniXHvd3Me///47rVq1yiK969q1a4WeAQAAAAAA
uBfsR16/fl3EMbMudfHixcI/nDVrFo0dO1aVvvVxjevq1avp7Nmzsm+tyHBM
Nt8Xa0t4HhMWHkm+ASEiP07O+mYAxcTVFRoTrvU6P21fkeYqqWn7aei4+aK9
SnH1cvQjQtvqR77+IeL8MQ+vg+vNcp9D3woAAAC4B5cuXRLrlbxuGRNTiULD
IoS+VKytPsrDUadRW+o2YDxNnrPequuog8fOpcR2fSiqSh2xx8znq+AVIPJu
REVFCx+pdevWtHPnTuTRc0D2H86mZj0s07uOTdEqtn/vgZ76D0l9+P3oTWV8
etEHZXrSv0tVUYxZev29auKz+c2v6gGzdK79RxykH09kk9ZIGFGbNm2oXLly
Ro3nLvlhjbavr6/J637ppZeofv36IrenNeB3hnNtenp6KvZZYGAg7d27N+9Y
ngsEBwebNI6zMkRISIjJc/F8Qw0fffSR4nUfOnTIKn0F3Adb6lx36FbIvj0A
AADAZZChc0UtVwAAAMAyVOtco1XoXCsV1Llq9u6QfXvAAVmwYAH17ds3z7jm
kNI6Ys2aNQscw3b48OFCbRdF54o148JrxhmZRN/9lC3yXib10dALL35q9Hzv
f9HZatrWVn01NHNJFn1/LJsyNVbpOuBEcJwa7x106tRJ7DNynn/WcHh6B4p9
SN7/DIuuQU2SulP/5Bk0a8k2K+laDwmdSuc+o6lW/SRRS5bP5/HwfKy3DQ2P
EDFZ/Js1ZcoUunz5suyuAgAAAIAdYB+cff/c+q7smwSFhFNFn8C8uCyuUyTi
svqPo6nzNxXZL0ldfcBIrLg/+QWEUHh4pLgWris/depUp9O3Pg7X3/rhhx9o
yZIlFuldt2/fTrdv35Z9GwAAAAAAwIY8ePBA5H7kNe8VK1YU8Afnzp0rckCq
1bfm17guXbqUjh49atOclTK4efOmyCfDGg6eO+Tm7uF1Vi/fIPJ4pHtl7Qfn
0gmJrEaVqtWnmnVbUIPmnYQ2pH334dS13zjxv/zf/O/8d/5caFQ1cVyudoTX
ULldbj/iUX00tqSkJPG8WJcMAAAAAPeDfQDOe96oUSPhG3DOPta88hpnea8c
P4LN0zdE+BdVajaihCbthO/RsddI6jt8GiVPWkST524QuZDHTl9Jg0bPpu4D
JlDrLoOpUYsuwj9hTatfcLRB34RzK/O5OQ/IkCFDROwG6rc6NqwD5TzoNVsX
rr1qyvqMURdcEhsbq6qup5J96fe1WTpXvyr7xGeqJ2VS//FaStuio7MX//4u
hoeHmzwff4cZzs8TFRVl1rVyvVN+D4uyl/DLL7+Qt7e32f3E8V6ZmZl07Ngx
xc9yXn9DfPzxxyaPGz9+vKp74D5UuoYdO3ZY3EfAPVGvc21hls51TtZguqW/
Kvv2AAAAAJdBhs4VtVwBAAAAy7CVzvVuf9RyBYax1pox52Z/nKLoXLFm/P9o
3br1dOpMNi1dn0U9kjVUtUXBfYNiT5YweuxX/rMs1rXW65hJo2Zo6dt9Orp+
E3tK4G+4JsPo0aOFhoP3HznHLutKON9vbiwWm5d/uNC+Vq3VmOo17SA0IZ37
jKJ+I2aImqxT5m0QGlbWi/QaPJnadR9GTVr1oPgGrYR2hOu1lvcKzGuPc/ry
/qqoNxATI87dtGlTEffGMWIAAAAAcE+OHz8u4ufZx87VvIbkxWUFFIjLCgqv
Imq+Vk9oLuqw5saJ9xg0ifoM+1rUqW/deRA1TupGtRu2FjFc4TE1hWbWwzOg
cKx45N+x4u3atRO1TO/cuSO7S6zK3bt3RQ1dS7SuXMOLY9Q0GiTKAQAAAABw
BVh3+ueff4p8lxzrbMgHTE1NFfnoRo0aZZHGlTWz9+/fl32rNufixYu0Zs0a
6t+/f946K+fzY80Hr38Gh4SL+mZcf5XnHxW8A/Lqv+Ya/zf/O/+dP8ef5+P4
eJ6rxDyaq3D7nKeU6+NeuHBB9q0DAAAAwEHgXIInTpygOXPmUMuWLfPWOXnv
NyQ0nPwC2Q8JpHIV/Qv4IKqsgh95PvRTOG8xr6OGR0SKGrLcfo0aNWjo0KEi
jsTV1lLdgRu39DQuRUuxzdTpXVv0dg6d6+PWoHOmqEVbzjNMMWbp119/pbfe
esvia3733Xfp5MmTZj8L1n4+99xzFp+X30fOdan0OWM61+eff97kcZxbRw2c
/1/pGjgmDABz+N1GOtedupWybw0AAABwKbJvXLerzhW1XAEAAADLyVi3yiY6
V9RyBcZwZp2rq68ZB1ROM7onEF73gsljja3JG7K4lpnUe7SGVmzKot/P6Qnp
UoESXK9hz549IgatTp06BWoQsO7VNyBE1FQr52nm3mcFP6FpZd2sf2Co0Kmw
XiW3fa7bxvFy/O4jry8AAAAAcmEtJcfbT58+nRITE/+Oy3roRxSMEw8mr4c+
itDAVvAz6I+w/8J169kfYb0sx2KxTyJixWP+jhXnmHTWtv7111+yb9/m8D0a
0zIoGceznD59Gr4bAAAAAICTwf4b55fj3DLbtm2jJUuWmPT72Bfn/Hjm6FvZ
+BjWYBYlJ6Uzo9VqRW7BZcuW0YABA6h27dp58xlDlpsD0JjFx8eLuQrnB+Rc
m8g7AwAAAAA1sC/GPh/nFORcwwX9j5z8gpGR0RQekZOXIyQ0QuhhuRYs61h5
7ZQ1so/7Krk5N9g3Yb+SfR/g/HCu9i7DNIpxKNVaZqqKPXE0nWuuvfpmqOl4
noAAeu+994p83S+99BIdOXJEdf9zbsoSJYznxFdrPPdQ+owhnSvPFTn3qCnj
ugFKsN6+ZMmSJs/P94m9BWAu1tS5Dnqkc82p5XpN9q0BAAAA/5+9+4Cuotrb
Br4QUATEq/fzxYsICooIKJ1ASCMhnd57770XaUoVaaEGCB2kRfqlBaWDgPQq
AgLSS2imnP587I3hUpLMnDonyfNba6/7Xm5mZs+cvJmZffaz/+mKq3OurOVK
RERkO/U5Vx/VOVfWcqXUpNWca0YYMy4XtDrFMXWvantT2TYTQpvfT3Fbsb5m
l2F6zFlhxJFTZug41YXsIL5/uHjxopyPNnLkyOf11FL97jMw+Nn3nkH/+94z
LJk5Wu3bt8eMGTOwe/duxMbGan2qRERElEaIeVlibZqpU6eiTZs2qc4RF88p
KT2LvDgfa/DgwRl6rrh45hNrBEVHR9uUd920aVOGzS4QERERpRUJCQn4888/
sW/fPqxatUrVc97cuXMxadIkq/Otoontjh8/znnLrxCfw927d3Hp0iWcOHFC
fh5btmyRa8iINQDFf4r/Lv5d/O/i58SzttiOiIiIyBHi4uJkLXgxFirWPt6w
YYN8DhHjrSNGjEDv3r3RpUsXDBo0COPGjUNUVJR8RhHzQw4fPiy/O75//z6M
nKeUbolH+B2/mtCib+q1XW/fU37WT6s5V0e2ggULqqpxfP36dbz77rsu61dK
9Vwd4dChQ4rHL1WqlNOOT+mXM3KuO02rtT4tIiKidMeVOdfH37CWKxERkT2c
kXPV79mh9WmRG0urOdeMMGacWs61lP+SFLd7O2e+ZzVfm9yQ+yjiMRaff90G
Bb/whV9AXZQpWx7VqlWT3z9t3boViYmJNv/+EL3KZDLJWg+XL1+WdYtFxkRk
YBcsWICIiAh899136NWrFwYMGIAxY8YgMjISy5Ytk9mH/fv3y7V8b9y4IWvG
EhERETmCTqfDvXv35Jz9kydPPp8nLjKb8+bNw8yZM7FkyRKsW7cO27dvl+8q
ItMpnkmePHkiM570jLiWYv7J0qVLbcq7inlxYp4cEREREWlPjOPdvHlTrgO5
ceNGq57xFi5ciClTptiUbxVZiNmzZ3MdFCIiIiKiNC5RByxZa5S1W5Ob1yLW
XVfiqDlLI8dEYdl6I/p9r0f1dro0lXMVrWHDhorXKiwszKV9clbOVax3lCdP
HsXji/klRNa6ZDnl0JyrqOX6iLVciYiIHM6VOVfWciUiIrJP4n/XODTn+mRo
P9ZypVQx5+q+Y8ap5Vy/LDsqxe3ez+2JQiV6Ieub2VUdR2R3hw4diocPH9r8
e0RERERERBmHeHcQ73u2ZF2XL18u606xngMRERGRa4m6qeI57uzZs3J9F/Fc
Zu2znKjjJdatE1lVWzKuIhsr8rSxsbFaXw4iIiIiInKQO/ct+D7S8Nq8lnXb
TIrb9u3bF//5z3+et3/961+q5rm8uE3+/Pnl+j1J4hOAA8fM6D5wa4rbu1vO
VTQxbp4S8R7l6v44Oucq1iIV75O5cuVSPHaRIkX4HQLZxNE5112s5UpEROQU
js+5NmEtVyIiIidxdM5Vv3u71qdEbs4ZY8ZJ0lLO1R3HjFPLueYv3Nbhx3vv
vfdkDSsiIiIiIiI1/vrrL/kOYUvedc2aNbh8+bLMWxARERGRcyQmJspnrv37
92P16tU2PbcltaioKEyYMMGmfOukSZMwd+5cREdH4/79+1pfFiIiIiIicoLT
f5jRfbj++byW6YutzymqmZuzatUqVftKbc6So3OuWbLmwidFOqG4dyRK+ESh
4FedkSdfWWTOnEX1Plq1apXiuZQqVUr1fj777DN06tQJCxYskFnVGTNmwMvL
y+o5RPbmXLt27QofHx989dVXyJ07t+rjZsqUCdu2bbPr2JRxOTbn2hSPLBzD
ICIicgZX5Vx1MRu1PlUiIqI0z6E511pBrOVKVnPVmLGjc65ivT8xRirqyoqx
2m7duqFcuXLIksX1Y8Y5chXEJ1+2l2PXIqv6ledkWWPV2jHj1HKuH+QNtHp/
atuAAQOs+p0hIiIiIqKMy2Qy4fTp01ixYoVNeYmYmBjW8yIiIiJyEPFsduvW
LRw7dgybNm2S4/32ZFtFmz9/PiIiImzKt44fPx6zZs2S+1m5ciUzrkRERERE
6ZzZDGzdbUKTnjr0+15v9faumrM0euIB9B+rR432OrtzrnkK1EVI09vJ7qd8
6CZkzpJd1X6yZcuGR48evXYeBw8eVN2XBg0aICEh+XpVW7ZswTvvvKN6X/bm
XEW+1dr5SpkzZ5bvoES2umg56bCc63hDJ61Ph4iIKN1yRc6VtVyJiIgcI3Hj
WoflXB91a6v16VAalBZzrmKcNrmx3qQ+ZM/uujFjMX4d2vxBsuPXHsHrkSWr
+jHjV3OutTvqMHSSHqu3mFCg4BdWjwdb00aOHKnqMyYiIiIiIhLi4+Oxb98+
m7IUYpsDBw7IemNEREREZB0xpn3u3Dns2LHD5rVHkmuLFi3CtGnTbMq3jhs3
DtOnT8fixYufZ1zv3bun9aUiIiIiIiIXiU8Alq1333quSXOWEhKBg8fNmPmj
ER0G663Oueb5tDbCW8WnWhvWM/xn1XOFRBb1Ve3atVO1bb9+/RSviRiHz5o1
q6r9aZFzjYyMtOuYRI7KuQ5/2qKMQ7Q+HSIionTLHHvP6TlX1nIlIiJyDLU5
11ilnGuIF/4ePVTr06E0KK3lXOvVqwezWBAyFbt371a9JqE9Y8YFv+6V6ti1
aF7VdiPTG+rGjMsFr0G37/SYF23EsTNm6A3P+mOxWGQm194sq6M+ZyIiIiIi
oiQivyDeq2zJUoj8w9mzZxXf8YiIiIjoGfHstXr1aodlW0VbsmQJZs6cKWux
2pJxnTx5MhYsWPDSM97du3e1vlRERERERJQGaD1n6W6sRdajLVQkULEfWbLm
RGCjvxTnCYlWxGOsqnk63XoMg8Xycp8KFy6suN0HH3yQYh3XV/Xs2VNVX7TI
uWbJkgUTJ06067iUsTkq5ypquS4wskYEERGRszg75yprueq4zjoREZEjOCrn
+qBpTfw9ZpjWp0NpkNZjxknU5Fxz5syJO3fuqOrLhAkTVI2ZDhs2TP68yQSc
u2jG0vVGvP+Bcu3UN7P9vxTruL7aChTrqqovK1ZuSPZcbt686fBMa3KtQIEC
MBgMqq4vERERERFRErE2z6VLl2zOXKxfvx7Xr1/X+jSIiIiI0gS9Xo89e/Y4
JOM6Z84cOafYlnyr2E5s/+L+RH1ZtWP4REREREREaWnOkpq18JNacJNbyJz5
beW8at5ANO6hww+zDNi214SLlx8gU6ZMituNHKk+jxcbGyvzpEr71CLnmtRE
FpfIFhfNJ+zOuYparrONg5lzJSIiciJn51xZy5WIiMhxHJJzDfHCo26tmXMl
m6SlMeN+/fqpPq8HDx7g7beVx4xLlw3CqOkG1O+qezbW3PTW039XHjP+ovS3
Voxf30SmN2wfM963b5/qsV9PT09Zj1bkd5s1a4aiRYuqGgNParNmzVJ9jYmI
iIiIiF4k1s05duwYli9fblPOYvv27Xj06JHWp0FERESUJly4cEHmSm157hL1
V0UdVlvyraLuq6j/KurAvppxvX37ttaXhYiIiIiI0pC0NGepQthW1fOERPu4
UDPFfb7zXtGXtvEI+a/iNiKz+vDhQ6uus7+/v1vnXMW8pm3bttl1fMqYHJFz
FbVcxc8w50pEROQ8zsy5spYrERGRY+k2rbM75yru6eJnmHMlW6SlMeMdO3ZY
dW4tW7Z0ypixyKyKPKyaceuqbXToPlyPL7+qZPOYsZgjpLRtwYIF5fVPTnR0
tKrMr2je3t5WXWMiIiIiIqJXPXnyBLt27bIpc7Fs2TIcOXJE1ikjIiIiotSJ
NUI2bdqk+llr8eLFmD59OsaNG2dTxnXatGlYtGjRa/tlxpWIiIiIiGyRVuYs
ZcuWDTduJcqaq6L2qqjBqjRfqKTfAsVzy5bjo5e2Ke4dqbhNvnz5rL7OYr0i
Z+dcGzZsiMKFCyNPnjzIkSOH1VnXvHnzch1Mspq9OdekWq7MuRIRETmXM3Ou
um2btD49IiKidEVtzvV+eAo5139quT7LuQ7V+nQoDUpLY8Y6nc6qc1u8WDkf
asuY8ds5P051rLp5Hx0i5hmw84AJj55YZF/sGTOeMGFCqtvlypULf/zxR6rX
4tdff8Wbb76p2IesWbMiLi7OqutMRERERESUnJs3b8r3HFvyruI9VNQos1gs
Wp8GERERkVszmUxy/Ffp+WrWrFlynNqWfGtERATmz5+f7H6XL1+OW7duaX0Z
iIiIiIgoDUorc5ZEfvNFYtj64lULojcZ8c04PWp2eD336lllu+K5Zc6S46Vt
ipT7XnGb/AUrIGaPCXdj1Y+dr1mzxuk511f9/vvviIqKkuvtq826tm7d2qF9
oPTvgp0516Rarsy5EhEROZezcq6s5UpEROR49uZck2q5MudKtkqrY8YpuXHb
go07TBg5zQD/2jucMmb8Xu7yL21Tp5MO30YYsDbGhKs3kh9HtnfM2Gg0ynUL
r1+/LseCDx8+jJ07d8ptTpw4oeraqKlvK1pMTIyq/RERERERESkxm83yHSY6
OtqmvKuoT3bnzh2tT4OIiIjI7Z0/fx7Lli177Xlq7ty5mDRpkk35VrEGo5iX
nNKzmsi4irVNiIiIiIiIbJFW5ix5enqmur1ODxw+ZUbUciM6DdHLuUSVG1xU
NUcnvFX88/lHn5for/jzeQrUef7zHQbrMWupEQePm5GQyvT+ffv2uTzn+iKx
7lKmTJkU+5A7d26n9YHSJ7U517GGdqnWcmXOlYiIyLmclXNlLVciIiLH021e
b3vO9YVarsy5kq3S+pjx3/EW7D1swrRFBrTu//L6iM4bM66LHiP0WLjKiBPn
zDAYla+N1mPGwpkzZ1SNG8+bN8+p/SAiIiIiooxHp9Ph0KFD8h3Ulrzrnj17
EBcXp/VpEBEREbm1GzduYOXKlfL5aeHChZgyZYpN+dZx48YhMjISS5YsSTXj
Ko5HRERERERkq7QyZyk0NNSq87r/wILoDTcUzy3TG1lemuf0SZGOituIn3m1
dqxoNdrrMGCsHss3GHH+TzPM5v/158CBA5rPWRo2bJiqOVx37951aj8ofbEn
5/piLVfRFhpHaX06RERE6Zb5/l2H51wff9OTtVyJiIicQG3ONTbcN9VarjLn
OnqI1qdDaVBaGzM2mYDTf5ixZK0RvUfpUa2tLtnxW9ECG111yphxu/ZdrL7O
7jBmLBQsWFCxH2IeExERERERkTM8fPhQvjvaknUVWYoTJ07AaFSx2BARERFR
BnX79m3Mnj1bZlVtybiKbKzIyCo9l12/fl3rUyUiIiIiojQurcxZqly5stXn
dvToUcVze/Ot91+as1SgWFfFbT4u1DzFeVIvtobddRgTacCWXSYsWbZB8zlL
jx8/Ro4cORT78csvvzi1H5S+XDAftynn+motV+ZciYiInMsZOVfWciUiInIO
m3OuopZr19bMuZLd0sqYcYnSARgx1YB6XVLOtb7avGsoZ0ttGTNu1aqV1ddZ
jAdrPWYsiLF3pX7079/f6f0gIiIiIqKM7erVq1i3bp1Nedc1a9bg8uXLsFgs
Wp8GERERkdsQz0YXLlyQ4/nz58/H+PHjrcq3Tpo0CXPnzlV8Flu2bBmuXbum
9ekSEREREVE6kFbmLJUqVcrqcxPj30rnluu9T1G1zf/mQX1RWrnm6Yf5q6me
N5XUinvPsmnOklh3cuXKlSk2a+c5BQcHK/Zj8uTJVl9ryrhszblOeKWWK3Ou
REREzuXonOuj7u1Yy5WIiMhJdJs32JRzfbWWK3OuZKu0Mmb87r9LWD1OWzYw
WvHcsr/zqfxZURe25wg9ajf8TnGbGjVqWH2d582b5xY516ZNmyr2Y8CAAU7v
BxERERERkclkwqlTp7BixQqb8q4xMTGIjY3V+jSIiIiINHfnzh1s3rz5pWcl
kVlVU9NV5GFnzZql6vmLGVciIiIiInKktDJn6Z133pHj2dYQeU2lcxP52QeP
LPhlvwkT5hhQLkB5m5z/Kmz1/KlPi3axac5SlSpVUt3mvffes+qaqJmz1KdP
H6v2SRmbLTnX4Yamr9VyfZZzHa316RAREaVbjs65JixbqPUpERERpVs25VxD
Kr5Wy1XmXEcx50rWc4cxY6MJ8PQKTLUPWbK+g/BWcVaN0xYtP17x3D7OXxJ7
fjPhSdyzOkDTp09X3ObLL7+0+jp3797dLXKu4eHhiv0Q85qIiIiIiIhcJT4+
Hvv27ZPvp9ZmXcU2Bw4cQGIi1+okIiKijCcuLg579+5N8VlpxowZKeZbRQZW
jIcvXrxYdcb1r7/+0vqUiYiIiIgoHXGHOUuCUs5VNDEObY3y5csr7rNBgwYv
bbNypfJ6/qJVbnDRqvlTb+fMp7jP5p3WYvNOE27dtTzvT8eOHRW30+v1qq9J
YGDqc8NEGzFihFXXmTI2W3KuEwydk/0Z5lyJiIicx6E515CKMF74XetTIiIi
SrdsybkmV8uVOVe6dNWCxWuMVm+n1ZjxtVsWrP/ZhOFTDKjbWYcPPqqs2A+v
arutGqd97//KWT1mHB2tbszY2jXr8+fPb1POddKkSTKbmlp7/Pix6n6IjK5S
PxYu5Do3RERERETkevfu3cOWLVtsqu26cuVKnD17FmazWevTICIiInI6o9GI
kydPYsWKFak+Iy1atCjZmq6irtCCBQtUP2uJjOvVq1e1Pm0iIiIiIkpn0lLO
tWvXrqrPS2Ri1cw9mjBhwkvbXblyRdV2xSpMVD13yqvaXlX7LBe0+vk2bQfq
MWOJEV16/KC43e7du1Vfl48++khxf7Nnz1a9P6I/zMesyrmmVMuVOVciIiLn
cmTO9UHjGjBdvaz1KREREaVbui1W5lxTqOXKnGvGJeqQTl9sRLW2OkxZYLB6
e1eNGe/cdQi7D5lkH1v20702rqom5/pJkU5WjNPuduqY8dSpU1Vf40OHDqna
Z3I513r16iluJ+Zzq3H37l28+eabivs7ePCg6nMjIiIiIiJyJIvFgkuXLmH1
6tU25V03bNiA69eva30aRERERE4jxrDXrl2r+vlo2rRpz/OtEydOxJw5c6x6
vhLfIYhjEhEREREROVpayrmK+TZ//vmnqr7UrVtX1TyhXbt2vbZt3rx5Fbd7
J1duNOx6T8X8qQS8/6GXqr68mHNNamUClitu17lzZ1XXRJyrmn6Iz5FILWtz
rinVchVtEXOuRERETuOwnOs/ORrmXImIiJzH2pzrgyY1UvyZv0cO1vp0yIVE
iZpNO0xo2P1/mdGVG923nqtPjX2pjq2qybm+8cab8K93LtX9tOqnw9SFBlSq
XMepY8a5c+fGkydPFK+JmKPt4+Ojqi/J5VyHDh2quF39+vVVfT79+vVT3Ne7
774Lk8mkan9ERERERETOYjAYcOzYMSxfvtymvOuOHTvw+PFjrU+DiIiIyGFi
Y2MRExNj9XNRVFQUxo8fj5kzZ2LJkiVWZ1wvX76s9akTEREREVE6pWbO0vz5
81Xty9k5V9GKFi2Ke/fupbgfMUeoT58+qvb1zjvvID4+/rV9NG7cWNX2tWvX
xoXLOqzZasLQSXrU7vh6zYHPivdVtS/Rksu5+tb6TcVcrjcU1+ePi4tDgQIF
FPeVPXt26HQ6VZ83kWBNzjW1Wq7MuRIRETmX+Z5jcq6ilqv4OeZciYiInMeq
nGsqtVyZc81YzvxhRrfv9K+NL+48YH0+0ZFjxstWbktxH97V7c+5ynHe94og
qPH159vV66LDiKkG/He7CddvW1w+ZqzX61O9JgMHDlQ9ZpxczlXM6VbaLlOm
TMnmdV8k6hnlzJlTcV81a9ZU9VkTERERERG5glhfaOfOnTZlXZctW4YjR44o
vrcRERERubPExEQcOHBAjuVb+zwkthHrfyxatMimbdXWKiIiIiIiIrKFmjlL
/fv3V7UvV+RcRRN5TfHOZBYFCl5w8+ZNNGnSRPV+OnTokGxfdu/erXoffn5+
+PXXX+V2BiNw/KwZ86ONaNLlKP7zSQ3V+xEtuZyraDne/Vxx28xZ3sTEaZsR
9/oULJw/fx7e3t6q+lCtWjVVnzVREmtyrqnVcmXOlYiIyLnU51xrKNZyZc6V
iIjIuXRb/6s655q0BgVzrhlX7EMLxkcZULXN62vwiXbuoll5J6+wZ8z48d8W
7DpoQsQ8A1r01aF86KYU9+GonKto777/KTr1WoRTvxvxYulRrceMX3Tq1CnU
qlXLqjHj5HKujx49wltvvaW47aefforjx48nez5ivP6jjz5S1YetW7eq+K0h
IiIiIiJyLfG+J96ZbMm7rlq1ChcuXJDrIhERERGlFWLO9NmzZxEdHW3TM9Dm
zZtx+/Zt+Rw1ceJE9OvXDwMGDMCoUaMwefJkLFiwINWM66VLl7S+BERERERE
lM6pmbOUI0cOdOrUCVOmTJHr9EdFReHcuXOv7ctVOdekljdvXoSEhKBGjRrI
nz+/1dsfPXo0xf6ULl3aqn0VKlRI9iU8PFzWnLW2L6KllHP9stwYVdtneiML
/vVBGZT27IIOPebj2xEz0bZtO2TLlk11H5TW+Cd6VXI511l/D8HUOwMw/s9e
GHW6K4Yd6oCu+2ri2+Pt8cOFHoi43heRDwdhrv5b5lyJiIhcxBE51xdzNMy5
EhEROc+rOdd7XVvjSodmONu6EX5rVg+7GtbE5jpVsbZiKWyrWxX7G9fG8RYN
8EfbJrjZqSUedGvDnGsGYDQBq7YYUbdz8vnWpCZysNayZsw4ImIKRo2dh5Yd
Z6FZt5Ov5W1dlXNNr2PGyeVcBVFjVc32WbJkkZ/T4sWL5fj9zJlizLgt3n77
bVXblyhRwurfHyIiIiIiIlcRWY/ff//d5qzHpk2bcOfOHa1PI8MQuRqxBpRY
S0q87+7bt4/Xn4iIFIl1Kbp16/ZSi4mJ0bpbLnfjxg1s2LDBpmeeGTNmoHv3
7ihcuDAyZ86c4nhw1qxZ5c+I8fUffvjhpYzrxYsXtb4ERERERESUAYhxQ1vm
18yZM+e1fbk652pPq1q1qlOuiz0tpZxrUONreOONN51+/MqVK9v1u0QZT2xs
LJbvno92i2qj3vdBCOxaHmVqF0Xx8EKvtWLhBV/7txJVv4BP69KoPsQPzWdW
Q58NLeR4yKu1momIiMh+dudcX6jlypwrERGRc4i5GteuXcPGMSMwyd8LvcuW
QP3CnyHk03zJtuB8eZL997AC+dH66yL4tmI5zKtbA4cPH0Z8fLzWp0cOdOSU
Ge0H6VPNiIpWq4MOtpSmsXVstLh35Gt9cHXONb2NGaeUc92/fz8yZcrk9OOL
9f2JiIiIiIjcnU6nw6FDh2QGw5bsx549exAXF6f1aaRL4to2btwY+fLlS/Hd
M1euXHJtqfr162PSpElISEjQuttERORGxFzCV+8do0c7rp6GWIchueeDNWvW
wGAwOOw4tnr8+DF27Nhh0zPOtGnT4OHhYdPYsBh/LlWqlKz1euHCBa0vAxER
ERERZRBnz5616R0mLedc33//fdy6dUvx2rRv396lc5ZSyrmKVqBYN6ceW4wZ
812UlIg5sQcOHJB1H8T/f1SpUgWVwr1RPOwLFA/5EiWCiqFE5a9Rwr8ESviV
QkmfMijpVQ4lPcujZIWnraIHSnqXRQnfUihR6enPBBRHicBiKB5cBMVDC6NE
eGG5T/HdxciRI7Fx40a5DhkRERHZz96c64u1XGXO9a8rWp8SERFRuvDw4UM5
P2HixIlo2rSpfC8O8yiHoAKfoPJnBeFfqBD8Cn8JnyLFULFYcVT4uhQ8SpRF
2VLlUaZ0BZQrWQ7li5eG51cl4F30K/h+WQSVvvgCAZ9/hsCCnyLki8/lPqtV
q4bevXtjyZIlOHPmDEwmk9anTja4ddeCEVMNivnWpNZmgN6m49g6ZuzInGv1
djp88rnrcq7uOmacUs5VaN26tVOPLc6ViIiIiIgoLXnw4IGcu2RLDmT58uU4
ceIEjEajy/rr7rkae1y/fh2NGjWy6X00b968mD9/PtdIJyIiydk5V3vmPTuT
Xq/HkSNHsGzZMpuebb7//nu89957do8Ti/qvorarxZZFNYmIiIiIiKyUmJiI
bNmyWf3uokXO1RHr07/xxhv46aefVF0bken76quvnD5XKal9P3E9Js83oEVf
3WvzusJb/o3/l6eS0449efoqGDm9kZIh/kbs3LkTw4cPR40aNZ7Ntw0LR0Bg
MLx9A1CmgjdKlfV63spW8IN3pTBUDq2FKjWboHbDtmjUsiuatOmJuk06oFqd
5giuWg++lauivFdllCr3wvYeFeHpXQmVAgIRHBIqjyVax44d5XgNM69ERES2
syvn+kotV+ZciYiI7PPkyRNZI3HAgAGyfqR49w0JDYN/QBAq+vijbLmKz9+V
S3v4wNMnGP7BNRBWvRFqNmiNhi26omXHfmjT5Rs0/ed9u2qdZgiq8vR9O6AK
PCoGvPSuXr6iH3z8KiMwKATh4eHyeA0bNsT06dNx+vRpzk1IA3R6YMlao6zP
qjbjKlqf0bblXOPiEvHWW9aPGdubcxW53OmLjdh/xIy4eI4Zi5ZazlXk5EuU
KOGU4xYrVoy1jIiIiIiIKM26evUq1q1bZ1MmRGRMr1y54pLxEnfN1dhr7Nix
yJkzp93vpuL9W1wjIiLK2DJazlU8g4iaNatWrbLpWUaMKYs6ro4YO3+x1atX
j2tQEBERERGRSwwZMsTqdxZX51zfeecd9OvXz673rCxZssisnDXu3buH0qVL
23Vc8b7YoEEDxZ97cc7SXzctWP+zCd9NNqBOp2fz14Kb3ESOdz936Ltnpjey
orj3LLn/up11GD7FgA2/mHDtFuc3ZnTidz8qKkqOT8j5tiGh8KsUCA9Pv+fz
ZL0qhaJ+s07o+c0PGD15MaKW/YKlGw5Z1Rat2YdJs1fjmxHT0KrTAJmBFXN4
xf7LPP1PL9+Af+bhPsu8Dho0CEePHtX68hAREaU59uRcX63lypwrERGRbcT6
TVOmTEHNmjXlO25QcKjMn5ar4Pv8XVvkWZu17YUBw6ciYs5aLFl3wOp3bdHm
rdyJURGL0LXvSNSs3+p/2ddy3vD0qiQztWIdK9EPUbNx69atLq1XQurtPWxC
y37W5VuT2shp6mu/3LhtwX+3m+Q29bro8HnJgVaPNVqbcw2svw+jphuwaYdJ
1qp9FceMU8+5Cnfv3kXRokUdOmZcqlQp3L9/36prQkRERERE5G5MJhNOnTqF
FStW2JQRiYmJQWxsrFP76G65GkcQa6g78h1V1JBbvXq11qdFREQaykg51zt3
7mDTpk02PbtER0fj3LlzMiMrxs4deT9Oat27d3fp9SAiIiIiooxJrEHv5+dn
1fuKFjlXsU5Rt27dbHq/ypMnj3z/s8Xjx4/lnD9bjps9e3b5/rhgwQLFn01p
zpKos3rqvBmLVhvRZUgsPinS/unP27/W0pvZ/h8qhG1JcR6cmD83ZYEBuw+Z
8CSOudeMQszTmzFjhpxzK2q8iHmvHp7P5tuWKe+L6vVaosfA7zF57jqb5tmq
aXNX7MDQMbNkDVhRG/ZZ/RpvePsFyPo24v8fe/XqlWa/1yEiItKC+e4d23Ku
ydRyZc6ViIjIOtevX8eECRNQrVo1+a7t5x+IshWevWuL/Kmox9rv2wjMXLLV
ae/ai9f+irFTl6J9j6Gy7uvzzKt3JQQFh8h37ZYtW8rxM+Zd3cPVGxYMGq+3
Kd+a1CLmpZxz/TveIjO00xYZ0Lr/6zna0Oax+Pd/fKwab7Q253rwIMeMbR0z
flFCQgLGjBmDd9991+4xY/F36tGjRzZdEyIiIiIiInck5kTt27cPS5cutTov
IrY5cOAAEhMTndI3d8rVOIK4Zva+lyY7v+nNN+VnSEREGVNGyLnGxcVhz549
NuVbxfPKwYMH5fOK+H6nfPnyTrkfJzVxTCIiIiIiImcT84GmT5+OsmXLyrXk
ld5VtMi5JhFzj8qVK6fqnSpHjhzo3bs3njx5Yvc1WrVqFfLly6f6fU5kh48c
OSK3ddScJUFkTqfO2o5CX1Z6+llltn78N9u/8WXZkQhtfl/1nLhqbXXoOUIv
s7YnfzfL7C2lL2L+mqjfmpRvFXNuy/xTVzWsRiP0GzYJ86J3OW2+bUrtx/UH
MWbKj2jSugfKefrLObgVvf1lfVkxl7Bv3744ffq01pePiIjI7dmac02ulitz
rkREROqItaRE/dbq1asj7Om7tm+lynIdJ/FuK9aRGjw6EovW7HP5u7Zo0xZs
RIcew+Dt/2x9qfIV/RAY9Czv2rp1a2zfvl3OHSHXi4sHopYbUb2dbTVcX2yz
l/0vsyzG807/YcbiNUb0HqWX433K+0hAMc8I/OsDUbtUecw4uZxreKMtHDN2
wZixIP7miMxv1qxZrR4zLlmyJH755Re7rwcREREREZG7unv3LrZs2WJTfmTl
ypU4e/asw8dK3CFX4yj37993yPpLKbWvv/5a1uglIqKMJz3nXEUu9eTJkzbX
n9+2bRsePHjwfH/r16932r04qeXPnx86nc6p14WIiIiIiOhFt27dwo4dO+Sa
8pGRkZg4caKckycycEuWLMHq1avx119/vbadq3KuSTZv3oyBAweifv36KFOm
jJxPVLx4cQQHB6Ndu3ZYu3atXMvekcQ7s7g2HTt2hKenp3xne/vtt/Hvf/9b
HjssLAw9e/bEqVOnXtrO0XOWkohx4omT58G7Uj3kL1AROf/1GbJkzSX3lynT
G8j61nvIkesz/PtDb3xeYoCs3xrW4qHdc+TqdNLhu8kGrNtmwl83Wes1LTMY
DHI+Xr169RAeXuV/+dZy3qjXtCMmzlqlyXzb5JrI2XbpOxKePsFP++f1LO/6
T33XkSNH4saNG1pfTiIiIrdlU841hVquzLkSERGlTqyZLcbQateuLdeSSsq3
lvbwles4TZ2/QfN37KS2ZN0BfDNiGgJCaj3PuybVdxV5uVfHuMh5LBZg214T
mvS0P9+a1KYsMGDDLyaMmGpA3c727Tew0RVUCNuK0v5L8VXFKSji8QOKVZiA
r71moKTffJSpvAIBDS6gQTcdRs8wYPNOE27fs3DMWIMx40uXLsmxfLE+nMjZ
FylSBG+99dbzfebMmROffvopKleujHHjxnENOSIiIiIiyjBEDQDxziTmPdmS
JdmwYQOuX7/usP6kp5yrGEdydq5m4cKFWp8mERFpID3mXMUzyZUrV7BmzRqb
nknEOPfVq1df268YF1dzT/3444/RuHFjDBgwQN7D69SpgwIFCqi+J0+dOtUp
14WIiIiIiMiRXD1nKS1x1pylVyXVZVjwUwJ6jUxUWZfB/tairw4R8wzYddCE
x38z95pWHD16VM7vE3NXAyoHo2z5Z/Vb6zbpgIg5azWfa5tSW7BqD7r2G4UK
3oEyj+vtG4CwsHBZi3bx4sXQ6/VaX1oiIiK3Y0vONaVarsy5EhERpWz//v1o
0aKFfNf2DwiSa0mVftoat+qO6Qs3av5OnVL7cf0BDB4VCf/gGnJswNOrEkJC
nq0t9cMPP7y0Hjg53h+Xzeg1Um/3GF1Ii0R41klEseAEfOwZj5LhCU4fFxTj
jz1H6LFsvRG/XzLj1dI2HDNOmavGjAUxF0zULhI5fCIiIiIiooxOrAcu5kss
W7bMpmyJWOvo8ePHdvcjveRc//77b7z55puK77h58uSR78JivSWxBtWZM2dk
TiZXrlyqMjVinIqIiDKe9JZzjY2NRUxMjE3PIKLuq1hPMbka5+J+LNZfVLqf
VqxYEfHx8XKbCxcuPN/3iRMnMGjQIGTKlElxH76+vg6/LkRERERERI7GOUsp
c+WcpRf9HW/B3sMmTFtkQOv+rsm8Vm2jQ/fheiz4yYgT58wwGB1+WmQnMaYh
6jSL7wCCQ0JlrRYxh7Vq7WYYH7lS87m1apuo79qu22CUreAn6+JUCgiS59S2
bVvWmyEiInqF1TnXVGq5ypzrtdfXBiUiIsrIHj58iFGjRsn3UlEP1cPTV75r
12rQBpPnrtP8HVptE/Vd+w6dhIp+IXJtKR+/AFmTtkGDBnLsjxzr0RMLJs83
yPE0W8bhwlslwrdBIkqEJ6CAbwJyl41/qZVwUs61ZT+drBW75zcTnsSlvuYd
x4xTptWYMRERERERET3z5MkT7Ny506acicjIHjlyxK51uNNLznXTpk2K77fl
y5fH7du3k93+2rVrqmrIZcuWjeueExG5EfH3W9wPJ0yYgP79+6N169bo0KED
vvvuO0RFRWHjxo3yXpsaUZNU5CtTa8eOHXvtntC1a1fF7USGUw1n3o8vXrwo
63aMGTNGXqPmzZujWbNm6NOnD8aPH6/6uWPp0qXYt2/f83xqcsTPKd1Lixcv
jkePHj3f5ubNm3K7kydPPv+3Vq1aKe4na9asDlnzg4iIiIiIyJk4Zyll7jJn
6cZtC/673YSR0wyo18U1udfaHXUYFmHA2hgTrt5grVetHT9+XI6XiDmqPn6V
5ZxV34AqGPr9bM3n0traZizaLGvQivnDHp5+CAkJRdWqVTFv3jwYjQxaExER
CdbmXFOr5cqcKxER0csOHTqExo0by3dtb9+Ap+/aXvAPqYmRExdq/s5sa5sf
vQttunyD0h6+KFveB4FBITLDO3LkSMV5KaRMLLW+/mcT6ne1fnyucpNElK2e
iEL+CfiPR/xr2dYXm6jr6ojxvbqddRg+xYANv5hw/bZ143scM06Zu4wZExER
ERERpUX2ZmtezNWId9dp06bJDIq1TawxLt7dxFyMpP3duXNH1Tm4KlcjarMN
HDgQkydPln09f/68Xft+lcjqpPZuK+rCiRquqVGTlRVNfG5ERKQd8Xe4d+/e
+PLLL1X93RZrFNStWxdr166FxfL62HK9evVU7cfWdvfuXcVzcvT9WNSfFc8i
Hh4eiv0T13HYsGHP86wREREoWrToS01kU729veHv7y/br7/+muxxBwwYoHi8
rVu3vrSNWMNVPLu86MaNG8iePbvivsRaIURERERERO6Mc5ZS5o5zlsR8ujN/
mPHjOiP6jNajejvX5F6b99Fh0lwDdh4w4eFj5l5dRYwTie94qlWrJmu4lqvg
i9IePnLO6sJVezWfP+uINnz8PPgEhMvsrp9/oJx/K8bV7t+/r/XlJyIi0pzq
nGvjGoq1XJlzJSIiekbMVRBjPmKtJVHDVeRBy5T3Rcde32Lxmv2avyc7okXM
WYvQ6g3l2lJevs9qu7Zs2VL1Ouj0upO/m9F5qF71WFpIi0R41k5E0eAEfOyZ
eq711VbAN96m8btqbXXoNVL/9PfYiNN/mGE02X6+HDNOmTuOGRMREREREbkz
R2ZrnJmrEbVL1dAyV+Pn54e9e/c+3/by5cvP8zMptZRyNQEBAakeS8xTUeOL
L75Q7PfBgwetvi5ERGS/S5cuyTqfoo6nrfdH8f3CgwcPXtqvs3OuataecOT9
+Ny5c/D09LS6n+LeLcaLx44da/OYccOGDVPdLmfOnNDpdC9tk1z2WBD3faV+
rFixwqprQ0RERERE5Gqcs5SytDBnKS4e2H/EjOmLjWgzQP1cO3ta1TY6dPtO
j/nRRhw/a4beoOklSLf0er1co1PkPisFBMkcaKWg6hg3Y4Xm82Ud3US9mSat
e8j5txW8KiEsPBxNmzbl/FsiIsrwzHduq865KtVyZc6ViIgISExMxPDhw+W7
tlhrSbxrVw6rjUmzV2v+buzotmTdAXTtO1LWdhXrZoWEhqFWrVrYv3+/1h9D
mnLvgQXfRxoUx8vCWyXCt0EiSoQnoIBPglW51uRaUDN143St+ukwdaEBew+b
8He849am45hxytLCmDEREREREZE7cEa2xpm5mrJly6o6L3fI1YgcsMi8nDp1
yuZ31MKFC6e6nahNp0b16tUV+7Bjxw6rrgsREdlv/vz5yJEjh0PukZ988glO
njz5fN/pKecq7lFq6qCm1EqWLInRo0fbfD9Weg4Q/7ta7du3V+zHtGnTVO+P
iIiIiIhIC5yzlLK0OGfp1l0LNu0wYdR0A+p3dU2t19oddRg6SY81W024fM2C
FJaLIiuIebcDBw6U825F3RWR/2zQvDPm/7Rb83myzmyDRs1AOU9/lK3gi5CQ
MPndjPhehoiIKKNSnXNtXkexlitzrkRElNHFx8ejb9++CA+vgoo+/vJdu0mb
nli4eq/m78PObGK9LJ+AcJT28EZgUIisxSHGAyl1BiOw4r9G1OmU8vhaQJNE
lK2eiEL+CfiPh3251ldbySoJyR6zXhcdRkw14L/bTbhx23mDcBwzTllaHDMm
IiIiIiJyNWdla5yZq/nss8/kcYxGY6rn5i65GjGf5NixYza/o4r6cKlt99NP
P6k6DzW1465cuaL6uhARkX3EdyENGjRw+H2yaNGiMBieFURJLznXXbt2OeR5
Rc29MKX78UcffZTqdrVr11b92Tdr1kyxH+PHj1e9PyIiIiIiIi1wzlLK0vqc
JZMJOHfRjKXrjeg7Ro/q7VyTe23WW4eJcw3Yvt+EB48YerWWGA8aNGiQnHfr
6V1J1pbp2m+U5vNiXdUiotbAN6AKynh4IzgkFHXq1MH58+e1/liIiIg0oTbn
+qhbG1U/x5wrERFlVHq9HgMGDJA1QCp4VUJpDx/0GjRO83dgV7XZS39GaPWG
z+rXBgbLrOvu3bu1/ljc1sHjZrQdqH9tzCukeSI8ayeiaFACPvZ0bK711Zan
fLw8XrW2OvQepceStUac+cMsx/tcgWPGKUvrY8ZERERERETO5OxsjbNzrj/+
+CPWrl2bai7TnXI1aq51cu+oFotFrjueWhO1ZpWYzWbkypUr1eOL87RwwXwi
IpcQtb6VxmftaaNGjZLHOXz4MNavX59qE/fTV7dv2rSp4naiie90lNh7P75+
/Treffddp10rNfdj4fPPP091u65du6r+/MXzklI/Vq1apXp/REREREREWuCc
pZSltzlL8QnAr0fNmLHEiHbfvD5Xzxmtahsdun6rx9yVRhw9bYbeoPVVcG/i
OwAxHiTW3RQZVzHv9puR0zWfD+vqNuvHGASE1JK1ZkJCQtGwYUNcvcpcDhER
ZTyqc64qG3OuRESUEZlMJgwfPvzZu7bMuPpiyJiZmr/7urotXLUX1eu1lFlX
Ude1Ro0aOHLkiNYfj1sR9VGHRRiej2uFt0qET/1ElAhLwKc+CU7Ntb7Y8lVM
QLGQBPQZrcff8drMA+WYccrS25gxERERERGRo7giW6MmV/Nivmbq1Kno168f
evfurdiGDh0qc65JLSYmBrGxsa+dZ3rJ1TjCoUOHFI9fqlQppx2fiIj+R6wH
UbVqVafeU7Jly6aq1qog5kG+uv3o0aMddr723o8rV67ssntxavdj8fz04MGD
FFtCQoKq6/HkyRNkzpxZsR9nzpyx6joTERERERG52p9//olhw4a91saOHSvf
fVLDOUtpe87S7XsWbN5pwphIAxp0c02t11oddBgyUY9VW4z48y8LuGTjy6ZM
mSLn3Xr5+Mt5p9+MmKb5PFit2uyl21ApqDrKlPdBSGgYmjdvjrt372r9ERER
EbmUw3Ou1//S+pSIiIhcStSKiIiIkO/aFf951x48KlLzd17Nsq6r96JKraYo
/fQ6BAWHoE6dOjh//rzWH5PmEhKBBT8ZUaO9DgGNE1G2eiIK+SfgP+Vck2sV
tVu/CEhAuRqJCGz6v3E0UctV1HDVAseMU5bex4yJiIiIiIhs4W7ZmheJGrP7
9u3D0qVLX8qxqmlimwMHDiAxMfH5/uzN1YSFhblFrsZex48fR548eRSPL8bm
iIjI+Xr16mXV/eGDDz5A8eLFrV57Yd68ear6464517i4ODnW7cp7sSvGjNV8
/lmyZFFVK5eIiIiIiCit4pyl9DNnyWwGfr9kxrL1RvQfq0f1dq7JvTbpqcP4
KAN+2W9C7MOMHXpdvny5nHfr4xeAUmW90GvQOM3nv2rdZizcBO9KYShbwRdh
YeHo3Lmz/A6KiIgoo2DOlYiIyD5iPqJ41/b+5127z5AJmr/rat3mRe9CUJV6
KO3hjZCQUDRp0gS3b9/W+qPShFh/beN2E0KaJ6JoUALyerom1/phuXgU9E1A
ySoJ8Gv4rG5sSmNnbQfqkajT+kpZh2PG6WfMmIiIiIiISC13y9YkR6yrvXnz
ZquzrqKtXLkSZ8+elZkde3KuIjeb1nM1Ym2syMhI5MqVS/HYRYoUgdFodOjx
iYjodfv378cbb7yhKucoapi/+p2AqJcu/marua/Url1bVZ/cLecq7kcnTpyQ
czQ/+eQT1ffR3LlzIzAwUNaHF9vOmDEDXl5emt+PX7R3715Vn3+hQoWc1gci
IiIiIiJ3IGo+pPZexDlLaZeoY3HgmBkzfzSi/SC9SzKvVdvo0HmoHnNWGHHk
lBm6DLR01J49e+TappUCguS82w49hmk+79VdWkTUGpT3qgwPTz+Eh4fL9dTE
OBgREVFGwJwrERGR7Xbv3v3Pu3agfNfu1Os7zd9x3aXNXvoz/AKroWx5n+fr
SiUkJGj9kbmEwQgcP2vGD7MMKF0twSW5VtHyVUxAsZAEVKyTiNAW1o2ZRcwz
aH3ZrMIx4/Q7ZkxERERERJQcd8zWpMRiseDixYtYtWqVTXnXDRs2YMWKFVbl
al5UqlQp1XmYzz77DJ06dZLvoeI9U6tcTdeuXeHj44OvvvpKZn3UHjdTpkzY
tm2bXccmIiJlOp0OhQsXVvy7nDdvXpnzTImoPeHh4aG4n/fff19Vv9wl5yru
/ZcvX8aaNWvkvXz48OGq72UVKlSQa11cvXr1teNv2bJFjnW76n6ckkePHuHz
zz9X1YcRI0Y4pQ9ERERERETuIjY2Vr6vpdTEu2RadunSJSxatCjVdv36da27
6RJ37luwdbcJ30ca0LC7a2q91uygw6Dxevy02YhLVy2yxkZ6JMZRxHcxgUEh
KFXOG41adsWP6w9qPufVndroyYtR2sMXFb39ZR2e+fPna/2xERERuYT59i3m
XImIiGwg6kq8+K7dpHUPvmu/0qbO34AK3oH/rCtVBaNGjZLzPdIbcUpXrluw
ZqsJQyfpUb2tDl+FOD/fmqd8PApXTkC5GokIbGr/ONm2vSatL6VqHDPOOGPG
RERERERE7pqtUWIwGHD06FEsW7bM6qzrN998Y1PO9eDBg6qzMA0aNEhxTTJX
52pEvtXabG3mzJk5r4OIyEWmT5+u+Hf57bffxpEjRxT3tX79elV/49Vwh5yr
GKuOiYl56T7u7++v6l5WrVo1nDp1CiZTymPzBw4cQNasWTXLud65c0f1Ghof
fvgh4uLiHN4HIiIiIiIiIq2JUprn/zRjxX+NGDBWjxrtXZN7bdxDh3GzDfh5
nwn3H6SPeZfiu5p27dohJDQMpT28EV6zMRat2af5XFd3bH2HTpL1d/z8A2U9
HjFORERElN4x50pERGS9V9+1q9RsgsVr9mv+XuuObVTEoqfXyAdePgFyXanV
q1dr/fE5xMPHFuz41YSJcw1o1vvZuFV4q0R41EjAR+Wdk2v9sFw8CvoloFSV
BPg1fHY8R46L1e6ow8Wr6WM8jIiIiIiIiNIPd83WqPXkyRPs3LnTJTlXMV6l
JofSr18/xX67MldjS841MjLSrmMSEZE6Yu3KQoUKKf5dVrv2gNjf//3f/ynu
T6wXoUTLnOu+ffvkvXLp0qWv3cfz5MmjeH7/+te/cP/+fVX96NmzpyY51+PH
jyNfvnyq782iLjwRERERERFRRpCQCBw6YcaspUZ0GKx3SeZVtE5D9IhabsRv
J81I1Gl9FWwzfvx4WTNF1E7xqhSK2Uu3aT7H1Z1bs7a9ZB2eoOAQNGzYEPfu
3dP6IyQiInIq062b+KtDc5xs2QC7GtbE2pphWBAWgEn+XhjqWRZdS3+NpkW/
QM3PC6BZscLo9vS/D6tYFhEB3vLn1tUKw+5GteT21zo2Z86ViIgyhP+9a/vC
u1LY03ftnzV/n3Xn1n3AGLmulH/lINSoUQMXLlzQ+iO0mt4AHDtjxrxoI7p+
q0fVNi+vyebXIAGf+jg+25rPK0HWhq1YNxGhLZ0/Ftayn05meImIiIiIiIjc
gTtna6x18+ZNmT9xZs5VTd3bDz74IMU6rq9yVa7GlpxrlixZMHHiRLuOS0RE
yjZs2KD4N1ncq0XmVK38+fMr7vPRo0eK+9Ey5zpmzJhk7+FRUVHIlCmT4vmN
HDlSdT9EzVhx33NlznXRokXInj276vvyF198AaPR6LDjExEREREREaUld2Mt
iNljwtiZBjTq7pparzU76PDNOD1WbjTiwhUzLGlgyt/u3btlrRRvvwBZO2XM
lB81n9vq7k3Uug2qUg9ly/sgLDwcgwcPlt91ERERpRfivnb16lX5HYf47qVR
7VoI+TSfbMEF8iOo4Keo/FlBBBT6HJW++AJ+X34JnyJF4V30K/mf4r+Lfxf/
u/g58fNiu6R9NHm6v7Fjx2LTpk24du2a1qdLRETkcHzXtr79uP4gajdqK2vf
ihq4HTp0gF6v1/qjTJUYCrh8zYLVW0wYMlGPWh2SH38Kbp6IIoEJDsu15ikf
j8KVE+BRIxGBTV2zzturrf9YPYwmrT8BIiIiIiIiIvfO1thC9PP3339HdHS0
zTnXmJiYZPf98OHDNJursSXnmtREFpeIiJwnPDxc8W9xSEgIVq9erbqp+fv+
+PFjxb5pmXMdMWJEsvfwAQMGKJ6buLeK+7Y1/P39XZJzFWthqK0Pn9Q+/PDD
NLm+KREREREREZEziHmHIncq8qcDf9DLPKor5vyJfO0Pswwyb3vvgfvlIMX3
Lo0aNUJgUIismdKhxzCN57QewPdTl6L/t5NlX5q26YmOPb/F4NGRiJizFovX
7Nd83m1SmzJvPcp6VkJFb385d3nLli1af5xERER2MZlMOHbsGCIjI9G8eXN5
fxMtOCQUlXwrocLXpVC2dHn5zJBSK1vBL/X//en2nk/3U8mnEkKe7jfpGC1b
tsSsWbNw8uRJ2Q8iIqK0TMyraNy4MYLEu3Y5x79rRy7eghkLN73WxL+76p3Y
WX2Ys3w7vCqFwsPTTz4jLFiwQOuP8zUPHlmwfb8JE+YY0LRX6uNL4a0SUaZa
AvJ42Jdr/bBcPD7zS0CpKgnwa/h0vxrkWpNrUxc6vm4NERERERERkbXcOVtj
D51Oh4MHD2Lp0qVW51xFrmbv3r2Ii4t7aZ8i/5pWczX25FxFtnfbtm12HZ+I
iJIn7lfW1PR0VMuZM6eq/omca5EiRV5qjpznZ0vOtW3btornly9fPqv7Mn78
eKffj0+fPo1ixYpZ9Vm9//77OHXqlF3HJSIiIiIiIkrPEnXAbyfNmL3MiE5D
9C6b/9dxsB6zlhpx6IRZ9kFrEydOlN/5iLqkoj7p4rW/apIZHfDdFDmP9Z1c
/1L47uENfFqwMNp3H4KFq/dqnnXtNWiczOxUDgxG/fr1rf6uh4iIyB3cvXsX
CxcuRJMmTWSeJCwsHAGVg+RaDmU8vJ9nVCsFVUf1ui3QuFV3tO8xFL0Hj8e3
P0Rh3IyVmLlk6/P1KMR/iozLuBkrMGzs7Kc/N07euxu16ia3F/tJ2mcZDx9U
9PF/erxgWSNdHL9Zs2ZYsmSJXP+biIgoLYqIiHj2rl3BF0HhdR36rr1w1V5k
zpw5xffmzn1GOP1d2Nl9GD5+3rNnD/9AVK9eHVeuXNH089QbgKOnzZi70ogu
w/So2kbd2mne9RKQ38v2bGt+rwR8FZIAr7qJCG2pfaY1pSbWlCMiIiIiIiLS
irtnaxzhwYMHMqNpbc5V/MyKFSvkGqNG47P39zlz5qTZXE3Dhg1RuHBh5MmT
Bzly5LD6M8ubN6/TavASEWVkatZQcEYrWrSo1qcuicys0v341SbWSlU6P09P
T6v7smbNGqfej6OiovD2229b9TmJ5wqx3joRERERERERqXf/gQXb9powbrYB
jXu4ptZrjfY6DBirx4r/GvHHZTPMZtee87lz51C1alX4+FVGaQ8fTJy1yuU5
0dGTF6Po12VsGqvK9e57qNmgtaZ5V1F/Nqx6I5kTFnOYJ0+e7NoPkYiIyA63
bt3ClClTUKNGjaf3sSoICAxGBa9KKFXO+3mutXn7PhgyZiailv3i0Hvo7KXb
MHhUJJq17QW/wGrPcq9Pj+v59Phi/QjRn5o1a2LGjBkyh0tERJRWnD9/Xr5r
+/7zrj1hZrRD76FDv5+d6rty/aYdnf4u7Io+NGje+en180ZoWDgGDRrk0s/Q
YgEuXbVg1RYjBk/Qo1YH68eJvOomoFjw0xbyLKsq2tehz1rxsGethGjhCSj5
T/Osk4iG3XT4ZpweUcuN+GmzUfZhzVYT1saYsP5nEzb8YsLGHSZs3mnCll0m
xOwxyfGsX/abZI3ZnQdM2HXQhD2/mbD3sAn7j5jx61EzDh43yzXXDp8y48jT
duyMGSfOmXHydzNO/2HGmaft3EUzfr9klmNUF66Y5TX48y8Lrly34OoNC67d
suD6bQtu3rHg1l0L7ty34N4DC2IfWlz6+RARERERERG9KCNla65evYq1a9da
lXNNamI7sZaYmjyqO+ZqkvP777/LvI23t7fqz61169YO7QMREQG9e/fW5F5c
q1YtTc/bYrHgwoULGDZsmOr7cVITczSUzk/U3LDWvn37nHI/TkhIQIsWLaz+
jAICAnDv3j2rj0dERERERERE/yPmM168apHzCQeN16OmDfMZbWkNu+vwfaQB
W3eb5FxBZ+vTpw9CQsNkpqRlx34uz4h27PUtMmfOYveY1ZfFSmHO8u0u739S
E/lgcQ19K1VGtWrVNK8zQ0REpETkRqdOnSrro4l1Gvz8A2VdVVmjPKy2rME2
df4Gl95PJ89dh069vkNASK1ndV7L+8h+if6J73giIyNZ35WIiNKEAQMGIPSf
d+0W7fs4/J75dUmP1Oc9uCDn6oo+zPoxBh4VA+Dl4y/rvf/2229O/dxEVlNk
RcdHGdCkp2vXP1u+wYjzf7p+/TMiIiIiIiKi9CCjZWtMJhNOnTol67Rak3NN
ao0aNUpTuRq1Zs2ahUyZMin2IXfu3E7rAxFRRhUUFKTJvXj06NGanfPt27ex
adMmq9edEC06OlpVPdcuXbpY3a8DBw44/H58+fJllChRwurPp3///vK5hYiI
iIiIiIgcS6eHrHcxZ4URnYfqXTLXUbT2g/SY+aNR1txISHTsOR06dEjOE63o
7Y8K3oGYu2KHS7Msoi6LI8et8n/6OWYs2uzSc3ixNWnTU9aZCQsLx6hRoxz7
YRERETlIXFwc5s+fL+deyHxrpUB5/xI5nPrNOmF85ErN7qUvth+mL0fdJh1k
v8o87V9S3rV27dpYvHixXCuUiIjIHR09evTZu7aPPzy8AjBnuWProX8zcrry
PEQn51xd2Qex9oZ4HggJCUWPHj0c+llpNdbTYbAes5Y6Z6yHiIiIiIiIKCPK
iNkaIT4+HpMnT7YqVyOamuvlLrkaa6VWT+/FJtaDJSIixxE1zrW4F2/dutXl
5yrmXOzZs+ele6vanOvSpUvlnE2dToeePXsqnl+rVq2s7p+41zryfnzmzBnk
yZPHqs/lgw8+wIYNG6zuOxERERERERHZRqsaH/3/qfHx+yX7a3zIWq4hoShV
zgtd+41yaXal5zc/OGXsKk/eT7Bw9V5N8jgzl2xFmfK+8PELQNWqVXH16lXH
/LIRERE5gMViQUxMjFwTNLxKFVQKCJL1W0s/bQ1bdMWUees1uX8qtYg5a2VO
RuZdy/vA/2m/RXaoWbNm2LFjhzwvIiIidzJw4ECE/FPLtXPv4Q69L0Yt+0Wu
8aT0buzMnKur+7Bg1R54+gTD0/tZTdcjR47Y/NmIx4aLVy34abMRg8brUbOD
a8ZzGnXXYexMA7buNuFuLJ9diIiIiIiIiBwtI2VrXvXzzz+rytW82EJDQ9NE
rsYWjx8/Ro4cORT78csvvzi1H0REGYn4zj5btmyp/t39/PPPUa9ePYe32NhY
l52n0WjEiRMnsHz58tfurWpyruKe/fDhw+f7E/+udL+qUaOG1f2cN2+ew+7H
hw8fxr///W+rno/Ec4aodUtERERERERE2hDzJP/8y4JVW4wYPEGPWi6aJ9mg
mw5jIg3YssuE2/esmyd57tw5OT/Uy+dZLdf5P+12XV4lag2yZ8/ptO+SRJ1Y
rbI4zdv3kTXxRL25KVOmOOk3joiIyDrXrl1Dv3795L0/MCgE5Sr4olRZL9Rp
3A6T567T7L5pTZs0ezVqNmgt+13O0xdBT89DnM+gQYNw8+ZNrS8xERGRdPHi
xWfv2r4BspbrvOhdDrsXjpgwHx/8339UvRc7K+eqVR+69h35rKZraBiGDh1q
1Wdy/4EFP+8zYdxsAxr3cN06ZQN/0GPlRiP+uGz/OmVERERERERElLKMkq1J
iS0517p167pVrkZkhlauXJliszYbGxwcrNgPUQeXiIgc46+//lL8u9u7d2+t
u2kz8axx+fJlrFmzJtn7qlLOdcKECfIavWr69OmK1+3LL7+0ur/du3d3SM5V
nLOoy6p2zuZbb73F+ysRERERERGRG9IbgKOnzZi70oguw/So2sY18yjbfaNH
5BIjfj1qRnxC6n2cOHEiwsLC5TzR9t2HuDSnUt6rstMyrqJly/Y2ZizcpEkG
Z9r8/8pr6ucfiNq1ayMuLs41v3RERETJEN+3rF27FrVq1ULo0/u+qIMmcqLB
Vevh+6lLNblX2ttGRSxC5bDa8jwqPj0f8Twj7rkbN25kbVciItLc1KlTERYe
jtJP3wvbdB5o1z1v3sqdGD15MVp17I9CX35t1XuxozKm7tAH0eau2IGynpXg
7ReAqlWr4tatWyl+Bok64LeTZkQtN6LTEL1LxmNE6zhYj9nLjDh0wiz7QERE
RERERESukd6zNUpsybm2aNHCrXI1Yt241LZ57733rOpH06ZNFfvRp08fq8+P
iIiSt3PnTsW/u0OGDNG6mzYRa1rExMSkmG9Vk3M9ePBgsvuOjo5W9X2LWNfc
Gvnz57fpfvyiv//+G1999ZXq74QKFy6M48ePW9VPIiIiIiIiItLGg0cWbN9v
woQ5BjTt5ZrMa/V2OvT7Xo+l6404d/Hl2iEieynyLiKLKTKZkYu3uCybMnHW
KmTK9Iaq8Y/SHj4YPDoSM5dslTXcRP2Wr0t6qNrW2z9Ms/xNjXotZZ088V3M
pk2bNPu9IyKijO3x48cYNmyYvB8FVA6S9cZFXbneg8fjx/UHNLtPOqItWXcA
PQZ+j3Ke/ijz9LwCAoPleY4cOZJrTBARkWYSExNlLYxKAUFyPQaxDpI197cx
U37Ex598hn//v9xy/SZrMqWOypi6Qx9Sak3a9JT3/fDwKli0aNHz6y6Wubhw
xYzoTUZ8M06Pmh1cM+7SqLsOP8wyYNteE+494FobRERERERERFpJz9kaNVLL
uc6aNSvZLI6aPKpof/75p1V9sTVX07FjR8Xt9Hq96n4EBgYq7k9kgImIyDF+
+eUXxb+7bdq00bqbVklISMCBAwewdOlSxYyrUs71t99+S/YYV65cUXU/Fmus
qnXo0CFV+1TKuXbt2lX190FNmjRBfHy8VdeXiIiIiIiIiNyDmH95+ZoFq7eY
MHSSHrU7umb+Zf2uOoyabsCmHSYsXb5JZkFEFrNmg9YuzaUEhddVNf7RokPf
ZLcXuRyRI82UKVOq22fOnBlzlm/XJHszdMwsOac5KDgEvXr10vpXjoiIMiDx
fUjr1q0RHh6Oij7ParjWrN9Krh2hxb3RWW3Gos2oWqeZPD8vnwB5vu3atcP1
69e1/giIiCgDEvM4xLu2h6evvD9Ze18bNna2XblSR2RM3aEPKbVxM1bIe75Y
36JR45bYutsoc6Yib+qKcRWRnxU5WpGnFblalpEnIiIiIiIicg/pMVtjjdRy
riJXc/PmTWzYsOGlLM7kyZNVje+I63bhwgVYVAyE2JOrGTdunOJ2u3fvVn1N
PvroI8X9zZ4926rrTEREKdu/f7/i311r6oSLv9He3t6ptrlz5zrlXMxmM86e
PYuVK1eqyrfak3MV8ubNq3jtcufOjSdPnij2XdyvfXx8bL4fJzlz5gyyZMmi
aj/jx4+36ToTERERERERkXvSG4BjZ8yYH21Et+/0qNrG+fMzC37dGwUKB8v5
oUPGzHRpHuXDPB8rjn+IOq5K+/ELrKa4n16DxmmSuVm0Zh8qeAfC2zdAznEW
3xsRUfomxrkvX74sv0cWTfzf5hcLaRO50OnTp1G/fn2EhIahnKcvypT3Rc9v
fsCP6w9qcl90dhNrYHTrP/rp84MvPDz9EBoWhoYNG+KPP/7Q+qMgIie7ffu2
fNZ+tYl/zwjHJ/czdOhQhISEynftgSOmWn1Pc4eMqTv0IbXmH1wDxUr4IXe+
MPjWOuL08ZNOQ/SIWm7E4VNmJOq0/g0jIiIiIiIiouSkp2yNLZRyroL43vLc
uXOIjo5+nsd5//33Fa/bu+++K8918+bNuHPnTop9sDdXs2rVKsXtOnfurOp6
7Nq1S1U/xHUjIiLHOH78uN3ZyiTLly/HG2+8obivmTNnOvw8xHra69evtyrf
mtS+/fZbxftxcho3bqzq2tWuXVuxtvnAgQNVf4eT2mch6rOq2Uffvn1tvtZE
RERERERElDY8fGzBjl9NmDTXgGa9HZ95DW5yE7nzhePzov7wqBiAhav3uiyH
Mm3BRsXxj7ez58CsH2MU9zV57jpkzpz6umGVw2prlrlp1q43ynh4y5yr+K6I
iNKXP//8E/369UP16tXl9+JvvfXWa3+DxL8VKVJE/oz4WbENkbOJdUXr1KmD
4JDQp/chH3hVCpW1z7S6H7qyjZnyIzx9glG2vI/MGNWrV0+uMU5E6VNiYmKq
6wiL75PT8/HJ/Yh1tMVzn69fZZSt4If50busvpe5Q8bUHfqQWuvU6zuULOuN
D/OH4uuK0xw+ZtK4hw7jZhvw8z4T7j9gwVYiIiIiIiKitCC9ZGtspSbnmkSM
ax48eBBLly5FxYoVVV23cuXKYeHChXLMc+/evYiLi3utD/bmak6ePKm4nfhc
RG291Ii+FShQQHFf2bNnh07HRc2IiBwlNjYWmTNnVvz7K9ZP2LNnT7L7EBnO
iIgIvPnmm4r7+eyzz2A0Gh3W/0ePHmH79u025VvFs8OxY8ewZcsW1ffjF4l6
5WrvoX5+fvj1119f28epU6dQq1Ytq77DSem5SNxLc+TIoWofZcuWhYeHh11N
1JgnIiIiIiIiorTjynUL1saYMCzCgNod7c+9egSvk3VPvi7lg4bNu7g0fyJq
ySmNf3xRpITq/YksS2r7yv2fvJplbUZNWiRr+AQFhaBPnz5a/xqRmxLf1x06
dCjF9uDBA9X7EnXDkhtPXbNmDQwGgxPPImMR47mDBg1CtmzZrBofFk1sM3jw
4GS/+yVyBJGlbtCggcy4lvbwhn9ITUQu3qLZvVCLJtbUEDXfRcY3JCRMrn16
7do1rT8achOOuu/ynuselL7zHTVqVLo+PrmfHTt2yHWOylXwRZ3G7Wy6j7lD
xtQd+pBai5izVr5rf1IoEB8Xam73GEnNDjoMGq/HT5uNuHjVAgujrURERERE
RERpTlrP1tjLmpxrEjEePnHiRNXjPGLd3++++06Oha9YsUKOt4tr4MhcTaFC
hRS3FZ+PyBEl5/z587LWrpo+VKtWzWHXn4iInlG7foJoYt3QqKgoLFq0SK69
IGqh5s+fX/X2og64I4j7/+HDh7Fs2TKbMq6ihrhYB1Ww5X6cpHTp0lbdS8U9
MyQkBOHh4ShatKhN3+GkdD8W5+Wo74nUtN69ezvksySi/8/eXUBJWbZvAD8q
Btj1WShiIP7VD6QWlu0Oulu6u7u7u3vpDkFCQDpEBAElpLt7d/r67/2sywfC
7sTOzDuze/3Oec7x4L79zjzzxvXcRERERERE7mcwAgf+MmP6IiOa9dSjaG37
c69f5e2Oj7JHqvdCO/cd59bsSa1G7a3euwiOKG7z/MpVbWB1fsMnLdUkZxO3
dIeqlxsQFKqekdy5c0fr04c8zNq1a516XzYt90vJNnJvPWvWrGm+RyvzkHvk
RM506dIlVK1aFVHRMSrjKRnXiXN+1qQP1LqNn7UWgWFFVV3X6MT9UaNGDVy7
dk3rQ0Qac2a/yz7XM0RERKR6PF2dM9V6+eR5Bg0apPodudZu132EQ31Yj0FT
nPZegKMZU09YB2tN+vmc3wWrMbxCKxy3+75Io656TJ5vxG8HzdDptT5ziIiI
iIiIiMgZvDFb4yxpuWf93Xff2XW/54MPPkCuXLmQO3dufPLJJw7dM0opVyP3
12yZPlOmTKp+XLNmzdQxnDBhAurWrWvXOMWSSyIiIueSZ2POer6QWuvdu3ea
19ViseDYsWNYtGiRQ/lW6csuXrz42DzT0h/L/Nyx72zpj2NiYty6Hsy5EhER
EREREaUft+9asHm3CcOnGlC9jfXMa2zNB/gwe2l8njMMeQr4Y/K8jW7NnZS3
IZdaqWZTm+fXuHUvq/Or17yrZjmbspXroYBvoKrps23bNq1PF/Iw8szU2vnL
nKvnmD59utPv1cqzWiJnkLEU5Pl9dEysynYGhMZmuDqu/25S17VwUJSqqReT
uF8aNWrEWsoZnDP7Xfa52kvtGCQ3V+ZMtV4+eSYZbyIkNELlXGXMBUf6r7hl
O9U1bL1mXVJtOb/93uo56GjG1BPWwVqrXq81cuX1VznX/BGLrd4LqdJCh8GT
DNiww4Qbt1iwlYiIiIiIiCg98qZsjbOll1zN1atXbaqnm9YWFhbmisNARJTh
Xb9+He+//75Lv8ObN2+e5vW8fPkyVq9e7VC+deHChThy5AjMZvMT803rM+R6
9epp3h9L/vfFF19063ow50pERERERESUfp29aMHy9SZ0H25AmYZP5l6Dyx5S
74F+/d8gRBYt5/bMSaUaTazeu6jZoJ3N82vRYYDV+VX8obFmGZtWnQepd5wl
XzN+/HitTw/yMMy5eo+//voLL7/8stPv1T7zzDNYsmSJ1ptHXs5oNKJdu3aI
jY2Fj28gCgVEYOTUFZr1fZ7Uhk1cAh+/0MT9EqT2T5cuXWAymbQ+ZKQR5lzT
j5s3b6p6AdaOp6typlovnzzT+fPn1fhGhf1DEBJZwuV9nC1jSLkqY+oJ69C1
3wR1rf1R9ijkzNfriXsfperr0HmIHovXGHHyrAUWRluJiIiIiIiI0j1vyda4
QnrI1SRr2bKlS5f92muv4fjx487c/URE9AhXjp/QsGFDlcN01L1797B161aH
8q3yrHnPnj3Q6XQpzj+t/fGDBw/srrPu7P74woULbv1NII05VyIiIiIiIqKM
wWgC/jhixozFRrTopUexOjpV50Ryrrny+aNWo/Zuz5uUKFfD6r2L4ol/Y+v8
ytnwXm2RUlXdvp3JTfI18u5tWHgkWrRoofUpQQ4wujAOxZyrd4iPj3fpfeQP
P/yQNSYpTUaNGqVyNb5+wchfKAgDx8zTrN/zxNZ3RBzy+gTC1z9E7afJkydr
fchII8y5pg+7d+/Gp59+alMf64qcqdbLJ88l3wvSz0hd9aq1W7i8f8voOdcJ
s9epa+3sX4Xh4y+romhtHRp302PKAiP2HTJDb9D6jCAiIiIiIiIiLXhytsaV
0kOuJpmM7xoaGuqyZXMMYiIi1xs8eDCeffZZp313y7j0cXFxDq+P9C0HDhzA
vHnzHMq4Sj9769Ytq8txxjPka9euIW/evGnaXzLmfoUKFRzqj7dv3+623wPJ
jTlXIiIiIiIioozpzj0LmrYcim9zR6v3QTv3Gef2rEmV2i2s3rvwD46xeX4+
ha0/3wgKL+b27Uxucct2qsxRYHAYSpYsqe6bkeeSTOuRE2YsXWtCnzEG1Gir
w7WbrntWyZyrdxg+fLjd94vtvV/ft29frTeTvNS6detUpiYgKEyzvt0bWtvu
w9X+CQwOV/try5YtWh860gBzrt7p7t272LdvH8aOHQtfX1+7+ldn5Ey1Xj55
jwkTJiAmJlb1N227DXN535bRc67S/ENikCtvCAoVjsXps9bfLyEiIiIiIiKi
jMHTsjXu4Em5mkKFCln9u9RyruLGjRvIkSOH046htOeffx5Tp051xu4mIiIb
LF++HK+++mqav7/DwsLw559/OrQOMj7FqVOnsHTpUofyrbINZ8+etXl5znqG
fOfOHfVegyP7K0uWLFi4cCGmT5/uUH8s2+3M/teWxpwrERERERERUcbVvHlz
VVtU3r0dOWW523MmDVp2t3rv4vU33sL0xVutzmv2il14970Prc5Pcqbu3s5H
W1SxCvD1D1b3n06fPq31KUCPuHvfgj0HzJi+yIh2A/QoVV+HIrUSHraR011b
BIg5V+9QokQJq8dJntnWqlULhw4dgl6vV03+u3bt2ur/WZs+V65cWm8meaEz
Z86gdOnSD/v1uk07a9rfeXqrXr8N8hTwQ3hEFMqVK4dLly5pfQjJzZhz9Q77
9+9XdQM+/vhjvPLKK2l6JupIzlTr5ZP36tixo+pjpE8eNHaBy/s1rTOmnrAO
pSvWgY9vkLrWlnHYiYiIiIiIiIiSeUK2xp08IVfzwgsvoFmzZqhfv77Vv7WW
cxX37t1TNXRtedZqrb377rvYuHFjWnYxERE54OrVq+pdxRdffNGu720ZryIm
JgY7d+50eNnXr19X44Y7km+dP3++eufHZDLZtUxnP0OWZ9effPKJzfstKCgI
v/32m5rW0ZyrLDOt/a69beDAgXbvGyIiIiIiIiJKH8qWLYug4HDk9QlUtUbd
nTHpNWSaTfcvqtVtZXVeMSUq2TSvnN9+7/btfLRVqdUcBQoFqudB27dv1/oU
yNAuXLZg/TaTyq826KxH0dqP51ofbfL/zl92XS1XwZyr55OxHd966y2rx2ne
vHkpzsOW4yyNmTuyh9QHb9KkCaKjYxL7dH8ULVMNs5bv0rS/8/QWt3QHYopX
Qj6fAFVvr3Xr1jCbzVofSnIj5ly9w9atW532TNSRnKnWyyfvVa1aNQSHRqic
69SFm13er2mdMfWEdZAxPuR3kFxrr169WutTgIiIiIiIiIg8jJbZGnfTOlfz
9ddfq/uhkg1yVs412S+//IKQkBA899xzdt+jfeedd9C/f3/cv3/f7n1ARETO
I32y1EavXLkyvvnmGzX+QHLtdRmX4rPPPkPBggVRr149LFq0CDdv3nR4WfHx
8aoPl2fD9uZbZZodO3bgwYMHDi3bFc+Q5Z2GTZs2oUGDBvD19UW2bNmQOXNm
vP3222pMffnN0qJFCxw8ePCx6RzNuRIRERERERERucutW7fU+59+AaEIjiiu
ScZEarC+/MprVu+jvPb6m+g+cHKK86nZoJ3Nzy4+zva5Jtua3Bq36Y08BZLe
vbUns0hpYzACfx43Y/EaI3qPNqBy85QzrU9rMo2rpYecq4zpK/OW+71Tp07F
iBEjsGDBAnXPWHJ4rvL333+re+D9+vVDp06d0KFDB7VsuQd79OhRpy3njz/+
sHqMSpUqZXU+RYsWtTqf3bt3O229Kf2T81/6lYKFg+AbEIkJs9c5rd8aF7cG
Y2esfqLJv7uyv5T5Dxg9F137T0SbrsPU74Dxs9Y6dRmyHT5+ofD1S6qzLs/I
KOPw9pxreu9zk2mdM9V6+eSd9Hq9+r3nHxSq+mV3XGdqnTH1hHVo222YyhXH
xMaq70UiIiIiIiIioqdxZ7ZGK+7M1bz55pvInj07cufOjejoaAwYMOCxjJAt
OdeVK1favT5Sl2/atGkoX748/Pz88OWXX+K115LePZGar7Je8m+BgYHo3Lmz
qt+akJDg0LYTEZHrST9jMDjv3SypvXr48GH1/NSRGq5r1qzBtWvX0rQOnjRW
MnOuREREREREROTpjh8/rjIdhfyCUbxsdbe8e/u0JvkSW94Ll2dLJSvUQt8R
cZixeBtmr9iNIeMXIiy61MPnTra0t995T7Ntldax1+ikd29jYjFhwgStT4N0
6849C3b9bsa0hUa07a9Hyfr25Vr/3SQj62yzZs1Cly5dHraSJUtaPX+lBvOj
00j77bffnjr/tNwvbdy4MfLly5dimzFjxmN/v2XLFvX8MLV1lzqoVatWxd69
e52y/+Qe96RJk+Dj42N1vwUFBWHbtm0Ppz116pQa5ze19rQxmZcsWWJ1WfI3
1sydO9fqfFasWOGU/UTp35kzZ1CiRImHNeO69pvgtD5L+tvUxsNu1LqXU/vI
bgMmonBQFN559/0Ul5k5y8vI/kVOFPIPR9XaLTB98dY0LbN9z1Fqv4WGRaic
Omspp1+u7HfZ5zq/z02mdc5U6+WTd7p48aK61vb1D0FU0fJuuc7UOmPqCevQ
a+h01adHRkVj0KBBWp8GRERERERERORFnJ2t0Zq7czWy//766y8sXLjwiZyQ
LTnXHj16OC1PLLVa5XmA5JrSmk8iIiLvdO7cOfXOjSP5Vnnn58SJE7BYLGle
D+ZciYiIiIiIiIhsJ/dL5N3bAr6BqFSjiVvevX1a6zl4qtPeHbelvfdBVs22
VVqfYTMfvnsrY5lS2smtxXOXLFi31YQR0wyo31mPorXTlmt9tLXpp3fJettS
09OWNnny5KfOPy33SyMiIlJdZvHixdXfnT59Wo3La8/6yvi51atXx5UrVxze
d/KcVMYJtndfSV5Jp9Ph4MGDDt2/XbVqldXpbLkXvWfPHqvzWb16tcP7hzIW
qaUYHROLvD7+KOfk7IjUUk3tPHVWVmX09FUoHBjp0HfgW+/8B/Wad1U14h1d
fsnyNZEvcf/JGBTyLgWlT67sd9nnOr/PTaZ1zlTr5ZN3ks9Ncp310hXruOU6
U+uMqSesw9AJi9W1dnhElKo3TURERERERESUUWmVq5F6qbt378acOXPsyrm2
bt1aTSPPUOW+clrcvn374bKZdSUiylikD5D63Y7kW+fNm4fff//dqeNeMOdK
RERERERERGS7TZs2qXdv8xcMQM2G7d3y7m1KLa9PoNPeH7fWPvvya023dcj4
RQ/fvZWaYGQ/owk4fMyMRT8Z0WuUAZWaOS/T+rS2/Tfn13IV3p5zPXr0KLJm
zerwen/66ac4cuSI3ftNvruyZMni8HLle0/uTTty/3b//v1Wp3u0hl1K5L66
tfkcOHDA7n1DGY/UQJRzunBACHwKh2LC7HVO7bP++33qtRudkVWpWL0JXnop
c5q/Cz/+9At07D3GoXUYM2MV8hcKgn9g6MPvCEp/vDnnmhH73GQ7duxwynGT
5kjOVOvlk3d6bEypmk3dcp2pdcbUE9Zh7Myfkmq0h0eiefPmWp8GRERERERE
RESa0TpXI7VZ169fb1fONTlnJDVh5X621Ih1xKVLlx7LLUnW9erVq07eQiIi
8iR6vR579+7F3LlzHcq4bt68GXfv3nX6emndHz+KOVciIiIiIiIi8nQ//fST
evdW6r/Vb97NLe/eptRGTVuJt95+12nvkKfWJLOj9bbKu7fffR+BiCKtMH2R
EXNXGLF0rQmrN5mwYYdJ5Sr3HjTj4FEzjp824+xFC67esODOPQt0+qT6pRnJ
vQcW/PqHGTOXGNFhoB6lG7g21/poq95GB5PJNdvlzTnXwMBAZM+ePc3r/tZb
b2Hfvn027zO5t/zyyy+nebkVKlRw6P6t3NfOlClTqtMNGzbM6nZILefU5vH8
88/j3r17Nu8Xypjk+X7Dhg1VffA8BfzQpG0fp/ZXkhm19jlJa1albOV6Tu3j
n332WbToONChdZGasHkK+CMqKgYtWrTQ+vCSg+4/ADbtNOGPI0++/+KtOdeM
2ucmMxqNmDZtGqZOnZpqCwgIsLocR3KmWi+ftCNj68h3yvWbFly4bMGJMxb8
edyM3w+bsXOfGb/sMmHNZhOWrzdh/o9Gda0yaZ4Ro2YY0KjdJnz1bSxy5wtA
9fpt3HKdqXXG1BPWYfK8DepaOyQ0Qr0/SURERERERESUUXlKrubMmTNo2rSp
1XtGj+Zck5vcN7548aLdyzxx4sQT82LWlYgofbJYLDh27BgWLVrkUL5V+hoZ
H8FVPKU/Fsy5EhEREREREZGnW7lyZVLOtYA/GrXq6ZZ3b1Nr/UfNQeYsaX+X
3lorFBCh6XaOnbFavXub7ctwfPZtE4eyl0Vr61CmoQ5VWuhQq50ODbvo0bK3
XmVAuw83oP84A4ZNMWDcLCOmLjRi9nIjFq8x4seNJvy83YStv5qw54BZZUCO
njTj9HkLLl+z4NYdCxJ02udoL16xqLzv6JkGNOqqV9vrrlzrv5u8s+4q3pxz
dWb7/PPPcefOHav76/z583j99dfdtl4p3b8NDg5Odbp33nkH169fT3E75Bmq
ZI1Sm0dISIjV/UG0detW1Y/7+gXDPzgGM5Zsc1pfNWnuBmTL/qXVz0lasiqN
WvdyyWc3U6bn0X3gZLvXZ9rCzeo3QmH/ELVfZbxX8g43b1vw0y8mdB2mR4l6
OhSro8O1m0/+mPHWnGtG7nPtIRlSa8txZc5U6+VnRAZj0ng48nk/f9mCv89Y
cPiYGb8dNGPHb2aVeZfvhmXrTJi30ogZi42YONeIkdMNGDTRgF6jDOg8RI/W
ffVo0l2Puh31qNZKh/JNdCheN23XH4Vi1+G9T2KQK28AajVq75brTK0zpp6w
DlMT+/LknGvt2rW1PkWJiIiIiIiIiDTjSbmaKVOmWL1n9LSca3L75Zdf7Kqx
d+jQoafOR7KuV65cceGWEhGRO12+fBmrVq1yKN8qtcOPHj3qcO1wW3lSf8yc
KxERERERERF5uhUrVvwv59q6l1vevbXWBo2dj48+drxe1dvvvGf1b8Jjymi6
jWNn/qTevf30y3BkdzDn6o5Wqr4OlZrpUKOtDg0669G8lx7tBujRbbgBfcca
MGSyAWPijJg834hZy4xYuNqIFT+bsG6rCZt3m7B7vxn7/zTjr7/NOHXOorKr
N25Z8CAej9VHlTpJR06YVT1bmW/VltplWv/dJCcj6+wqzLn+r1WsWNHq/oqJ
iXHrOqV0/3bs2LFWp/X19cXx48efmFb+Tf6ftelHjRpldX8QtWzZMqmWa2Kf
0qrzIKf1U72GTMO7//nAps+Jo1mViXPWI0uWV1z2+f3k0y8wa/kuu9dLauKq
mq7RMejYsaPWh5hSIeNzyG+Htv31qr9+tP+WvOvTMOfqfX2uPbTOmWq9fE+k
NwB37llw9YYF5y5ZcPy0GYeOmbH3oBnbfzNj4w4TVm8yqc/y3BVGTF9kxPjZ
RoyYZsDACQb0HGlAp8F6tOqjR+NuetTpoFfXCuUa65743HtaKxSzljlXDdYh
OecazJwrEREREREREWVw3parSS3nKm3u3LnYt28fDAaD1eXt3r07xfnMnz+f
WVciIi937949bNmyxaF865w5c7Bnzx7odDq3rKu39cfMuRIRERERERGRluTe
hMq5+vijYcsebnn31pY2bdEWRBeviOdfeMGu9+O/+Opb9Bpq/Z5MiXI1NN2+
MTNW/VPPNQKffdtU83ew3d2iqifAr2w88hZLwNfh8cjm9yCxxSN7QDw+D4rH
lyHx+Co0Hv+X+P++jYzHf6PjkTs2HnmKxiN/8QT4lExAodIyjwQElE9AUMUE
hFROQFiVBERUS0B04vxjazpnXSXT60pt2rTBBx988LC98cYbNp3rj06TLVs2
9UzvabwpcyPtwIEDKa6P3Gt29/qkdP/WaDQiV65cVqfPnDmzyhL16NFDNflv
+Tdr03322We4f/++7ScSZUjHjh1TfbhfQIiqQTpjseO1XKcu+AV9R8ShZoN2
yPH1f+36nDiaVYkqWt7ln+EGLbo7lI/xKRwK/8BQtX/Pnj2r9aGmR0j9ecnC
Ne2hT7X//mWX6anTu7LfZZ/rmj7XHlrnTLVevr0sFkCnB27fteDKdQvOXrTg
2CkzDh4149c/zNi214Sft5uwapMJS9aYMCfxszdtoRHjZhkxfKoBA8Yb0GOE
AR0H6dGytx6NuupRu70eVVroULaR5+dQXd18Y9ernOt/8wSo/tUd15laZ0w9
YR2mzN/0sJ5r3bp1tf6YERERERERERFpxttyNdZyrsltyZIlOHHiBCyWlMeq
lm1PbR7MuhIReSd5V2f//v2YN2+eQxlX6R9u3brl1nX2tv6YOVciIiIiIiIi
0tK6detUhiOfjz/qNu3slndv7WmSBy1aplqq9V2feeYZfJu7AJp36I+4pTvQ
feBkq/dkqtRqrul2jZiyXL17+8kXEfgiV2vN38F2dZP8acFSSZlVybS+l989
7f0CD/BhwQfIWugBPpEcrX88Pg+Mx5fBSTnar1PK0ZZIQKFSCShcJgET5xhx
+JgZf59JqkF17aYFd+9bVG0qV7AlV7J48WKb5+fOzM1rr72GJk2aqBp3cm+0
adOmKFCgADJlymTzPGrWrJni+uTJk8fm+XzxxRdo2LChWg+5Byv1V/38/Oza
Hmv3b2V8x+eff97ueVprr776Kg4dOmTzMaaMS2r+xsTGqtqj9vbh/UbOxsef
fqFqoL/0kvXsdWrNkayKZEkzZbL++XnzrXdRv3k3DBwzD9MXb1U136vXa43M
WV62ad2+T+xrHemnq9dvo8YAiU3cv5MmTdL6UGdo8pqK1HyXbF3djqlnW5Ob
1HnUPb2c6xOc2e+yz3Vdn2srrXOmzl6+nP8JOuDWHYuqXyw576MnzfjjiBl7
Dpix9VcT1m8z4ceNJixeY8Ts5cbE71cjxs4yYtgUA/qPM6D7cAM6DNSjRS89
GnbRo2ZbHSo316FMQx2K1s7YOVRXt8JFN6uc63d5AlC1dgu3XGdqnTH1hHWY
MHudutYODYtA48aNXfZ5JyIiIiIiIiLydN6Wq7E155rc1qxZg6tXrz51eZKF
tTa9ZF0vX77s1v1ARESOkbENTp06haVLlzqUb12+fLlm41ufPHkS3bp1e6IN
GDAAd+/edeu6MOdKRERERERERJ5u27ZtKueav1CAyo24491bR9vo6avQbcBE
lWeV+mztuo/AgNFzVb2WR/+uSZveVu/JtO85StNtkZyOvHv78eeRyJGni+bv
YDuzSR1Vqa+ar1hSlvSjQu7LtTo9J5vYpDZsStsqNaqkVlXVljpVu0pqWLXq
o1c1rXqOTKpxJbWuxs9Oqn0lNbCkFpbUxNqww6RqZEmtLKmZJbWzpIbW+Imz
nZa3Ee7K3FSoUAG3b99OcR2yZMli03xeeumlp85n9+7ddq1LfHz8U9dFnndK
jtRZmZuNGzfizTfftDvLk1L7/PPP1bYSWaPT6VCuXDkEh0ao/kT6SHv6IelP
nXXeOpJVadt9uNX5So32cXFrnv6bYNqP+M/7H1mdh9SFn7l0u93rN2zikqRa
cGERqFy5shoXltzHZAL2/2lWNSN/aG1/Dk/6Xlt5Y841o/a5tnB3ztVsBuIT
gJu3Lbh01YLWba1fh5Sq2Atj4owYOsWAvmMN6DbcgPYD9GjeS48GnfWo0VaH
Ss10KN2AOVRvbwEl96ic67e5A12eLU1uWmdMPWEdRv4zplRYeCTatm3rtM87
EREREREREZG38bZcjdzLsTe3JPf4t2/fjgcPHjxcltyztnV6Zl2JiDzf9evX
sXbtWofyrfI9L+PMm+QBNDHnSkREREREREQe78CBAyrn6uMbhHJuevfW1S2y
SLlU78c891wmTFu4WdN17DFoinr39qPsUfim4EDN38F2VvMt4956ra5uXwQ/
cPs+/D5ohtV7iiWrzle1ufqNM6haXVKza8qCpBpei34yYuWGpNpeW/aYMGbi
+hTns3u3czI3krUzS9AjFVu2bLE56yK5mH+rW7euTdPa8i77rl27bK7Dasv9
W8m62prhsdZkDEkiW2zevPlh/120dDW7+yGtc65FSlZJdZ5Sq11quKY2D1uy
stJGTl3h2O+JouVQsHCQ2s/Mn7ue1Enf9btZ9WsVm6Ut23fgr9T7pEd5W841
o/e51tiSc23eqrfKUcv5tnm3CWu3mLDiZxMWrDIibqkRk+cbMXqmAUMmG9Bn
jAFdh+nRboAezXrqUb+zHtXb6NQ5WrL+k+dpznw9rC5f/kbr3+xs7mkh5Y+o
nOv/5XKsr3akaZ0x9YR16D9qjrrWjoiMRu/evdP8vUJERERERERERGlnS65m
wYIFWLduncM5poMHD6oc07lz5+ye9tKlS1rvIiIi+hcZt2Dnzp3qea4j4yDs
2LHjsXEQiDlXIiIiIiIiIvJ8co9f8hu+/sGIKV7JLe/eurpl+yxHqvdjcnyd
S/N1bNN1mHr39v1s0cgdMEnzd7Cd/k53pQTkKRKP7AHaZ1XT0nJFx7t939mS
c80XOs/m+RWMXp3ifPyLb0ep+klZDclsSHZDMhyS5ZBMxxdfh1tdl8xZXsGG
rZfw199mnDxrwYXLFty4ZcH9B0n1+B41ZMgQm3IuMo7wv+XMmdPqdO+++26K
NeX+rUWLFk7J3EycOBGvv/66TfOypT377LNq+61lmIgktxEVHaP6Esl72tsP
aZ1z/TZX/lTnmdcnwKb5fPBRNqvr12vINIf66hYdByJPAT9Ex8Sq7y9yPukr
ftllUuM2lGnonLqVVVroYM9XqDflXF955RVcuXLFpnXxxj535qyVOHHGgj+P
m7HvkBk795nV+bFmswnL15sw/0cjZi4xYtI8I0bNMGDwJAN6jzagy1A92vTT
o2kPPQoE9bS6HFfmTJlzZXu0RVW7onKuX30bguCI4m65ztQ6Y+oJ69C5zzj1
+yg68XfS2LFjbfqeIiIiIiIiIiIi17I1V2OxWHD69GksXbrUobyrjCks9+od
ycky60pE5BlkzILDhw+r8Q8c6QtknN9r165pvRke6cSJE5g5c2aq7fz581qv
JhERERERERFlYDqdTuVc/QNDUTgw0i3v3j6tTV24GT0HT021zV6xy+p8xs5Y
jWeeeTbV5yMly9fUbDuTW92mnZHXxx/hEUUwPW4Vjp40448jZuw5YMbWX5Nq
cf640YTFa5JqdE5daMS4WUZV46z/OIOq5dlhoB4te+vRsIsetdrpULm5TmVE
itZ2Tk7EWS2iWgIKlIhHjpAHeL+A9tlVe1r+4uk/55ratO9+FGZ1XT7/b8tU
51Ging7lm+jwQ+vE1vIyMmXKbHWe3+eLwE+/mLBppwk7fjPjlx03VG1Ha9PZ
U6/pxo0bieuSyabnqSnp0KGDTbkdR1rz5s2d8RVP6ZT03aVLl0ZQSLjKg06e
t9HufkjrnOuHWT9NdZ7V6rS0aT55fQKtrl/nvuMc6qvHz1qLPAX8ERwagfLl
y6vnaZR2t+5YVG6xW+JvGekjnN2PSh1Oe3hTztWW+qnJbt68icyZrfe5kZGR
j01369Ytm/rchk16qT5a+mrps5etM2HeSiNmLDZiwhwjRk43YNBEA3qNMqBV
r0t49lnrfW6BiCVpPv5a50y1Xj6b463kU8Z+ads/aewXqesr9X3l+0Vy1lL3
V+r/Sh1gqQcseWypD/z7YfPDsV8uXkka+6VEyTIIDA5X/VXcsp0uv87UOmPq
CevQpE1v1X/LfY6FCxfa/L1JRERERERERESuY2+uxmg04sCBA5g3b57d+aZh
w4ZhxIgRKltrz3SyrIsXL2q4l4iISOp1rFixwqF865IlS1R/I2MmEBERERER
ERGR96pWrZrKcEjNk6kLfnH5u7dPa6FRpay+C9t94CSr84kuXtHqfDr1GavJ
Nj7aylauBx/fIPXu7e+//+7U4ym363R64M49C67esODsRQuOnzbj4FEz9h40
Y/tvZmzYYcLqTSYsWWPC3BVGTF9kxPjZRoyYZsDACQb0HGlAp8F6tOqjR+Nu
etTpoEfVljqUa6xD8bqOZ1KiqyfAt3Q8vg6Px4cFtc+xWmv5ijHnam1dCsWs
tWv7Ps5Rzeo8X33zm8em8Yn60eo0zzybCdWaX1Hnq5y3HQfp1Xk8YLxBnddy
fk9baFTnu5z3cv5/nzfY6nxXrnx6zlWec1qbNq1Nxikmepo9e/ao/kP6kaJl
qjnUD/UYNMVp56ojWZWXXko9f9e8Q3+b5vPNf/NZXb+RU5Y73F9HFauAQn7B
an//8ccfWh96r3X5mkXlIKVeeLE6rh2P47eD9tXD9qac66ZNm56YTm/432++
c5eSfvMdOpb0my+2WHWr8/zPB9889psvpkLKvxse7XMjq16y67i882GQ1fky
58qWWitVX4dKzXSo0VaHBp31aN5Lr75TJDPfd6wBQ6cYMCbOiMnzjZi1zIiF
q41YucGEdVtN2LLHhN37zdj/pxlHTphx6pwFl65acPO2BQ/iYVcNaHs1bdoU
oeGR6lp79LQfXX6dqXXG1BPWoXLNZihQKFD13du3b3fdwSUiIiIiIiIiIpe7
f/8+tm7danPGSfKyAwcOVG3QoEEYM2YM4uLimHUlIvJwt2/fxsaNGx3Kt8p3
t7x7ZzDYNx4yERERERERERF5ps6dOyMiMkq9eztg9FyXv3v7tFarUXur78IG
hBZJdR4Dx8zDCy+8mOo8JFczY/E2Tbbx0RYcURx+ASHq3dvr169rfQrYzWAE
7j2w4NpNC85ftuDEGQsOHzNj3yHzw9peUqtNMi3zf0yq7TVxrhGjZiTV9uo9
2oDOQ/SqxmdI5QR8FRqPrL4PVPbVk2q+5o5lzjW19Xj2uZcQU/22nds33er2
vfTyR49Nk8t/nNVpMr/ysd37+v8K9LeeuYlcquokS71kqZss9ZNrtjyK55/P
YnVaac8nfid9+50Pipf8AaXK/IDc3/tY/Z5Kbm+88QYuXbqk9cedPNCECRMQ
ExurapU1a9/PoX5IasrVa94V9Zp1SbXl/PZ7p2dVZq/YDR+/0FTb4HELbJjP
LmTO8nKq6/ZiYr8vy3O0v27Ysofaz7GJ+1vejSDbnT5vUWMLNO2hd1sfWrqB
Tv1GsYe7cq7rft6DMxcsOHYqaeyRX/8wY9teE37ebsKqTSbkzhOe6jpkyvQS
6ne6q/qiKi10KNtIZzUz7HV9LnOuXtuK1tapz5/8XqrZNun3UoteerQfoEf3
4Qb0G2fAsCkGjJ1lxNSFRsxebsSin4z4caMJ67eZsPVXE/YcMOPAX2YcPWlW
3x+Sj5f6zwk61+ZQXW3w4MGIiopR19pSS93V15laZ0w9YR0iipSDr3/SGBUy
7jsREREREREREXm/K1euYPXq1VazTmPHjn2Yc01uco9u4sSJduWlLly4oPUm
ExFlCHq9Hnv37sXcuXMdyrhu3rwZ9+7d03oziIiIiIiIiIjIiaZMmaLyG3kK
+KFlp0Euf/f2aW3k1BU25b4kk/O06YdNXIK33vmP1elLVqilyfY92qRmrrzn
LDV0K1eurPXh9xgnzyblYaQ2U5FaOlX7NbJaAsKrJqgsbFDFBASUT4BfWakJ
mwCfkgnIXzwBeYvGqzzqf6Pj8W1UPP4vPB45w+LxZUg8Pg+KR/aAeGTzi8fH
vg/wkZ052hwhzLmmth6vvPGV3dvnW2Sj1e17LtPLj01jSzbmzfcK2r0u+cLm
O5S5+fy/LW36vnrr/cTPedmDT0wv/yb/z5Z5RBTriSGTDRg906Dqk8UtTapP
tuJnE9ZuMWHzbhN2/Z5Un+yvv83qc3TxigU3bllw/wFgMmn9ySZXaNKkCcL+
qQ0n/V96zqqk1noNtZ7hy/55zjQtQ8b/kP0cHhGFNm3aaH3oPZrUk5c6iVI7
u25H92VbH209Rtg3Rq+s84wZ1nOuHXssxOI1Sdk8yehJVk8ye5Ldkwxfh4FJ
mb5iVdawz3Vyn2tv0zpnqvXyU2qSiZZxOyQjLVnpRl31aNlbj46D9Opz0z/x
XB4+1YBxiee2fIbnJP4ml3NeMtiSxZZMtmSzJaMtWW3JbF+5bsHtuxbo9Emf
JXo6yclL3jKvj3+K17Lprd/Wch1mLNmWuK8DERQcjtKlS8PszSFpIiIiIiIi
IiJ6jMViwfHjx9U9t5RquUqm9d851+Q2bNgwTJ06lVlXIiIPIN/px44dw6JF
ixzKt65atYrjxhMRERERERERpVNbtmxR794WKBSIij801iSrIi3rJ5/ZlPvK
XygIrToPRt8RcWjfcxSii1fE88+/YHW6V159HVPmb9Js+5Jb76EzVGYmIjIa
3bp10/rweySpEyvv1XcZqkeJeqnXKnOkxSa26BoJiPwhKUcbmkKONrBCgsoU
zlpmxJQFRoyJM2LoP7mWbsMNqkaV5HIbdNar2lWVmiXVspKaVo6umzflXB3J
uYRV+Numz3lszQcPp/kydzurf//hZ2XsXpfCRTbZnbmJrXEXL2Z+1+p0/8ka
mfj3qeWk4/Fu1gir88ny2mdW5mO9yWeoQlOdqp8s2TOprdimn159vqS2stRY
llrLUnNZai9LDWapxSw1maU2s9RollrNUrNZajdLDWf5jEpNZ3vrJlLaPXjw
AMWKFUNAUCgK+oWpmqbpNauSWus3cjbefMv6Z7FanZZpWk7c0h3qd0dgcBhK
liwJg8G+HGV6J1l6ydlLNk6+Y7Tqr/OXSBr3QnJ7j/bXfcc+2V/X+Ke/LlU/
qb92Zr/LPte5fa4jTeucqaPLlxxqucY6VG2pQ+32ejTupkerPnp0GqxHz5EG
DBhvwIhpBoyfbcT0RUY1NszStSasTvy9vGGHCdsT++q9B804lNhXHz9txtmL
Fly9YcGdexbo+bWlqYMHD6pr7YKFg1C0TDWX94+e0G9ruQ6Pjk/Rrl07rQ8/
ERERERERERG5gNT+++233x6r/Tdr1iwMHz48xYzro23kyJGYMWMGs65ERBq5
fPmyyqk6km+VXOzRo0c5ziURERERERERUTp2/fp19e6tX2Ao/IKjMXvFbrfn
VaQVKVnFpnfxHW2VajbVZLv+3aSOj9TziU3c5/Pnz9f68Hu8B/HAlj0mlcUr
38T5GRprTXJ99pKaVgk6qBpXl69ZVM0rqX31xxGzqoUlNbGkNpZkeaVWltTM
ktpZkhOqVi/O6rmcP9wzcq5JWU779md4pTNWt++ZZzM9Ns2n/2f9XXn5G3vX
xa/YFrszN/nDF1qd5tnnXkRw2UNWly91XeVvrc1PskHuPu/tacXr/i+bU6fD
k9mcgROezOYsWfNkNkdqxP07m8MacU/6448/HuZlSpSr4fI+yxPyMo+24ZOX
oWbD9sic5WWr6/XRx9kRt2xnmpcZW7IyCvkFq/0uY8pmdJKZkzrSUs+0QmK/
rHKoNtZf/z42Hrli/qm/HpFUfz2HE+qvJzdZtr3fYd6Sc82Ifa4jzVU5V+nr
5HdotVZJfV2T7nq07qtH5yF69BqVNGbEyOkGlCjfy+ryW7XpjXOXksaMuHuf
Y0akdzqdDiVKlFDjJci4CVJvNL3321quQ5PEz1eeAonX2rGxmD59utaHn4iI
iIiIiIiIXOjOnTvYtGmTyj2NGjXKpoxrchs0aBDGjRun8rHWsq7nz5/XelOJ
iNKFe/fuqVocjuRbZWyDX3/9VT13ISIiIiIiIiKi9K9u3boIDYtUtU8kQ+Ku
vMqjbcyMVXjrnf9YfSfWkfb2O+9hxmLXvlNsa4sqVuFhXubPP//U+tB7leS6
cRPmGFX9VHdk+OatdG/4YM6cOVbP58WLF6uckWQjJA8oWQnJB0oNr98OmlVu
cOMOE376xYQe/delOJ+azXaojIZkNSSzIdkNyXBIlsOWzM07H4bYvT/9S+yy
un0vvPjWY9N89m0Tq9N8nOMHu9dF8jT2Zm5y5rOeX3n/0+I2r8P72YpbnV8u
/3FuOdc9tUm9xTINdajcXIda7XRo2EWvajZ2GKhH9+EG9B9nUHk7yYlPXWjE
7OVGlR//caMJ67eZsPVXE/YcSMqZHz1pxunzSfnzW3csKo/ubcN8Ll++XPUf
Ml5CvWZdXN5naZ2XiSxSDjm//R4ff/oFXn/jLZv7/WeeeQYde412yjrUbNAO
+QoGqP2+du1arU8BuxgT+02pvXz9pgUXLlvU2A1/Hk+q0bxznxm/7Eqq3bx8
vUnVcp65xKhqO0uN58GTDKrms9R+llqoUq9cMqvZ/B7gQwdzqK5s7ye22Jr2
f8d4S841I/a59rTk2uV5/KznXMtU7qXOdznvk2uXy+dBPhfy+ZDPiXxerv9T
u1w+R7bq06eP1eXL31DGInVFIyKj1LV2n+Ez03W/rfU6SM1cGQtE+ux9+/Zp
feiJiIiIiIiIiMjFTCYTfvzxRwwdOtSunGtyGzJkCCZNmsSsKxGRCxmNRuzf
v199nzqScd2wYQNu3bql9WYQEREREREREZEbyViVMbGxqvZJs3b9XPrea2qt
38jZeClzFptzLLa0115/E4PGztdsmx5tE+f8rPZxcEg4ypcvr567kOOOnDBj
xmIjGnTWuyxj16KX3q3bZGvO1VY///xzivORsQ5TIpmO0NCIVNfjixzfq4zI
glVJ2ahJ8/6XjeozJikb1ba/Hk176FGvkx7V2+jgX2SR1e3L8mr2x47BV3m7
WZ3m/WzF7D62ufwn2J25yfZ1XavTfJGrjc3r8EWu1lbnl+P7Ti47v9mSWqn6
OlRqpkONtjrU75yU6Ws3QI9uww3oO9aAIZMNGBNnxOT5RsxaZsTC1Uas+NmE
dVtN2LzbpGpbSgb/r7/NOHXOgotXLLhxy6LqUTv7a3706NGIjo5RWZlOfca6
vN/SOi8j+VZ7+/1nn31W1U531jq07TZM7W/5nTR58mSnHk+p4yhjFkhdx/OX
Lfj7jAWH/xmzYMcjYxYsW2dS4y5InydjPUjdSKkfKXUkpZ5k8pgFdTs+OWaB
oy3yB6nFmlRv1dMyrU9rUgPWke30lpzr62/ntnvbbKlB7q4+N0/QRKvzrd9y
mfotEbfUqH5byPfs2i3/+579/XDS9+zJs//7nr3/4PHvWa1zplovnzzT/Pnz
EfvPGBW1GrVP1/22luswdcEvifs4EEHB4ShVqhT0evdexxERERERERERkXvJ
/R95Fp6cg5owYQIGDx7sUN51+PDhmDZtWqp1BM+dO6f1JhMReRWLxYKTJ09i
6dKlDuVbZQzws2fPar0ZRERERERERESkgb1796qaJ1L7JKZ4JZe+92o1T9J9
uMqo2JtreVrzpIyr2rZ/sjJR0TEYMGCA1oc9XZG6W0vWmFQ2rVgd59Z6lSyF
u3hKzlVERKSec3311VftzmqPGDHC6vZ99XUelWmRDOHKDSbUbjjK6jRvvpNT
ZRQlqyg1B6UGqLXjmv2bxlbn+++c63sfx1idxp5c6re+w63O7+Mc1Zx6PrO5
vyXXGfyhtU5lviX73aafXmXBpV6mZMMlIy51NCUzLnUGJdf47zqDkn9s1KQT
AoOTasINGb/Q5f2W1nkZR3KuNRs6N0MkY3DI/g5K3O8tWvVUtbP3/lM7e8MO
E1ZvMmHpWhPmrjBi+iIjxs82YsQ0AwZOMKDnSAM6DdajVR89GnfTo3Z7Paq2
1KFcY53T+ypntPCqCchXPB6fB2mfW7W3ZfVN3znXTM+/itia9+3atm8KDra6
bcn52eS8f6Fw6/30h1lzqry/9NHSV2/ZY8Lu/Ul5fxmDRPL+l65acPO2BfEJ
SXWzmzVrZnW+MuZ+WmmdM9V6+eSZ5B0OudYu7B+CwNAimL1id7rtt7Vch469
xyRda0dFo0ePHlofdiIiIiIiIiIicqH79+9j1apVT2Si4uLiMGbMGAwaNMju
rKtMI+PNzpw5k1lXIqI0un79OtauXetQvnXBggU4dOgQa0cQEREREREREWVg
BoNB1RcNDo1Q9UbHzvzJpe++WmtN2vbBG2++bXe25dH21tvvYuCYeZpux79b
8bLV4eMbpN5z3rx5s9aHPd26c8+Cn7ebVE3RMg3TniOSGnru4k05V2m7du2y
a/sKFixodZ4VKlR4bJqFC63Xo5P26HNFiwVI0AG371pw+ZoFZy5YcPSkGX8c
MePXP8zY+qsJ772fzeo8y9ZYhpa99WjUVY9a7XTI9lVZq9NILTxbz62v8nS1
nifKXlrz7Bub57RPctZC9hzhKscxae4Gl/dbWudlHMm5Pvfcc6hSu4XT1mHs
jNVqf3+auN+zf9NI83PA2S20cgLyFIlH9gDts6ppbbE17d9+b8m5SoussBU1
2+rQsIte1ZvvMFCP7sMN6DfOgGFTDBg7y4ipC42YvdyIRT8ZkfP/fKz3c+Uq
qD4zLX2uLbJls97nMudK6VmdOnUQFh6p+hNXjsOkdb+t5TqUrlgHBQoFqmvt
devWaX3IiYiIiIiIiIjIRa5evaqel6eWkZo+fboaf9mR2q5SE3b8+PGYNWvW
U7OurC1IRJSy+Ph47Ny5U737ZG++VabZsWOHmgcREREREREREdGwYcMQExOr
cq5N2vR26buvtrRpi7ag4g+N8cqrr9mVb3nn3fdRvX4bzFi8TfNteLSNn7VW
7dugkHCULl0aCQkJWh/yDEFvAPYcMKtaiVJDz5EMUN2O+scyIK7kbTnXJk2a
2Lwukom15TM8ZMiQx6Y7ffq0TdONGjXK5nXZs2ePTfP8d+ambFnrOdfYYlVV
nceNT6nzOGHO/+o89hplwHd5K1udX7acdTTPwbF5Tvsgeyl88XUo8voEurQe
nNZZleTmSM41uTmrPv3MpdtVLumznGHI+kUlzc8BZzXJt34VGq95NtWZLaSS
/fvBGTlXqc1btpEOYaV/SnEerbruxLhZRkxbaMScxD5BatCvSuwjZFyObXtN
KOgbzj6XOVdKx6QGRGxskcT+2x/V67V2Wb9Zt2lnTfttrdZBxv6Q30aBwWEo
WbIk7t27p/UhJyIiIiIiIiIiFzh+/DjmzZtnc2Zq8uTJ6j64I3nXoUOHYsqU
Kcy6EhHZQGqvHj58WNVidaSGq9R+vXbtmtabQUREREREREREHmT//v2q9omv
XzCCI4q7JT9jS5s8b6PKu/r4haq8y/MvvPDYO7JZsryCTz/7CgV8Q1CvWRfE
Ld2h+To/rTVu01vlXCVLLGOAkvtJVvWvv80qb9igs96uHMyBv8xuWUdvy7m+
kPh5PHnypE3rYktGVNrTah1nzZrV6nTvvfce7t69a3U9LIknQkBAgEOZm8aN
G1ud5j//+Q/u3LljdT1u376t/tba/Lr3GIDzly04ccaCP4+bse+QGTv3mbFp
pwlrNpuwfL0J8380YuYSIybONapM9+BJBvQebUCXoXq07a9H0x561Oukxw+t
dajQVIeS9dNe55jN/S22xl2890kMcnwTAr/gaLf0Xd6cc33mmWfQsddop6yH
T+FQfPF/oXg/WzHNzwNnt+jqCfAvF4/vi8QjR0g8PiyofV7V0SZ1aZ+2jZJD
LddYp8a7qN1ej8bd9GjVR49Og/Uo+0Oc1XOp76BF2HvQjEPHzDh+2oyzFy24
esOi6sfLeBrJ2Oc+KS19riO0zplqvXzyXFIDWa61/QNDUdAvzOPGZPL21rxD
/8RrbT9ER8egb9++Wh9uIiIiIiIiIiJyMqPRqGr8OZKdkrqsUp910KBBDuVd
pS6s1If9d9b1zJkzWu8WIiKPIM9AVqxY4dB39JIlS9TzT4u7ig8QERERERER
EZHXkHtGtWrVQlh4pKpb1mf4TM3fV31am71iF4ZPWop+I2dj4pyfNV8fW9c5
MKwofP2D1fvNBw4c0PpwU6ILly2qnlq7AXqVgUktByT1N93BlpzrtGnTbJ6f
qzM30r755ptUx1WU75bWrVvbNK9XX30VDx48eGIelStbr3sqTWol6/X6VLer
Q4cONufk/p25mTRpkk3TtWzZMtV1EC1atLBpXqtXr7Y6L0eYTMCDeODGLQsu
XrHg1DmLyoHv/9OM3fvN2LzbhHVbTVjxswkLVxsxa5kRk+cbMSbOiCGTDeg7
1oBuww3q89O8l15lx2u01aFSMx1KMUfrkhZV7YrKuX71bQhCokq6pf/SOufq
GxCJD7N+ijffehcvvpTZ5s9ucnvrnf+o8TLSuh7+IUn5Ytn/MTXuaH4uuLqF
VUlAwVLx+DYyHtn9XZ9Pfb/AA5WvzVroAT7xk2XG4/PAeHwZHK9qzn4dnrQu
/42OR+7YeOQpGo/8xRPgUyIBhUoloHAZyeomoForHf4+Y1FjA1y7acHd+xYY
jKl/Fzqz32Wf+6S09LmO0DpnqvXyybO1bdsWkVHR6lq7fc9Rml+jppcm43OF
RJZAIb+ka21r37dERERERERERORdZHxhuX/sSH7q0TZz5kyMGjXKoayrZGTH
jBmDuLg4Zl2JiP4hY7tv2LDBoe9kqc0t9TgMBve8i0VERERERERERN5pwYIF
6t3Q/AUDULpiHc3fWU0vrfvAyep95vCIKNStW5fj0Hkgqcn283YT+owxoEzD
JzN6Uv9S/sbVbMnbtGvXzub5uSNzI+2zzz5T96LN5sfr3l68eBFVqlSxeT71
69d/6rps2bLF5nkEBQVh586dT8zj4MGDKFWqlF0ZuX9nbs6fP2/TdM899xy6
dev21Hvy8m/y/+RvrM3njTfesJoh8lTyNZegA27dseDyNQtOn7fg6Ekz/jhi
xp4DZmz91aQ+cz9uNGHxGiNmLzdi6kIjxs0yYtgUA/qPM6D7cAM6DNSjZW89
GnbRo1Y7Haq00KnPaNHaGS9LG1HlgspZ5vwuGBFFyrml/9I65/rvNmT8QtRp
0gk5v8lt+3dCeLE0L1fq3Eu+WPZ/9A/XNT8X3N2K1tEhqnoCAiskqHxpzrB/
cqghSTnU/0sph1oyAYVKJ6Bw2aQcalDFBIRUSsrRRlRLUPOMrencdT13yb6+
2pn9Lvvc/3FGn+sIrXOmWi+fPJu86yHX2j6+QYiILavymVpfp6aH1mvodHWt
LeN11ahR44nvRiIiIiIiIiIi8l4nTpxQ77CkNeP6aJOxLYcNG+ZQ3nXw4MGY
OHHiY1nX06dPa72biIjcSqfTqWef8h3oyPewPIu8d++e1ptBRERERERERERe
QMZak3fSg0LCkaeAP4ZPXqb5e6vpocUUr4QChQLVe83Lli3T+jCTFXoDVD3L
kdMNKlOXnJ2RLJ6r2ZK3efnll9GwYUOMHDlSPYeTGqN//fXXU+fnrsxNcsua
NSuioqJQokQJZMuWze7p9+3bl+L65M2b16555ciRQ61LbGysqn9n77qklLnx
8/OzefrvvvsOnTt3fni/Xv5b/s3W6evVq2ffCZSBSI5Wp0/KqF+9YcHZixYc
P23GwaNm7D1oxvbfzNiww4TVm0xYutaEuSuMmL7IiPGzjRgxzaBqNPccaUCn
wXq06qNH42561OmgR9WWOpRrrEPxup6Xo42ofO5hzjWyaMbMuT7aajfqgGee
ecbq+r3+xltpXpbUz03OuUZVu6r5ufDvJmMxVGymQ/U2OtTvrEeznnq07a9H
12F6NX6D1GAePdOgajLHLTViwSqjqtW8dotJ1W7e9bsZvx82q5rOJ88m1XiW
Ws9S81lqPz/NpasW/LLLpD5TLXrpUaKeZ3xmJC9vD2f2u+xznd/n2kvrnKnW
yyfPJmOdSBY9NDxS5TJ7DZmm+XVqemhFSlV9eK29cOFCrQ8zERERERERERE5
yd27d7F9+3YsWbLEqTnX5CZ51SFDhjiUd5Wc7NSpU5l1JaIMRcaZPHr0KBYt
WuTQ9+6qVatw6dIlrTeDiIiIiIiIiIi8zJgxY9Q76vl8AlC2Sn3N31v19ibv
L8t7zKFhkahQoQLi4+O1PsRkB8nSSe5H8nHdhhvg6vJAkvFwJBsyefLkp87P
3ZmbtLSiRYu6ZN+kpT0tc7Np0ya3LPvVV1/lPX6NGYzAvQcWXLtpwfnLFpw4
Y8HhY2bsO2TGjt/M2LTThDWbTVi2zoT5Pxoxc4kRE+caMWqGAYMmGtB7tAFd
hurRpp8eTXvoUbejHj+01qFCU51DmcCIyuczfD3XfzepPW/L52n8rLVpWk5I
ZIlHcq7X7DpuUnu4VH0dKjXToUZbHRp01qN5Lz3aD9CrfqXvWAOGTjFgTJwR
UxYYMWuZEQtXG7FygwnrtpqwZY9Jjb1w4C8zjpww49Q5i8qY3rxtQXwCXN4v
2UrGiJDPx5I1JvQbZ1DnuhY518rNdWpdbOXMfpd9rvP7XHtpnTPVevnk+aT2
hOQxJZcZVawCa7qmsfUZPlNda4eERaBcuXK4f/++1oeYiIiIiIiIiIiczGKx
4NatW2r8yV9++cWp9V3j4uIwduxYDBo0yKG866hRozBjxgw1puapU6e03lVE
RC4j765ITtWR71rJxUo+1uwpD7aJiIiIiIiIiMirXLlyRdWFUjVd8/th4Jh5
mr+/6q1t1vJdCI8pgwK+SfVl5s2bp/XhJQ/3559/Oi1vI7wlc/PWW2/ZlOmU
+qaekLkpXry4y5ctdQMpfZM6mVIvU+pmSv1MqaMpufr9f5pVfU2psyn1NqXu
puQeJ8y6hlx5YpE7XwjCoku5pR/z9JzrlPmb8OJLma2uY6c+Y9O0nMDQIsiV
LxS58sZi+sJ7qr73jxtNWL/NhK2/mrDngBl/HDHj6EkzTp+34PI1C27dsSBB
lzReQkYlGfFte02qjqzkvSXv646sq3xubOXMfpd9rmv6XHtonTPVevnk+R48
eIBKlSoh7J+arp37jNP8mtVb2+wVu1R9++RarrNmzdL68BIRERERERERkRtI
Turq1as4ePAg1q9fr+qppjXvKllVeTbrSNZVMrLjxo1T82HWlYjSm3v37mHL
li0OfbfK97M8I9XpdFpvBhERERERERERebmJEyciNrYI8hcKRFTR8uodUq3f
Y/XG1rrLEPX+cnhEFKpWrcparmRVQkICXnrpJafkbYSrMzfPPPNMmnMtzz77
rBq/0RaSDfjuu+80z9zcvn0bOXLkcNly69evb9P+oIxFvh8kx+EfGIqA0Fi3
9GOuyLn2HzUHzdr1S7G16TrMrvn9N09Bq+tYrW6rNO2HQv7hCAgKUzUwLRk5
uJpGRhNUFliy21LzuFY71+ReG3bR25wvdma/yz7XNX2uPbTOmWq9fPIOy5Yt
U/15wcJB8A+JwbRFWzS/bvXG1rbbMHWtHZZ4rV25cmX1nUVERERERERERBmP
0WjEhQsXsG/fPqxevVrVVnU07zplyhQMHTrUobzrkCFD1LODkydPar1LiIjS
TL5b9+/fr+o5OPJ9umHDBlWLm4iIiIiIiIiIyBnu3r2LihUrqnymvDvastMg
zd9j9bY2cc56FPQLg69/sHqPee3atVofVvISXbp0cUreRrgyc/Pqq6+ibdu2
acq0ZMqUSY3haI9r164hb968aVquZIUqVKiQpszNkSNHkC1bNqfnfGrUqAGT
yfZahJSxSL31wOAw5PcNdktf5oqc6/eJvytSm9/Lr7xm1/z8g2OsrmORklUc
3gdSmz1PAX9V516+N8i5pO6t1C+evsiIDgP1KNPQOdnX7b+ZbV4HZ/W77HNd
1+faSuucqdbLJ+8g74ZIveTIqGjVv9Rq1F7za1dvaxPn/KzGoEi+1v7pp5+0
PqxEREREREREROQhZHzL06dPY/fu3Vi+fLlD+awJEyZg8ODBDuVdhw8fjt9/
/13r3UCUody/fx8XL15U73DIZ19qPcu4r1OnTsWwYcPQo0cP9O3bF6NHj0Zc
XJz6bti0aZPKx//999/qeZher9d6MzyCjPksef0lS5Y49P0p+/bcuXNabwYR
EREREREREaVDksuUd0YL+4eggG8IxsxYpfn7rN7USleqg7w+/oiOiUHr1q1Z
/41sJrWIgoKC0py3Ea7O3Mh53bRpU4dyLx9++KEaU9cRd+7cUd9Pjiw3S5Ys
WLhwIaZPn57mzI087wgODk5T/ie5Zc6cWT1nIUpN9erVERwaocagmLZws8v7
MlfkXMNiSlud58yl222e33e5fazOr2yV+g7vAxm3QvZ3SFgEay27gdkMnDhj
wepNJgybYkC9TnoUrW1/9rVJd9trujqr32Wf69o+1xZa50y1Xj55DxkDXT5X
Uitcsq4DRs3R/PrVm1qZynWTrrWjY9CyZcvEvsP2sQ2IiIiIiIiIiChjuXfv
Ho4fP45t27Zh8eLFNme1JAs3ZswYDBo0yO6sq0yzcuVK9fyBHifjAEqNx/Pn
z6tM4t69e7F582asWrVKPSf45Zdf1L/99ddfKit38+ZNGAwGrVebPMz169fV
uSKf0Zo1a6r77f9uMTGxiIqOUWNORkRGqRaV+N9yXzk2Nvap07Rp00Z99iWr
Lpn5jEb2q7wr6Ei+dcGCBTh8+DDHdCciIiIiIiIiIpeRd+k7duyo7v3l8wlA
TIlKiFu2U/N3Wr2hte02LCkTExqBkiVLqvFCiewhnz+5J58/f35VB82RvI1w
deYmmWRnChQoYFPm5eWXX0arVq1U3ei0kmeRn3zyic15G8kx/fbbb2paZ2Vu
5L36efPmIXfu3A5lgF577TW1PzimJdlCxk0IC49UfcyIKctd3p+5Iudaqab1
nF7X/hNtnt9bb79rdX61G3d0eB8MHrdA7W+pcd+5c2etT4EM6e59C/YeNGPW
MiO6DNWjfBPbcq8799mee3JGv8s+1/V9rjVyXKwtx5U5U62XT95F6jrExhZB
Ad9ABIYVxVQ3jF+RHlrb7sMfXmtLnftTp05pfSiJiIiIiIiIiMhLyLMAyU3+
+eefqpbj/PnzrWa35P72iBEjHMq6yhjHhw4dyrC5L8kJSl5wzpw56NWrF2rU
qPHUbKEt7YcffkD37t1VBlFysFK/kzIO+QzJZ2natGlo2LDhw/MiOiYWoeGR
CAwOh19ACAoWDkK+ggHqHrLVVsAf+QsFopBfMPwDQxEcEq6eBydnYOX+c6dO
nbBs2TJcuHBB613gUvHx8dixY4f6rNqbb5VpZFqZBxERERERERERkatdvnwZ
5cqVU/fy5D5f3aadNX+v1dPb8MnLkN83GL7+werep9SwIkqLS5cuqedsci6N
GzcOQ4cOxciRIzFp0iTMmjULS5YswdmzZ586rbsyN8l++ukndOjQAeXLl0e+
fPlUHiZXrlyIjIxE3bp11TMAZ9/flpyp7J8GDRrA19cX2bJlU7VR3377bbXs
mJgYtGjRAgcPHnxsOldkbuT+fb9+/RAdHY2PP/5Y5Ysend/zzz+P9957T+Wo
ZJ0kMyR18ohsNXjwYDXOrPTJ3QdOdnmf5oqca4sOA6zOMyK2rE3z6tpvgk15
u469xzi8Dzr1Gav2t4ztO3r0aK1PAQJUndYzFyxYt9WEUTMMaNRVj2J1nsy+
Nutpe03XRzna77LPdW+fS+Tt5D0sGWde9esF/FEusT+dvWK35tezntz+fa0t
48MTERERERERERE5Su55X7lyBQcOHMC6deswd+7cFLNcMs7hkCFD7M66yrOF
5cuXp/g8Pz2RHLHUzpX8cLt27VC8eHF1H0/G+5O6mlJPUzKJQSHhCAgKQ+GA
EBTyC0KBQoHI6+Ovmvx3ocJBKOwfkvg3oepvQ8Mik2pxPlKHs1ixYmqcTzk2
UvtVjiWlP5IvlWdMVatW/edcilVjQksuVc6V5Myqj18oQiJLoEipqurZdY0G
bdGodS81bmKPQVMwaOx89B81B136jUerzoNQv3k3VKvTEqUr1UF08YoIDC2C
fAUDH+ZfJS8bGByWeN5FP8zUyvMveTaXnuo0S35YarDKvXZHarhK7VepAUtE
REREREREROROGzduVPfs5D6z3M/rPnCS5u+3emqTGjxy7zR/wQDExMaq7AHv
p5OW3J258SbuytzodDpcvXoV9+7dc8JaU0YntYPlWbD0x03a9nF5v+aKnOuA
UXOszvOZZ55Fs3b9Up3PtMQ+9z/vf2R1Xi+8+BJmLNnm8D6Q55zyXF1+C0lu
kDzTg3hg/59mzFtpRI8RBlRqlpR73fqr+8ZIZ5+bMuZciZ5O3h+Rd72kNqm8
P9Osfep9X0ZuvNYmIiIiIiIiIiJXMxgMOH/+vKoXumrVqidqG8pYmOPHj1f5
VXuzrjK9PEe4deuW1pvpdKdOnVK1a6XmanKuVXKpkhOUvKA810zODxbyD0dw
RHGVLSxZviYqVm+iMokNWnZHw5Y9ULNBO1Sq0QQlK9RCTPFK6m8LBUQ8Ng+Z
p7y/9GjtzcqVK2PChAk4duyY1ruDnEDy0n369EHRokXVMZass69f8MPzoHBQ
FMpXa4g2XYdi5JTlTrkHHbd0B/qNnI1GrXqiWJkfkL9QkFpWPp8AlauVc1rO
NakVMXPmTNy+fVvr3ZQm586dUxl8R/KtMibwyZMnVbadiIiIiIiIiIhIC1LD
Su7XybiJPoVDVR0Vrd9z9bQ2a/kuda89bwF/REZFo0qVKrhx44bWh44yOGZu
UsbMDXmjXbt2qf7YxzdQPbtzdd/mipyrtA8++sTqfDNleh7te4x86vRDxi9C
zm9yW52HtLw+AWnaB6Uq1E7c30Fqv+/fv1/rU4DscOGyBYePuS8DxT43Zexz
iVImtaOlj/ELCFV9Vq8h0zS/tvW0pq61y9d8eK0tY/fzWpuIiIiIiIiIiFwt
Pj5eZTh37typxkJNznhJxm3UqFF2ZV0nTpyoppXs7J49e9RYyd5M8m27d+9G
mzZtHtbZVFlE/xA1fqzkA/P7BqN42eoqN9hvxCxMX7zV4XuEM5duV2PpNmnT
W90rlPeWknOvvv7BicuOUOPjybo0bdoUW7Zs4Th5XujEiRPo2bOnOo4xMbGq
pm/y+RQWXUqNTyzPiWev2O3y+9IyjrLUgq1SuwV8AyLVOkgNWRm3MjZx/cqU
KaOef929e1fr3WYXydpv2LDBoXyrjMktz8uNRqPWm0FERERERERERBmcXq9H
ixYt1H3E/IUCERhaBBPnrNf8fVdPatXrt1H3NUPDI1GiRAkcPHhQ68NGxMxN
Kpi5IW907dq1h1kY6Ytd3be5KudaqWZTmzKqzz33HD7/8v8QVayCGse5dqMO
CIkqiedfeMGm6aV17TfB4e2XZ6Ty3FLG6JXxglmXmVLDPjdl7HOJUibvg/Xt
21fVOJA6BD5+oRg2cYnm17ee1KrXa/3YtfahQ4e0PmxERERERERERJQBSZ5N
6oVKhnLRokWqhumwYcPszrpKk/Hvjhw54nVZTLmfKePySpZUnllGRUUnjeH3
T53NkMgS6nlen+EzVX1MV90zjFu2E/1HzUHdpp0RFlP6Yea1cECIGitP1q1+
/frYvHmz1+3jjOjy5cvqMyLPY6NjYtWzWTmeUlO1Wp2WGDphsab3qOV869p/
IoqWrpaU4S4Y8DDvWr58efV5lvfqPJlk6+V55dy5cx3KuMr3Hp+VExERERER
ERGRJ7l+/TqqVauGqOgY5PPxR0SRcpi6cLPm77x6QpMxI+VeZlBwuLpf/tNP
P2l9uIgUZm5SxswNeavq1aur52bS74yLW+PS/s1VOdfxs9aqeq22ZlUdbd/m
LpCm7R85ZXlSriYsUj0LJ0oN+9yUsc8lSl1CQoJ6Lyx5XCn/4BiMnfmT5te5
ntAate6VdK0dknStvWbNGq0PFxERERERERERkcp73rhxA4cPH1YZt6FDh9qd
dZUm98YvXryo9ebY5MCBA2jZsqW6TydZUqmjmqeAHwr6haFGg7aajt8nz/Tq
NOmEwoFJdTcL+QUjIjJKrWujRo1UDV3yPHJvfMaMGShZsqSqxxsQFKYy01IL
uFaj9pgwe53m96j/3QaMnosS5Wok5V0LBajnyHKe1ahRA1u3btV6lz5Bct5H
jx5V2XxH8q2rVq3CpUuXtN4MIiIiIiIiIiKip/r7779RtmxZdT9Y7i0WKVUV
M5Zs0/w+opatbbdh6v6ljCco9y6nTJmi9WEieoiZm5Qxc0PeavDgwWrMCel7
OvQa5dI+zlU5V2kxJSq5NOOaOcvLaX6e3rrLELWfJXc0evRorQ89eTj2uSlj
n0tknYwrJWNZqHGlCgYgOKI4Js75WfPrXS1bm65DH7vWnjZtmtaHiYiIiIiI
iIiI6Kkkr7dx40aMHz8ew4cPV5lWW7Ou0qTuqNSL9UQXLlxAz549/6nfGgNf
/xB1365wUBSate+HaYu2aH4vMbnJ+0vyfC8wtMjDvGtyfdeOHTvi5MmTWu9O
+ofUBZZ74nJsgkMjVL2FvD6BqF6/DSbOWa/5uWStSd5V3pmT88zHN+hhrrpL
ly4ekwuV9ZCcqiP5VsnFSj6W9ZCJiIiIiIiIiMjT7du3DyVKlEB4RBTyFPBH
qQq1Ebd0h+b3ELVonfuMQ16fABT2D1H3KyV7JON2EnkKZm5SxswNeav169er
PkfqvVX4oZFL+zlX5lzjlu3Et7nyuyzn2qLjwDRvf+mKdeDjG6j2tyeOv0ue
hX1uytjnEtnmzJkzqFixIqKiohOvM/0REVsWk+dt1Py6V4vWsfcYdb8h+Vp7
yJAhvNYmIiIiIiIiIiKPd/v2bZV3jYuLU2Okjx07FsOGDbMp6zpv3jz8/vvv
MBgMWm+GotfrMXPmTPV+kIwJK+PRyT0734BIlW+dsdhzx8SXd5hkHD3/4BhV
c7ZwQAiiY2JQrFgxte8fPHig9e7NsO7du6c+A3LfNyIyWj2Llaxo2cr1MHr6
Ks3PHXtbj0FTEBJZQm2DX+J5Jp+V0qVLY+XKlZrd05Z9vGXLFofyrXPnzlXP
NXU6nSbrTkRERERERERE5AjJesj939CwSHUfu0S5Gpi+eKvm9w/d2dp1H6Ey
rr5+wYiNLYLu3bvDaDRqfWiIHsPMTcqYuSFvdfPmTRQtWlQ9S/bxC3XpWBOu
zLlKkzp1H3z0iVPzrc89lwn1mv1/e3cC72VZ543/Qdubaaam5t/UNNM80/NM
M9N/pmQ5cDj7vsi+iWyCICCigCCIiCgqIrkgiIjKjiIoKOYOmrhRadqijVZm
pY65ZGqmKfh9uC+EalL2c+4Dvt+v1/dVafy4f9d1HX787uv+XN9T9/m9Z3+v
aduhLErKqqJLly7x29/+Nu+pp4XzmfvefObC7vuv//qv6NmzZzr7Pcu6VjX0
iPnLb839+29zVvb8WfquXbz1u/bhh6deEZs3b857agAAAABgtz311FOxbt26
HdmxLC962WWXxdy5c9OZbu+Vdc1qzZo18dOf/jTXc98eeeSROOaYY3b02szu
VbYtLI/hY6bGotV35X4PcXcr6+86esKZaU81ew9lFdXpnmPWR/TBBx/MbXzf
r7J1lY19Y2NjFJdVpgxylhE964Klua+Vfalsv/74iWdHu8KK1Je2sro2/exk
z5G9/PLLzTa+WUb+4YcfTpn5vcm4btiwIWX1AQAAAOBAdMstt6ScTXZ/Lsu6
Zr1m5i29Off7h01dK9ZtimOOn5LO4issrkgZ10mTJjnLjhZJ5ua9ydxwIDvx
xBNT/iX7LDrj6wub7DOvqXOuWS1cfVdUN/SMVq1a7XPG9RN/9cnUa31/vPdT
Z8xP41tbVx+nnHJK3lPOAcBn7nvzmQt7JuvZ0L1796itrU/PxGQ9B2bNuzr3
78JNXcuv3xRHj5qUPn+zPq7Z82aTJ09OfSMAAAAA4ECzZcuWePTRR2PVqlV/
lidbsmRJyrlm//lembPsmZznn3++Wa85O28uy+Rm597X1WW9Nsu29drsPyIu
WXZL7vcQ97ays3f7DTkhPdvUrrA07f9lOcT58+e7/9hMsn2g7GzhbF2161Ca
zjrMzi5euvbe3NfH/qp5S26Kzj0HbbvHXVKR8ryDBw9OufWmlGXin3jiiZSR
35t8a5bJ/+Uvf9mk1wgAAAAAzeHWW29N97ezrE2bgpLoUFIT0869PPd7h013
7/v26NLrqHRPMuvvlt33njJlSrz++ut5TwW8q+xe9mmnnfZnNXPmzHjllVd2
+mtlbmRuaLnWrl2bPoPati+JvkeNbrLPvexch6bOuW6vLFf67//RJg455JA9
zrf+5Sf+OvoOOm6/nh/ds98x0bZDaRrnm2++Oe8p5wDgM/e9+cyFPZedud6r
V6+oq29Iz/y0aV8aY0+eGSvWfSv378VNUdkzcod365++a5eWV+046955UgAA
AAAc6H73u9/Fpk2b4sorr9zj/Fn2a+6777547bXXmvw6X3rppXTGe+rhWlGd
MqEllY1NeuZuc9eMi1ZEeU2X9N6234ccM2ZMPPfcc00+vu9XWQYz62WcjXVl
VW20zsa+qtNBe7Zjdg8/u5ef3dPP7u1n9/h79uzZZP2Dsyx89uze3uRbswx+
1mM3y7cDAAAAwMEi60/Vu3fvqG9oiPYdt53lOHDYuP2aNWkJleVvCktqo3VB
cephm92DnT17drz11lt5TwE0CZkbmRtarhdeeCGdM5GdudC2sDz1RM37c3J/
VXamxPAxU6NDcXX8y799NT77uS/ERz/28fQz2arVIfEXf/mJ9M/+9SuHRbc+
Q1L/1iXX3rOfr2H91s/70rS/3bVr111mFGFf+cz1mQvv5mc/+1kMGTIknfme
nf2efdfOzl2at/Tm3D+v92dNOmNOtC+qSr1rq2q2fde+5JJLPFsDAAAAwEHl
xRdfjNtuu22v8mhXX311/PCHP2yye2a/+MUvdtyLLCwuT/cijxw8+qDag9xe
2b7iUcPHp/fYoWNZNDQ0Rv/+/ePxxx9vkrF9P8syrnPnzk33fEvLq9OYdzvi
6Fi46pu5r4OmrlnzVkVxRUO67531jsj2nL/97W/vt7HN8vNZBn5v8/P3339/
eg0AAAAAOBg99dRTcdxxx6V7k2Xl2851zO7XnTZzQe73Dve1sr4yPY4ctuMe
d319Q3Tv3j1uuummvIcdmlR2pqTMjcwNLdfUqVPT+a/Z59P4U8/L/fOyqWvZ
2vtixbpNzfJ7HT/x7PR3mewMjxkzZuQ91bwP+Mz1mQvv5eWXX059TbefdZ89
E9OusCLGnHxOLLvu/tw/n/el5i76RnTpPTj9XaawqHzr525j+vNww4YNeQ87
AAAAADSJLPeXnW+3du3avcq7Xn/99SmTuj/99Kc/jSOPPDI9C5P1n2zboSwm
nX5R7vcPm7qmnrMgCooqo237kqira4hevXql3pbsPwsXLkz3trOzm7P7wEeN
mNBs+70toS5dcVvUNPZKPWyzrGv2rNkPfvCDfRrTLOueZd6zXqx782dI1vs1
O1MbAAAAAA52v//972PBggXRqVOnqKur39HbNXtudfYV1+d+/3BPKzvD8dhx
p6c+eVkP14rKmnT/dfTo0WnfAQ522Xmyt9xyy3vW+vXr877EfZLt1y1dunSn
lWX4oaW699570+dS9nlbVd89Vqz7Vu6fnQdDLb9+U5RWdUp5m2x8H3zwwbyn
mvcBn7k+c2FnsmffbrjhhujRo0fqLdCxeFtv1+zzf/r5i3P/7NzTWrT6rjjm
+CnRpn1ptCkoicqqbd+1x40b588CAAAAAN4X3nrrrfje974XK1eu3KusWrZv
8NJLL+3zdWT347KMa3a2bpb37FhWF1+/ZFXu9xCbq7JnmbJ9wex8wdq6+pR1
/clPfrIfZphrrrnmD70S2hale8J5z3celfWuret8RHruLFtjvXv3TvtmeyPL
uGdZ9735MyPL1j/xxBNpvwEAAAAA3k+yc+NGjBiR7ldWVNVEm/Yl0bqgJAYM
HRvzl9+a+z3EXVXWE+ek0y6I4vKG1MutqLQyPUvcrVu3uOqqq9J+AwDkLTur
ddCgQVFVXZv2Bqeftyj3z9CDoU6dMT+NZ3VNXQwbNsxeHwAtxjPPPBOnnHJK
+q5ds/VzqqCwdMfZUufNX537Z+iuaunae2PsyTOjsKQ2fdcuLtv6XbtxWw/X
NWvWpL/bAAAAAMD7yW9/+9u4++679yq3duWVV8a3v/3teOONN/bq937++edj
8ODBqY9rlnEtqWyMuYtvzP0+YnNX1nOzoq5byrpmfV379evnPL59tGHDhtQj
IesnsL2Pa97znGddcfWdUVnXPZ37mGXKBwwYEM8+++xuj2eWac/GdG/+nMiy
9A8//LBn3QAAAAB4X3vzzTdj1apV6XnVxsbGKC2vSmfTte1QFkNGTmyRedcs
3zrpjDlRXtMl3WftUFSeztLLniE+7bTT4umnn857WAHgT6xevTp9TrXrUBoN
XY7M/bP0QK8V6zZFdUPPKCgsS+P6jW98I+8pBoA/881vfjOddZHOlqqsSc+g
Zd9he/Y7Js6/9NrcP0//Z2X51hOnfD2KKxrSdRYWl6dnebLrnzFjRjz33HN5
DykAAAAA5CrLvN100017lWPL9gv/67/+K7Zs2bLbv9+rr74aI0eOTGe+Z/uM
WR/X92PGdXtlWdesr2t2rzXL/Q4ZMiRefPHFppvwg9j3v//96Nq167azmtsV
R99Bx6U92LznOO/KnpMrrTw8rbHs5y77+cty7juTZdi/853vpJ4Me/Nnw8aN
G9PPOgAAAACwzQsvvBAXXnhhdO7cOd2nKymrjNbtiqNN+9IYeMyJMfuK63O/
l7jomo0x/tTzoqy6c3rmtn3HsqiprUvP3I4aNSoeeOCBvIcRAN7Va6+9Fkcc
cURUVm3r6Trt3Mtz/1w9kGvymRencayqqUvn6P7+97/Pe4oB4F29/vrrqV/D
9rOlyiuqt37P3pZ37XbE0XHWBUtjxbpv5fq5evnKO+L4iWdHcXnDn50lNW7c
uPjBD36Q9zACAAAAQIvx9ttvx+OPPx7XXHPNXmXasvNb//u//3uXv0/W13HS
pEnpvmJ29mv7oqq4YMGa3Pfp8q65i76R8r7pfOGtY3PCCSek+7Dsviyv3bdv
33QfOHs2rEuvo2LZ2vtyn9uWUhctXBcdiqvTz13285f1XHi3fHr2zx577LG9
/rPgxhtv3KN+sQAAAADwfvPzn/88zj777OjUqdM7eddt/V2zZ13rOh8RJ0yc
ERcvab6zIRdfe3dMnXFp9Bl4bLQrrNjxzO32fOvQoUNjw4YNe3TeJQDkYXtP
12w/LOtJnvVMy3uP7kCs7O8GJZWN6bwLvVwBOFC89NJLcdlll0X37t235V3/
qL9r9rl29KhJMXPOlc12Xn6WbZ10+kXR/Yih6Xyrw9pt69+6Pd967LHHxr33
3pue2QMAAAAA/lx2Dmt2Hvve9nC866674pVXXnnP1589e3a6V1dYVJ7u4Z0z
58rc9+laSp1/6bVR0LEy7Rc2Nh4eZ511lnuZuylbt8cff3x6Jiy7R11Z1z0W
rr4r9zltaTXjohXRuqA0OhZXpJ/DZcuW/ck4Zln1LKe6Nz/7WS42y8pbswAA
AACwe37605/GjBkzUt41ewa3oqom3R/Onn3NnsOtqO0aRw0fnzKol121Yb/d
J8zOB5w596oYNX56dO45KNp2KEu/X3ZvNcvc1tU1pPuHxxxzTNx+++2xefPm
vIcKAHZLtmc4ZMiQdFZD9nmafdblvT93INYxx0/ZOn7FKYczfPjwdJY1ABwo
XnzxxZR37dGjR/puW11Tl56Tyc7MT+c6ldREr/4j4sQps+LCy6/bb71eF62+
K6aftyh9jmZnWLUu2JaxzXoelJVXR339tu/ao0ePjrvvvttZUgAAAACwm37z
m9/EHXfcsVd5t5UrV8ZDDz0Ub7755p+8ZnbOa3a/rqSsMt3HO+Wsebnv0bW0
yu53Zvc5i0q25RCzvDG7NmfOnDRe2TNgWc/SuYubr9fBgVYTpp6ffv7KKqrT
83Pf/e5349VXX00Z9b35ec/WaJaNz54bAAAAAAD23C9/+cu49NJL44gjjkj3
ObPz/LLMa/Ycbpt3+rxu7z/T0PXI9Dzu4JEnxegJZ8akM+bE9PMXxwUL1qQs
bPZc7dxF30hnTJ46Y36MnXxuesb2yCHHR5deR6UzAtsWlm97zXbF6Z5qaXn1
jn4y2T3DKVOmpJ4ynrkF4ECUfYZln2lFpZXp3OXZV1yf+/7cgVTnzb8m7VcX
l1WmcXzwwQfznlIA2Csvv/xyXHvttekMp+wzLTtfKsu8Zp9xWfZ0+3ft7Dty
1ge+U4+B0XfQcTH0uMlxwqQZ6bm2GbOXx0UL18X85bemz8gzvr4wTjrtgjh2
3Okx8JgTo8eRw6KuU58oKq9P37Gz18vytB2Ktr5mZfWOc6S6dOkSZ599dnpG
x/nxAAAAALB3nnrqqVi3bt1e5d/WrFmTzqPP7s9lfR67du0alVW16Z7eiDGn
5b5H11Jr7Mkz0xiVV9ZE586d4+GHH857GbRo2/eqsz4D2T3j7J5y3nPY0qvf
kBPSWNXU1KWxW7Ro0V79jG/YsCFl4gEAAACAfZedHfmd73wn5s6dGwMGDEj3
7rLKMqjZ/eKOJRXRrrB0x7Oze1pt2pdEYVF5lJZXpWd7s2d8s9fP7t2feuqp
ceONN8YLL7yQ9zAAwD4744wz0udc1qs8y55kvczz3p87EGrJmnuiqr57tO1Q
msZv1qxZeU8lAOyz7Lm1n/zkJ+k5l+OPP37Hd+3sjKnK6tr0vFH2XTn7e0PW
D35PvmdnmdaCwrLUzyA7bz7rKd/YuO31e/XqFTNmzEh9Jl555ZW8hwEAAAAA
DgqbN2+ORx99NFatWrVXWbgsJ5s9k1NX3xCtC4qj2xFHx4p1m3Lfp2vJ1feo
0elZpez5pWzsZAnfXTYu/fr1S/eJs3vN2ZmKec9dtrbnLbkpzrpwaZw07cI4
efqc9N8vuuL6tDec9/VlteTae1LfhsPadoyvHXZY9OnTZ49/prMeEwAAAABA
08iew33yySfjhhtuSM/FZvdBtz+Lm57HbWxM99yze8hZZjV7NreisiblYSur
aqJq6z/L7pvWbf332bO725+z3Z5rnTBhQixdujT1knn99dfzfrsAsF+9+OKL
qU969hnZUvYQD4QaNHz8trNyt/4don///qkPHgAcbH7961/Hxo0bY968eTFi
xIg/+a69Pf/6P79vp+/ZW/9z+/fs+oaGHWdHba/u3bvH1KlT0/N1P/rRj+Kt
t97K+60CAAAAwEHrd7/7Xdx///1x5ZVX7lEmbtCgQXHYYYdF64KiKK5oiMtX
3pHr/twly26JmXOviqnnLIgJUy+IaedeHvOX35r7vuEf1+Jr746Kum47zso9
++yz857+Fik7Q3j7Wcw1jb1yO4v5wsvWRs9+x8Tn/v6Lccghh8T/+l//613r
gx/8UHz5K1+Lbn2GxKx5V+e6xs6/9NqtP5OlcVibgvja174Wp59++i5/lrN7
8Y888kjKvgMAAAAAzSfLvWZZkyz7+tBDD6V+MNdee21cfvnl6T7p5MmTY+TI
kXH00UfHiSeeGGeeeWZcfPHF6X7+zTffHJs2bYrHHnssnnvuOc/aAvC+cPfd
d6fMSdajLeu3Nu3cy3LfA27JNfnMi9M4lZVXR6dOnVKPeQB4P3jttdfi6aef
Ts/D3HvvvXHjjTemZ2Sy79RnnXVWOicq6wN76qmnxte//vX0Pfyaa66J9evX
xwMPPJB6xb7wwgu+awMAAABADrJ7c7fddttuZVyzc+azjOvXWheks19nzF6e
y77caTMXRMeyuvj0Zz77nhnEj37s4/FPX/pydCiujgFDx6asaZ57idtziMWl
lWkPNtuL5Q8efvjhd/amK7eOU0kar+aeozmLboivfLXde66pnVWrVq3SdZ91
wdLc1tjIsdPSfvXXDmsTpaWlsXjx4nf9Oc6ehcsy7lnWHQAAAAAAAA4Ec+fO
TfuJHTqWRUFRZcy+4vpc939bamX7rG0Ly6OwqDyNV5bfAQAAAAAAgANBdnb8
z372s1i7du17ZlyXLl0alZWV8bXDWqcs3ZCRE5t9T27u4hujY2ntXuUQP/Xp
v43hY6bGinWbcttTPHbc6WnsamrrYuDAgekMQSK2bNkSxx13XNTV1af89LDR
pzT73GS9gP/iLz+xV2vrj+vQQw+NIweP3rrOvtXs72Hp2nujvKbL1jVWmHq6
jho16s9+jm+99daUbQcAAAAAAIADye9///sYO3ZsNDQ0Rtv2JVFW3TkuX7kh
t73flliXrrgtiisaol2H0mhsbIyJEyfG5s2b8546AAAAAAAA2CNvvfVWfO97
34uVK1f+WT5uzJgxKTuXZehKKhtj0TUbm3VPru9Ro+MjH/noPucQv/DFL8Xk
My/OZV9x2dr7oqq+e9pXzM7OXbRoUd5T3iKsX79+29nLReVRVF7f7Gtr1Iln
pH6s+7q2/rjaF1Xlkqk+4+sLt/V0bd02CgoK4rLLLks/v1mGPcuyZ5l2AAAA
AAAAOBA9//zzMWDAgHR+buuC4qjv0jcWX3t3Lnu/La0Wrr4rahp7RZut41JX
3xCDBw+Ol156Ke8pAwAAAAAAgL326quvxt13370j43rFFVdE+/btU3Yuy9BN
nXFps+7J9eo3fL9mEA855JAYO/ncXPYXz569LI1heWVNdO/ePZ577rm8pztX
2fnBw4YNSz1us3HJ+qo253xceNna+MhHP7Zf19f2qut8RC5rrHPPQVvHsmN8
7WuHxciRI+Phhx9OGXYAAAAAAAA40D322GPRo0ePqKmpi8PaFUfX3oPTecN5
7Mu1lFqy5p7o1GNgtN46Htm+a69eveKJJ57Ie6oAAAAAAABgv3j22Wfjpptu
Slm5LDOXZecau/WLFeu+1Wx7cqPGT2+SDOIHPvDBmHbu5bnsM/Y4cli0KSiJ
xsbGmDt3bt7TnKuNGzfu6OVaVt05ll13f7PNQ/Z7felfvtIk62t7Zeu3udfX
zLlXpcxwQfuOKUv92muv5T3NAAAAAAAAsN9s2rQpOnfuHJXVtSnr2mfAyFix
blMue795V7bn2aPvsDQO1TV10bVr1/jud7+b9xQBAAAAAADAfvXb3/42Ghoa
onWbgpSdm3HRimbbk1tw5e3xsY/9RZNlEP/hi1+K5dc3/35n1kM022csq6iO
bt26xYsvvpj3NOdmwoQJUVtX/04v1/ObdR7Gn3pek2Zcs/r03/5dOj+5udfY
4d0HRLsOpSlDfMMNN+Q9zQAAAAAAALBf3X777dGpU6eoqKxJe419Bx3XrGfq
toRauvbe6NVveBzWrigqq2pT9jc7ZxgAAAAAAAAONuvWrUtZuZSZ69a/Wffl
6jr1afIc4six03LZc8z2G9u2L4nGrWO7fPnyvKc5F08++WRaW0WlldG+qCqW
XNu8edAOxdW7tUb+5tP/X3Qsq4ujRkyIEybOSHP3z//n33Z7jR01fHyzr6/T
Zi5I+/k1NXUxatSovKcaAAAAAAAA9ru1a9em/cbyLOvarii69h4cC1fflcv+
b3PX5SvvSGffZucrV1bVpHG46aab8p4SAAAAAAAAaBIjR46M6pq6lJmbdu5l
zbYvl+0/fuADH9xlhvCTn/pMjBhzWpx78cpYfO3dMWve1SlX+NGPfXy3Mohf
2/q+8th3nDnnyjSm2bm6AwcOjM2bN+c91c3usssui8bGxmhdUBxDjp3UrOOf
ra8PfejDu1wf//df/zMWXbPxz3591gc42ydv1arVLl/jX79yWLOvr+ys6qLy
+uhYXJH2tB977LG8pxsAAAAAAAD2u1WrVqX9sMrq2mjdrjjKa7rEBQvW5LIH
3Fx13vzVUVrVKe2zVtXUpb622fnVAAAAAAAAcDB69NFH055gYXFFFFc0pGxf
c+3NnTTtwl3mB7/0L1+JS5bd8q6/fu6ib8Tffvbzu3yND37oQ7F07b257D9W
NfSIDh3L0hhv2rQp7+luVlmut3///lFRVZPyvs291zxq/PRdro1//Kf/k85B
3tnrlFV33uXrHHroB+KKq+9s9vU1/IRT0/nNWZZ4/vz5eU85AAAAAAAANIlb
b701unTpErV19dG2Q8nWKouxJ8+MFeuab3+7OSrbrx990lnRpn1ptOtQGnVb
32+3bt3izjvvzHsKAAAAAAAAoMnMmTMnGhobU1Zu5NhpzbpHd3i3/jvNDmZ9
NLMerjt7jd3JymZ10cJ1uexDjjtl1taxLYr6+oY466yz8p7uZvXQQw+lfG+H
ovKoaezV7GPfueegXa6LSWfM2eXrXLzkxvjQhz+yy9c6dcb8Zn+Ps6+4PmWI
syxxlinesmVL3tMOAAAAAAAATeIHP/hB2hPLzoDtWFKR9smyPeeLrrg+l73g
/V3ZucH1Xfqm91VUUpne56BBg+JHP/pR3kMPAAAAAAAATeatt96Kvn37Rnnl
tn6bWX/U5tyn+8p/tt1pbrB1Qcluvc7fff4fd5lBnH7eolz2Ii9fuWHr+yiN
0vLqdM7ua6+9lve0N5uLL744Ghq2ZaizM4ebe+wLS2p3uiY+8pGPxpI19+zW
a/37f7TZ5Ro7fuLZuayx1DO4qDxlin/4wx/mPe0AAAAAAADQZH7961/H1KlT
095YVXVttGlfknqfHnP8lFh0zcZc9uv2tRauviuOHjUp7Su33fp+qmvq0vub
Pn16vPzyy3kPOQAAAAAAADSpBx98MO2Pte9YFnWdj2j2/brP/f0Xd5obHDhs
3G69Trbft6sM4pSzL8ltX7LbEUdHu8LSNNZ33nln3tPebI466qiorNqWoZ6z
6IZmH/f/+6//sdM1kf373X2tyrruu1xjR42YkMv6Onbc6SlLnJ3nvHDhwryn
HQAAAAAAAJrU22+/HTfffHP07t077ZEVl1Wm/bKOZXUxYeoFsey6+3PbG96T
Wrb2vhh3yqx0fm92/SVlVen9HHHEEbF+/fq8hxkAAAAAAACaxbx586KhcVu/
zTx6UWb9NHeWGxxz8jm79Tq702vzoiuuz21/cuK02SnrWVffEOecc07e094s
nnzyyZTr7VhcEeU1XXIZ90/9zWd2uibaFVbs9msVVzTsco31G3JCLu/z65es
SusrO6969OjReU89AAAAAAAANIsXXngh7b9m+5J1dfVRWFSe9s2y/cnJZ14c
K9Ztym2PeGeV5XAnnX5RlFZ1StdbWFye9pKz93HeeefFSy+9lPfQAgAAAAAA
QLMZOnRoVFbVpr2z2c2cA12x7ltRUFS508rye7t+nU3x0Y99fKf5ww9/5KPp
98trn3LBletTlri8sjqdvbtly5a8p77JrVu3Lu3DtikoicEjT8pl3D/7uS/s
dF3UHt57t1/r7//hf+8y5zr25Jm5vM/sZ6BDcXUUl1ZGp06d4uWXX857+gEA
AAAAAKDZfO9734vjjz8+7U/W1NZF+45laQ+8orZrTDpjTuqbmtde8R/X0rX3
xkmnXRBl1Z3T9XXYep3Z9WbXPXbs2HjkkUfyHkoAAAAAAABoVs8++2zaLysq
qYiSysbc9/T2tqafv3iX+cN/+ucv536dtZ16p/ODszF//PHH857+Jpedm5yd
mZztz06dcWkuY75kzT1x2VUb3rMWX3v3br3OwlXfjEMOOWSX62zWvKtzW1+9
+g2PgsLStL42bdqU9/QDAAAAAABAs8rOGr7jjjvi6KOPTntm1TV/yLt2LKuL
oaNOjgsWrMllL++8+atjyMiJUViy7QzqDkV/yLcec8wxsXHjxnj77bfzHkIA
AAAAAABodhs2bEj7Zm07lES/ISfkmgHd25px0Yr45Kc+s8v84cBh43K/1qHH
TY7WBcVpzNeuXZv39De5IUOGREVlTdqnnb/81tzHf1+qoeuRu1xjhx56aDp/
Oa9rPGHijNQzuLGxMZYuXZr39AMAAAAAAEAu3nrrrbjlllvSfuX2/q4dSyrS
Xlq2d1le0yWOGjEhTp91RSxafVeT7N0t3Pq60869LAYNHx+lVZ3S79t66+9f
VFIZtXX16bqGDRsW69evj82bN+c9ZAAAAAAAAJCbefPmRUNDY9pTO2nahbln
CfekLrz8uhhy7KT46Mc+vsv84ee/8E+x7Lr7c7/mbB8zG+usx2nW6/Rg9uqr
r6a92eLSynQ2ct5jv6/z1qrVrnu5/t3n/yHX6zx79rK0vmpq62PatGl5LwEA
AAAAAADIVZZ3zXKkxx13XNq7zM6LrayujY7FFel84pQ9LSiN+i594+hRk9Ke
+cy5V8XlKzfs0T7dgivXxzlzroyTTrsg7WHXdeqz9XVL0uu32fr7ZBnb7PfN
fv/sOk444YS488475VsBAAAAAABgqxNPPDGqaurS/toFC9bknifcWdUe3ju+
/JWvxRe++KX4q7/+1C4zh9urVatWMXn63NyvP6usp2k21hVVNels3oPZI488
kvZo23csi669B+c+9ntbl6+8Iz77uS/s1lrr1X9Ertd62VUbtq2vypp0NjUA
AAAAAACwzY9//OO44oorYvDgwWkfM6usr2pZRXUUFpXvyL1ur7YdytJ5vhV1
3aKhy5HRrc+Q6D1gZNr7zP539s+zf9+mfemf/LrsdQqLy9Prbu/bmtXRRx8d
ixcvjp/+9Kd5DwUAAAAAAAC0GG+//Xb06tUrysqr0xm1S9fem3umcGeV5Vt3
N9u6vQ455JAYPmZq7tf+x9WhpCaKyyqjU6dO8frrr+e9DJrM7bffnvZr27Qv
SWcW5z3ue1NZLvmf/vnLu7XW/vqTfxOLVt+V+zV3KK6Okq3rq3PnzvHmm2/m
vQwAAAAAAACgRcn2yX/2s5/FddddF9OmTYuePXvuyKLWNzSmbGp1TV1UVtWk
rGpJWVUUlVREh6LydMZvlonN/nf2z7N/n/3/sv9/9usaGhp3vFbv3r3jjDPO
iHXr1sXPf/7zvN82AAAAAAAAtEgvvPBC2l/rWFKRzprNO5+3q9qbnGtLzFce
3q1/2gPNxv5gPqt3xYoV0djYmM4sHnfKrNzHfU9rxkUr4tOf+ezur7WRE3O/
5qzqOvWJwuKKtL6efvrpvJcBAAAAAAAAtGibN2+Oxx57LG699dZYsmRJnHPO
OTFmzJjo06fPjszqzqpv374xduzYmDlzZixdujRuu+221Ds2e10AAAAAAABg
5x555JG075adOduj77Dc83m7qr3JuR566KHRf+jY3K/9j6v/0WOiXYfSNPb3
3Xdf3sugycyZMyfq6htSznXqOQtyH/c9qZHjpsWHPvyR3V5nf/f5f4xl192f
+3Vn1avf8CgoLEvr6wc/+EHeywAAAAAAAAAOWG+++Wa89NJL6XzZLLua7b9l
//nMM8/Eb37zm/TvAQAAAAAAgL23cePGlIVr274kjho+Pvd83q5qb3Ku26uh
y5G5X/8fZyhbFxSnsb/hhhvyXgZN5swzz4ya2vqUcz1nzpW5j/vu1OJr7069
jfdkbf31J/8mLliwJvdr314Djzkx2nbYlqO+9957814GAAAAAAAAAAAAAAAA
APCu1q1bl7JwrdsVx7HjTs89n7er2peca6tWrWLy9Lm5v4esxp96Xsp+NjY2
xvLly/NeBk1m8uTJUV1Tl95rS8qBvlede/HK+MI//vMerau/+MtPxMy5V+V+
7X9cxxw/JdoUlKSf7dtvvz3vZQAAAAAAAAAAAAAAAAAA7+qqq66KxsbDUw5x
3Cmzcs/n7aoKS2rjc3//xfjkpz4TH/7IR/c46/qpT/9tXL7yjtzfx5SzLklj
Xt/QEPPnz897GTSZ8ePHR1V1bXqvcxd9I/dx31kNG31KfOhDH96j9fTpz3w2
Zsxenvu1/8/KMuvb+wXfeOONeS8DAAAAAAAAAAAAAAAAAHhXixcvjobGxpRD
nDhtdu75vD2t8+avTvnEL//7V3c7m1hW3Tn36z591hVpzOvqG2L27Nl5L4Mm
M3bs2Kh8J+c6b8lNuY/7u9Xia++OksrD9zgz/ZX/bBuXrrgt9+t/txo1fnoc
1m5bzjXr2QwAAAAAAAAAAAAAAAAALdHll18eDQ3bcq6Tp8/NPZ+3LzV01MnR
qlWrXeYT/+qvP5X7tU4/f/G2nGtdfZx//vl5L4MmM27cuBadc519xfXxj//7
/+5xxrVTz4Gx/PpNuV//e1WWc20t5woAAAAAAAAAAAAAAABAC/cnOdczL849
n7ev1aPvsN3KKc5ffmuu1/nHOdfzzjsv72XQZCZMmBBV7+Rc5yy6Iff18cc1
a97V8clPfWaP8q2f+KtPxvip5+d+7buqkWOnReuCbTnXm266Ke9lAAAAAAAA
AAAAAAAAAADvauHChTtyrpPOmJN7Pm9f64qr74wPf+Sju8wrnnLWvFyv84yv
L3wn59oQF154Yd7LoMlMmTIlqmvq0ns9/9Jrc18f2+usC5bGX/zlX+1RxvU/
WxfGJctuyf3ad6eGHjc52rQvSTnXDRs25L0MAAAAAAAAAAAAAAAAAOBdLV++
PBobt+Vcx596Xi6ZvHPmXBknTJzxnjVh6gV79Hr/cVj7XWYWBx5zYq45xKkz
Lk1jXl/fEPPmzct7GTSZGTNmRG1dfXqvZ89elnv+M6vZV1yf+rLubr71gx/8
UO7rZU+r/9Cx0a5Dacq5btq0Ke9lAAAAAAAAAAAAAAAAAADvas2aNSkLd1i7
4hg94cxcMnlfa1u005zhx//iE3v0esXlDbvMLh7erX+uOcSTpl2Ysp8NjY2x
ePHivJdBk8kyvFmWN3uvU866JPf858LVd8UXvvil3c64fu7vvxgzLlqR+3Xv
aXU/Ymi071iWfrZ/9KMf5b0MAAAAAAAAAAAAAAAAAOBdbdiwIWXh2rQviaNH
Tcolk1fV0GOXecOla+/d7df7/79asMvX69V/RK45xCxTnGWLs7HPssYHq6uv
vnpHjjrrzZt3/rP28N67nXEtKq+PRddszP2a9/ZnqmNxRRr75557Lu9lAAAA
AAAAAAAAAAAAAADv6qGHHkpZuILCsugzYGQumbwjhxy/y8zh1HMW7Pbrfepv
PrPL1xt63ORcc4hHjZgQbduXpLH/5je/mfcyaDJ33XVXeo/Zex14zIm5jvms
eVfHoYceulsZ135DTsj1WvelVqz7VrQtLI/Ssqro2rVrbNmyJe9lAAAAAAAA
AAAAAAAAAADv6qmnnko5xMLi8qjr1CeXXN7Yk2fuMndY09hrt15r6oxLdyvH
OPnMi3PNInbrMyTadyxLY//oo4/mvQyazE9+8pP0HjsUlcfh3frnOuZZf9bd
WRuHdx+Q63Xua81benMc1rYoKqtqYuTIkXkvAQAAAAAAAAAAAAAAAAB4T2+9
9VZ06dIlSsqqol1hReoF2dy5vJlzrtxl9rBVq0PihIkzdvo6i1bfFX/72c/v
8rU+9OGPxJI19+SaRSyt6hRFpZUpA/qb3/wm72XQZN54443o3LlzWl8FRZW5
rK/ta+PDH/nobuVc//n//Ft86V++sk+VZ+/a02ddkXKutXX1cc455+S9BAAA
AAAAAAAAAAAAAABgp7Kej5VVtSkbd/GSG3PJ5v3d5/9hl/nDD3zggzHp9Ive
9defN/+a+PK/f3W3coytC0pyzbguXH1XGuvyyuro169f3tPf5I499tiorN62
vi5auC6XMR81fvpurY39VY3d+uW2vkaOnRat2xWnDPWqVavynn4AAAAAAAAA
AAAAAAAA2KlZs2ZFXV1DyiFOnXFpLtm8I4ccv1v5wUMPPTT126zrfESMHDct
ho46OSrqusUHP/Sh3c4g5vUet9eMi1aksa6prYtTTz017+lvcrNnz476hm3r
671yyk1dX23T8X2Tc+3cc1C071iWcq7f+9738p5+AAAAAAAAAAAAAAAAANip
66+/PmXiWhcUp9xoHtm8+ctvTf1amzp/+JWvtss145rV6AlnxmHtiqOxsTGW
Ll2a9/Q3ufXr16f11bZDSRw5eHSzj/eKdd+KD35w93PQB3LOdcmae7aOc1mU
lldF165d44033sh7+gEAAAAAAAAAAAAAAABgpx5//PGUQywsKo/aTr1zy382
dD2ySbOHH/3Yx+OCBWtyz7l27T04Cgq39dt84IEH8p7+Jvf888+n91pUWhkd
S2tjxbpNzTreFy+5sVkzrnnmXM+6YOmOXsETJ07Me+oBAAAAAAAAAAAAAAAA
YJe2bNkSffr0ifKK6tRn9LKrNuSS0Vt23f3xlf9s22TZw7GTz80947qj32bZ
tn6bv/vd7/Ke/mYxatSoqKquTRnMWfOubtYxn3bu5e+bnOuQkRNTX+YsV7xq
1aq8px0AAAAAAAAAAAAAAAAAdsuMGTOirr4h5RBPnj4ntxzogivXx999/h/2
a+bw0EM/EMNPODX3jGtWZ3x94Y5+m5MmTcp72pvN0qVLo7GxMWUwh40+pVnH
fNT46e+LnGvWJ7e4vCE6llSknOvPf/7zvKcdAAAAAAAAAAAAAAAAAHbL+vXr
UzauXYfS6NnvmFyzoAtX3xXVDT2jVatW+5w3/MRffTKmnHVJ7vnW7TVg6Nho
U1CSxnrNmjV5T3uz+clPfpLec8fiiiiuaEiZzOYa87Enz2z2nOuRg0c3+9qa
cdGKlKGuqqmNESNG5D3lAAAAAAAAAAAAAAAAALDbXnnllejatWuUlldFm/al
sXDVN3PPhJ46Y378+3+0iUMOOWSPc4Z/+Ym/jr6DjotFq+/K/X1sr2Vr74sO
xdVRXFqZMp///d//nfe0N6sse1ldU5eymGddsDT3+TjYqv87GerGrWvryiuv
zHu6AQAAAAAAAAAAAAAAAGCPTJs2LerqGlIO8aTTLsg9t7e9Flx5ewwfMzVl
RP/l374an/3cF+KjH/t4yrO2anVI/MVffiL9s3/9ymHRrc+Q1L91ybX35H7d
/7NOm7kgjW1NbV2MGzcu7+ludqtXr0753rbtS6LPwGNzn4+DqbI8d7vCiigu
q4xOnTrFs88+m/d0AwAAAAAAAAAAAAAAAMAe2bhxY8ohFhSWRX2Xvrln93ZV
WX/UFes25X4du1vdjxgabTuUpjH+xje+kfd0N7sXX3wxunTpknoGty4oTfnl
vOfkYKnxp56XMtRZTn3KlCl5TzUAAAAAAAAAAAAAAAAA7LE333wz+vbtGxWV
NSkzd8GCNbnn9w6Wmrf05mhdUBJlFdXRvXv3ePXVV/Oe7lycffbZUd/QGIe1
K049evOel4Ohsqx3eU2X6NCxLGWo77nnnrynGQAAAAAAAAAAAAAAAAD2ymWX
XRaNjY3RuqA4+h89JvcM38FSw0afkrKdDQ2Ncd555+U9zbl55JFHUhazqKQi
2hdVxcJV38x9bg70mnL2JSmXXl1TF0OGDInNmzfnPc0AAAAAAAAAAAAAAAAA
sFeeeeaZ6Ny5c5SUVUXrgtK4ZNktuef4DvS64uo7o6BjZRSVVqaM5+OPP573
NOdq4sSJUVffsK2n6wmn5j4/B3Itu+7+qKjtGgWF23q5fuMb38h7egEAAAAA
AAAAAAAAAABgn5xzzjmp72jW03XgsHG5Z/kO9Drm+Ckp01lf3xCTJ0/Oe3pz
9/3vfz9lMotLK6Nth7KYt/Tm3OfoQK0Tp8xKvVxrauti8ODB8eabb+Y9vQAA
AAAAAAAAAAAAAACwT5588snU07W0POvpWhIXXn5d7nm+A7WyfrhtC8tTpjPL
dv7whz/Me3pbhNNPP31Hlrpnv2Nyn6cDsRZcuT7aF1VFYXF5Wlt33HFH3tMK
AAAAAAAAAAAAAAAAAPvF+eefH42NjdGmfUl06jkwVqz7Vu65vgOxeg8YmbKc
WaYzy3ayzdNPPx3dunWL8sqa1I906oxLc5+rA636vLO2sj7B48ePj7fffjvv
aQUAAAAAAAAAAAAAAACA/eKFF16IXr16RWVVbcohTjpjTu65vgOtTp91RRq7
LMvZtWvX+OUvf5n3tLYoK1asSH1I23csi46ltak/ad5zdqDUlLMv2bG2unTp
Ek888UTe0wkAAAAAAAAAAAAAAAAA+9XatWtTDrFDUXl0KK6O+ctvzT3fd6DU
FVffGcXlDVFQWJbGcMmSJXlPZ4vz1ltvxXHHHZf6kWZ9Sbv1GaJv8G7UJctu
ST+PHYq2ra3ly5fnPZUAAAAAAAAAAAAAAAAAsN9t2bIlxo0bF/UN23KInXsO
ihXrNuWe8zsQqveAkdG6XXHU1TfEiBEj4ve//33e09kiZX1Iu3XrtqNv8OgJ
Z+Y+dy25lq29Lxq6HBltCkq2/lw2xpgxY1JeGAAAAAAAAAAAAAAAAAAORr/4
xS+iR48eUVm9LYc46sQzcs/6tfQaf+p5aawqKmuiS5cu8dhjj+U9jS3aunXr
Ul/S4tLKaF1QEmeevyT3OWypNfCYE+OwdsVRXVMXvXr1iqeffjrv6QMAAAAA
AAAAAAAAAACAJnXzzTfvyCFmGbvp5y/OPe/XUmvWvKujTfvS6Fhckcbs6quv
znv6DggzZ86MxsbDo33HsmhfVBUXXXF97nPZ0mrcKbNSfrqsojqtrbvvvjvv
aQMAAAAAAAAAAAAAAACAZjFr1qw/zSEuXJd77q+l1fzlt0ZReX20KyzdOlaN
cdppp8Xbb7+d99QdEF5//fU47rjjoqGhMdq2L4nSqk6x4Mrbc5/TllLTzr08
9botKtmWn168eHHeUwYAAAAAAAAAAAAAAAAAzSbLIY4ePXpHDrG8pktcdtWG
3PN/LaUWrb4rqht6RpuCkqivb4ihQ4fGK6+8kve0HVB+9atfxYABA6KuriFa
FxRHTWOvWLh1XPOe27xr5pwro21heXToWJay5meeeWZs2bIl7+kCAAAAAAAA
AAAAAAAAgGaV5RD79+8fdXX1KYdY16lPLLpmY+45wLxr6dp7o1PPgdG6XXHU
1NZH79694+c//3ne03VA+vGPfxw9e/bcOo51aTwP79Y/lqy5J/c5zqsuWLAm
Cooqo6CwLPUIPvHEE+ONN97Ie5oAAAAAAAAAAAAAAAAAIBePPfZY9OjRI+UQ
D2tXHJ17Dko5z7zzgHnV8us3Ra9+w9NYVNXURteuXeOhhx7Ke5oOaN/97nfT
OFbXbFtjXXoPjiXXvv+yrlnGtWNpbbTrUJr6KI8cOTJefvnlvKcHAAAAAAAA
AAAAAAAAAHL1ne98J7p06RJV1bUph9jjyGGxbO19uecCm7tWrNsURw45Pg5r
WxSVVTXRqVOnuPPOO/OenoPCPffcE507d96xxhq6HhmXr9yQ+5w3V82YvTw6
FFdH2w6lUd/QEIMHD47nn38+72kBAAAAAAAAAAAAAAAAgBYhy3Nmuc7Kqm05
xK69B8eiazbmng9srsp62PYeMDJlXMsra+Lwww+PG264Ie9pOaisX78+ZV2z
vq6tC4qjtKpTnDf/mtznvqlr3Cmztr7f0igoLEt9XAcNGhRPP/103tMBAAAA
AAAAAAAAAAAAAC3KjTfeuC3r+k7PzeqGnnHxkhtzzwk2dV264rZo6HJkes8V
72RcV65cmfd0HJSyvq7du3ePurr6aNehNNq0L40xJ5+TeunmvQ72d12+8o7o
1W94yk53LK6IxsbGGDFiRPzqV7/KexoAAAAAAAAAAAAAAAAAoEW69dZbU8/N
mtq6aNO+JNoXVcWpM+bnnhlsqpp+/uLoWFqb+otmfUaznO+aNWvynoaD2mOP
PZZ6mma5z6KSipQDPbz7gJiz6Ibc18P+qqkzLo2OZXXR+o+y06eddlq8+uqr
eQ8/AAAAAAAAAAAAAAAAALRoDz74YPTp0ycaGhqjQ1FZyiH2PWp0XHH1nbnn
B/dXLbpmYwwaPj71cC0oLIv6+obo0aNH3H333XkP//vCb37zm5g2bVrKf1ZV
16ZMddsOZTFy7LRYcu09ua+Pva25i2+M7kcMTT8z7TuWRd3WddWlS5dYtWpV
bNmyJe9hBwAAAAAAAAAAAAAAAIADwjPPPBNjxoxJOcSyiurUlzLre3ry9Dmx
Yt23cs8T7kudNnNBlFQ2poxraXlVeo8jR46MJ598Mu9hf195++2346abbope
vXpFQ2NjFJdWpjnJ5mbymRdvXWebcl8ru1sLV30zho0+Jdq0L402BX/o4Tpq
1Kj48Y9/nPdQAwAAAAAAAAAAAAAAAMAB56233oolS5ZE586dU1/KDkXlqU9l
Y7d+8fVLVuWeLdzTuvCytdGl9+A/9Nqsq49OnTrFJZdcEm+88Ubew/2+9dxz
z8X06dNTLrR265xkc5PNUU1jrzjj6wtbdK568bV3x+iTzooOxdUpo1tcVpky
u927d4+VK1fGm2++mffwAgAAAAAAAAAAAAAAAMAB7fHHH4/jjz8+5RArq2uj
bfuSlOnrM/DYmLPohtyzhruqS5bdEv2PHhOtC0qizdZrr6za1mtz+PDh8f3v
fz/v4eUd3/nOd2LEiBFpbqpq6qKgsDTlXes69Ylp517eovKui1bflfKtWY/j
w9oVRcfiipQFz6797LPPjmeffTbv4QQAAAAAAAAAAAAAAACAg8bmzZtj3bp1
ccQRR0Rj4+FRVlEdbQqKU3b0yCHHt8i8a5ZvHTR8fLRpX7r1OoujtLxq67U3
Rs+ePWPVqlV6bbZA2Tq78cYbY8CAATty1dvzrhV13WLMyefE5Ss35LamLliw
JgaPPCnaF1X9Id9aV5+udcKECfHII4/kPYQAAAAAAAAAAAAAAAAAcNB6+eWX
Y8GCBdG1a9eUGc2yo63fybtm/V1nzrky93zrefNXR78hJ2y9pm351pKyqmho
aIzOnTvHRRddFC+++GLew8guvPHGG3HttddGv379tvV3ra6NDh3LUt41m9dO
PQemzOtFC9c16Vpadt39MeOiFTFs9CkpZ5t+/3bFUVRaGXV12/q3jh07NvWi
BQAAAAAAAAAAAAAAAACax7PPPhsXXnhhdOnSJeVdy8qz/q4lKQdYXtMl5QLP
vXhlrFi3qclzrSvWfSvOm39NjBhzWlTWdX8nC1kcpe/kWzt16hTnnHNO/OIX
v8h72NhDr7/+elx33XUxaNCglCmtr29IvYQLCrdlXrMqqWyMIwePjpNOuyDm
Lr5xn9bS8us3pXU7esKZ0bX34CjoWLkj21pYXB6VVbVpvWfXMnHixHjggQfy
HiIAAAAAAAAAAAAAAAAAeN965plnYvbs2e/0d93Wd7OwuCIOa1ec8oGFJbXR
e8DIOHHK1+PCy9amTOr+yLZmfTwnTL0g+g46LorK67dlHrdnEau3ZRGz/q3n
nntuPPnkk3kPE/to8+bN8e1vfzvllbt3755yplmGOcudZr1V23Yo3ZF7bVtY
nrKvNYf3ji69jkp9ho8aPj7loLMesKNPOivlsAcMHRu9+g2Pw7sPiKr67tGx
rC71it2+ltp3LEtZ6eqauh3Z1oEDB8bChQvjZz/7Wd5DAgAAAAAAAAAAAAAA
AAC844UXXoiVK1fGkCFDUh4wywVm+cDi0spo1+EPGcR2hRWp32uWLczyh0OO
nZRyh5POmBPTz18cFyxYk+rM85fEydPnxPETz46jR02KIwaNik49BkZFbdcd
PTZTpnHra2e/R1V17Z9kEZcuXZp6znLw+d3vfhebNm2KefPmxdChQ9Ocb8+9
1tbWp7VQXlkTJWVVUVRSER2Kyreuu9JoU1C8I8Patn1J6gmb5aKz9VNaXhUV
W39NtmZr6+p3rKUsKz1hwoS46qqr4rHHHostW7bk/fYBAAAAAAAAAAAAAAAA
gPfw9ttvpzzgsmXLYvTo0X+SQcz6rGZ5wo7FFVFQWBqtt+cOd6faFaesYtYr
NssvZn086xsadrz+iBEjUp/NH/7wh7KI7zO/+tWv4o477oiLL744TjjhhNRb
ePu62NPq06dPTJkyJeWkH3jggXjttdfyfnsAAAAAAAAAAAAAAAAAwF769a9/
HRs3bky9N4cNG/ZnucKsb2Z9Q2PU1dVHTW1d6qeZVfbfs3+WZVm399b84xo8
eHDMmTMn7rzzznjuuefyfpu0IFnO+ZVXXolnnnkmHn/88fjud7+b1uBNN90U
q1evjjVr1sRtt90W9913X3z/+9+PJ554Iq2hrE8sAAAAAAAAAAAAAAAAAHDw
+u1vfxtPP/10PProo3H//ffHLbfcEldffXUsWLAgZs2aFaecckpMnjw5Zs6c
GfPnz4+VK1fGzTffnDKJjzzySDz11FPx6quvpr6xAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAHkv8HoW+KEQ==
    "], {{0, 269.}, {1885., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144, 144}],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyVVwdck8ffv2dkkrACEZAR9hJEZgAZIawIAoYluAhJSMIIMSGouEepgnWL
KE60KmLRagWkqIhaZ1Hc1vFHLSqVWtSiKCrvhQS09h2f9z6fu/s+v/vd9zee
u3ues80u5OegAAAVGTZ8wQyOUimYlWwIH1LlKplELhbx5EViiVjJzkagsM8A
NsCgT6BQ5KNQq0BepOTHRLAmZmSySE8AAjBAB0xgJRCqFJykpHiN9lD/z/Lm
JtAQgmseGq5/j/+vxVgkVgkBQCZDnC1SCQsgbgEA3yxUKIsAIGrk9jOKFBq8
AGITJXQQ4nUaLNHivRqcrcXNgzopfC7EVwAg0wQCpQQA/XtQzioWSiCP/geI
veQimRzGPwriUKFUIIJY4/uogoJCDa6E2AXqKyCG/gB29heckn/wZw/zCwSS
YayNa7CQI2UqRb5g1v8zNf93KchXD9lwgpUmVcbyNfHDHN7OK4zTYBrE3fLs
hERNriHuk4m0eQcApUrVsalafdRSqOLC/ME3DlAvkSAyDmJLiKPl+QnxOnl2
jiyaBzFcLehMWREvBWIziJeKVVHJOp3tykK+zhZan6PkcnTycwLloF2NrQfq
vFSOjv+VVMzT8WP6JdKUdIipEDsUy9ISINaH2FOVlxyn0xlbIuUmDOko1XyN
/w4Q88XymAgtP1aco4zm6/TLClRD8WLbpTJegg4fKpKmxGrzg50WCgb9h7Fg
V8RyTuoQj1g1MX4oFpE4MkobO/ZMLE9N1vH0KYoi+Nq5OFWRn6TTx+3E+TEa
uR3EvqriZN1cPK0ILk4tP56jKEpK0fqJl+QKxiVp/cFXgXjABZGABdSwZoNC
kAtkbd0N3fBJOxINBEAJJEAMPHSSoRnpgyNy2CaDEvAnRGKgGp4XMTgqBsVQ
/nFYqm09QM7gaPHgjDzwBOICEAfy4bN6cJZ82Foa+B1KZP+yLoBVCP3Nh1Uz
/t/Lh6SfJRwoiddJ1EMWWQZDmsQoYiQxlhhNdMUt8FA8GI+HbTis3jgbDxyK
47M+4QmhnfCIcIPQQbgzTbZI+ZWX40EH5I/W5SL7y1zgTpDTD4/AQyA7ZMaZ
uAXwwH2hHQ4eBi37QSlX57cmK6yvuP8RwRdvQ6dH8aKglBGUcIrL1zP13fT9
hlk0uf4yP1pfs4fzzR0e+do+94vsi2Af97UmthQ7jJ3FTmLnsWasAbCwE1gj
dgk7psHDq+v3wdU1ZI0/6E8e5JH9y55AZ1OTSZVXrVeX1wftWJF4ZpFm43EL
FbOUMom0iMWBXwcxiycXeo5ieXt5ewOg+dZoj6/XzMFvCMK88Fm2GO7xEPnA
wEDzZ1ncewB+soXbv+OzzPkqPCbgOX1utVCtLNbKcE1DgKeEAdxp5sAa2AMX
GI838AfBIBxEgXEgEaSADDAVZlkK17kSzABzwEJQCsrBKrAebALbwE6wF/wA
DoEG0AxOgl/ARXAF3AB34erpBM9BD3gD+hEEISF0hIGYIzaII+KOeCNsJBSJ
QuIRPpKBZCESRI6okTnIYqQcWYNsQnYgNciPyFHkJHIeaUfuIA+RLuQV8h7F
UBpqglqhTuholI1y0Dg0BZ2CStDpaAm6BF2BVqLV6H60Hj2JXkRvoB3oc7QX
A5gexsRsMQ+MjXGxRCwTy8GU2DysDKvAqrE6rAm+52tYB9aNvcOJOANn4R5w
BcfiqbgQn47Pw5fjm/C9eD1+Gr+GP8R78E8EOsGS4E4IIvAIEwkSwgxCKaGC
sJtwhHAG7qVOwhsikcgkOhMD4F7MIOYSZxOXE7cQDxBbiO3Ex8ReEolkTnIn
hZASSQJSEamUtJG0n3SCdJXUSeoj65FtyN7kaHImWU5eRK4g7yMfJ18lPyX3
UwwpjpQgSiJFRJlFWUnZRWmiXKZ0UvqpRlRnagg1hZpLXUitpNZRz1DvUV/r
6enZ6QXqTdCT6S3Qq9Q7qHdO76HeO5oxzY3GpU2mqWkraHtoLbQ7tNd0Ot2J
Hk7PpBfRV9Br6KfoD+h9+gx9T32evkh/vn6Vfr3+Vf0XBhQDRwOOwVSDEoMK
g8MGlw26DSmGToZcQ4HhPMMqw6OGtwx7jRhGY4wSjQqMlhvtMzpv9MyYZOxk
HGUsMl5ivNP4lPFjBsawZ3AZQsZixi7GGUanCdHE2YRnkmtSbvKDSZtJj6mx
qa9pmulM0yrTY6YdTIzpxOQx85krmYeYN5nvR1iN4IwQj1g2om7E1RFvzUaa
hZuJzcrMDpjdMHtvzjKPMs8zX23eYH7fArdws5hgMcNiq8UZi+6RJiODRwpH
lo08NPI3S9TSzZJvOdtyp+Uly14ra6sYK4XVRqtTVt3WTOtw61zrddbHrbts
GDahNjKbdTYnbP5gmbI4rHxWJes0q8fW0jbWVm27w7bNtt/O2S7VbpHdAbv7
9lR7tn2O/Tr7VvseBxuH8Q5zHGodfnOkOLIdpY4bHM86vnVydkp3+tapwemZ
s5kzz7nEudb5ngvdJcxluku1y3VXoivbNc91i+sVN9TNz03qVuV22R1193eX
uW9xbx9FGBU4Sj6qetQtD5oHx6PYo9bjoSfTM95zkWeD54vRDqMzR68efXb0
Jy8/r3yvXV53xxiPGTdm0ZimMa+83byF3lXe133oPtE+830afV76uvuKfbf6
3vZj+I33+9av1e+jf4C/0r/OvyvAISArYHPALbYJO4m9nH0ukBAYETg/sDnw
XZB/UFHQoaC/gj2C84L3BT8b6zxWPHbX2MchdiGCkB0hHaGs0KzQ7aEdYbZh
grDqsEfh9uGi8N3hTzmunFzOfs6LCK8IZcSRiLfcIO5cbkskFhkTWRbZFmUc
lRq1KepBtF20JLo2uifGL2Z2TEssITYudnXsLZ4VT8ir4fWMCxg3d9zpOFpc
ctymuEfxbvHK+Kbx6Phx49eOv5fgmCBPaEgEibzEtYn3k5yTpif9PIE4IWlC
1YQn/DH8OfyzyYzkacn7kt+kRKSsTLmb6pKqTm1NM0ibnFaT9jY9Mn1NesfE
0RPnTryYYZEhy2jMJGWmZe7O7J0UNWn9pM7JfpNLJ9+c4jxl5pTzUy2m5k89
Ns1gmmDa4SxCVnrWvqwPgkRBtaA3m5e9ObtHyBVuED4XhYvWibrEIeI14qc5
ITlrcp5JQiRrJV3SMGmFtFvGlW2SvcyNzd2W+zYvMW9P3kB+ev6BAnJBVsFR
ubE8T3660LpwZmG7wl1RquiYHjR9/fQeZZxytwpRTVE1FpnAn/pLahf1N+qH
xaHFVcV9M9JmHJ5pNFM+89Ist1nLZj0tiS75fjY+Wzi7dY7tnIVzHs7lzN0x
D5mXPa91vv38JfM7F8Qs2LuQujBv4a+LvBatWfT34vTFTUuslixY8vibmG9q
S/VLlaW3vg3+dttSfKlsadsyn2Ubl30qE5VdKPcqryj/sFy4/MJ3Y76r/G5g
Rc6KtpX+K7euIq6Sr7q5Omz13jVGa0rWPF47fm39Ota6snV/r5+2/nyFb8W2
DdQN6g0dlfGVjRsdNq7a+GGTdNONqoiqA5stNy/b/HaLaMvVreFb67ZZbSvf
9n67bPvtHTE76qudqit2EncW73yyK23X2e/Z39fstthdvvvjHvmejr38vadr
Ampq9lnuW1mL1qpru/ZP3n/lh8gfGus86nYcYB4oPwgOqg/+8WPWjzcPxR1q
Pcw+XPeT40+bjzCOlNUj9bPqexqkDR2NGY3tR8cdbW0Kbjrys+fPe5ptm6uO
mR5beZx6fMnxgRMlJ3pbFC3dJyUnH7dOa717auKp66cnnG47E3fm3C/Rv5w6
yzl74lzIuebzQeePXmBfaLjof7H+kt+lI7/6/Xqkzb+t/nLA5cYrgVea2se2
H78advXktchrv1znXb94I+FG+83Um7dvTb7VcVt0+9md/Dsvfyv+rf/ugnuE
e2X3De9XPLB8UP0f1/8c6PDvOPYw8uGlR8mP7j4WPn7+u+r3D51LntCfVDy1
eVrzzPtZc1d015U/Jv3R+VzxvL+79E+jPze/cHnx01/hf13qmdjT+VL5cuDV
8tfmr/f87ft3a29S74M3BW/635b1mfftfcd+d/Z9+vun/TM+kD5UfnT92PQp
7tO9gYKBAYVAKRj8FcBgRXNyAHi1BwB6BgAMeG+jTtLeBQcLor2/DiLwP2Ht
fXGw+ANQBzvNbzy3BYCDsDotgNywan7hU8IB6uMzXHVFlePjreWiwZsQoW9g
4LUVAKQmAD4qBwb6twwMfNwFnb0DQMt07R1UU4jwzrA9UoPurJ2yAHxVtPfT
L2L8ugcaD3zB1/1/ARkvnWY=
      "], "RGB", "XYZ"], Interleaving -> True, 
    MetaInformation -> <|"XMP" -> <||>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1885., 269.},
  PlotRange->{{0, 1885.}, {0, 269.}}]], "Text",
 CellChangeTimes->{{3.869893331299284*^9, 3.869893341223545*^9}, 
   3.869893478426059*^9, {3.871813364568841*^9, 3.8718133768601627`*^9}, {
   3.871813425134378*^9, 
   3.871813432876717*^9}},ExpressionUUID->"59fbb144-36d6-46da-9a53-\
b9c4094a8cee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ProcessPath", "=", 
   "\"\</Users/vjhirsch/MG5/3.0.2.py3/epem_a_httx_NNLO_SG_QG182\>\""}], 
  ";"}]], "Input",
 CellLabel->"In[35]:=",ExpressionUUID->"a25d7c53-5ea2-444c-82e1-99b43af23a4d"],

Cell[CellGroupData[{

Cell["Preamble (general information needed for all sections)", "Subsection",
 CellChangeTimes->{{3.8723381972270937`*^9, 3.872338239999392*^9}, {
  3.872338772248761*^9, 3.872338773675839*^9}, {3.872502480380416*^9, 
  3.872502487904132*^9}},ExpressionUUID->"0256b87e-a88f-412c-a86d-\
6a423c14740c"],

Cell["Some general information is loaded here", "Text",
 CellChangeTimes->{{3.872338155237887*^9, 
  3.872338161036367*^9}},ExpressionUUID->"154d5605-24e2-4be2-9761-\
68d8a3436e3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SGYAMLinfo", "=", 
   RowBox[{"RFM$LoadYaml", "[", 
    RowBox[{"ProcessPath", "<>", "\"\</Rust_inputs/SG_QG182.yaml\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.814246082094735*^9, 3.814246148551703*^9}, {
   3.8698914858708277`*^9, 3.869891496806868*^9}, {3.871813202070565*^9, 
   3.8718132206359453`*^9}, {3.872081309194235*^9, 3.872081310049695*^9}, 
   3.872500913837617*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"a6e6ee6b-cbbf-4c44-8e57-85b677dfd492"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SGYAMLinfo", "[", "\"\<loop_momentum_basis\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.869893415545019*^9, 3.869893436829103*^9}, 
   3.871813227262588*^9, {3.872081312714582*^9, 3.872081313067479*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"bcf48534-cde7-4bcd-a927-ff800959984a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"pq4\"\>", ",", "\<\"pq7\"\>", ",", "\<\"pq10\"\>", 
   ",", "\<\"pq13\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.869893419347557*^9, 3.869893437323028*^9}, 
   3.8718136127120857`*^9, 3.8718858538689327`*^9, 3.8720813138931723`*^9, 
   3.872220716889258*^9, 3.872240689046*^9, 3.872241583607256*^9, 
   3.872241869444748*^9, 3.8722420861636467`*^9, 3.872321423019936*^9, 
   3.872321716399498*^9, 3.872338777425123*^9, 3.87233884933329*^9, 
   3.872340935638382*^9, 3.872500916984538*^9, 3.872501178521469*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"fe1eed83-e512-413a-82b1-7e95aeae6e37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ci", "[", "\"\<name\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ci", ",", 
       RowBox[{"c", "[", "\"\<cuts\>\"", "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", 
     RowBox[{"SGYAMLinfo", "[", "\"\<cutkosky_cuts\>\"", "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.872329190861025*^9, 3.872329221970008*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"f384539d-1f41-41a5-b69f-4864deba0311"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"pq10\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq4\"\>", 
     ",", "\<\"pq7\"\>", ",", "\<\"pq5\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"pq10\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq7\"\>", 
     ",", "\<\"pq3\"\>", ",", "\<\"pq6\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"pq13\"\>", ",", "\<\"pq4\"\>", ",", "\<\"pq7\"\>", 
     ",", "\<\"pq11\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"pq13\"\>", ",", "\<\"pq7\"\>", ",", "\<\"pq12\"\>", 
     ",", "\<\"pq3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"pq7\"\>", ",", "\<\"pq3\"\>", ",", "\<\"pq9\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"pq4\"\>", ",", "\<\"pq7\"\>", ",", "\<\"pq8\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.872329194304851*^9, 3.87232922238095*^9}, 
   3.8723387774997663`*^9, 3.872338849346614*^9, 3.872340935648943*^9, 
   3.872500917519578*^9, 3.87250117896393*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"5f25383c-d856-48bc-95eb-7fac1419af8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GlobalECM", "=", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"NoDeformationHyperparams", "[", "\"\<CrossSection\>\"", "]"}], 
     "[", "\"\<incoming_momenta\>\"", "]"}], "]"}], "\[LeftDoubleBracket]", 
   "1", "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{3.8723382233614683`*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"6b6d8a9a-c503-4ae2-9d51-c06062875fae"],

Cell[BoxData["1000.`"], "Output",
 CellChangeTimes->{3.8723382235847816`*^9, 3.872338777514111*^9, 
  3.872338849423204*^9, 3.8723409357094507`*^9, 3.872500918007345*^9, 
  3.872501179371456*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"dc490c1e-bc77-4881-a575-52ae152a7113"]
}, Open  ]],

Cell["And now setup the hooks", "Text",
 CellChangeTimes->{{3.872338803026601*^9, 
  3.872338807320859*^9}},ExpressionUUID->"fa56c3dc-c00e-4eab-b37c-\
4eca75dea69d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefreshHooks", "[", "]"}]], "Input",
 CellChangeTimes->{{3.87250246780576*^9, 3.8725024715832863`*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"aad7d31c-6599-47cb-b6ac-936fd5fff2e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.872502473030293*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"8f7a79dd-5f63-4106-b1a3-34b0314c0c9d"]
}, Open  ]],

Cell["And all E-surfaces", "Text",
 CellChangeTimes->{{3.8725024954498987`*^9, 
  3.872502500574431*^9}},ExpressionUUID->"7486ec49-09b1-4384-ad22-\
4f0cd178fe8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allESurfaces", "=", 
   RowBox[{"GenerateAllSGEsurfaces", "[", 
    RowBox[{"SGYAMLinfo", ",", 
     RowBox[{"paramsYaml", "->", "NoDeformationHyperparams"}], ",", 
     RowBox[{"QuietMode", "->", "True"}], ",", 
     RowBox[{"GenerateExamplePoints", "->", "True"}], ",", 
     RowBox[{"AcceptThreshold", "->", 
      SuperscriptBox["10", 
       RowBox[{"-", "20"}]]}]}], "]"}]}], ";"}]], "Input",ExpressionUUID->\
"8b320750-691e-44e3-ade8-a545f9b8a22c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Study of a soft limit", "Subsection",
 CellChangeTimes->{{3.8723381972270937`*^9, 
  3.872338239999392*^9}},ExpressionUUID->"6b45f589-81bd-4e09-a060-\
2d850cbf1a34"],

Cell["We can easily generate a random soft point as follows:", "Text",
 CellChangeTimes->{{3.8723382487632437`*^9, 
  3.8723382640026493`*^9}},ExpressionUUID->"607e2e10-14af-48f9-b341-\
4c639ae022a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aSoftPoint", "=", 
  RowBox[{"SetMomentaAssoc", "[", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"\"\<pq10\>\"", "->", 
      RowBox[{"GlobalECM", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "0.", ",", "0."}], "}"}]}]}], "|>"}], ",", 
    "SGYAMLinfo", ",", "NoDeformationHyperparams", ",", 
    RowBox[{"DEBUG", "->", "False"}], ",", " ", 
    RowBox[{"Seed", "->", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87233829965263*^9, 3.872338305248487*^9}, {
  3.872338353706023*^9, 3.8723383719056797`*^9}, {3.8723384454918528`*^9, 
  3.872338534190132*^9}, {3.872338574801991*^9, 3.872338578682785*^9}, {
  3.872501673534809*^9, 3.872501681579733*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"c1d79114-fa11-4e30-a955-be00544c21d6"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"pq4\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1547.4392573867217`", ",", "583.9350853249143`", ",", 
      "1251.2708356912196`"}], "}"}]}], ",", 
   RowBox[{"\<\"pq7\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "817.3894901710712`", ",", "111.41961113123644`", ",", 
      "789.5259946338515`"}], "}"}]}], ",", 
   RowBox[{"\<\"pq10\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], ",", 
   RowBox[{"\<\"pq13\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "542.2466205096241`", ",", "231.15450673602743`", ",", 
      "396.0060815485871`"}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.87233830919589*^9, {3.872338516631524*^9, 3.872338539545774*^9}, 
   3.872338580314259*^9, 3.8723387798740377`*^9, 3.872338852234762*^9, 
   3.872340936668355*^9, 3.872501682339126*^9, 3.8725019935431137`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"e49c5368-96bd-4325-b62a-547d2f662557"]
}, Open  ]],

Cell["\<\
Then investigate what all loop momenta look like in this limit\
\>", "Text",
 CellChangeTimes->{{3.872338521018256*^9, 
  3.872338530130674*^9}},ExpressionUUID->"4452fc51-5cab-48de-ab04-\
7452af73a819"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComputeAllMomenta", "[", 
  RowBox[{
  "aSoftPoint", ",", "SGYAMLinfo", ",", "NoDeformationHyperparams", ",", 
   RowBox[{"DatasetOutput", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872338549533153*^9, 3.8723385602682467`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"6b5bd8b6-832e-41be-bb2d-e2b63b8d7ce7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "pq1" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 0.|>, 
       "pq10" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 0.|>, 
       "pq11" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 187.80314670602638`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 241.36096745765047`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 65.73875950878107|>, 
       "pq12" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 187.80314670602638`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 241.36096745765047`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 65.73875950878107|>, 
       "pq13" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 542.2466205096241, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 231.15450673602743`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 396.0060815485871|>, 
       "pq2" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 0.|>, 
       "pq3" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 1547.4392573867217`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 583.9350853249143, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 1251.2708356912196`|>, 
       "pq4" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 1547.4392573867217`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 583.9350853249143, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 1251.2708356912196`|>, 
       "pq5" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 187.80314670602638`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 241.36096745765047`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 65.73875950878107|>, 
       "pq6" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 187.80314670602638`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 241.36096745765047`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 65.73875950878107|>, 
       "pq7" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 817.3894901710712, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 111.41961113123644`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 789.5259946338515|>, 
       "pq8" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 730.0497672156505, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 472.5154741936779, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 461.74484105736815`|>, 
       "pq9" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 730.0497672156505, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 472.5154741936779, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 461.74484105736815`|>, 
       "q1" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 500.|>, 
       "q2" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -500.|>, 
       "q3" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 500.|>, 
       "q4" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -500.|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 3, {All}]]], 17, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 17], 
     "Meta" -> <|
      DatasetTheme -> "Scientific", 
       ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& }|>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 3, {All}]]], 17, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 17], "Path" -> {}, "DisplayedRowCount" -> 
     17, "DisplayedColumnCount" -> 3, "DataRowCount" -> 17, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SubscriptBox[\(p\), \(x\)]\)", 
                  Style[
                  "\!\(\*SubscriptBox[\(p\), \(x\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SubscriptBox[\(p\), \(y\)]\)", 
                  Style[
                  "\!\(\*SubscriptBox[\(p\), \(y\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SubscriptBox[\(p\), \(z\)]\)", 
                  Style[
                  "\!\(\*SubscriptBox[\(p\), \(z\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq1", 
                  Style[
                  "pq1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq10", 
                  Style[
                  "pq10", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq10"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq11", 
                  Style[
                  "pq11", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq11"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+187.80314670602638", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+241.36096745765047", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+65.73875950878107", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq12", 
                  Style[
                  "pq12", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq12"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+187.80314670602638", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+241.36096745765047", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+65.73875950878107", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq13", 
                  Style[
                  "pq13", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq13"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+542.2466205096241", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+231.15450673602743", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+396.0060815485871", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq2", 
                  Style[
                  "pq2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq3", 
                  Style[
                  "pq3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+1547.4392573867217", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+583.9350853249143", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1251.2708356912196", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq4", 
                  Style[
                  "pq4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq4"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+1547.4392573867217", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+583.9350853249143", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1251.2708356912196", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq5", 
                  Style[
                  "pq5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq5"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+187.80314670602638", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+241.36096745765047", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+65.73875950878107", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq6", 
                  Style[
                  "pq6", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq6"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+187.80314670602638", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+241.36096745765047", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+65.73875950878107", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq7", 
                  Style[
                  "pq7", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq7"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+817.3894901710712", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+111.41961113123644", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+789.5259946338515", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq8", 
                  Style[
                  "pq8", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq8"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+730.0497672156505", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+472.5154741936779", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+461.74484105736815", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq9", 
                  Style[
                  "pq9", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq9"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+730.0497672156505", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+472.5154741936779", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+461.74484105736815", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q1", 
                  Style[
                  "q1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q2", 
                  Style[
                  "q2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q3", 
                  Style[
                  "q3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q4", 
                  Style[
                  "q4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q4"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
          FrameStyle -> GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
          Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{469., {250.134033203125, 255.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{469., {250.134033203125, 255.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.872338562067137*^9, 3.872338582172536*^9}, 
   3.87233878136583*^9, 3.8723388538324127`*^9, 3.8723409370576*^9, 
   3.872501687137072*^9, 3.872501993717778*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"5d843d27-2a09-44ab-a143-0f5b453da50b"]
}, Open  ]],

Cell["\<\
And also evaluate the supergraph on a slightly shifted soft point\
\>", "Text",
 CellChangeTimes->{{3.872338521018256*^9, 3.872338530130674*^9}, {
  3.8723385917321253`*^9, 3.872338603949239*^9}, {3.8723386708241568`*^9, 
  3.8723386771303*^9}},ExpressionUUID->"3ec0c776-5e8a-4214-991b-8a1e0d870808"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RefreshHooks", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"epsilonShift", "=", 
   RowBox[{
    SuperscriptBox["10", 
     RowBox[{"-", "5"}]], 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aShiftedSoftPoint", "=", 
   RowBox[{"SetMomentaAssoc", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{"\"\<pq10\>\"", "->", 
       RowBox[{"GlobalECM", " ", "epsilonShift"}]}], "|>"}], ",", 
     "SGYAMLinfo", ",", "NoDeformationHyperparams", ",", 
     RowBox[{"DEBUG", "->", "False"}], ",", " ", 
     RowBox[{"Seed", "->", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MyDataset", "[", 
  RowBox[{"EvaluatePoint", "[", 
   RowBox[{
   "HookWithDeformation", ",", "aShiftedSoftPoint", ",", "SGYAMLinfo", ",", 
    "NoDeformationHyperparams", ",", "\[IndentingNewLine]", 
    RowBox[{"DEBUG", "->", "False"}], ",", 
    RowBox[{"f128", "->", "True"}], ",", 
    RowBox[{"IncludeJacobian", "->", "False"}], ",", 
    RowBox[{"Phase", "->", "Null"}], ",", 
    RowBox[{"Seed", "->", "1"}]}], "\[IndentingNewLine]", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.872338612811284*^9, 3.872338623558012*^9}, {
  3.872338678430677*^9, 3.8723387442057037`*^9}, {3.872338813496318*^9, 
  3.8723388617181664`*^9}, {3.872501700699108*^9, 3.8725017042666883`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"e90449c2-f2c1-45ea-a490-b62d0889e63f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"edges" -> {"pq10", "pq13", "pq4", "pq5", "pq7"}, "Res" -> 
         Complex[3.155130025634294*^-42, 0.], "Rescaling" -> 
         0.19037897624191755`, 
         "MomentaInLMB" -> {{1547.4392573867217`, 583.9350853249143, 
          1251.2708356912196`}, {817.3894901710712, 111.41961113123644`, 
          789.5259946338515}, {0.01, 0.02, 0.030000000000000002`}, {
          542.2466205096241, 231.15450673602743`, 396.0060815485871}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {0., 0., 
          0.}, {0., 0., 0.}}, "DeformationJacobian" -> Complex[1., 0.]|>, 
       1 -> <|"edges" -> {"pq10", "pq13", "pq3", "pq6", "pq7"}, "Res" -> 
         Complex[3.155130025634294*^-42, 0.], "Rescaling" -> 
         0.19037897624191755`, 
         "MomentaInLMB" -> {{1547.4392573867217`, 583.9350853249143, 
          1251.2708356912196`}, {817.3894901710712, 111.41961113123644`, 
          789.5259946338515}, {0.01, 0.02, 0.030000000000000002`}, {
          542.2466205096241, 231.15450673602743`, 396.0060815485871}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {0., 0., 
          0.}, {0., 0., 0.}}, "DeformationJacobian" -> Complex[1., 0.]|>, 
       2 -> <|"edges" -> {"pq11", "pq13", "pq4", "pq7"}, "Res" -> 
         Complex[-3.1557049576234975`*^-42, 3.660688805643947*^-55], 
         "Rescaling" -> 0.19038043634815457`, 
         "MomentaInLMB" -> {{1547.4392573867217`, 583.9350853249143, 
          1251.2708356912196`}, {817.3894901710712, 111.41961113123644`, 
          789.5259946338515}, {0.01, 0.02, 0.030000000000000002`}, {
          542.2466205096241, 231.15450673602743`, 396.0060815485871}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 
          0.}, {-2.0527079238773184`*^-16, -2.638022339718532*^-16, \
-7.182418191382044*^-17}, {0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[1., -1.7789316494402363`*^-13]|>, 
       3 -> <|"edges" -> {"pq12", "pq13", "pq3", "pq7"}, "Res" -> 
         Complex[-3.155704957624375*^-42, 3.660688805644734*^-55], 
         "Rescaling" -> 0.19038043634815457`, 
         "MomentaInLMB" -> {{1547.4392573867217`, 583.9350853249143, 
          1251.2708356912196`}, {817.3894901710712, 111.41961113123644`, 
          789.5259946338515}, {0.01, 0.02, 0.030000000000000002`}, {
          542.2466205096241, 231.15450673602743`, 396.0060815485871}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 
          0.}, {-2.0527079238773182`*^-16, -2.638022339718531*^-16, \
-7.182418191382042*^-17}, {0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[1., -1.7789316494402353`*^-13]|>, 
       4 -> <|"edges" -> {"pq3", "pq7", "pq9"}, "Res" -> 
         Complex[9.806554138064706*^-46, 7.615327329275121*^-58], "Rescaling" -> 
         0.2076579216656124, 
         "MomentaInLMB" -> {{1547.4392573867217`, 583.9350853249143, 
          1251.2708356912196`}, {817.3894901710712, 111.41961113123644`, 
          789.5259946338515}, {0.01, 0.02, 0.030000000000000002`}, {
          542.2466205096241, 231.15450673602743`, 396.0060815485871}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          1.6367331227547032`*^-16, 3.2734662455094063`*^-16, 
          4.910199368264111*^-16}, {-3.0738363077131442`*^-12, \
-3.950434899780567*^-12, -1.0759680513682787`*^-12}}, "DeformationJacobian" -> 
         Complex[1., 7.09368464570894*^-13]|>, 
       5 -> <|"edges" -> {"pq4", "pq7", "pq8"}, "Res" -> 
         Complex[9.806554138064706*^-46, 7.615327329275121*^-58], "Rescaling" -> 
         0.2076579216656124, 
         "MomentaInLMB" -> {{1547.4392573867217`, 583.9350853249143, 
          1251.2708356912196`}, {817.3894901710712, 111.41961113123644`, 
          789.5259946338515}, {0.01, 0.02, 0.030000000000000002`}, {
          542.2466205096241, 231.15450673602743`, 396.0060815485871}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          1.6367331227547032`*^-16, 3.2734662455094063`*^-16, 
          4.910199368264111*^-16}, {-3.0738363077131442`*^-12, \
-3.950434899780567*^-12, -1.075968051368281*^-12}}, "DeformationJacobian" -> 
         Complex[1., 7.09368464570894*^-13]|>, 
       "CutsSum" -> <|
        "Res" -> Complex[8.114468483277226*^-46, 7.336608265947232*^-55]|>, 
       "FullIntegrand" -> <|
        "Res" -> Complex[8.114468558055958*^-46, 7.336608265948034*^-55]|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, "edges"} -> 
        1, {All, "Res"} -> 1, {All, "Rescaling"} -> 1, {All, "MomentaInLMB"} -> 
        3, {All, "MomentaDeformationInLMB"} -> 
        3, {All, "DeformationJacobian"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`UnknownShape[True], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "edges" -> TypeSystem`PackageScope`UnknownShape[False], "Res" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rescaling" -> 
             TypeSystem`PackageScope`AtomShape[60], "MomentaInLMB" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`MatrixShape[4, 3], 4, 3, {
               All, "MomentaInLMB", All}], "MomentaDeformationInLMB" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`MatrixShape[4, 3], 4, 3, {
               All, "MomentaDeformationInLMB", All}], "DeformationJacobian" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 6, {All}]]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Struct[{
        "edges", "Res", "Rescaling", "MomentaInLMB", 
         "MomentaDeformationInLMB", "DeformationJacobian"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 3], 4], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 3], 4], 
         TypeSystem`Atom[Real]}], 8], 
     "Meta" -> <|
      DatasetTheme -> "Scientific", 
       ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& }|>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, "edges"} -> 
        1, {All, "Res"} -> 1, {All, "Rescaling"} -> 1, {All, "MomentaInLMB"} -> 
        3, {All, "MomentaDeformationInLMB"} -> 
        3, {All, "DeformationJacobian"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`UnknownShape[True], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "edges" -> TypeSystem`PackageScope`UnknownShape[False], "Res" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rescaling" -> 
             TypeSystem`PackageScope`AtomShape[60], "MomentaInLMB" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`MatrixShape[4, 3], 4, 3, {
               All, "MomentaInLMB", All}], "MomentaDeformationInLMB" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`MatrixShape[4, 3], 4, 3, {
               All, "MomentaDeformationInLMB", All}], "DeformationJacobian" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 6, {All}]]], 5, 
        DirectedInfinity[1], {}]], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Struct[{
        "edges", "Res", "Rescaling", "MomentaInLMB", 
         "MomentaDeformationInLMB", "DeformationJacobian"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 3], 4], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 3], 4], 
         TypeSystem`Atom[Real]}], 8], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 8, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["edges", 
                  Style[
                  "edges", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "edges"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "edges"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Res", 
                  Style[
                  "Res", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Res"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Res"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rescaling", 
                  Style[
                  "Rescaling", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Rescaling"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Rescaling"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MomentaInLMB", 
                  Style[
                  "MomentaInLMB", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MomentaInLMB"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MomentaInLMB"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MomentaDeformationInLMB", 
                  Style[
                  "MomentaDeformationInLMB", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MomentaDeformationInLMB"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MomentaDeformationInLMB"}, "ColumnHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeformationJacobian", 
                  Style[
                  "DeformationJacobian", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeformationJacobian"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeformationJacobian"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq10", "pq13", "pq4", "pq5", "pq7"}, 
            Item[
             Pane[
              Annotation["+3.155130025634294e-42", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.19037897624191755", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["Rescaling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1547.4392573867217", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+583.9350853249143", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1251.2708356912196", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 1, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 1, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 1, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 1, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["DeformationJacobian"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+817.3894901710712", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+111.41961113123644", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+789.5259946338515", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 2, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 2, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 2, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 2, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+0.01", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 3, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 3, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.030000000000000002", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 3, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 3, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 3, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 3, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+542.2466205096241", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 4, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+231.15450673602743", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 4, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+396.0060815485871", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 4, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 4, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 4, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 4, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq10", "pq13", "pq3", "pq6", "pq7"}, 
            Item[
             Pane[
              Annotation["+3.155130025634294e-42", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.19037897624191755", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Rescaling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1547.4392573867217", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+583.9350853249143", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1251.2708356912196", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 1, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 1, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 1, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 1, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["DeformationJacobian"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+817.3894901710712", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+111.41961113123644", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+789.5259946338515", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 2, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 2, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 2, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 2, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+0.01", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 3, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 3, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.030000000000000002", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 3, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 3, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 3, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 3, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+542.2466205096241", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 4, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+231.15450673602743", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 4, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+396.0060815485871", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 4, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 4, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 4, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 4, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq11", "pq13", "pq4", "pq7"}, 
            Item[
             Pane[
              Annotation["(-3.1557049576234975e-42,3.660688805643947e-55)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.19038043634815457", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Rescaling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1547.4392573867217", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+583.9350853249143", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1251.2708356912196", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 1, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 1, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 1, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 1, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["(1.,-1.7789316494402363e-13)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["DeformationJacobian"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+817.3894901710712", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+111.41961113123644", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+789.5259946338515", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 2, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 2, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 2, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 2, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+0.01", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 3, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 3, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.030000000000000002", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 3, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-2.0527079238773184e-16", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 3, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-2.638022339718532e-16", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 3, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-7.182418191382044e-17", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 3, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+542.2466205096241", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 4, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+231.15450673602743", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 4, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+396.0060815485871", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 4, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 4, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 4, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 4, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq12", "pq13", "pq3", "pq7"}, 
            Item[
             Pane[
              Annotation["(-3.155704957624375e-42,3.660688805644734e-55)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.19038043634815457", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Rescaling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1547.4392573867217", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+583.9350853249143", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1251.2708356912196", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 1, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 1, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 1, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 1, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["(1.,-1.7789316494402353e-13)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["DeformationJacobian"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+817.3894901710712", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+111.41961113123644", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+789.5259946338515", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 2, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 2, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 2, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 2, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+0.01", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 3, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 3, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.030000000000000002", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 3, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-2.0527079238773182e-16", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 3, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-2.638022339718531e-16", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 3, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-7.182418191382042e-17", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 3, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+542.2466205096241", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 4, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+231.15450673602743", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 4, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+396.0060815485871", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 4, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 4, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 4, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 4, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq3", "pq7", "pq9"}, 
            Item[
             Pane[
              Annotation["(9.806554138064706e-46,7.615327329275121e-58)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.2076579216656124", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Rescaling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1547.4392573867217", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+583.9350853249143", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1251.2708356912196", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 1, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 1, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 1, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 1, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["(1.,7.09368464570894e-13)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["DeformationJacobian"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+817.3894901710712", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+111.41961113123644", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+789.5259946338515", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 2, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 2, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 2, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 2, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+0.01", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 3, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.02", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 3, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.030000000000000002", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 3, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.6367331227547032e-16", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 3, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+3.2734662455094063e-16", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 3, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+4.910199368264111e-16", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 3, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+542.2466205096241", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 4, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+231.15450673602743", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 4, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+396.0060815485871", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 4, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-3.0738363077131442e-12", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 4, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-3.950434899780567e-12", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 4, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-1.0759680513682787e-12", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 4, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}], 
                    Magnification -> 1.], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-5) 
                    If[True, 8, 1], {1, 8 - -5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}], 
                    Magnification -> 1.], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-5) 
                    If[False, 8, 1], {1, 8 - -5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[8, FontWeight -> Bold]}], {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}, FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[8, FontWeight -> Bold]}], {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}, FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}], 
                    Magnification -> 1.], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[False, 8, 1], {1, 8 - 5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}], 
                    Magnification -> 1.], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[True, 8, 1], {1, 8 - 5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Frame -> {{
                GrayLevel[0.8], 
                GrayLevel[0.8]}, {
                GrayLevel[0.8], Automatic}}, Background -> GrayLevel[1], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             BaseStyle -> {
               GrayLevel[0.7], FontColor -> GrayLevel[0.7]}, 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
          FrameStyle -> GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
          Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1802., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1802., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.87233878463307*^9, 3.872338816302804*^9, {3.872338856391986*^9, 
   3.872338863626285*^9}, 3.872340938747521*^9, 3.872501718301344*^9, 
   3.872501995634479*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"ffe67670-3d6a-4dc2-9cf7-7e955df283b2"]
}, Open  ]],

Cell["And analyze a double-sided approach to this soft point", "Text",
 CellChangeTimes->{{3.872338521018256*^9, 3.872338530130674*^9}, {
  3.8723385917321253`*^9, 3.872338603949239*^9}, {3.8723386708241568`*^9, 
  3.8723386771303*^9}, {3.872338879201934*^9, 
  3.872338889863935*^9}},ExpressionUUID->"324a0852-7c80-45d9-a9f2-\
3456bff7b541"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RefreshHooks", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DoubleSidedApproachData", "=", 
   RowBox[{"DoubleSidedApproach", "[", 
    RowBox[{"HookWithDeformation", ",", 
     RowBox[{"<|", 
      RowBox[{"\"\<pq10\>\"", "->", 
       RowBox[{"GlobalECM", 
        RowBox[{"{", 
         RowBox[{"0.", ",", "0.", ",", "0."}], "}"}]}]}], "|>"}], ",", 
     "SGYAMLinfo", ",", "WithDeformationHyperparams", ",", 
     RowBox[{"NPoints", "->", "100"}], ",", 
     RowBox[{"Seed", "->", "1"}], ",", " ", 
     RowBox[{"LambdaMax", "->", "5."}], ",", 
     RowBox[{"LambdaMin", "->", "0"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.872337559347337*^9, 3.872337667120802*^9}, {
  3.87233894516018*^9, 3.872338971657679*^9}, {3.872339830877564*^9, 
  3.872339831442831*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"37c6b4fb-178d-4573-b26f-46c231681511"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"DoubleSidedMonitor", "[", 
   RowBox[{
   "DoubleSidedApproachData", ",", "SGYAMLinfo", ",", 
    "WithDeformationHyperparams", ",", 
    RowBox[{"cuts", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "4"}], "}"}]}], ",", 
    RowBox[{"IntegrandToPlot", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SafeLog10", "[", 
        RowBox[{"Abs", "[", 
         RowBox[{"Re", "[", "#", "]"}], "]"}], "]"}], "&"}], ")"}]}]}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.872337718336713*^9, 3.872337718673345*^9}, 
   3.8723389511081457`*^9, {3.872338981680163*^9, 3.872338983462089*^9}, 
   3.872339022372488*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"4bf9d9e8-8491-4ddc-8b28-8d71357128ac"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.004]], 
            LineBox[CompressedData["
1:eJw10gtQFHUcB/DjOF7Ha++OaxwBGQpo8CRpIDBD/r/Gi7stKCE5JlEsbjgG
pgRTiJDTIceAwYiHICFSQSk2CllCxyi2gakwFxDHIy+g42UYesAhyOMOC9rf
d2ZnZ2d/v893Z+fvnZgWk8TlcDhJ/13rd0yomRaEfUkzZ79YzyVibenoj66g
maqN5xaiLWw/UVdEM0EbaSfXnBjamIfvO0iKzF9nyaWZ/7UeUnnDHH0xh2aC
N+Z1pCXW+a/bH9FMsmo9A6T4DStu+BGaObexf4/sHdROmA7RzG/a9QyRMYfk
3u5U9Azk8iZFT5sK+0aJXa04vDUR/XFyrMjr6I8JuD9BMqucldX7sO8+Mbt9
/NJhBXpTRJob+WRbDHoPiA99XKqNQm+auO2K4kTR6D0kazfixQ1S9Iwkcul4
+AxBb5aIdMwg9QrOz5KaodFmUQj6c6T9tVL+ciDum0iVroy0SbBvnjzSm/9J
90PvMSm/ZdDYeqP3mPBLfkg45Y7eAjkTfqfYKEZvkQxq0lZ2U+g9IQkhQTvy
+OgtEa9d7boWHnpLpCE/+tXhNTnrLZOn1ZZh05Kc9VZIxPMeM6smOeutEm2d
T+3yQznrmcnVbHfnR/flrGcmWVGK7YMG9CykL+mESaNHb43kJrZJyvrQe0r2
zVLnVV3ocaDF5+hi0F2c50Bl/IHB1V/Q50Dh4nz3zety9vxZQXB3bKK6Cfus
gFfeab2jET0uDI1Pes7Uo8eFm8YK17pa9LgQXOP7wt5q/B5rWKj3uM2tQM8a
UiXeHo2fo8eD4v2aD94pQI8H74ea56xOoseDMAr09Tno2cDOLRdi3sxEzwbe
5l/8xJSGni2klZ7+rDwFPVswvm4oDVWiZwuT6u6GP/ajZweTm0+tZCnQs4OR
c9mnN+1Bzx4yrjFZP9Ho2UNrCfweuxs9e/j73cVv58PQc4CvbvnalISg5wDq
3vzVgED0+JDsk32m0x89PniqN+tVz6HHh4gjH/ZzPdFzhKTC4qKaZ9BzBLHX
N047KfSc4KxKrOh3QM8JlHNV6enW6DlBfW/ke44WGes5Q+PPTdsuLMpYzxm0
cWMDMCtjPRf49c4h5Z8PZKznAnELpf0Z4zLWcwFxfEAgNYyeK8RotBnfDaDn
CvFNmnppD3oUfF253DnSIWPPFwUFfgdHstrRp6Cv7dMJYSvuU+A7ZRi53Ix9
FEzbNXdFfI+eAMTjW5sMl9ATQECqtCy7Dj0B9L04neJ2Hj0BxOUZX26oQE8A
V7bb8eTF6AnBX3/v7mgBekKQvLWcf+wkekJ4NnFKKlajJ4TsK+6Whkz0hBC3
ZfWqPB09EUTGjivHUvD/iKDT4CfKUaIngoOxroz4AHoiUMtGUhsV6IlAsrVL
RO9Bzw0Oi0XXx2gZ8y+E2s40
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10glMFGcUB/DdhV2Wew/sgbAIWIqlIFlNBGv5HsjspTHbTSBpjWIJh5ZL
I8hSRSUEMS0iUgoBFJpCgii2VKGCkTqpXY4ColCBcixWKJWspYAgy91Cv/dP
JpPJvPf7Tyafe2SSLprH4XCi/7vW75iU4g7bsSgNW1S8nmoyOq0V9Gk0bMnG
cyP5QeqRFCLXsDs28pC4TctjlpzxfRs5Gq9ZHLTUsP9rj4l/kv2tn/9Rszs3
5nvI0dyV2SuDajY2Zj29xLv1gmF7q5ot3dj/naisdO5Z9Wq2s2M9Q0S7K70h
vUJNvWekf2t7vlW+mvb9QXIq+AZJBvqjJNH7M/8rx3F/jIhmhjSnjmDfOEmN
qp78UYveC1KWe8dfHYzeBDn0hueerXL0TOSkvk4Onui9JNfC10SFTuhNkuE3
ZYVuAvSmyEeb9/j1zavo/BQpOFE5cndCRf1pMrC2FNg0qKL7M0RfG6Ec7VTR
vlfEOe29c16sinqzxF7ofy/zNnqz5AwD3uZK9OZIxXCnIqMIvdckw6Ko3+UL
9OZJ3sMdxtYz6JmJsOn45cwk9MwkTnwkbF8kegvkz3E7gywMvUWy35EtWVai
t0R8dc31o7vRWyY12TecenzRWyYl2/uetG1Bb4XkZRRsaZGit0rKXD/W/CpA
b4005UXVdC8oqceB77pK60deKuk8B86XfjM2NaKkPgfUF12b+T1Kev64kMYN
fuXarKR9XIhlIkWBjejxoKCvvT28Bj0e7IqqGjpVjh4PQtKteMX5Svo9FrBt
wZbXlIWeBbzzlqz6uR49S/hwOLjNOh49S9DqPg+UR6BnCV23gp4e1KHHB9/M
1dMXGPT4UBl1R3Q7AD0BEP3ZNKMPegJYfaAtt3VDTwAWY1cTAiXoWUF0mrg7
lo+eFXxt/OR+oVlBPSHU9Jhcm00K6gmhf1PHxJxRQT0h5Hwa7+TVraCeNQT4
nfsq3KCgnjW4Njw9lN2Ang3U9kJcw030bCDIL6Vuogw9G/gtYUa+OR89W+CS
v5/tz0LPFioKPmg8q0fPDvZ57L1bG4eeHcz/NNH7/DB6dpCcmO20SYeePXjw
BuKVDHr2oF5ZGEoLQM8BFPe1kTU+6DnAie8vLxpl6DmAMPV6hViCniO0rBgO
hvLRc4Rtngr3VDNDPRGYdtfNVJsYer5EMLfzl0dDRob6IvBzOVDn2M3QfREc
42m+DTEwtE8EiS86ilIa0BODy/v8gus30RODlySgcLAMPTGcd3twzSEfPTFc
chTcCM5CTwyvcy/eS9ajJ4HSlsePquLQkwC3N2V84DB6EgibeZvroENPAlef
HJMFM+hJIGHZOSg5AD0pNB0wRVT5MPT/SOHLS+WZAzL0pJCts6i2l6AnhbDT
f3UBHz0pvBvjYT5pDqWeE+RM5rpXmULZfwGVe7+k
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10n1MG3UYB/ACLVCgpb2iMgTc4sApMIOMlznJ7wF7tN2yRQrIFhSBDIap
A7IWBYy8/IEE3LKFwRxsaclUKi8zMBoGhMDJhDgZGcIYo3WlyGC4MlJelMJw
KnjPN7lcLvc8n+/l8tuTkavMdORwOJn/Xdt3TM6hs4ovxhXM13XbaSKHs2QR
PT8rmPqd526yGd5fmNSnYMJ2covoloorAw34/jY51WnY79KsYP7XRklexfmD
93UK5sDO/DgJ8C0qL6xVMKeytnOf5AvWFs1VCubKzv4UaeC/G7hVomBG7mzn
N/L+meWBEQ16FlL8TN+a9DH2zZAD6szP6z5Ef5as6HIWG+Jx/xFxW6j4RkNj
3zxxGj0p9TuI3gKZGJgwXwtG7w/SfjhA67EbPSvZe1relCZBb5F01fq8+q0z
ekskbehEtGlDzno24vaDJZH/VM7O28g1j1lRqEXO+stk/UZeWeK4nN1fIZN7
Yw/lD8nZvlXiVb2aW9ON3hppKS5z7GhFb408H3378q869P4kkXRVo60avb9I
eAq/WPQleuvE2XY0IbQQPTt5500jnfAJenayml2Z+elH6G2Q5qKhznoleptE
lDIcztDoPSOVrX5T81HobZG1yDMXhcHobZGcce+kyFfQ+5skH3cXpFPoPSe6
m4amr3jo/UPE/aW7btplrMeB+HMxR2atMnaeA0qjZr9oWsb6HEjfzOuIHpOx
588BwntLhlWDMrbPASLM1uz6LvQc4XE/t+R2C3qO8LrPy44bWvQcYcxc8Hhf
tYz9HicYMSUFnChHzwnCkn+5UVmAHhdUVUxFjwo9LoR9N3fVmooeF7LH6q2+
SvR4UFUzf/oYjR4P2g1Z/qVR6DkD9STW3h6EnjMsvLd7fdYfPWfw6n3hpRcp
9Fyg7VFDopyHngu0a662FtnjWM8VfpqL8L1ujWM9V+h940nDtDmO9Vwh0FsT
RY3FsR4fOkvuWqSDcazHh3vLIZc/60LPDfK8Vz5obkHPDe5qm0MeatFzg8h6
AV9UjZ47hGWvPY0tR88dOtaTTfkF6HnAPvXR0e9V6HlAfKzTHVMqeh5wJKVv
RKhETwA+psl7MTR6Arhg7rFootATgrj2d5s+CD0hZFQ84Jr80RPCa4IwXyGF
nidIFy9GxPDQ84Qf/fQJGjvNeiI4btij1ltp9nyJwHOGqTGaadYXwTCl6BKM
0ey+CFZCyh/CIM32iaBuiuZqutATg3U6LVjfgp4YhnVtSUYtemIYOicpFVSj
J4ZbA6oWKEdPDLZL2kl1AXoUXJLVcPUq9Cjobox8y5iKHgUZ4/lpAiV6FBg2
os8DjR4Fc7vK+tRR6EkgdyJ0qTGIZv+PBPpjpP5Gf/QkMNJ//ZiAQk8C3g9O
lgAPPQmc9UlvU9ulrOcFFocrM41WKfMvWVfGBw==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10g1Qk3UcB/ANGO/slYKyQxA8MF4iQuLl6v9bCNsQ5UCUDNCGI94M5aU6
FIrl6cAEU9kmzOtETtBOpiEekHQ3IqJBgJTANIFxKFrC4l0GLAp6ft+75557
7vn9Pt/nnvu7pRyJSzWj0Wip/13rd8zTWNvEwjqRRlm5nutkot5OmfKNSFO1
8dxC+PJ3r+5UiDRvbaSdsMKTw8zP4nstCXW7lZtcItL8r90jBdmJ2sAvRZrA
jfnficffNzwzCkWatI/WM0i2BfyUNvqpSKPa2H9AOH0DVtIckabn1/U8It9e
XNKFHUZPT4qO+VTR07BvjFzdE1fcKUZ/nLxTw799Mgn3H5Mhx0ZtUAL2TZDU
hfDooVj0npHWFteI1Gj0/iS1HxeMjkai95yc5+c5CfjoTZLxqJUCVRh6BlIu
G5gd3o7eNFGxHtay/HF+mrydEqx783X0Z0hWftNvER64P0s6lreORLtg3xzZ
4ffZdqEzevNkT1osPYSL3jxxaXt5r6s9egskt+i67xoDvUXyalRyzuCakPJe
EL+EG9O1RiHlLZHk05K0nDkh5S0RZobT50FTQsozEvZMXffihJDylkli2/Bg
gx69FcK4M+WU9RC9VWIWbjBuvo/eKonkBzzq70HPRCorZDxpJ3r/kNAd+5/7
tqG3RgxX7tTqvkePBnRTiFTaiPM04NY8uemlRp8GuvcHxb11Qur80aE9eFqT
W419dPiZlTf7kgo9M5h0/sKpuQI9MwgaPr1rfzl6ZvDXQLfaKMPvMYcC4YW4
Sil65lBWf3lX8HH0LOC9/syGwXz0LOCHlg/P5WejZwFHwt2NnHT0GJAuaF5U
i9FjwI9WzfKdiehZQl/JJ/qn8ehZgiRzi/7EbvQs4Wa74dJmIXpWMJe/1eUu
Hz0riN8bkbkvDD1rYCidZDOB6FmD7rv2gjN+6FmD56axSE8v9Gygw0Y22+aG
ng3cLvqgOGkTeraw0Fo1t+iIni1E5fjEnGOiZwvqshq5tzV6duDqEq3toKNn
BwmuAZMHVwSUZw/KYi/a8ryA8uxBH9dnWWEQUJ49GJMr6X7PBJTnABl2/TOd
YwLKc4CjPZd04j/QY4KzrXnTyn30mNBzcapM3oseE0pHfA688Qt6LPC4cMxL
24YeC5JCCqdS7qLHhhexHfWrjQLqfLFBFvsgQ6FGnw1lB323+F/DfTZMPN42
pK3GPjbcM3iXHlKhx4HorFPBpgr0OMANP/FEUY4eB7rjJV/7l6DHgdV4SUiX
FD0OfCVv0h86jh4XFE1nTpny0ePCuMjBW5mNHhfc9x3o9U9HjwtdI5ePdonR
40JozCxHkogeD1pHDzeY4vH/8EBh8IxT7kaPB3kxwTP+QvR44H7+1tkuPno8
UPOrfSVh6DlC6WuvdJsCBZp/AUbTxn0=
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"F[\\!\\(\\*SuperscriptBox[\\(I\\), \\((LU)\\)]\\)]\"", 
            TraditionalForm]}, AxesOrigin -> {0, -39.65159449181011}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Local Unitarity integrands, F=(SafeLog10[Abs[Re[#1]]] & \
)( Left approach )\"", TraditionalForm], 
         PlotRange -> {{0, 5.}, {-54.97764523481851, -39.65159449181002}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Complete LU integrand (scaling: 1. )\"", 
           "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 2. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 2. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 1. )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 2}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Before"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.004]], 
            LineBox[CompressedData["
1:eJw10gtQVHUUBvBd3rA89gGMhRBYSQzOKBlYJAHKsnuFwhZFaFDeyTqURLSB
LAMFDIvNgE2KGQQMWIYiNE7sBKTnCCogPhhE4mW7vFYeQaCLKM+C7vlm7ty5
c8/5fXfu/F1ij8sSDDgcTsJ/1/qdMq1wdV8tY/DsufVUw7huoUFVzOAPG88N
8Pb9yIdeRQzu3EgLbB5b5NxW0ft2OFbtKxPmMPi/1gmvJKUVjGcy+NbG/AMY
9sv2c09n8OjH6+mBR86Si1dTGSzZ2O8Djb7PND+Zwbt31jMIreN5USlJ5GnB
fCLI79NE6hsCbuw3mUnx5I/A1yeDNTHRtD8Kzduib4sjqU8HnIH4MUE4eeOg
uxkP10PJm4CA0pIMWQh5U6DS1ec27yPvb+i42CYVBJI3A4fDk1bf8ydvFvY4
308J3k3zs/Bl3nat9y7y52CL/XwH703afwLKxuwp3EZ9T8FtZ6t1pCt5etD7
dNpoXMjTg2BSfCtoM3nzMNd+cLXKnrxn8I/WJ2WCT94C+EYt3HTkkfccvrJV
5e4xJu85XNj7vVPEmpT1XkBFy/JE7Asp6y3CgsO8S8xTKestgTh38vGBaSnr
LUNrc36A72Mp6y3DphkLN5ch8lagK7IheamfvFUoWoobvtdN3hpEdM94lN4j
j4OLcV3c+Daa52DNUNHo1mbyOejibXtkrEnKnj8uHigxGSuvpz4upn7HHQ2r
I88AA+X1jRbV5Bkg10N/ramSPAMMPfOLz7FS+h5DlCvVGfbF5Bmi4oN2NRaR
Z4RisfVWeQF5Rnjd6q9FmxzyjLCNExZTryTPGMO9R7IjFOQZ453aa8rl4+SZ
oKn7kdQyOXkmOHy0L8c3jjwTdJwPuKGJJM8UE3sMg7PCyDNFrZq/3Wk/eWao
zvXN+oMhzwwdPNOCP9pLnhnmR02dX9hNnjl+G+J/5rQXeebY63jjDY8d5Fng
z7I8+V038izwC1VWtPxV8izwz7Tf7IwdyeNh5QPJqQp78ngIXmd73uWTZ4m2
p0NmeszJs8RdQdmDnxmSZ4mBnjU/Wa5IWM8Kdf297194JmE9Kyw0Ke31n5Ww
njXOalyZwQkJ61njld8PVipGJKxnjdG1dTr+I/JssMY/fdOlHvJs8Mqa+h1x
J3l8nAzzDNa0S9jzxcfy2sIP01vI56P84Y4g0VXa5+N0b4z3ZTX18fG1QwHO
kl/JEyAcGljRVpMnwIpGq+4TVeQJUB9YXWX7I3kCDE1I+KS2mDwB8grHPKSn
yBPiwOdNc0MF5Akx8Uni5Ywc8oRo3BqTYJdJnhCLXrJ6uU5BnhBL+291SJPJ
E2HZkvbEsJz+jwgd8867KuPIE+GlQlmX3WHyRDjj8HpGXRh5IiwfCtnC7CfP
Fp3mOW3DjAT/BSEA/K8=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10gtMk1cUB/DSYlugLaXFOOMkwBrQIlWgMwMWUEZfH0TFtUNwLOAGGN0q
0UQYJROyuSnvaBc2ECMTZCSOh4qEx3YPMAQW3XwAUSRCgRBeAcarjAqbsHtO
cnNzc8/5/b98uR4nzhxNZLNYrMQ3a2PHijYdLfAdZKDox42qIknsi0OxrQwU
b54bycn2zNTlcgYCNqud/GDt/8VyGe+7iXV8eZqVwsD/2mNy/9AZXXA0A8rN
/mckO4HI00MZSE7aqD7CeS9y/eddDJRszr8gT+aXFu9JGHj0cKMGSLK/4Y/c
NR31hoj+fKvZfUJH8ywkNkdZmtCro/4I4XhuDwlr09H5UXJE5tJVX6OjeWPk
3eLfT9eWojdOcnQ93t656E0Qo3FHk7MJvSkSYp91Nf4UetNkz4O6R+JY9GaI
Z8t+z7cY9ObIq8DUYWMQ9s+RhwGH54Q+6P9Nbl9evT+zA+fnyctCucxJiHkL
ZJLZUxa3rqXeIgneLxVYZrXUWyRPq8dqCy1a6i2R6Na+sJPPtNRbJjPFWb2f
dmipZyURk/q+Cw3orZAjrtu4jVXorZCeb2+eFVxD7x9i2jmakpqP3irx73Iu
smaiZyMdtcqG7HPovSaVPpJ+RRJ6r8nB6fCg4WPorZEx/YPQmxHorZM0w2+m
lBD0/iWdslvlWj/0WLAvsPGKXIb9LKgMqHt/6zb0WSBZ6LrHc9TS92cHOXfZ
XnZrGppnB1Ozt5+w5jTUY8NolYeQO6KhHhu+6WwOFfdpqMcGdcT6kFu3hn4P
B8b0E+f9WtDjwB3+l2ZNDXr2cOgO8zz+J/TsQXn3s6mM79GzBz+eW2bJJfS2
QEOyZ1SLCb0t8DKq0H3QiB4Xwk4rGjgn0ONCnLV+ZLcBPS78qt2XHqVFjweH
DyR+mB6MHg+OvRMTWa5Ajw9s5XPVXx7o8SGyQiSzuaLHh1elPn9689FzgDKZ
SGGwqannALNzq3u/nlFTzxEGdse21VnU1HOE6NCM3qEeNfUcweaeeFzcpaae
E1x3L9UcaEbPCZZHuQUp1egJIHCy0busDD0BODhZ+E/N6AmgqeKanHMJPSF8
YTd+UWlCTwjs7CzXJCN6Ipio6H1clICeCKBvqr5bj54IvrIYiE2DnjP0d7lP
+Aaj5wwDn3fujVegJ4alSq/CKx5q+r7E4GQ+y+twRV8MuW/7XrXycF4MTP5O
P7lNRfPEYObrBj+eUVHPBW6QqZICi4p6LpAvPJfY1qOings0cNOCljpV1Htz
39O0fVczei5A4tzYx6vRk4B/Qfl8Xhl6EhidPjUJZvQksJJXOb7wHXoSaCu/
Ne1lQk8C+S86l2KM6Emh9WAGJy9BRf+PFHIvhG8FPXpSqBLVyBc06Ekhpf2j
D7yC0ZOCX5rlkxgFeq4QPryekeuhgv8AW5z0lA==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10gtMk1cUB/DKq1BefQ0WzNIVUwSmFaKLWyBZGGu/Nm6MMRzlJVQFIhkF
BptKsxmVweQlYgcTB1IZWZgOhhM2Ie6caUajvHR2gugCnYJPKpbHoIBM2HdO
cnNzc8/5/b98udKd2TFpDhwOJ+3FWtmplFOan98cUWPNiZVqhieytqiUm2qs
XT1fgOyoHRc9+tW4ebUugybh2C3/brq/Am2XAjYV/KbG/7VrsO1GcsjDDjVu
We2/ARGSmg9UrWrMSF+pm3Ci1jKU/70aT67O3wJjR117zCk19vWu1B0YymjU
91WTNwp1bpFHh8opzwJHlb61ukLy78Lprjt5lQU0fw/0w5ILkTmUNw54+/m2
Y2nkPYCD59Y+O5xA3kNQZkuC1r9P3mNw5u2KLYok7wnImWjJ2a3kWUHJGdxw
+jXyJqEw/8vJHAn1T0LK18PNEhH5z+Dj/pL88y40b4P7P0bv3mJXsXlTMBjY
2tQ4oWK9aZhzTTnlbFGx3jT8cMgiSDarWG8GQs482nzWpGK9Wbib6N8z3Une
v7D81+sRb7SQNwfB6/a37zWSNwc+83vdzxvIm4fvGkZnJ4rJs4NxT6hzgJ68
BbDUfdWUpCNvEYSfPJZXaclbhP3b3x3rjiVvCTpyypfsDHnPobq9rUEeRt4y
xA2kWbVy8jj4aYXDskFK/RyExXVjJjH5HPSbf9Ri56rY97cG08fs6RsXGDZv
DcZlRbyUamVYzwF5NcehysKwngNWuwRl/mFmWM8Bd5Us+s6ZGPZ7HDGz0rcn
uIs8R/zW3luY3EKeE2pujysqjeQ5oWr8itdlA3lOuNRTOTJTTJ4z/vmW9NdA
PXnO+I5b+DeJOvJcMGTrkQMVWvJc8L1oY9bvseS54O6N4p3TDHlcvOqkS1of
Rh4XUwVhSQly8lwxPpCnLZeS54qXvtBlopg8V/z8OmffFJc8N3zFN/VIwIKS
9dzQfzi0Pt6qZD0ebvjQv6PMomQ9Hr69/d41MCtZj4civ1CrzaRkPXc0zpk8
A7rIc8ePvHSb4lvI88Dc0YmYMiN5Hsi3++wDA3ke+GrJxXpbMXmeGOfY2S3T
k+eJA/DgqUZHnhcyzUF+ZVryvLB2PEUBseR54dWK3FwbQ543tmqZelkYed4Y
WdTbo5GTx8e4KOt8qVTJvi8+Hlo+GQhi8vn4tKE7zsaleT7296UWyxYUbB4f
ncp2/KKxKlhPgNcD2u+XWhSsJ0Afz8SXwaxgPQHOnGPUNpOC9QSY81legayL
PAH2Fw2e0bSQJ8Si/qy/S43kCTFjJMQbDOQJ0Ty6NsJWTJ4QBw4E58n05Amx
c1TTpNGRJ8KyqsbBUq2C/T8i3HOYy4NY8kSYPnsw3MaQ9+K+gJ8tCyNPhJx/
fjJq5OSJURyuNZdKFfgfAEz61Q==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10g1Qk3UcB/Cx8TLHGHtjZISCTQ/DVpOXDMy0hG2XxyknrzsvcYORBB4B
qeFxN0kE3zJwTIYlcBECYlFKvpz9f5hdc0Ngx8sCAoE4g9CJNYU2GAU9v+/d
c8899/x+n+9zz/2D9x2IT6fTaLT0/66lO2aKfTywskkB+qqlNJKLT+NiBHUK
MCw/3yC8D4pMWoMCwpbzEynil55trcD390i0ffrcodMK+F/rJndCHOWtxxUQ
vjzfQxwbhBeijypAk7GUflJvyQt2HFFA9fL+ALma+5Ko76AC7ncs5TdyN6tx
9vpH6I0SYWFUU2U29o2Rx09S1qky0f+diBmTbv4q3J8gm3XFYy17sO8hCeqs
GF2bjN4k+VyWOV8Uj94UeSv38cmbO9CbJl9s9zINxqL3iKh+1hSMb0XPRqJG
eSW9UejNkBfrBp9/H47zM4R1OLimWIL+U9KT/2lQbAju/0U2SFK7F4Kx72+y
vpt1+3IAenZylmVt3O2Hnp1kRAYIZznoPSNHS3Rv6pjoPSerW75c/TodvVlS
WFllMDrllDdH2m1BCe8/k1PeHOnb0tRvt8kp7x8Sl3G4rGxSTnkO0iKyksBx
OeU5yYGsU9dbh9CbJ+WCb+pi+tCbJ3OnOmsGOtFbIDFCnTnbiJ6LDIY+CaPf
QW+RJLSZJypvoUcDq/+xidBrOE+DVQtuke1X0KeBl9YwkHhJTp0/N4iv6Lj/
qBb73GDUYvQtrkaPDg7tg+qVOvTokOzem/3tGfTo8K4zQCsrxe9hgEnFsYxo
0WMAS+iZ8nEheu6wPv0TIacAPXd49R3uYn0Oeu4Qk1Yv3JKJngcIfZN29aeh
5wG5Dcdac5ToeYKtqk/qlYCeJ+xskHRdjEPPE0QjN0o2ydHzAv/bIwmWbeh5
QYPp7aj90egxIWuoTcqIQI8JXeG7oi5I0GNCUvN78REh6K2AX3o4hzqD0VsB
kUmhTZoA9FhQm5/4B80PPRZ81pYhMXDQY4FydGdRGBM9b0gVru3vcEPPG/Qb
2REZThnlsUGfE2NYtMsojw1TK8UeVTYZ5bHhuxqfgo2TMsrzAfG1g1PmMRnl
+cBXXz9MSx9CjwOJY9PDrl70ODBRLt5zvhM9DuzN3fRAakTPF2Jrf1WZ29Hz
heEffvxTfQs9LqRYm/NcV2XU+eJC7LjGpb+CPhdEd+GE9BLuc+FyR9kL5lrs
44IgsLpBXY0eD+pftrzhOoceD7zXse/pz6DHg3bra0ppKXo8uOlcYzNp0eOB
H7dLqy5Ejw9mepDIlY8eHzQ2RrM+Bz0+zAzv3yrNRI8PO/Sx/aY09PiQnHXi
Q7USPQFEeocyXLvx/whAvG+VQR+HngCO5CmlUjl6AkjdPGg0bUNPACfPV+xV
R6MnBPUr2rmFcBn8C3OC8/4=
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"F[\\!\\(\\*SuperscriptBox[\\(I\\), \\((LU)\\)]\\)]\"", 
            TraditionalForm]}, AxesOrigin -> {0, -39.96578013793819}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Local Unitarity integrands, F=(SafeLog10[Abs[Re[#1]]] & \
)( Right approach) \"", TraditionalForm], 
         PlotRange -> {{-5., 0}, {-56.03987749942169, -39.965780137938104`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Complete LU integrand (scaling: 1. )\"", 
           "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 2. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 2. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 1. )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxd0slJg1EAReE4z7MNWIPuYw2WIESXliNqBZbg2pWgIAiC4EJRRFEkzvOU
/+C75FwI4ZD/fS+EzCyuLDQ6a7Va4+/VevdW11rbrP/3etVbpWerbevznXq7
sl96rnr+oPTyUmuHpTeq80el93ZbO5Z3ovtO5Z/p/Lnuu5B3Ke9K3rW8G3m3
8pp6vin/Tufvdd+DvEd5j/Ke5D3Le5H3Ku9V3pu8d3kf8j7lfcr7kvct70de
bb79+TR+mv9fR2nuS7NOeWm8NN+nS16adctL46XxeuSlWa+8NF4ar09emvXL
S+Ol8QbkpdmgvDReGm9IXpoNy0vjpfFG5KXZqLw0XhpvTF6ajZfm/5XGT3M+
zX1pNiEvjZfGS+Ol2aS8NF4aL42XZlOl+X3SeGm8NF6aTZf+BSreMF4=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10gtMU2cUB/DSUqDQ0pYKTF5SHqWUcoUWBrhl35EsSmBmSqIx2wSugiwb
my7KkDoKW9xEnBnSDhBwDMhkGiaNwyFo1k7iCorEMcbGQDYeCshDnra7gGzQ
s39yc3Nzz/n9b24+6cEjyRlsFouV8d+1fv8/yvtlp5JX20jZhfVcJvs/+ZOd
1lthrNh4biGNu3XajoW7RvVG2kj9lLxRkd6H7zsIE7jTqbRp2GjTHhDmia9k
5va4MWpj/ldSTCZfMfTPGDMPr6eX3El/raFDO2+s3NjvIzExiWmtuiXj/c71
DJAPLPUpYQ1W9P4msS3tmqvmZewbIu45V6jRR8/RHyGTe4q6XubYmWz7o2Sf
uZvW6dkmW99jYo2KOt4rszfZvHGyPSep5kkL12TzJgg9fXyqeZejyeZNku91
op2hw07oTRH2jiiFMscZvRniID8JBj4fvVnCHfXxra8V4PwsachYWOXECdGf
I/np8fceZopwf54slMXP0Wox9i0QWpewxlsTo7dIcs8IOd133dBbJPvqJjU/
lErQWyJr+p6EpoOb0HtGTiXw6tspd/QsxJIk8Ztj3NGzkr27mZNhZg/0rOR8
a35nts4TvX9InwaSu1JfQI8hXplfF6iVm9FbJvbZh5/VWTejt0JyyxdP+N3x
Qm+F1A87zdac90ZvlXw5ZKHDU3zQe04+25E8a1T4ordGrukmevZbfNFjgVUQ
mmpp88N5Fnya0zJXUbwFfRaUVKgLaih/k+382cGBW9LTFr0/9tmBbH5l7+vL
/uixgZeluPktLUWPDf212UWcdil6bMi4mVuVSgXg93Cg6k3vrlv6APQ44BIk
ZnkvB6BnD2ZVroeGDkTPHhrjNdY+cyB69jAlffrFNioIPS6Upnh3VOqD0OPC
w5C3S1aZIPQcoFYrH0ilg9FzAJg4VH7bHIyeA/y2eKk1mJKh5wgew3/EnNHL
0HOED6fdHaYZGXpOoLp2zmcPHYKeE7RGZxy7bg5BzwlKoqs4XpQcPR48eGvp
Z61ejh4PlKKh5hFGjp4zGArf+SWBDkXPGc6tyIRXzaHoOQNTJXtPQinQcwHu
i2NjJ/QK9FygOz7ho0FGgR4fBnYVhLxKh6HHB1auZOyyOQw9PoQJ7t0QUkr0
BCBY+q4iW69ETwBBPKaon1Gi5wo5Hn6F2+lw9Fyh8mxTcb05HD1XWGrR1gko
Cj0hbKlMMx7TU+gJgcM/MNLHUOiJ4OnRElegt+L5EkFwcwxcMm9FXwTjPZ0v
OXhG4L4IKhL4b8QlRmCfCMTOOk1WXgR6YlBfkV6sNkSgJ4bH1fk/dY9EoCcG
+0LNGNczEj0xhGkeucYlRqInhuij5TFZeZHouQH8eISuNkSi5wYfX0j6vHsk
Ej03iG8Q3uB6qtBzg2+u147GJqrQc4Pf1TPirDwVehL4ynOQVBtU+H8kEFOQ
9n73iAo9CZRoMy5yPdXoSWDbX4OdsYlq9CTgzhhX3s1To7cJDp1eVVYb1KZ/
AfPIxKg=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10ntMU2cYBvBSoFCgpTeQi5UW6J0GRSHhot/LIIE4h4E/FGg0YAWCDNzE
bRG5DKMJAQeGIYyLw7kFcAsDBupu2DImBQMTUe6E2+Si4EAoAgVhg757kpOT
k/O+v+fk5BOeOR8RR6VQKHH/XTv3/9OjGYw+pp8hJaU7uUviHZMWqmcnSdnu
8y8kpVhawPhhmBzcTSuJSTnXG5L5FN93kDqq7+RAUDMxat3Eb+b2B7+1VWkO
7c4/I97Z2fWrax2ahPid9JEMC++ZKId+Tfnu/iBxpDcWtd8c13R17mSEqL/M
6pksm9IYvXEizundf7n8lcbYN0H09xor60oW0P+b1M5l/TUQsoT7L8hSGcN3
rEWPfdOkUu0+YuO3it4sUXc8+uNq/Tp6L8n6uZrpRNEmenNEvVx/fPSrLfTm
iZe8JjD7GkVr9P4h3pLMYkOzidboLZIThsLPXq5Qtcb5RRJmOCpVKc20Rv8N
ISkNo6qz5ri/RCSpBY/fltG0xr5lYgh6IvB5aoGenlhSrsjcLOjo6Unk2ZPH
2wKs0FshrxbrPCUXrNF7SyJ9G78/Vm2D3irpmDNdDhhhoLdGrm53Vbxj2aK3
RgKTqX0driz01slQ20i3STMLPQPJ8SR/Sk+y0dsgSvpcFrxho7dJDoxHfXs0
j4PeJtkvzb0TKuKi946s1Z1+7K/hordFErJKgkVRPPS2yXs+Sc60ZR56FDjN
bw8Yu26H8xSQUYMzGsT26FNg9kFLWYbWXms8fyZQ1NZzJDh6D/aZgDp5mELT
70GPCur7WwmtXzigR4WG+f75dIkjelToUtE2vFoc8XtMoaKvYGkq2gk9U1gS
7JMV653QM4PMNae5oHxn9MzgvvDH9AXJXvTMIC/vtlNpy170zIGESzZAxUfP
HMacS8Nm9Hz0aPBMxILr+fvQo8GNWcOKp9QFPRooQm8V9rS4oGcBYYuBTr8q
BehZQPWnn1zOTROgZwmRTMalaJ0APUsQkGG+nCdEzxImO6+lrscI0aODXXjV
lfZaIXp0iAmbiSgxCNGzggCXfXNxIa7oWcH79mfCDxW5omcFd/nCPOqEK3rW
cMnJ61a30g09a/CPmMr7Os0NPRuQ07mqD3Vu6NnAw1wp04/njp4NHG4/WGMR
644eA/KbXit6a93RY4DP563ldwzu6DHhwfPR9fMhIvSYIFQoQw8XidBjQsWJ
+ByrCRF6tsCL4vzerxSjZwvam/kvvksTo8cCl1SO6QWdGM8XCzjpjQ6EJ0Gf
Bc7MRLFNrAT3WeDzja1ysFaCfSxIaUpSVhkk6LHBLtFDmhoiRY8Nyb2v+VAk
RY8ND+39bRkTUvTY8LPsxuagUoYeG/ILVNNVaTL0OBDwaLszVSdDjwOWhc/r
gSdHjwOVB6SFjFg5ehzQnYKPh2rl6HHgiL8qrNogR48LzR71soshCvw/XBAX
fGQaWKRAjwv82PZhxoQCPS7kDIz+NKT0QI8L92b6cqrTPNDjAafpyamLOg/t
v+Ulu/o=
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[\\(Log\\), \\(10\\)]\\)[|\[Kappa]|]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Deformation magnitude( Left approach )\"", 
           TraditionalForm], 
         PlotRange -> {{0, 5.}, {-23.777628907932797`, 4.836271643934625}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: -4. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: -3. )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 2}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Before"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxd0slJg1EAReEY53lswBq0EksQokvLEbUCS3AVwZWgIAiC4EJRRFEkapzn
5OC75FwI4ZD/fS+EzC6uLNSqlUql9vdqvXura61t1v97vd1bpefa29Hnu/VO
5aD0fPv5w9LLS60dld5onz8uvb/X2om8U913Jv9c5y9036W8K3nX8m7k3cq7
k9fQ8w359zr/oPse5TXlNeU9yXuW9yLvVd6rvDd57/I+5H3K+5T3Je9b3o+8
ynbn82n8NP+/rtLcl2ZVeWm8NN+nW16a9chL46XxeuWlWZ+8NF4ar19emg3I
S+Ol8QblpdmQvDReGm9YXpqNyEvjpfFG5aXZmLw0XhpvXF6aTZTm/5XGT3M+
zX1pNikvjZfGS+Ol2ZS8NF4aL42XZtOl+X3SeGm8NF6azZT+BaYCYl4=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10gtMU2cUB/DSUiiPlpbKABWkvB9t7UMYYUwSlakg6mhwgvIoG8iGiEt4
iEt5bAkYQYi0YytsBYkZDlCq29x47Ts4QldUNmAjIm6CKA5wrkIFLKAb9Oyf
3Nzc3HN+/5ubj5eaHZtGpVAoaf9da/f/k/MBY0tW0FjEZ+q1fE0ikwrcZfqb
EbXrz+3kU/2b37o2fBwhXc9PxD9q5GFpgZ6Y3+uJclR9kmF/l5i1X4nHTAl/
pnmSbFufHyYTDdEWwn0z5Fj6WkZIyMU2bXOOgdSt748S0QUj16Vnnty+tZZ7
5N5EFivFbhG9cRKT2NaulJmwb4KkfzPFH1Cvoj9JOMYSjks2Bcz7D0nwcVnh
CTYVzH1TJNlmU9KKlgZm7y/S+SczYfggHczeNFHMR8dbGqzA7M2SwLjKHfWV
DPSekHTmP2PX+LboPSVVDFuyr98OPQP5qPRcQsExJs4bCG02cWWnpQP6z0gE
LffkkYNs3J8jBdGXG7PcOdg3Tw71ftJ99AkHPSORVlUr+B2O6BkJL3w1fLyM
i95z0nqtduV03Ab0FoisqfL4K08n9BbJroCdxmyDE3pLZNuB7vaB7tfQWyKJ
j/Zfcit3Ru8Fufh2S17SYRf0TORBbkZrtY8restk5PvnX3XOuaK3Qs485mru
ko3orZCF3jtNhopN6K2S72r2dL2M34zeS6L+seoHup8beq9Iac0juZXRDT0K
dAh5GRY97jhPAZ8h64zFc1vQpwB7x5W8HIEHmM+fBXxYfCRsVumBfRbAclKF
pJg80KPCgdo7Xwyn8NCjglq8Vx2p46FHhaaBMNl1gSd+Dw0UyV1/+6g80aPB
H+XMMyqTJ3qWoP+csZ0q90LPEsqGiv2zdV7oWYJrR03imMAbPTq8zqE9e0vl
jR4dFD3xxqsmb/SsoLI4Mn+z3Ac9K0gzdZWV6nzQs4LaYInEIPBFzxpGBrtK
4lW+6FnD0baI4hsmX/QYsLvobEiQ3A89BrCu5LcqdX7oMeA603p6WeCPng0E
1ubOvavyR88GRJdiB26a/NGzhem+6hKpPAA9W5hSNrDrdAHo2cJYR2YRVRiI
nh3MyfIG31cFomcHxtvjNoOmQPTs4WlFTlCoPAg9e/CTXw6t1wWhZw+tCz1S
KyEfPSY4J7S4Z6n46DFhqSVoedjER48F/a6/9YfJBeixQCOyrbqgE6DHAmWd
/V6GUIieA8iSFl+cUAnRc4Abal3j7yYhemwYfZy0K1y+Fc8XG+bjS+836rai
z4aZ86c6LJ1FuM+GgMJ6amiUCPvYsOhWtCdTIUKPA37jhyo0WhF6HPgyJnlg
cFKEHgfi9P0surMYPQ6cfaMvJjRKjB4HdjcXlGcqxOg5wjs9jJ81WjF6jpAf
raQNTYrRc4T9muDtdGcJeo7QamKcCo2SoOcIiQ+8rmYqJOhxQfle7bRGK8H/
wwWH1ELe0KQEPS6M6u8fpjtL0eNC6i+3qkKjpOhxoXdjbF+mQoreBuicP72i
0UrhX//Q8c8=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10ntM01cUB/BSoDwLfYFQrFCgbxoUhYSHFgYJxDkM/KFAowErEGTgJm6L
yGMYTQg4MFhhPBzOLYBbGDBQ98J7GJOCwYkob8JrQtHiQCgCBWFCz07yy83N
75zP95ffvfxTZ6MTqRQKJfH9s73+X71kKO6IXqsoK9+uOyTJOXW+dnZKUbGz
/5Wkl4qL6T+OKPbvVDuJTz/TF57zFN93kQaq/9RgaKvCqPWQAO2tj37vqCEH
dvqfEd+8vMaV1S6SnLRd/STbwlcb6zRAKnfmh4izVbO688YEedy9XaNEdT23
d6pimhi9CSLM79t7sfIVMeZNEv3d5uqGsnn0/yH1uty/B8MXcf4FWayg+4+3
6TFvhlSrPEdtA1bQmyWqrod/Xm5cQ+8lWTtTN5Mi2EBPR1RLjUfHvt5Eb474
SOtC8q5QwOj9S3xFOaWGVhMwegvkmKHki5fLVDD2L5BIw2GxUm4GRv8NUaQ3
jSlPm+P8IhFlFD96W0EDY94SMYQ+cfN7aoGenlhSLkk8LKzQ05OY08ePdgRZ
o7dMXi00eIvO2aD3lsT4N/9wpNYWvRXSpTNdChqlo7dKLm89rnrHsEdvlYSk
Ufu73BnorZHhjtEek1YGegaS7634S3ycid46kVvpcoPfMNHbIPsmYr87XMhC
b4PsFRfcjhCw0XtHVhtOPgokbPQ2SXJuWZggloPeFvnAL9WFtsRBjwIneZ1B
41cdsJ8CEmpYdpPQEX0KzN5vq8gGRzDePxNQd/QeCovbhXkmoEobodD0u9Cj
gureZnL7V07oUaFpbmAuS+SM3vtzUtLWfdqc8XtMoaq/eHE6joueKSy67ZGU
6rnomUHOKlcXWuSCnhnc4/+UNS/ajZ4ZFBbe4pa37UbPHBRRovVgJQ89cxh3
KY/U6nno0eCZgBF8tWgPejS4NmtY9ha7okcDWcTNkt42V/QsIHIhhPub3A09
C6j9/LOLBZlu6FlCjB39QpzGDT1LcFOM8KQcPnqWMNV9JWMtno+eFThE1Vzq
rOejZwXxkdroMgMfPWsIct2jSwx3R88aPnQ8FXVA7Y6eNdzh8Qupk+7o2cAF
rs/NHrkHejYQGD1d+E2mB3q2ILViKz/WeKBnCw8KxHYBHE/0bOFg5/46iwRP
9OhQ1PJa1lfviR4d/L5sr7xt8ETPDu4/H1s7Gy5Azw74MnnEQbUAPTuoOpaU
bz0pQM8eOLGsPwbkQvTsAW4Uvfg+U4geA1wzWKbnNEK8XwxgZTU7KTgi9Bng
YpcitE0Q4TwD/L61lw/VizCPAektqfIagwg9JjikeIkzwsXoMSGt7zUvWC1G
jwkPHAPt6ZNi9Jjwi+TaxpBcgh4TioqVMzWZEvRYEPRwqztDI0GPBZYlzxuD
OVL0WFC9T1xCT5CixwLNieBPh+ul6LHgUKAystYgRY8NrV6NkvPhMvw/bBAW
f2IaopahxwZeQucIfVKGHhvyB8d+HpZ7oceGu9r+/NpML/Q4wGp5cuK8xgv+
A2BY7fo=
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[\\(Log\\), \\(10\\)]\\)[|\[Kappa]|]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Deformation magnitude( Right approach) \"", 
           TraditionalForm], 
         PlotRange -> {{-5., 0}, {-23.77762543822253, 4.83627106564958}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: -4. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: -3. )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.872339176565969*^9, 3.8723409707081823`*^9, 
  3.872502028058148*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"6a004d16-6f35-4841-9ebc-143a4650579a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Study of approach of (intersections of) thresholds", "Subsection",
 CellChangeTimes->{{3.8723381972270937`*^9, 3.872338239999392*^9}, {
  3.872339252533894*^9, 
  3.8723392621252413`*^9}},ExpressionUUID->"1f495613-cca4-4fc7-af00-\
f95a667ab1cb"],

Cell["We can display the supergraph", "Text",
 CellChangeTimes->{{3.872450360301077*^9, 
  3.872450364048321*^9}},ExpressionUUID->"e613583c-27f8-489f-b7f6-\
fcc686e34fe4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetSuperGraph", "[", 
  RowBox[{"SGYAMLinfo", ",", 
   RowBox[{"ShowVertexLabels", "->", "Automatic"}], ",", 
   RowBox[{"Size", "->", "1000"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8724503711224737`*^9, 3.8724503846383553`*^9}, {
  3.872450479492506*^9, 3.872450488491167*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"48d699ea-361d-4a46-984f-fbdb8ac61fed"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
      14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
       10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
       13}, {14, 12}, {14, 13}}, Null}, {
      ImageSize -> 1000, VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[CompressedData["
1:eJxTTMoPSmVmYGAQBGImKIaBA47mN0yr3ti/KJgoumvVC3sn6Y4Zok137Bks
ljQJ+CfZM/CtrG7kdcWQ5+j/yRNcKecQ81tNxrjhjv2tjJcFeccUHGDmosu/
cm83mAOUr3rS4fq8/g2GfolN7FJa8ZIOR/6aPbhSfsf+WrXPAY4YBgeOL3wS
m0vvYNiPLn8i6c7N0kwOh/89qhkrvzzDMM8udf5PvShRh2v9k07WvDtqv6x4
dUJ1OodDQHOrQ+mLowTNQ1ePLr/bSuYnz3EBh0/nmh+rVr3AsM9fIuVn3TEB
hyMVx5WS9u23DznpPMkmUtThmcXtBULfMd2LLk/IPHT3obsH3Tx0eXTzAIKA
+Cs=
         "], 0.05945272932439477]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.8899182532277834}, 0.05945272932439477], 
         InsetBox["4", 
          Offset[{2, 2}, {0.05945272932439477, 0.9493709825521781}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7708406850101968, 0.44543971915884495}, 
          0.05945272932439477], 
         InsetBox["5", 
          Offset[{2, 2}, {0.8302934143345915, 0.5048924484832398}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.002234966513362302, 0.0006424791566321253}, 
          0.05945272932439477], 
         InsetBox["2", 
          Offset[{2, 2}, {0.06168769583775707, 0.060095208481026896}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.61848087571321, 0.4453246855663815}, 0.05945272932439477],
          InsetBox["6", 
          Offset[{2, 2}, {7.677933605037605, 0.5047774148907762}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.387561348430996, 0.}, 0.05945272932439477], 
         InsetBox["3", 
          Offset[{2, 2}, {8.44701407775539, 0.05945272932439477}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.38791038180712, 0.8906132085895841}, 0.05945272932439477],
          InsetBox["1", 
          Offset[{2, 2}, {8.447363111131516, 0.9500659379139789}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0449385665265067, 0.44468381261305057}, 
          0.05945272932439477], 
         InsetBox["7", 
          Offset[{2, 2}, {2.1043912958509017, 0.5041365419374453}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.342934042663295, 0.4448139371488333}, 
          0.05945272932439477], 
         InsetBox["8", Offset[{2, 2}, {6.40238677198769, 0.504266666473228}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.050528292877476, 0.17115655565705845}, 
          0.05945272932439477], 
         InsetBox["9", 
          Offset[{2, 2}, {3.109981022201871, 0.23060928498145322}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0514943142301014, 0.7173659357180496}, 
          0.05945272932439477], 
         InsetBox["10", 
          Offset[{2, 2}, {3.1109470435544964, 0.7768186650424445}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.338069820741394, 0.17134055941016751}, 
          0.05945272932439477], 
         InsetBox["11", 
          Offset[{2, 2}, {5.397522550065789, 0.23079328873456229}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.337145123851162, 0.7176602498746234}, 
          0.05945272932439477], 
         InsetBox["12", 
          Offset[{2, 2}, {5.396597853175557, 0.7771129791990181}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.193843743070899, 0.12399876927472336}, 
          0.05945272932439477], 
         InsetBox["13", 
          Offset[{2, 2}, {4.253296472395294, 0.18345149859911813}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.194385425899493, 0.7649106448793346}, 
          0.05945272932439477], 
         InsetBox["14", 
          Offset[{2, 2}, {4.253838155223888, 0.8243633742037293}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->1000]], "Output",
 CellChangeTimes->{{3.872450365430932*^9, 3.872450384862307*^9}, {
   3.872450482708547*^9, 3.8724504889455957`*^9}, 3.87250205202101*^9, 
   3.872502155479601*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"82194084-84e5-4fc6-9a72-7e34f4fe52d1"]
}, Open  ]],

Cell["And all of its LMBs, of which we show here the first twelve", "Text",
 CellChangeTimes->{{3.8724469462365313`*^9, 3.872446952268324*^9}, {
  3.872496341216971*^9, 
  3.872496348908593*^9}},ExpressionUUID->"caaaaa24-b77c-47b6-8c3e-\
61ca186b51a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"HighlightGraph", "[", 
     RowBox[{
      RowBox[{"GetSuperGraph", "[", "SGYAMLinfo", "]"}], ",", "lmb"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"lmb", ",", " ", 
      RowBox[{
       RowBox[{"GenerateAllLMBs", "[", "SGYAMLinfo", "]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{";;", "12"}], "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], "//", 
  RowBox[{
   RowBox[{"Multicolumn", "[", 
    RowBox[{"#", ",", "6"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.87244634427971*^9, 3.8724464233501368`*^9}, {
  3.87249635294987*^9, 3.8724963556940937`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"f0be899f-d5d7-4be1-8af3-2437d18849f5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {10, 
             DirectedEdge[14, 13], 13, 
             DirectedEdge[12, 11], 
             DirectedEdge[14, 12], 
             DirectedEdge[10, 9], 9, 11, 12, 14}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
              4.194385425899493, 0.7649106448793346}}, 0.05945272932439477], 
             ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
              4.193843743070899, 0.12399876927472336`}}, 0.05945272932439477],
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               5.338069820741394, 0.17134055941016751`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
              3.050528292877476, 0.17115655565705845`}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               5.337145123851162, 0.7176602498746234}}, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], DiskBox[8, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[11, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[13, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[14, 0.05945272932439477]}}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {10, 
             DirectedEdge[14, 13], 13, 
             DirectedEdge[12, 11], 
             DirectedEdge[10, 9], 9, 11, 
             DirectedEdge[10, 14], 12, 14}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               4.194385425899493, 0.7649106448793346}}, 0.05945272932439477]},
              ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
              4.193843743070899, 0.12399876927472336`}}, 0.05945272932439477],
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               5.338069820741394, 0.17134055941016751`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
              3.050528292877476, 0.17115655565705845`}}, 0.05945272932439477],
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              5.337145123851162, 0.7176602498746234}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], DiskBox[8, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[11, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[13, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[14, 0.05945272932439477]}}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {10, 13, 
             DirectedEdge[11, 13], 
             DirectedEdge[12, 11], 
             DirectedEdge[10, 9], 9, 11, 
             DirectedEdge[10, 14], 12, 14}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               4.194385425899493, 0.7649106448793346}}, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               5.338069820741394, 0.17134055941016751`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
              3.050528292877476, 0.17115655565705845`}}, 0.05945272932439477],
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              5.337145123851162, 0.7176602498746234}}, 0.05945272932439477], 
             ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              4.193843743070899, 0.12399876927472336`}}, 
              0.05945272932439477]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], DiskBox[8, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[11, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[13, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[14, 0.05945272932439477]}}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {
             DirectedEdge[13, 9], 10, 13, 
             DirectedEdge[12, 11], 
             DirectedEdge[14, 12], 
             DirectedEdge[10, 9], 9, 11, 12, 14}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
              4.194385425899493, 0.7649106448793346}}, 0.05945272932439477], 
             ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
              4.193843743070899, 0.12399876927472336`}}, 0.05945272932439477],
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               5.338069820741394, 0.17134055941016751`}}, 
               0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               5.337145123851162, 0.7176602498746234}}, 0.05945272932439477]},
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              4.193843743070899, 0.12399876927472336`}}, 
              0.05945272932439477]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], DiskBox[8, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[11, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[13, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[14, 0.05945272932439477]}}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {10, 
             DirectedEdge[14, 13], 13, 
             DirectedEdge[12, 8], 
             DirectedEdge[14, 12], 
             DirectedEdge[10, 9], 9, 12, 8, 14}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
              4.194385425899493, 0.7649106448793346}}, 0.05945272932439477], 
             ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
              4.193843743070899, 0.12399876927472336`}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               6.342934042663295, 0.4448139371488333}}, 0.05945272932439477]},
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
              3.050528292877476, 0.17115655565705845`}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               5.337145123851162, 0.7176602498746234}}, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[8, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             DiskBox[11, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[13, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[14, 0.05945272932439477]}}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {10, 
             DirectedEdge[14, 13], 13, 
             DirectedEdge[12, 11], 
             DirectedEdge[12, 8], 
             DirectedEdge[10, 9], 9, 11, 12, 8, 14}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
              4.194385425899493, 0.7649106448793346}}, 0.05945272932439477], 
             ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
              4.193843743070899, 0.12399876927472336`}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               6.342934042663295, 0.4448139371488333}}, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               5.338069820741394, 0.17134055941016751`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
              3.050528292877476, 0.17115655565705845`}}, 0.05945272932439477],
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              5.337145123851162, 0.7176602498746234}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[8, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[11, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[13, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[14, 0.05945272932439477]}}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {10, 
             DirectedEdge[14, 13], 13, 
             DirectedEdge[11, 13], 
             DirectedEdge[12, 11], 
             DirectedEdge[10, 9], 9, 11, 12, 14}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
              4.194385425899493, 0.7649106448793346}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               5.338069820741394, 0.17134055941016751`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
              3.050528292877476, 0.17115655565705845`}}, 0.05945272932439477],
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              5.337145123851162, 0.7176602498746234}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], DiskBox[8, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[11, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[13, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[14, 0.05945272932439477]}}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {10, 
             DirectedEdge[12, 11], 
             DirectedEdge[14, 12], 
             DirectedEdge[10, 9], 9, 11, 
             DirectedEdge[10, 14], 12, 14}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               4.194385425899493, 0.7649106448793346}}, 0.05945272932439477]},
              ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
              4.193843743070899, 0.12399876927472336`}}, 0.05945272932439477],
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               5.338069820741394, 0.17134055941016751`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
              3.050528292877476, 0.17115655565705845`}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               5.337145123851162, 0.7176602498746234}}, 0.05945272932439477]},
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              4.193843743070899, 0.12399876927472336`}}, 
              0.05945272932439477]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], DiskBox[8, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[11, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             DiskBox[13, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[14, 0.05945272932439477]}}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {
             DirectedEdge[13, 9], 10, 
             DirectedEdge[14, 13], 13, 
             DirectedEdge[12, 11], 
             DirectedEdge[10, 9], 9, 11, 12, 14}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
              4.194385425899493, 0.7649106448793346}}, 0.05945272932439477], 
             ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
              4.193843743070899, 0.12399876927472336`}}, 0.05945272932439477],
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               5.338069820741394, 0.17134055941016751`}}, 
               0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              5.337145123851162, 0.7176602498746234}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], DiskBox[8, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[11, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[13, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[14, 0.05945272932439477]}}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {
             DirectedEdge[13, 9], 10, 13, 
             DirectedEdge[11, 13], 
             DirectedEdge[12, 11], 
             DirectedEdge[10, 9], 9, 11, 12}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
              4.194385425899493, 0.7649106448793346}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               5.338069820741394, 0.17134055941016751`}}, 
               0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              5.337145123851162, 0.7176602498746234}}, 0.05945272932439477], 
             ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              4.193843743070899, 0.12399876927472336`}}, 
              0.05945272932439477]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], DiskBox[8, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[11, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[13, 0.05945272932439477]}, 
             DiskBox[14, 0.05945272932439477]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {10, 
             DirectedEdge[14, 13], 13, 
             DirectedEdge[11, 13], 
             DirectedEdge[12, 8], 
             DirectedEdge[10, 9], 9, 11, 12, 8, 14}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
              4.194385425899493, 0.7649106448793346}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               6.342934042663295, 0.4448139371488333}}, 0.05945272932439477]},
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
              3.050528292877476, 0.17115655565705845`}}, 0.05945272932439477],
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              5.337145123851162, 0.7176602498746234}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[8, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[11, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[13, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[14, 0.05945272932439477]}}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
          14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
           10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
           13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {10, 
             DirectedEdge[14, 13], 13, 
             DirectedEdge[12, 8], 
             DirectedEdge[10, 9], 9, 
             DirectedEdge[10, 14], 12, 8, 14}, ImageSize -> 300}]]}, 
        TagBox[
         GraphicsGroupBox[
          GraphicsComplexBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
           0.44543971915884495`}, {0.002234966513362302, 
           0.0006424791566321253}, {7.61848087571321, 0.4453246855663815}, {
           8.387561348430996, 0.}, {8.38791038180712, 0.8906132085895841}, {
           2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295, 
           0.4448139371488333}, {3.050528292877476, 0.17115655565705845`}, {
           3.0514943142301014`, 0.7173659357180496}, {5.338069820741394, 
           0.17134055941016751`}, {5.337145123851162, 0.7176602498746234}, {
           4.193843743070899, 0.12399876927472336`}, {4.194385425899493, 
           0.7649106448793346}}, {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
              0.44543971915884495`}}, 0.05945272932439477], 
             ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.387561348430996, 0.}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              8.38791038180712, 0.8906132085895841}}, 0.05945272932439477], 
             ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
              6.342934042663295, 0.4448139371488333}}, 0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              0.7708406850101968, 0.44543971915884495`}}, 
              0.05945272932439477], 
             ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
              3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477],
              ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
              2.0449385665265067`, 0.44468381261305057`}}, 
              0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               3.050528292877476, 0.17115655565705845`}}, 
               0.05945272932439477]}, 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
               4.194385425899493, 0.7649106448793346}}, 0.05945272932439477]},
              ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
              4.193843743070899, 0.12399876927472336`}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
               6.342934042663295, 0.4448139371488333}}, 0.05945272932439477]},
              ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
              5.338069820741394, 0.17134055941016751`}}, 0.05945272932439477],
              ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
              3.050528292877476, 0.17115655565705845`}}, 0.05945272932439477],
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
              5.337145123851162, 0.7176602498746234}}, 0.05945272932439477], 
             {Hue[1, 1, 0.7], Opacity[1], 
              ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
               4.193843743070899, 0.12399876927472336`}}, 
               0.05945272932439477]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.05945272932439477], DiskBox[2, 0.05945272932439477],
              DiskBox[3, 0.05945272932439477], 
             DiskBox[4, 0.05945272932439477], DiskBox[5, 0.05945272932439477],
              DiskBox[6, 0.05945272932439477], 
             DiskBox[7, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[8, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[9, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[10, 0.05945272932439477]}, 
             DiskBox[11, 0.05945272932439477], 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[12, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[13, 0.05945272932439477]}, 
             {Hue[1, 1, 0.7], EdgeForm[{Hue[1, 1, 0.7], Opacity[1]}], 
              DiskBox[14, 0.05945272932439477]}}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->300]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.87244635129712*^9, 3.872446389544365*^9, 3.8724464265793867`*^9, 
   3.87244668272738*^9, 3.872446888598564*^9, 3.87244862932085*^9, 
   3.872450495767726*^9, 3.8724963574985332`*^9, 3.872502052395854*^9, {
   3.872502129042328*^9, 3.872502156154792*^9}},
 CellLabel->
  "Out[108]=",ExpressionUUID->"744c9e76-336a-4e2f-a9f3-27d37bb6133f"]
}, Open  ]],

Cell["\<\
We can automatically generate all E-surfaces (the only slow part is finding \
whether or not points exists on them)\
\>", "Text",
 CellChangeTimes->{{3.872446955179543*^9, 3.87244695849123*^9}, {
  3.872450785293694*^9, 3.872450796081354*^9}, {3.872492149125217*^9, 
  3.8724921603728933`*^9}},ExpressionUUID->"580d2e08-f19b-428e-9dbc-\
c5c76638e2d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allESurfaces", "=", 
   RowBox[{"GenerateAllSGEsurfaces", "[", 
    RowBox[{"SGYAMLinfo", ",", 
     RowBox[{"paramsYaml", "->", "NoDeformationHyperparams"}], ",", 
     RowBox[{"QuietMode", "->", "True"}], ",", 
     RowBox[{"GenerateExamplePoints", "->", "True"}], ",", 
     RowBox[{"AcceptThreshold", "->", 
      SuperscriptBox["10", 
       RowBox[{"-", "20"}]]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.87244722450574*^9, 3.872447231611039*^9}, {
  3.872487463863151*^9, 3.872487477885552*^9}, {3.8724885668282127`*^9, 
  3.872488567171104*^9}, {3.872489120452227*^9, 3.8724891284645033`*^9}, {
  3.872489429296439*^9, 3.872489429747014*^9}, {3.872490114427226*^9, 
  3.8724901204679413`*^9}, {3.872490603424389*^9, 3.872490608966256*^9}, {
  3.872491026574151*^9, 3.872491036125669*^9}, {3.8724920890047197`*^9, 
  3.8724920921870832`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"cc791a1a-cd94-42c5-aca3-de31a90a751e"],

Cell["And display them:", "Text",
 CellChangeTimes->{{3.872450798222364*^9, 3.872450802629087*^9}, {
  3.8724895585099077`*^9, 
  3.872489562289156*^9}},ExpressionUUID->"b87c8d93-0256-451d-ac03-\
748890c3f84a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayESurfaces", "[", 
  RowBox[{"SGYAMLinfo", ",", "allESurfaces", ",", 
   RowBox[{"Size", "->", "300"}], ",", 
   RowBox[{"Colors", "->", 
    RowBox[{"{", "Red", "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[110]:=",ExpressionUUID->"fcd75b3f-ae5b-439b-b3b8-30e722166303"],

Cell[CellGroupData[{

Cell[BoxData["\<\"All 16 s-channel E-surfaces:\"\>"], "Print",
 CellChangeTimes->{
  3.872486149939066*^9, 3.872486284696835*^9, 3.872486415456533*^9, 
   3.872486599062746*^9, {3.872486685258947*^9, 3.872486734807609*^9}, 
   3.872492162954026*^9, 3.87249242387001*^9, 3.872502173651559*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"6ccf46c1-f4a2-4543-888d-e52ca4f52546"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {"\<\"ID 1:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[12, 8], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 4:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 7:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 10:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            TagBox[
             GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 13:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 16:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[14, 12]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {"\<\"ID 2:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 5:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 8:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[11, 13], 
                 DirectedEdge[14, 12]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 11:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 14:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], ""},
    {
     TagBox[GridBox[{
        {"\<\"ID 3:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[12, 11], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 6:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 9:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 9]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 12:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 15:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{
  3.872486149939066*^9, 3.872486284696835*^9, 3.872486415456533*^9, 
   3.872486599062746*^9, {3.872486685258947*^9, 3.872486734807609*^9}, 
   3.872492162954026*^9, 3.87249242387001*^9, 3.8725021738150806`*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"9a28762e-efb7-4ad9-92de-14e76c497deb"],

Cell[BoxData["\<\"All 12 soft E-surfaces:\"\>"], "Print",
 CellChangeTimes->{
  3.872486149939066*^9, 3.872486284696835*^9, 3.872486415456533*^9, 
   3.872486599062746*^9, {3.872486685258947*^9, 3.872486734807609*^9}, 
   3.872492162954026*^9, 3.87249242387001*^9, 3.872502173875524*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"3f342e69-bd3a-40cb-add0-8f445acfc1d1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {"\<\"ID 1:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 3:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 5:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[11, 13]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 7:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            TagBox[
             GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 9:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 11:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {"\<\"ID 2:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 4:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[10, 9], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 6:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[10, 9]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 8:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 10:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[10, 9]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 12:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{
  3.872486149939066*^9, 3.872486284696835*^9, 3.872486415456533*^9, 
   3.872486599062746*^9, {3.872486685258947*^9, 3.872486734807609*^9}, 
   3.872492162954026*^9, 3.87249242387001*^9, 3.872502174077841*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"c7b36718-4fed-4089-bac7-48891ba3c1a2"],

Cell[BoxData["\<\"All 26 internal E-surfaces:\"\>"], "Print",
 CellChangeTimes->{
  3.872486149939066*^9, 3.872486284696835*^9, 3.872486415456533*^9, 
   3.872486599062746*^9, {3.872486685258947*^9, 3.872486734807609*^9}, 
   3.872492162954026*^9, 3.87249242387001*^9, 3.872502174121085*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"ad4afcf9-0a6d-4633-b09f-9646ccface50"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {"\<\"ID 1:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 6:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 11:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 16:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 21:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 26:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {"\<\"ID 2:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            TagBox[
             GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 7:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 12:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[7, 10] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 17:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 22:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[7, 10] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], ""},
    {
     TagBox[GridBox[{
        {"\<\"ID 3:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 8:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[7, 10] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 13:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 18:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 23:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[9, 7] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], ""},
    {
     TagBox[GridBox[{
        {"\<\"ID 4:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 9:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 14:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 19:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 24:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], ""},
    {
     TagBox[GridBox[{
        {"\<\"ID 5:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 10:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[9, 7] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 15:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 20:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 25:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], ""}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{
  3.872486149939066*^9, 3.872486284696835*^9, 3.872486415456533*^9, 
   3.872486599062746*^9, {3.872486685258947*^9, 3.872486734807609*^9}, 
   3.872492162954026*^9, 3.87249242387001*^9, 3.872502174436586*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"dfd16b6a-cd7d-4d94-bfc2-2f04bd990df3"],

Cell[BoxData["\<\"All 30 composite E-surfaces:\"\>"], "Print",
 CellChangeTimes->{
  3.872486149939066*^9, 3.872486284696835*^9, 3.872486415456533*^9, 
   3.872486599062746*^9, {3.872486685258947*^9, 3.872486734807609*^9}, 
   3.872492162954026*^9, 3.87249242387001*^9, 3.8725021745295067`*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"2b80fc2e-bcf4-44dc-8b6c-de20ae006978"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {"\<\"ID 1:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 6:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 11:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 16:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 21:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 26:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {"\<\"ID 2:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 7:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 12:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.8, 0.6, 0.8], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.8, 0.6, 0.8], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.8, 0.6, 0.8], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.8, 0.6, 0.8], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.8, 0.6, 0.8], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 {Hue[0.8, 0.6, 0.8], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 17:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[12, 11], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 22:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 27:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {"\<\"ID 3:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[14, 12]}, 
               GraphHighlightStyle -> {
                DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 8:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 13:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[7, 10] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 18:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 23:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 28:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 9]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {"\<\"ID 4:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[11, 13], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[14, 12] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[7, 10] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 9:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.8, 0.6, 0.8], 
                    Opacity[1]]}, 
                 DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.8, 0.6, 0.8], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.8, 0.6, 0.8], 
                    Opacity[1]]}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.8, 0.6, 0.8], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.8, 0.6, 0.8], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {Hue[0.8, 0.6, 0.8], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 14:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 19:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 24:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[14, 13], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[14, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 29:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {"\<\"ID 5:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[8, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 10:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9]}, 
               GraphHighlightStyle -> {DirectedEdge[13, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[11, 13] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 15:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[9, 7], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[10, 14]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[9, 7] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 20:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[13, 9], 
                 DirectedEdge[9, 7], 
                 DirectedEdge[11, 13], 
                 DirectedEdge[12, 11], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11]}, 
               GraphHighlightStyle -> {
                DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[12, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[9, 7] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[11, 13] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  3.0514943142301014`, 0.7173659357180496}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                   2.0449385665265067`, 0.44468381261305057`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                  4.194385425899493, 0.7649106448793346}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                   4.193843743070899, 0.12399876927472336`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 25:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[12, 8], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[8, 11], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, 
                 DirectedEdge[10, 14] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[8, 11] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[7, 10] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[12, 8] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  5.337145123851162, 0.7176602498746234}}, 
                  0.05945272932439477], 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {"\<\"ID 30:\"\>", 
         GraphicsBox[
          NamespaceBox["NetworkGraphics",
           DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
              14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {
               7, 10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 
               11}, {11, 13}, {14, 12}, {14, 13}}, Null}, {
              GraphHighlight -> {
                 DirectedEdge[12, 11], 
                 DirectedEdge[12, 8], 
                 DirectedEdge[14, 12], 
                 DirectedEdge[10, 9], 
                 DirectedEdge[10, 14], 
                 DirectedEdge[7, 10]}, 
               GraphHighlightStyle -> {
                DirectedEdge[12, 11] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 9] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[14, 12] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}, DirectedEdge[10, 14] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, DirectedEdge[7, 10] -> {EdgeStyle -> {
                    RGBColor[1, 0, 0]}}, 
                 DirectedEdge[12, 8] -> {EdgeStyle -> Directive[
                    Hue[0.14, 1, 0.9], 
                    Opacity[1]]}}, ImageSize -> 300}]]}, 
            
            TagBox[GraphicsGroupBox[
              GraphicsComplexBox[{{0., 0.8899182532277834}, {
               0.7708406850101968, 0.44543971915884495`}, {
               0.002234966513362302, 0.0006424791566321253}, {
               7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
               0.}, {8.38791038180712, 0.8906132085895841}, {
               2.0449385665265067`, 0.44468381261305057`}, {6.342934042663295,
                0.4448139371488333}, {3.050528292877476, 
               0.17115655565705845`}, {3.0514943142301014`, 
               0.7173659357180496}, {5.338069820741394, 
               0.17134055941016751`}, {5.337145123851162, 
               0.7176602498746234}, {4.193843743070899, 
               0.12399876927472336`}, {4.194385425899493, 
               0.7649106448793346}}, {
                {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
                 ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
                  0.44543971915884495`}}, 0.05945272932439477], 
                 ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.387561348430996, 0.}}, 0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  8.38791038180712, 0.8906132085895841}}, 
                  0.05945272932439477], 
                 ArrowBox[{{7.61848087571321, 0.4453246855663815}, {
                  6.342934042663295, 0.4448139371488333}}, 
                  0.05945272932439477], 
                 ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                  0.7708406850101968, 0.44543971915884495`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
                   3.0514943142301014`, 0.7173659357180496}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{6.342934042663295, 0.4448139371488333}, {
                  5.338069820741394, 0.17134055941016751`}}, 
                  0.05945272932439477], 
                 ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
                  2.0449385665265067`, 0.44468381261305057`}}, 
                  0.05945272932439477], 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   3.050528292877476, 0.17115655565705845`}}, 
                   0.05945272932439477]}, 
                 {RGBColor[1, 0, 0], 
                  ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
                   4.194385425899493, 0.7649106448793346}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   6.342934042663295, 0.4448139371488333}}, 
                   0.05945272932439477]}, 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{5.337145123851162, 0.7176602498746234}, {
                   5.338069820741394, 0.17134055941016751`}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
                  3.050528292877476, 0.17115655565705845`}}, 
                  0.05945272932439477], 
                 {Hue[0.14, 1, 0.9], Opacity[1], 
                  ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                   5.337145123851162, 0.7176602498746234}}, 
                   0.05945272932439477]}, 
                 ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
                  4.193843743070899, 0.12399876927472336`}}, 
                  0.05945272932439477]}, 
                {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
                 DiskBox[1, 0.05945272932439477], 
                 DiskBox[2, 0.05945272932439477], 
                 DiskBox[3, 0.05945272932439477], 
                 DiskBox[4, 0.05945272932439477], 
                 DiskBox[5, 0.05945272932439477], 
                 DiskBox[6, 0.05945272932439477], 
                 DiskBox[7, 0.05945272932439477], 
                 DiskBox[8, 0.05945272932439477], 
                 DiskBox[9, 0.05945272932439477], 
                 DiskBox[10, 0.05945272932439477], 
                 DiskBox[11, 0.05945272932439477], 
                 DiskBox[12, 0.05945272932439477], 
                 DiskBox[13, 0.05945272932439477], 
                 DiskBox[14, 0.05945272932439477]}}]],
             MouseAppearanceTag["NetworkGraphics"]],
            AllowKernelInitialization->False]],
          
          DefaultBaseStyle->{
           "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
            Hue[0.8, 1., 0.6]},
          FormatType->TraditionalForm,
          FrameTicks->None,
          ImageSize->300]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{
  3.872486149939066*^9, 3.872486284696835*^9, 3.872486415456533*^9, 
   3.872486599062746*^9, {3.872486685258947*^9, 3.872486734807609*^9}, 
   3.872492162954026*^9, 3.87249242387001*^9, 3.872502174921668*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"a6bdfd46-a0c8-48d7-9c89-7e849f521328"]
}, Open  ]]
}, Open  ]],

Cell["Or just one particular one", "Text",
 CellChangeTimes->{{3.872486421633616*^9, 
  3.872486471905896*^9}},ExpressionUUID->"354fc605-ff3e-4bc1-a716-\
cd9f47588f72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayESurface", "[", 
  RowBox[{"SGYAMLinfo", ",", 
   RowBox[{
    RowBox[{"allESurfaces", "[", "\"\<internal\>\"", "]"}], 
    "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Size", "->", "1000"}], ",", 
   RowBox[{"Colors", "->", 
    RowBox[{"{", "Red", "}"}]}], ",", 
   RowBox[{"ShowVertexLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.87244966516831*^9, 3.872449739403717*^9}, {
  3.872486428781394*^9, 3.872486480927169*^9}, {3.87248660277113*^9, 
  3.872486607775831*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"1ccd6b63-61e7-4252-aed8-bbd5ce6017c8"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{4, 5, 2, 6, 3, 1, 7, 8, 9, 10, 11, 12, 13, 
      14}, {{{1, 2}, {3, 2}, {4, 5}, {4, 6}, {7, 2}, {4, 8}, {9, 7}, {7, 
       10}, {8, 11}, {12, 8}, {10, 9}, {13, 9}, {10, 14}, {12, 11}, {11, 
       13}, {14, 12}, {14, 13}}, Null}, {GraphHighlight -> {
         DirectedEdge[13, 9], 
         DirectedEdge[11, 13], 
         DirectedEdge[10, 9], 
         DirectedEdge[14, 12], 
         DirectedEdge[7, 10]}, 
       GraphHighlightStyle -> {
        DirectedEdge[13, 9] -> {EdgeStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             Opacity[1]]}, DirectedEdge[10, 9] -> {EdgeStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             Opacity[1]]}, DirectedEdge[14, 12] -> {EdgeStyle -> {
             RGBColor[1, 0, 0]}}, DirectedEdge[11, 13] -> {EdgeStyle -> {
             RGBColor[1, 0, 0]}}, 
         DirectedEdge[7, 10] -> {EdgeStyle -> Directive[
             Hue[0.14, 1, 0.9], 
             Opacity[1]]}}, ImageSize -> 1000, 
       VertexLabels -> {Automatic}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 0.8899182532277834}, {0.7708406850101968, 
         0.44543971915884495`}}, 0.05945272932439477], 
        ArrowBox[{{0.002234966513362302, 0.0006424791566321253}, {
         0.7708406850101968, 0.44543971915884495`}}, 0.05945272932439477], 
        ArrowBox[{{7.61848087571321, 0.4453246855663815}, {8.387561348430996, 
         0.}}, 0.05945272932439477], 
        ArrowBox[{{7.61848087571321, 0.4453246855663815}, {8.38791038180712, 
         0.8906132085895841}}, 0.05945272932439477], 
        ArrowBox[{{7.61848087571321, 0.4453246855663815}, {6.342934042663295, 
         0.4448139371488333}}, 0.05945272932439477], 
        ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
         0.7708406850101968, 0.44543971915884495`}}, 0.05945272932439477], 
        {Hue[0.14, 1, 0.9], Opacity[1], 
         ArrowBox[{{2.0449385665265067`, 0.44468381261305057`}, {
          3.0514943142301014`, 0.7173659357180496}}, 0.05945272932439477]}, 
        ArrowBox[{{6.342934042663295, 0.4448139371488333}, {5.338069820741394,
          0.17134055941016751`}}, 0.05945272932439477], 
        ArrowBox[{{3.050528292877476, 0.17115655565705845`}, {
         2.0449385665265067`, 0.44468381261305057`}}, 0.05945272932439477], 
        {Hue[0.14, 1, 0.9], Opacity[1], 
         ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
          3.050528292877476, 0.17115655565705845`}}, 0.05945272932439477]}, 
        ArrowBox[{{3.0514943142301014`, 0.7173659357180496}, {
         4.194385425899493, 0.7649106448793346}}, 0.05945272932439477], 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{5.338069820741394, 0.17134055941016751`}, {
          4.193843743070899, 0.12399876927472336`}}, 0.05945272932439477]}, 
        ArrowBox[{{5.337145123851162, 0.7176602498746234}, {6.342934042663295,
          0.4448139371488333}}, 0.05945272932439477], 
        ArrowBox[{{5.337145123851162, 0.7176602498746234}, {5.338069820741394,
          0.17134055941016751`}}, 0.05945272932439477], 
        {Hue[0.14, 1, 0.9], Opacity[1], 
         ArrowBox[{{4.193843743070899, 0.12399876927472336`}, {
          3.050528292877476, 0.17115655565705845`}}, 0.05945272932439477]}, 
        {RGBColor[1, 0, 0], 
         ArrowBox[{{4.194385425899493, 0.7649106448793346}, {
          5.337145123851162, 0.7176602498746234}}, 0.05945272932439477]}, 
        ArrowBox[{{4.194385425899493, 0.7649106448793346}, {4.193843743070899,
          0.12399876927472336`}}, 0.05945272932439477]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.8899182532277834}, 0.05945272932439477], 
         InsetBox["4", 
          Offset[{2, 2}, {0.05945272932439477, 0.9493709825521781}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7708406850101968, 0.44543971915884495}, 
          0.05945272932439477], 
         InsetBox["5", 
          Offset[{2, 2}, {0.8302934143345915, 0.5048924484832398}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.002234966513362302, 0.0006424791566321253}, 
          0.05945272932439477], 
         InsetBox["2", 
          Offset[{2, 2}, {0.06168769583775707, 0.060095208481026896}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.61848087571321, 0.4453246855663815}, 0.05945272932439477],
          InsetBox["6", 
          Offset[{2, 2}, {7.677933605037605, 0.5047774148907762}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.387561348430996, 0.}, 0.05945272932439477], 
         InsetBox["3", 
          Offset[{2, 2}, {8.44701407775539, 0.05945272932439477}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.38791038180712, 0.8906132085895841}, 0.05945272932439477],
          InsetBox["1", 
          Offset[{2, 2}, {8.447363111131516, 0.9500659379139789}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0449385665265067, 0.44468381261305057}, 
          0.05945272932439477], 
         InsetBox["7", 
          Offset[{2, 2}, {2.1043912958509017, 0.5041365419374453}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.342934042663295, 0.4448139371488333}, 
          0.05945272932439477], 
         InsetBox["8", Offset[{2, 2}, {6.40238677198769, 0.504266666473228}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.050528292877476, 0.17115655565705845}, 
          0.05945272932439477], 
         InsetBox["9", 
          Offset[{2, 2}, {3.109981022201871, 0.23060928498145322}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0514943142301014, 0.7173659357180496}, 
          0.05945272932439477], 
         InsetBox["10", 
          Offset[{2, 2}, {3.1109470435544964, 0.7768186650424445}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.338069820741394, 0.17134055941016751}, 
          0.05945272932439477], 
         InsetBox["11", 
          Offset[{2, 2}, {5.397522550065789, 0.23079328873456229}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.337145123851162, 0.7176602498746234}, 
          0.05945272932439477], 
         InsetBox["12", 
          Offset[{2, 2}, {5.396597853175557, 0.7771129791990181}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.193843743070899, 0.12399876927472336}, 
          0.05945272932439477], 
         InsetBox["13", 
          Offset[{2, 2}, {4.253296472395294, 0.18345149859911813}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.194385425899493, 0.7649106448793346}, 
          0.05945272932439477], 
         InsetBox["14", 
          Offset[{2, 2}, {4.253838155223888, 0.8243633742037293}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->1000]], "Output",
 CellChangeTimes->{{3.872486443426543*^9, 3.8724864740651608`*^9}, 
   3.872486608012993*^9, {3.8724867113320713`*^9, 3.872486730327922*^9}, 
   3.872492166991021*^9, 3.872492428175271*^9, 3.872502175124598*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"e256f716-33ec-4d5d-80e4-faeee8770a2e"]
}, Open  ]],

Cell["And access a wealth of information about each, e.g.:", "Text",
 CellChangeTimes->{{3.872450197193285*^9, 3.872450207629406*^9}, {
  3.8724502957186832`*^9, 
  3.872450296486312*^9}},ExpressionUUID->"d0acc464-d31c-482b-a3b3-\
1ab7f94d0b38"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyDataset", "[", 
  RowBox[{
   RowBox[{"allESurfaces", "[", "\"\<internal\>\"", "]"}], 
   "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], "]"}]], "Input",
 CellChangeTimes->{{3.872450208833671*^9, 3.872450266461299*^9}, {
  3.872492329681402*^9, 3.872492338691738*^9}, {3.872502391926323*^9, 
  3.872502392156302*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"69f31984-c64d-43cb-bc43-65395aaa199d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "graph" -> Graph[{14, 10, 13}, {{{2, 1}, {1, 3}}, Null}, {
         VertexLabels -> {Automatic}}], "edges" -> {{
          DirectedEdge[11, 13], 
          DirectedEdge[14, 12]}, {
          DirectedEdge[7, 10], 
          DirectedEdge[10, 9], 
          DirectedEdge[13, 9]}}, 
       "edgeNames" -> {{"pq11", "pq12"}, {"pq4", "pq7", "pq8"}}, 
       "complementGraphs" -> {
         Graph[{12, 8, 11}, {{{1, 2}, {2, 3}, {1, 3}}, Null}], 
         Graph[{9, 7}, {{{1, 2}}, Null}]}, 
       "externalStructures" -> {{False, False}, {False, True}, {True, False}},
        "type" -> "internal", "IncomingEdges" -> {"pq4", "pq7", "pq8"}, 
       "OutgoingEdges" -> {"pq11", "pq12"}, "id" -> 8, 
       "Eq" -> -(
           29929. + $CellContext`k1x^2 + $CellContext`k1y^2 + \
$CellContext`k1z^2)^Rational[1, 2] - (
         29929. + ($CellContext`k1x - $CellContext`k2x)^2 + ($CellContext`k1y - \
$CellContext`k2y)^2 + ($CellContext`k1z - $CellContext`k2z)^2)^
        Rational[1, 2] - (
         15625. + $CellContext`k2x^2 + $CellContext`k2y^2 + \
$CellContext`k2z^2)^Rational[1, 2] + 
        2 (29929. + ($CellContext`k1x - $CellContext`k2x - \
$CellContext`k4x)^2 + ($CellContext`k1y - $CellContext`k2y - \
$CellContext`k4y)^2 + ($CellContext`k1z - $CellContext`k2z - \
$CellContext`k4z)^2)^Rational[1, 2], 
       "GradEq" -> {{-$CellContext`k1x (
             29929. + $CellContext`k1x^2 + $CellContext`k1y^2 + \
$CellContext`k1z^2)^
            Rational[-1, 2] + (-$CellContext`k1x + $CellContext`k2x) (
             29929. + ($CellContext`k1x - $CellContext`k2x)^2 + \
($CellContext`k1y - $CellContext`k2y)^2 + ($CellContext`k1z - \
$CellContext`k2z)^2)^Rational[-1, 2] + 
          2 ($CellContext`k1x - $CellContext`k2x - $CellContext`k4x) (
             29929. + (-$CellContext`k1x + $CellContext`k2x + \
$CellContext`k4x)^2 + (-$CellContext`k1y + $CellContext`k2y + \
$CellContext`k4y)^2 + (-$CellContext`k1z + $CellContext`k2z + \
$CellContext`k4z)^2)^
            Rational[-1, 2], -$CellContext`k1y (
             29929. + $CellContext`k1x^2 + $CellContext`k1y^2 + \
$CellContext`k1z^2)^
            Rational[-1, 2] + (-$CellContext`k1y + $CellContext`k2y) (
             29929. + ($CellContext`k1x - $CellContext`k2x)^2 + \
($CellContext`k1y - $CellContext`k2y)^2 + ($CellContext`k1z - \
$CellContext`k2z)^2)^Rational[-1, 2] + 
          2 ($CellContext`k1y - $CellContext`k2y - $CellContext`k4y) (
             29929. + (-$CellContext`k1x + $CellContext`k2x + \
$CellContext`k4x)^2 + (-$CellContext`k1y + $CellContext`k2y + \
$CellContext`k4y)^2 + (-$CellContext`k1z + $CellContext`k2z + \
$CellContext`k4z)^2)^
            Rational[-1, 2], -$CellContext`k1z (
             29929. + $CellContext`k1x^2 + $CellContext`k1y^2 + \
$CellContext`k1z^2)^
            Rational[-1, 2] + (
             29929. + ($CellContext`k1x - $CellContext`k2x)^2 + \
($CellContext`k1y - $CellContext`k2y)^2 + ($CellContext`k1z - \
$CellContext`k2z)^2)^Rational[-1, 2] (-$CellContext`k1z + $CellContext`k2z) + 
          2 ($CellContext`k1z - $CellContext`k2z - $CellContext`k4z) (
             29929. + (-$CellContext`k1x + $CellContext`k2x + \
$CellContext`k4x)^2 + (-$CellContext`k1y + $CellContext`k2y + \
$CellContext`k4y)^2 + (-$CellContext`k1z + $CellContext`k2z + \
$CellContext`k4z)^2)^
            Rational[-1, 2]}, {($CellContext`k1x - $CellContext`k2x) (
             29929. + ($CellContext`k1x - $CellContext`k2x)^2 + \
($CellContext`k1y - $CellContext`k2y)^2 + ($CellContext`k1z - \
$CellContext`k2z)^2)^Rational[-1, 2] - $CellContext`k2x (
            15625. + $CellContext`k2x^2 + $CellContext`k2y^2 + \
$CellContext`k2z^2)^Rational[-1, 2] + 
          2 (-$CellContext`k1x + $CellContext`k2x + $CellContext`k4x) (
             29929. + (-$CellContext`k1x + $CellContext`k2x + \
$CellContext`k4x)^2 + (-$CellContext`k1y + $CellContext`k2y + \
$CellContext`k4y)^2 + (-$CellContext`k1z + $CellContext`k2z + \
$CellContext`k4z)^2)^
            Rational[-1, 2], ($CellContext`k1y - $CellContext`k2y) (
             29929. + ($CellContext`k1x - $CellContext`k2x)^2 + \
($CellContext`k1y - $CellContext`k2y)^2 + ($CellContext`k1z - \
$CellContext`k2z)^2)^Rational[-1, 2] - $CellContext`k2y (
            15625. + $CellContext`k2x^2 + $CellContext`k2y^2 + \
$CellContext`k2z^2)^Rational[-1, 2] + 
          2 (-$CellContext`k1y + $CellContext`k2y + $CellContext`k4y) (
             29929. + (-$CellContext`k1x + $CellContext`k2x + \
$CellContext`k4x)^2 + (-$CellContext`k1y + $CellContext`k2y + \
$CellContext`k4y)^2 + (-$CellContext`k1z + $CellContext`k2z + \
$CellContext`k4z)^2)^
            Rational[-1, 2], (
             29929. + ($CellContext`k1x - $CellContext`k2x)^2 + \
($CellContext`k1y - $CellContext`k2y)^2 + ($CellContext`k1z - \
$CellContext`k2z)^2)^
            Rational[-1, 
              2] ($CellContext`k1z - $CellContext`k2z) - $CellContext`k2z (
            15625. + $CellContext`k2x^2 + $CellContext`k2y^2 + \
$CellContext`k2z^2)^Rational[-1, 2] + 
          2 (-$CellContext`k1z + $CellContext`k2z + $CellContext`k4z) (
             29929. + (-$CellContext`k1x + $CellContext`k2x + \
$CellContext`k4x)^2 + (-$CellContext`k1y + $CellContext`k2y + \
$CellContext`k4y)^2 + (-$CellContext`k1z + $CellContext`k2z + \
$CellContext`k4z)^2)^Rational[-1, 2]}, {0, 0, 0}, {
         2 (-$CellContext`k1x + $CellContext`k2x + $CellContext`k4x) (
            29929. + (-$CellContext`k1x + $CellContext`k2x + \
$CellContext`k4x)^2 + (-$CellContext`k1y + $CellContext`k2y + \
$CellContext`k4y)^2 + (-$CellContext`k1z + $CellContext`k2z + \
$CellContext`k4z)^2)^Rational[-1, 2], 
          2 (-$CellContext`k1y + $CellContext`k2y + $CellContext`k4y) (
            29929. + (-$CellContext`k1x + $CellContext`k2x + \
$CellContext`k4x)^2 + (-$CellContext`k1y + $CellContext`k2y + \
$CellContext`k4y)^2 + (-$CellContext`k1z + $CellContext`k2z + \
$CellContext`k4z)^2)^Rational[-1, 2], 
          2 (-$CellContext`k1z + $CellContext`k2z + $CellContext`k4z) (
            29929. + (-$CellContext`k1x + $CellContext`k2x + \
$CellContext`k4x)^2 + (-$CellContext`k1y + $CellContext`k2y + \
$CellContext`k4y)^2 + (-$CellContext`k1z + $CellContext`k2z + \
$CellContext`k4z)^2)^Rational[-1, 2]}}, 
       "ExamplePoint" -> <|
        "pq4" -> {
          13.6035863640320655907733419205567908226`22., \
-33.51192647629480767874409676603025748222`22., \
-41.50411345092376370183835594350620503256`22.}, 
         "pq7" -> {-35.87267299038223871674156007536017216876`22., 
           48.30976922248537519627896054215714495197`22., \
-29.18582211695335561460438274911054658895`22.}, 
         "pq10" -> {-41.92871300317640762313752645467608167273`22., \
-21.90713188013064750251362549273806032705`22., \
-7.34565422144166246003341369206006351051`22.}, 
         "pq13" -> {-82.10115378037349088653382495838371242503`22., 
           60.19517916803769937600816733466387836861`22., 
           11.01348748836427528202234631471660251882`22.}|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"graph"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"edges"} -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {
           TypeSystem`NestedGrid`PackagePrivate`$docPath["edges"]}], {
         "edgeNames"} -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {
           TypeSystem`NestedGrid`PackagePrivate`$docPath["edgeNames"]}], {
         "complementGraphs"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"externalStructures"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"type"} -> 
        TypeSystem`PackageScope`AtomShape[89.60000000000001], {
         "IncomingEdges"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"OutgoingEdges"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"id"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Eq"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"GradEq"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"ExamplePoint"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "graph", "edges", "edgeNames", "complementGraphs", 
        "externalStructures", "type", "IncomingEdges", "OutgoingEdges", "id", 
        "Eq", "GradEq", "ExamplePoint"}, {
        TypeSystem`Atom[Graph], 
        TypeSystem`Vector[
         TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 2], 
        TypeSystem`Vector[
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 2], 
        TypeSystem`Vector[
         TypeSystem`Atom[Graph], 2], 
        TypeSystem`Vector[
         TypeSystem`Vector[
          TypeSystem`Atom[TypeSystem`Boolean], 2], 3], 
        TypeSystem`Atom[String], 
        TypeSystem`Vector[
         TypeSystem`Atom[String], 3], 
        TypeSystem`Vector[
         TypeSystem`Atom[String], 2], 
        TypeSystem`Atom[Integer], TypeSystem`AnyType, 
        TypeSystem`Vector[
         TypeSystem`Vector[TypeSystem`AnyType, 3], 4], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration["pq10", "pq13", "pq4", "pq7"]], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 3], 4]}], 
     "Meta" -> <|
      DatasetTheme -> "Scientific", 
       ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& }|>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"graph"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"edges"} -> 
        TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {
           TypeSystem`NestedGrid`PackagePrivate`$docPath["edges"]}], {
         "edgeNames"} -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`UnknownShape[False]], 2, 
          DirectedInfinity[1], {
           TypeSystem`NestedGrid`PackagePrivate`$docPath["edgeNames"]}], {
         "complementGraphs"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"externalStructures"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"type"} -> 
        TypeSystem`PackageScope`AtomShape[89.60000000000001], {
         "IncomingEdges"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"OutgoingEdges"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"id"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Eq"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"GradEq"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"ExamplePoint"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "graph", "edges", "edgeNames", "complementGraphs", 
        "externalStructures", "type", "IncomingEdges", "OutgoingEdges", "id", 
        "Eq", "GradEq", "ExamplePoint"}, {
        TypeSystem`Atom[Graph], 
        TypeSystem`Vector[
         TypeSystem`Vector[TypeSystem`AnyType, TypeSystem`AnyLength], 2], 
        TypeSystem`Vector[
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 2], 
        TypeSystem`Vector[
         TypeSystem`Atom[Graph], 2], 
        TypeSystem`Vector[
         TypeSystem`Vector[
          TypeSystem`Atom[TypeSystem`Boolean], 2], 3], 
        TypeSystem`Atom[String], 
        TypeSystem`Vector[
         TypeSystem`Atom[String], 3], 
        TypeSystem`Vector[
         TypeSystem`Atom[String], 2], 
        TypeSystem`Atom[Integer], TypeSystem`AnyType, 
        TypeSystem`Vector[
         TypeSystem`Vector[TypeSystem`AnyType, 3], 4], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration["pq10", "pq13", "pq4", "pq7"]], 
         TypeSystem`Vector[
          TypeSystem`Atom[Real], 3], 4]}], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 12, 
     "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["graph", 
                  Style[
                  "graph", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["graph"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["graph"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               
               Graph[{14, 10, 13}, {{{2, 1}, {1, 3}}, Null}, {
                VertexLabels -> {Automatic}}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["graph"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["edges", 
                  Style[
                  "edges", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["edges"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["edges"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Center}], {
             DirectedEdge[11, 13], 
             DirectedEdge[14, 12]}}, {SpanFromAbove, {
             DirectedEdge[7, 10], 
             DirectedEdge[10, 9], 
             DirectedEdge[13, 9]}}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["edgeNames", 
                  Style[
                  "edgeNames", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["edgeNames"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["edgeNames"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Center}], {"pq11", "pq12"}}, {
           SpanFromAbove, {"pq4", "pq7", "pq8"}}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["complementGraphs", 
                  Style[
                  "complementGraphs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["complementGraphs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["complementGraphs"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
             Graph[{12, 8, 11}, {{{1, 2}, {2, 3}, {1, 3}}, Null}], 
             Graph[{9, 7}, {{{1, 2}}, Null}]}}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["externalStructures", 
                  Style[
                  "externalStructures", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["externalStructures"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["externalStructures"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["externalStructures"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["externalStructures"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["type", 
                  Style[
                  "type", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["type"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["type"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["internal", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["IncomingEdges", 
                  Style[
                  "IncomingEdges", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["IncomingEdges"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["IncomingEdges"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq4", "pq7", "pq8"}}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OutgoingEdges", 
                  Style[
                  "OutgoingEdges", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["OutgoingEdges"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutgoingEdges"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq11", "pq12"}}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+8", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Eq", 
                  Style[
                  "Eq", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Eq"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Eq"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              
              Annotation[-(
                  29929. + $CellContext`k1x^2 + $CellContext`k1y^2 + \
$CellContext`k1z^2)^Rational[1, 2] - (
                29929. + ($CellContext`k1x - $CellContext`k2x)^2 + \
($CellContext`k1y - $CellContext`k2y)^2 + ($CellContext`k1z - \
$CellContext`k2z)^2)^
               Rational[1, 2] - (
                15625. + $CellContext`k2x^2 + $CellContext`k2y^2 + \
$CellContext`k2z^2)^Rational[1, 2] + 
               2 (29929. + ($CellContext`k1x - $CellContext`k2x - \
$CellContext`k4x)^2 + ($CellContext`k1y - $CellContext`k2y - \
$CellContext`k4y)^2 + ($CellContext`k1z - $CellContext`k2z - \
$CellContext`k4z)^2)^Rational[1, 2], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Eq"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["GradEq", 
                  Style[
                  "GradEq", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["GradEq"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["GradEq"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 4], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 4], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["GradEq"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["GradEq"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ExamplePoint", 
                  Style[
                  "ExamplePoint", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ExamplePoint"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ExamplePoint"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 4], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"pq4", "pq7", "pq10", "pq13"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 4], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"pq4", "pq7", "pq10", "pq13"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ExamplePoint"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ExamplePoint"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
          FrameStyle -> GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
          Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1205., {273.634033203125, 279.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1205., {273.634033203125, 279.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.872450231488175*^9, 3.8724502667641907`*^9}, 
   3.872488571130384*^9, 3.872492175185278*^9, {3.8724923310296583`*^9, 
   3.872492341245365*^9}, {3.872492430074225*^9, 3.872492437459364*^9}, 
   3.872496451198687*^9, 3.872496595707391*^9, 3.8725021755479603`*^9, 
   3.872502392951709*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"a6d0b918-11b7-4ba0-a31a-2362b9d6bed4"]
}, Open  ]],

Cell["\<\
We can build a helper association to directly access Cutkosky cut E-surfaces.\
\
\>", "Text",
 CellChangeTimes->{{3.872339264837792*^9, 3.872339283148933*^9}, {
  3.872494398644815*^9, 
  3.872494416095825*^9}},ExpressionUUID->"d1659107-dfb8-4870-974e-\
6dce2666c26a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllCutkoskyEsurfaces", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"es", "[", "\"\<OutgoingEdges\>\"", "]"}], "->", "es"}], ",", 
      RowBox[{"{", 
       RowBox[{"es", ",", 
        RowBox[{"allESurfaces", "[", "\"\<s-channel\>\"", "]"}]}], "}"}]}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8723145188979197`*^9, 3.872314638439385*^9}, {
  3.872319910618986*^9, 3.8723199108290854`*^9}, {3.872327984578525*^9, 
  3.872328020394002*^9}, {3.872328057803029*^9, 3.8723280764568367`*^9}, {
  3.872331722890831*^9, 3.872331750705511*^9}, {3.87233185156695*^9, 
  3.872331903681058*^9}, {3.872331987890152*^9, 3.8723320467336187`*^9}, {
  3.872332214789749*^9, 3.872332375662252*^9}, {3.8723392943377523`*^9, 
  3.872339303049909*^9}, {3.872339699396571*^9, 3.8723397096434193`*^9}, {
  3.872492287783263*^9, 3.872492394752758*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"2baedf82-4980-4411-96d9-c8b9c729d3f7"],

Cell["And easily find a point on (multiple) E-surfaces as follows:", "Text",
 CellChangeTimes->{{3.872339341912092*^9, 
  3.872339354893689*^9}},ExpressionUUID->"c280353a-3db2-4e93-b4ea-\
05e526c563ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aPointToExplore", "=", 
  RowBox[{"FindPointOnEsurfaces", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AllCutkoskyEsurfaces", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<pq3\>\"", ",", "\"\<pq7\>\"", ",", "\"\<pq9\>\""}], 
        "}"}], "]"}], ",", 
      RowBox[{"AllCutkoskyEsurfaces", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<pq11\>\"", ",", "\"\<pq12\>\""}], "}"}], "]"}], ",", 
      RowBox[{"AllCutkoskyEsurfaces", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<pq5\>\"", ",", "\"\<pq6\>\""}], "}"}], "]"}]}], "}"}], 
    ",", "SGYAMLinfo", ",", "NoDeformationHyperparams", ",", 
    RowBox[{"DEBUG", "->", "False"}], ",", 
    RowBox[{"AcceptThreshold", "->", 
     SuperscriptBox["10", 
      RowBox[{"-", "25"}]]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.872339363822626*^9, 3.872339366718526*^9}, {
  3.872492450023069*^9, 3.8724924855384407`*^9}, {3.872492523539647*^9, 
  3.87249252514365*^9}, {3.872492566934928*^9, 3.872492568117855*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"e1a05e12-8639-4fd4-bbf6-095ae455682c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"pq4\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "140.64776921478857627794495338975280253116`27."}], ",", 
      "226.90564216131746399791528614555516930664`27.", ",", 
      RowBox[{"-", "106.17444717912766226643493953252154385771`27."}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"pq7\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"36.87963713834404835008865699772394647478`27.", ",", 
      RowBox[{"-", "149.64002888229757891923492375605050231657`27."}], ",", 
      "11.33002366593907494094871727272217283528`27."}], "}"}]}], ",", 
   RowBox[{"\<\"pq10\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "8.68427685049327694760774678337079849894`27.", ",", 
      "20.72751048159796562503172111105164380603`27.", ",", 
      "28.09209640779147151925579003457013853712`27."}], "}"}]}], ",", 
   RowBox[{"\<\"pq13\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "138.99261338796233659955254420322399801426`27.", ",", 
      "51.40013836441707719609330688929745953092`27.", ",", 
      "1.51846678401996723689086769324154669382`27."}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.872339487708481*^9, 3.8723397119872*^9, 
  3.872340970984171*^9, 3.872492493056817*^9, 3.872492525750085*^9, 
  3.87249256858425*^9, 3.872502175847144*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"a2d550de-c505-49cd-8c24-38b147a80145"]
}, Open  ]],

Cell["\<\
And we can verify that it is indeed located on these three E-surfaces\
\>", "Text",
 CellChangeTimes->{{3.872339533187675*^9, 
  3.8723395487063713`*^9}},ExpressionUUID->"aafeb2cc-5b2a-4297-97f1-\
7b6030809354"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyDataset", "[", 
  RowBox[{"Association", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"e", "->", 
       RowBox[{
        RowBox[{"AllCutkoskyEsurfaces", "[", "e", "]"}], "[", "\"\<Eq\>\"", 
        "]"}]}], "/.", 
      RowBox[{"GenerateLoopMomenta", "[", 
       RowBox[{"SGYAMLinfo", ",", 
        RowBox[{"moms", "->", "aPointToExplore"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"e", ",", 
       RowBox[{"Keys", "[", "AllCutkoskyEsurfaces", "]"}]}], "}"}]}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.872339550231119*^9, 3.872339676916547*^9}, {
  3.872492640880485*^9, 3.8724926751318417`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"40c8c02e-5ed1-44b5-8497-f226e01db19f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|{"pq5", "pq6"} -> 
       0., {"pq4", "pq3"} -> -329.2691190543568, {"pq5", "pq10", "pq12"} -> 
       35.97516137233322, {"pq11", "pq6", "pq10"} -> 
       35.97516137233322, {
        "pq3", "pq7", "pq9"} -> -1.1368683772161603`*^-13, {
        "pq4", "pq7", "pq8"} -> -1.1368683772161603`*^-13, {
        "pq5", "pq9", "pq10", "pq13"} -> 
       150.04947999247133`, {"pq11", "pq12"} -> 
       0., {"pq3", "pq7", "pq12", "pq13"} -> 
       182.32559056791092`, {"pq6", "pq10", "pq8", "pq13"} -> 
       150.04947999247133`, {"pq9", "pq8"} -> -68.25127194777292, {
        "pq4", "pq7", "pq11", "pq13"} -> 
       182.32559056791092`, {"pq9", "pq11", "pq13"} -> 
       114.07431862013811`, {"pq4", "pq5", "pq7", "pq10", "pq13"} -> 
       218.30075194024425`, {"pq3", "pq7", "pq6", "pq10", "pq13"} -> 
       218.30075194024425`, {"pq8", "pq12", "pq13"} -> 114.07431862013811`|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[False], 
         TypeSystem`PackageScope`AtomShape[60]]], 16, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Vector[
        TypeSystem`Atom[String], TypeSystem`AnyLength], 
       TypeSystem`Atom[Real], 16], 
     "Meta" -> <|
      DatasetTheme -> "Scientific", 
       ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& }|>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[False], 
         TypeSystem`PackageScope`AtomShape[60]]], 16, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Vector[
        TypeSystem`Atom[String], TypeSystem`AnyLength], 
       TypeSystem`Atom[Real], 16], "Path" -> {}, "DisplayedRowCount" -> 16, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 16, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"pq5", "pq6"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"pq5", "pq6"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq5", "pq6"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq5", "pq6"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq5", "pq6"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"pq4", "pq3"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"pq4", "pq3"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq4", "pq3"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq4", "pq3"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-329.2691190543568", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq4", "pq3"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pq5", "pq10", "pq12"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"pq5", "pq10", "pq12"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq5", "pq10", "pq12"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq5", "pq10", "pq12"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+35.97516137233322", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq5", "pq10", "pq12"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pq11", "pq6", "pq10"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"pq11", "pq6", "pq10"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq11", "pq6", "pq10"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq11", "pq6", "pq10"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+35.97516137233322", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq11", "pq6", "pq10"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"pq3", "pq7", "pq9"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"pq3", "pq7", "pq9"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq3", "pq7", "pq9"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq3", "pq7", "pq9"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-1.1368683772161603e-13", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq3", "pq7", "pq9"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"pq4", "pq7", "pq8"}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"pq4", "pq7", "pq8"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq4", "pq7", "pq8"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq4", "pq7", "pq8"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-1.1368683772161603e-13", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq4", "pq7", "pq8"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pq5", "pq9", "pq10", "pq13"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"pq5", "pq9", "pq10", "pq13"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq5", "pq9", "pq10", "pq13"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq5", "pq9", "pq10", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+150.04947999247133", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq5", "pq9", "pq10", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"pq11", "pq12"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"pq11", "pq12"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq11", "pq12"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq11", "pq12"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq11", "pq12"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pq3", "pq7", "pq12", "pq13"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"pq3", "pq7", "pq12", "pq13"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq3", "pq7", "pq12", "pq13"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq3", "pq7", "pq12", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+182.32559056791092", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq3", "pq7", "pq12", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pq6", "pq10", "pq8", "pq13"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"pq6", "pq10", "pq8", "pq13"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq6", "pq10", "pq8", "pq13"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq6", "pq10", "pq8", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+150.04947999247133", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq6", "pq10", "pq8", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"pq9", "pq8"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"pq9", "pq8"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq9", "pq8"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq9", "pq8"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-68.25127194777292", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq9", "pq8"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pq4", "pq7", "pq11", "pq13"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"pq4", "pq7", "pq11", "pq13"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq4", "pq7", "pq11", "pq13"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq4", "pq7", "pq11", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+182.32559056791092", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq4", "pq7", "pq11", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pq9", "pq11", "pq13"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"pq9", "pq11", "pq13"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq9", "pq11", "pq13"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq9", "pq11", "pq13"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+114.07431862013811", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq9", "pq11", "pq13"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pq4", "pq5", "pq7", "pq10", "pq13"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"pq4", "pq5", "pq7", "pq10", "pq13"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq4", "pq5", "pq7", "pq10", "pq13"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq4", "pq5", "pq7", "pq10", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+218.30075194024425", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq4", "pq5", "pq7", "pq10", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pq3", "pq7", "pq6", "pq10", "pq13"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"pq3", "pq7", "pq6", "pq10", "pq13"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq3", "pq7", "pq6", "pq10", "pq13"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq3", "pq7", "pq6", "pq10", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+218.30075194024425", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq3", "pq7", "pq6", "pq10", "pq13"}]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"pq8", "pq12", "pq13"}, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[{"pq8", "pq12", "pq13"}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[{"pq8", "pq12", "pq13"}]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq8", "pq12", "pq13"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+114.07431862013811", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[{"pq8", "pq12", "pq13"}]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
          FrameStyle -> GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
          Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{333., {222.634033203125, 228.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{333., {222.634033203125, 228.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.872339643414641*^9, 3.872339677454823*^9}, 
   3.872339713124733*^9, 3.8723409711022882`*^9, {3.872492616496921*^9, 
   3.8724926458242607`*^9}, 3.8724926770947123`*^9, 3.872502175959573*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"132bd936-e6d2-4da1-99ca-cefa3fbc4d47"]
}, Open  ]],

Cell["Look at all momenta for this configuration:", "Text",
 CellChangeTimes->{{3.872339927222931*^9, 
  3.872339937894681*^9}},ExpressionUUID->"e553fa40-490e-47b5-b5f7-\
839bc0717614"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComputeAllMomenta", "[", 
  RowBox[{
  "aPointToExplore", ",", "SGYAMLinfo", ",", "NoDeformationHyperparams", ",", 
   
   RowBox[{"DatasetOutput", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{3.872339960844132*^9},
 CellLabel->
  "In[117]:=",ExpressionUUID->"ca390118-94a1-4ea8-96a6-31d81902f37e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "pq1" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 0.|>, 
       "pq10" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 8.684276850493276, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 20.727510481597967`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 28.092096407791473`|>, 
       "pq11" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> -316.520019741095, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 325.14553267919797`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -119.0229376290867|>, 
       "pq12" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> -316.520019741095, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 325.14553267919797`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -119.0229376290867|>, 
       "pq13" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 138.99261338796234`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 51.400138364417074`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 1.5184667840199673`|>, 
       "pq2" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 0.|>, 
       "pq3" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> -140.64776921478858`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 226.90564216131747`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -106.17444717912767`|>, 
       "pq4" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> -140.64776921478858`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 226.90564216131747`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -106.17444717912767`|>, 
       "pq5" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> -325.2042965915882, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 304.4180221976, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -147.11503403687817`|>, 
       "pq6" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> -325.2042965915882, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 304.4180221976, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -147.11503403687817`|>, 
       "pq7" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 36.87963713834405, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> -149.64002888229757`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 11.330023665939075`|>, 
       "pq8" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> -177.52740635313262`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 376.545671043615, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -117.50447084506673`|>, 
       "pq9" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> -177.52740635313262`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 376.545671043615, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -117.50447084506673`|>, 
       "q1" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 500.|>, 
       "q2" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -500.|>, 
       "q3" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 500.|>, 
       "q4" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -500.|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[5]} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 3, {All}]]], 17, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 17], 
     "Meta" -> <|
      DatasetTheme -> "Scientific", 
       ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& }|>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[5]} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 3, {All}]]], 17, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 17], "Path" -> {}, "DisplayedRowCount" -> 
     17, "DisplayedColumnCount" -> 3, "DataRowCount" -> 17, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SubscriptBox[\(p\), \(x\)]\)", 
                  Style[
                  "\!\(\*SubscriptBox[\(p\), \(x\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SubscriptBox[\(p\), \(y\)]\)", 
                  Style[
                  "\!\(\*SubscriptBox[\(p\), \(y\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SubscriptBox[\(p\), \(z\)]\)", 
                  Style[
                  "\!\(\*SubscriptBox[\(p\), \(z\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq1", 
                  Style[
                  "pq1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq10", 
                  Style[
                  "pq10", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq10"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+8.684276850493276", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+20.727510481597967", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+28.092096407791473", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq11", 
                  Style[
                  "pq11", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq11"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-316.520019741095", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+325.14553267919797", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-119.0229376290867", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq12", 
                  Style[
                  "pq12", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq12"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-316.520019741095", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+325.14553267919797", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-119.0229376290867", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq13", 
                  Style[
                  "pq13", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq13"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+138.99261338796234", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+51.400138364417074", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.5184667840199673", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq2", 
                  Style[
                  "pq2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq3", 
                  Style[
                  "pq3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-140.64776921478858", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+226.90564216131747", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-106.17444717912767", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq4", 
                  Style[
                  "pq4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq4"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-140.64776921478858", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+226.90564216131747", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-106.17444717912767", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq5", 
                  Style[
                  "pq5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq5"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-325.2042965915882", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+304.4180221976", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-147.11503403687817", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq6", 
                  Style[
                  "pq6", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq6"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-325.2042965915882", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+304.4180221976", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-147.11503403687817", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq7", 
                  Style[
                  "pq7", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq7"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+36.87963713834405", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-149.64002888229757", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+11.330023665939075", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq8", 
                  Style[
                  "pq8", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq8"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-177.52740635313262", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+376.545671043615", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-117.50447084506673", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq9", 
                  Style[
                  "pq9", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq9"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-177.52740635313262", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+376.545671043615", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-117.50447084506673", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q1", 
                  Style[
                  "q1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q2", 
                  Style[
                  "q2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q3", 
                  Style[
                  "q3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q4", 
                  Style[
                  "q4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q4"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
          FrameStyle -> GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
          Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{469., {250.134033203125, 255.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{469., {250.134033203125, 255.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8723399738771877`*^9, 3.87234097123454*^9, 
  3.872492686795542*^9, 3.872502176299284*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"ffbecff9-8c16-431a-8b39-6c95dca00c29"]
}, Open  ]],

Cell["\<\
Evaluate the LU expression on it, first without E-surface analysis:\
\>", "Text",
 CellChangeTimes->{{3.872339967216392*^9, 3.872339972523662*^9}, {
  3.872497845297127*^9, 
  3.8724978530522757`*^9}},ExpressionUUID->"0911bfde-02d0-4c43-8327-\
e711b04b097b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyDataset", "[", 
  RowBox[{"EvaluatePoint", "[", 
   RowBox[{
   "HookWithDeformation", ",", "aPointToExplore", ",", "SGYAMLinfo", ",", 
    "NoDeformationHyperparams", ",", "\[IndentingNewLine]", 
    RowBox[{"DEBUG", "->", "False"}], ",", 
    RowBox[{"f128", "->", "True"}], ",", 
    RowBox[{"IncludeJacobian", "->", "False"}], ",", 
    RowBox[{"Phase", "->", "Null"}], ",", 
    RowBox[{"Seed", "->", "1"}]}], "\[IndentingNewLine]", "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.87249363634052*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"1fa486a7-bd7f-42c5-b681-752fcfdffcfb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"edges" -> {"pq10", "pq13", "pq4", "pq5", "pq7"}, "Res" -> 
         Complex[8.96563411672981*^-39, 0.], "Rescaling" -> 
         0.7745287627926022, 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {0., 0., 
          0.}, {0., 0., 0.}}, "DeformationJacobian" -> Complex[1., 0.]|>, 
       1 -> <|"edges" -> {"pq10", "pq13", "pq3", "pq6", "pq7"}, "Res" -> 
         Complex[8.96563411672981*^-39, 0.], "Rescaling" -> 
         0.7745287627926022, 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {0., 0., 
          0.}, {0., 0., 0.}}, "DeformationJacobian" -> Complex[1., 0.]|>, 
       2 -> <|"edges" -> {"pq11", "pq13", "pq4", "pq7"}, "Res" -> 
         Complex[-1.6336805734286066`*^-38, 1.67969766769819*^-41], 
         "Rescaling" -> 0.8051591261676136, 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          0.04329712719735963, -0.04052967923978855, 0.01958663648696505}, {
          0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[0.9999998363600955, 0.0007428442539080206]|>, 
       3 -> <|
        "edges" -> {"pq12", "pq13", "pq3", "pq7"}, "Res" -> 
         Complex[-1.6336805734286064`*^-38, 1.6796976676981893`*^-41], 
         "Rescaling" -> 0.8051591261676136, 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          0.04329712719735963, -0.04052967923978855, 0.01958663648696505}, {
          0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[0.9999998363600955, 0.0007428442539080206]|>, 
       4 -> <|"edges" -> {"pq3", "pq7", "pq9"}, "Res" -> 
         Complex[-2.1910039842483888`*^-32, -1.0487787081141445`*^-34], 
         "Rescaling" -> 1., 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          0.06728329193924007, 0.16059081981337328`, 0.21764952411476263`}, {
          1.0768749943121634`, 0.398233563350064, 0.011764646117131933`}}, 
         "DeformationJacobian" -> 
         Complex[0.9982080691168556, 0.06948120511865764]|>, 
       5 -> <|"edges" -> {"pq4", "pq7", "pq8"}, "Res" -> 
         Complex[-2.1910039842483888`*^-32, -1.0487787081141445`*^-34], 
         "Rescaling" -> 1., 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          0.06728329193924007, 0.16059081981337328`, 0.21764952411476263`}, {
          1.0768749943121634`, 0.398233563350064, 0.011764646117131933`}}, 
         "DeformationJacobian" -> 
         Complex[0.9982080691168556, 0.06948120511865764]|>, 
       "CutsSum" -> <|
        "Res" -> 
         Complex[-4.382009442731101*^-32, -2.0975570802887555`*^-34]|>, 
       "FullIntegrand" -> <|
        "Res" -> 
         Complex[-4.382009442731094*^-32, -2.0975570803032983`*^-34]|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "edges"} -> 
        1, {All, "Res"} -> 1, {All, "Rescaling"} -> 1, {All, "MomentaInLMB"} -> 
        3, {All, "MomentaDeformationInLMB"} -> 
        3, {All, "DeformationJacobian"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`UnknownShape[True], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "edges" -> TypeSystem`PackageScope`UnknownShape[False], "Res" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rescaling" -> 
             TypeSystem`PackageScope`AtomShape[60], "MomentaInLMB" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`MatrixShape[4, 3], 4, 3, {
               All, "MomentaInLMB", All}], "MomentaDeformationInLMB" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`MatrixShape[4, 3], 4, 3, {
               All, "MomentaDeformationInLMB", All}], "DeformationJacobian" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 6, {All}]]], 5, 
        DirectedInfinity[1], {}]], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Struct[{
        "edges", "Res", "Rescaling", "MomentaInLMB", 
         "MomentaDeformationInLMB", "DeformationJacobian"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 3], 4], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 3], 4], 
         TypeSystem`Atom[Real]}], 8], 
     "Meta" -> <|
      DatasetTheme -> "Scientific", 
       ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& }|>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, "edges"} -> 
        1, {All, "Res"} -> 1, {All, "Rescaling"} -> 1, {All, "MomentaInLMB"} -> 
        3, {All, "MomentaDeformationInLMB"} -> 
        3, {All, "DeformationJacobian"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`UnknownShape[True], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "edges" -> TypeSystem`PackageScope`UnknownShape[False], "Res" -> 
             TypeSystem`PackageScope`AtomShape[60], "Rescaling" -> 
             TypeSystem`PackageScope`AtomShape[60], "MomentaInLMB" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`MatrixShape[4, 3], 4, 3, {
               All, "MomentaInLMB", All}], "MomentaDeformationInLMB" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`MatrixShape[4, 3], 4, 3, {
               All, "MomentaDeformationInLMB", All}], "DeformationJacobian" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 6, {All}]]], 5, 
        DirectedInfinity[1], {}]], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Struct[{
        "edges", "Res", "Rescaling", "MomentaInLMB", 
         "MomentaDeformationInLMB", "DeformationJacobian"}, {
         TypeSystem`Vector[
          TypeSystem`Atom[String], TypeSystem`AnyLength], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 3], 4], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 3], 4], 
         TypeSystem`Atom[Real]}], 8], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 8, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["edges", 
                  Style[
                  "edges", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "edges"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "edges"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Res", 
                  Style[
                  "Res", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Res"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Res"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Rescaling", 
                  Style[
                  "Rescaling", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Rescaling"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Rescaling"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MomentaInLMB", 
                  Style[
                  "MomentaInLMB", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MomentaInLMB"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MomentaInLMB"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MomentaDeformationInLMB", 
                  Style[
                  "MomentaDeformationInLMB", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "MomentaDeformationInLMB"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "MomentaDeformationInLMB"}, "ColumnHeader", False], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Center, Baseline}], SpanFromLeft, SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeformationJacobian", 
                  Style[
                  "DeformationJacobian", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeformationJacobian"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeformationJacobian"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq10", "pq13", "pq4", "pq5", "pq7"}, 
            Item[
             Pane[
              Annotation["+8.96563411672981e-39", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.7745287627926022", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["Rescaling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-140.64776921478858", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+226.90564216131747", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-106.17444717912767", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 1, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 1, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 1, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 1, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["DeformationJacobian"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+36.87963713834405", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-149.64002888229757", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+11.330023665939075", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 2, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 2, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 2, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 2, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+8.684276850493276", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 3, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+20.727510481597967", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 3, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+28.092096407791473", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 3, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 3, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 3, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 3, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+138.99261338796234", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 4, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+51.400138364417074", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 4, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.5184667840199673", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaInLMB"], 4, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 4, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 4, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["MomentaDeformationInLMB"], 4, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq10", "pq13", "pq3", "pq6", "pq7"}, 
            Item[
             Pane[
              Annotation["+8.96563411672981e-39", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.7745287627926022", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Rescaling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-140.64776921478858", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+226.90564216131747", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-106.17444717912767", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 1, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 1, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 1, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 1, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["DeformationJacobian"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+36.87963713834405", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-149.64002888229757", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+11.330023665939075", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 2, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 2, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 2, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 2, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+8.684276850493276", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 3, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+20.727510481597967", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 3, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+28.092096407791473", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 3, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 3, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 3, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 3, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+138.99261338796234", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 4, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+51.400138364417074", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 4, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.5184667840199673", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaInLMB"], 4, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 4, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 4, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["MomentaDeformationInLMB"], 4, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq11", "pq13", "pq4", "pq7"}, 
            Item[
             Pane[
              Annotation["(-1.6336805734286066e-38,1.67969766769819e-41)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.8051591261676136", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Rescaling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-140.64776921478858", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+226.90564216131747", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-106.17444717912767", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 1, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 1, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 1, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 1, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["(0.9999998363600955,0.0007428442539080206)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["DeformationJacobian"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+36.87963713834405", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-149.64002888229757", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+11.330023665939075", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 2, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 2, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 2, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 2, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+8.684276850493276", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 3, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+20.727510481597967", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 3, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+28.092096407791473", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 3, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.04329712719735963", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 3, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-0.04052967923978855", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 3, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.01958663648696505", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 3, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+138.99261338796234", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 4, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+51.400138364417074", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 4, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.5184667840199673", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaInLMB"], 4, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 4, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 4, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["MomentaDeformationInLMB"], 4, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq12", "pq13", "pq3", "pq7"}, 
            Item[
             Pane[
              Annotation["(-1.6336805734286064e-38,1.6796976676981893e-41)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.8051591261676136", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Rescaling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-140.64776921478858", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+226.90564216131747", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-106.17444717912767", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 1, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 1, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 1, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 1, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["(0.9999998363600955,0.0007428442539080206)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["DeformationJacobian"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+36.87963713834405", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-149.64002888229757", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+11.330023665939075", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 2, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 2, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 2, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 2, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+8.684276850493276", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 3, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+20.727510481597967", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 3, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+28.092096407791473", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 3, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.04329712719735963", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 3, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-0.04052967923978855", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 3, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.01958663648696505", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 3, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+138.99261338796234", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 4, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+51.400138364417074", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 4, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.5184667840199673", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaInLMB"], 4, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 4, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 4, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["MomentaDeformationInLMB"], 4, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq3", "pq7", "pq9"}, 
            Item[
             Pane[
              Annotation[
              "(-2.1910039842483888e-32,-1.0487787081141445e-34)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Rescaling"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-140.64776921478858", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 1, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+226.90564216131747", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 1, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-106.17444717912767", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 1, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 1, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 1, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 1, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["(0.9982080691168556,0.06948120511865764)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["DeformationJacobian"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+36.87963713834405", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 2, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-149.64002888229757", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 2, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+11.330023665939075", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 2, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 2, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 2, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 2, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+8.684276850493276", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 3, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+20.727510481597967", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 3, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+28.092096407791473", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 3, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.06728329193924007", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 3, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.16059081981337328", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 3, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.21764952411476263", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 3, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
           SpanFromAbove, SpanFromAbove, SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation["+138.99261338796234", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 4, 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+51.400138364417074", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 4, 2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.5184667840199673", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaInLMB"], 4, 3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1.0768749943121634", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 4, 1}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.398233563350064", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 4, 2}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.011764646117131933", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["MomentaDeformationInLMB"], 4, 3}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            SpanFromAbove}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}], 
                    Magnification -> 1.], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-5) 
                    If[True, 8, 1], {1, 8 - -5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}], 
                    Magnification -> 1.], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-5) 
                    If[False, 8, 1], {1, 8 - -5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[8, FontWeight -> Bold]}], {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}, FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 5, " of ", 
                    Style[8, FontWeight -> Bold]}], {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}, FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}], 
                    Magnification -> 1.], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[False, 8, 1], {1, 8 - 5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> {
                    GrayLevel[0.7], FontColor -> GrayLevel[0.7]}], 
                    Magnification -> 1.], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    5 If[True, 8, 1], {1, 8 - 5 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Frame -> {{
                GrayLevel[0.8], 
                GrayLevel[0.8]}, {
                GrayLevel[0.8], Automatic}}, Background -> GrayLevel[1], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             BaseStyle -> {
               GrayLevel[0.7], FontColor -> GrayLevel[0.7]}, 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
          FrameStyle -> GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
          Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1833., {300.634033203125, 306.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1833., {300.634033203125, 306.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.872493637298974*^9, 3.872494459150776*^9, 
  3.872494699191392*^9, 3.872497376960466*^9, 3.872497679463271*^9, 
  3.872502177243023*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"271ea2b8-d830-475d-acd2-49245ee04007"]
}, Open  ]],

Cell["And then including the E-surface analysis", "Text",
 CellChangeTimes->{{3.8724978593600082`*^9, 
  3.8724978641224194`*^9}},ExpressionUUID->"ea425c9c-6cbe-426b-97a5-\
a3d2c62dca03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"evaluationWithEsurfaceAnalysis", "=", 
   RowBox[{"EvaluatePoint", "[", 
    RowBox[{
    "HookWithDeformation", ",", "aPointToExplore", ",", "SGYAMLinfo", ",", 
     "NoDeformationHyperparams", ",", "\[IndentingNewLine]", 
     RowBox[{"DEBUG", "->", "False"}], ",", 
     RowBox[{"f128", "->", "True"}], ",", 
     RowBox[{"IncludeJacobian", "->", "False"}], ",", 
     RowBox[{"Phase", "->", "Null"}], ",", 
     RowBox[{"Seed", "->", "1"}], ",", 
     RowBox[{"Esurfaces", "->", "allESurfaces"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.872497873697824*^9, 3.872497884437283*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"e416560f-c03f-457b-a602-885a0f358837"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyDataset", "[", "evaluationWithEsurfaceAnalysis", "]"}]], "Input",
 CellChangeTimes->{{3.872499645540351*^9, 3.872499645854395*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"561d144b-52ed-4dbd-9026-63ddddd61fc3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"edges" -> {"pq10", "pq13", "pq4", "pq5", "pq7"}, "Res" -> 
         Complex[8.96563411672981*^-39, 0.], "Rescaling" -> 
         0.7745287627926022, 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {0., 0., 
          0.}, {0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[1., 0.], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-3.410605131648481*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-3.410605131648481*^-16, 0.], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597516137233288, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597516137233288, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.06825127194777292, "complex eval" -> 
            Complex[-0.06825127194777315, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.1140743186201379, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.1140743186201379, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.15004947999247112`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.15004947999247112`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823255905679108, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823255905679108, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.21830075194024404`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.21830075194024404`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.3292691190543568, "complex eval" -> 
            Complex[-0.329269119054357, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.035975161372333, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.035975161372333, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140743186201378`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140743186201378`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500494799924712`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500494799924712`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823255905679106`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823255905679106`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.218300751940244, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.218300751940244, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}|>, 
       1 -> <|"edges" -> {"pq10", "pq13", "pq3", "pq6", "pq7"}, "Res" -> 
         Complex[8.96563411672981*^-39, 0.], "Rescaling" -> 
         0.7745287627926022, 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {0., 0., 
          0.}, {0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[1., 0.], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-3.410605131648481*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-3.410605131648481*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597516137233288, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597516137233288, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.06825127194777292, "complex eval" -> 
            Complex[-0.06825127194777315, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.1140743186201379, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.1140743186201379, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.15004947999247112`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.15004947999247112`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823255905679108, 0.], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823255905679108, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.21830075194024404`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.21830075194024404`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.3292691190543568, "complex eval" -> 
            Complex[-0.329269119054357, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.035975161372333, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.035975161372333, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140743186201378`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140743186201378`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500494799924712`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500494799924712`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823255905679106`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823255905679106`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.218300751940244, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.218300751940244, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}|>, 
       2 -> <|"edges" -> {"pq11", "pq13", "pq4", "pq7"}, "Res" -> 
         Complex[-1.6336805734286066`*^-38, 1.67969766769819*^-41], 
         "Rescaling" -> 0.8051591261676136, 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          0.04329712719735963, -0.04052967923978855, 0.01958663648696505}, {
          0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[0.9999998363600955, 0.0007428442539080206], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-9.340081987829762*^-10, 0.00011719946123979022`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            0.9999999999999999|>, <|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-3.410605131648481*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597510676797447, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597510676797447, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.06825127194777292, "complex eval" -> 
            Complex[-0.06825127194777315, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.1140743186201379, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.1140743186201379, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.1500494253881127, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.1500494253881127, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823255905679108, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823255905679108, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.2183006973358855, 0.000060994569031017136`], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.2183006973358855, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.3292691190543568, "complex eval" -> 
            Complex[-0.329269119054357, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.0359751067679746`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.0359751067679746`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140743186201378`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140743186201378`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500494253881126`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500494253881126`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823255905679106`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823255905679106`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.2183006973358856`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.2183006973358856`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>}|>, 
       3 -> <|"edges" -> {"pq12", "pq13", "pq3", "pq7"}, "Res" -> 
         Complex[-1.6336805734286064`*^-38, 1.6796976676981893`*^-41], 
         "Rescaling" -> 0.8051591261676136, 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          0.04329712719735963, -0.04052967923978855, 0.01958663648696505}, {
          0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[0.9999998363600955, 0.0007428442539080206], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-9.340081987829762*^-10, 0.00011719946123979022`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            0.9999999999999999|>, <|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-3.410605131648481*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597510676797447, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597510676797447, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.06825127194777292, "complex eval" -> 
            Complex[-0.06825127194777315, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.1140743186201379, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.1140743186201379, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.1500494253881127, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.1500494253881127, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823255905679108, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823255905679108, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.2183006973358855, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.2183006973358855, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.3292691190543568, "complex eval" -> 
            Complex[-0.329269119054357, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.0359751067679746`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.0359751067679746`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140743186201378`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140743186201378`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500494253881126`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500494253881126`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823255905679106`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823255905679106`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.2183006973358856`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.2183006973358856`, 0.000060994569031017136`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>}|>, 
       4 -> <|"edges" -> {"pq3", "pq7", "pq9"}, "Res" -> 
         Complex[-2.1910039842483888`*^-32, -1.0487787081141445`*^-34], 
         "Rescaling" -> 1., 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          0.06728329193924007, 0.16059081981337328`, 0.21764952411476263`}, {
          1.0768749943121634`, 0.398233563350064, 0.011764646117131933`}}, 
         "DeformationJacobian" -> 
         Complex[0.9982080691168556, 0.06948120511865764], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.9035205865284297`*^-6, 0.0009428797402852352], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.021490380131475|>, <|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.274612386941044*^-6, 0.0008510775083242967], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597257230584648, 0.0011757038799417373`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.2604433028804474`|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597257230584648, 0.0011757038799417373`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.2604433028804474`|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.06825127194777292, "complex eval" -> 
            Complex[-0.06825127194777315, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.11407318131394448`, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.11407318131394448`, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.1500480282321779, 0.0018983759649775001`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.1500480282321779, 0.0018983759649775001`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823244532617174, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823244532617174, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.21829930017995094`, 0.0018983759649775], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.21829930017995094`, 0.0018983759649775], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.3292691190543568, "complex eval" -> 
            Complex[-0.329269119054357, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.0359725723058466`, 0.0011757038799417373`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.2604433028804474`|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.0359725723058466`, 0.0011757038799417373`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.2604433028804474`|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140731813139446`, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140731813139446`, 0.0015737495933600596`], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500480282321779`, 0.0018983759649775001`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500480282321779`, 0.0018983759649775001`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823244532617172`, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823244532617172`, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.2182993001799507`, 0.0018983759649775001`], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.2182993001799507`, 0.0018983759649775001`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>}|>, 
       5 -> <|"edges" -> {"pq4", "pq7", "pq8"}, "Res" -> 
         Complex[-2.1910039842483888`*^-32, -1.0487787081141445`*^-34], 
         "Rescaling" -> 1., 
         "MomentaInLMB" -> {{-140.64776921478858`, 
          226.90564216131747`, -106.17444717912767`}, {
          36.87963713834405, -149.64002888229757`, 11.330023665939075`}, {
          8.684276850493276, 20.727510481597967`, 28.092096407791473`}, {
          138.99261338796234`, 51.400138364417074`, 1.5184667840199673`}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          0.06728329193924007, 0.16059081981337328`, 0.21764952411476263`}, {
          1.0768749943121634`, 0.398233563350064, 0.011764646117131933`}}, 
         "DeformationJacobian" -> 
         Complex[0.9982080691168556, 0.06948120511865764], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.9035205865284297`*^-6, 0.0009428797402852352], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.021490380131475|>, <|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.2737367544323206`*^-16, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
            "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
            Complex[-2.274612386941044*^-6, 0.0008510775083242967], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597257230584648, 0.0011757038799417373`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.2604433028804474`|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            0.03597516137233311, "complex eval" -> 
            Complex[0.03597257230584648, 0.0011757038799417373`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.2604433028804474`|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.06825127194777292, "complex eval" -> 
            Complex[-0.06825127194777315, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.11407318131394448`, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            0.11407431862013812`, "complex eval" -> 
            Complex[0.11407318131394448`, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.1500480282321779, 0.0018983759649775001`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            0.15004947999247134`, "complex eval" -> 
            Complex[0.1500480282321779, 0.0018983759649775001`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823244532617174, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            0.18232559056791092`, "complex eval" -> 
            Complex[0.1823244532617174, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.21829930017995094`, 0.0018983759649775], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 0.21830075194024426`, "complex eval" -> 
            Complex[0.21829930017995094`, 0.0018983759649775], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.3292691190543568, "complex eval" -> 
            Complex[-0.329269119054357, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 1., 
            "complex eval" -> Complex[0.9999999999999998, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.0359725723058466`, 0.0011757038799417373`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.2604433028804474`|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            1.0359751613723331`, "complex eval" -> 
            Complex[1.0359725723058466`, 0.0011757038799417373`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.2604433028804474`|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140731813139446`, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            1.114074318620138, "complex eval" -> 
            Complex[1.1140731813139446`, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500480282321779`, 0.0018983759649775001`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            1.1500494799924714`, "complex eval" -> 
            Complex[1.1500480282321779`, 0.0018983759649775001`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823244532617172`, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            1.182325590567911, "complex eval" -> 
            Complex[1.1823244532617172`, 0.0015737495933600596`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.2182993001799507`, 0.0018983759649775001`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 1.2183007519402442`, "complex eval" -> 
            Complex[1.2182993001799507`, 0.0018983759649775001`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.1608603595169382`|>}|>, 
       "CutsSum" -> <|
        "Res" -> 
         Complex[-4.382009442731101*^-32, -2.0975570802887555`*^-34]|>, 
       "FullIntegrand" -> <|
        "Res" -> 
         Complex[-4.382009442731094*^-32, -2.0975570803032983`*^-34]|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`UnknownShape[False]]], 2, 
          DirectedInfinity[1], {All}]]], 8, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Assoc[
       TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyLength], 8], 
     "Meta" -> <|
      DatasetTheme -> "Scientific", 
       ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& }|>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`UnknownShape[False]]], 2, 
          DirectedInfinity[1], {All}]]], 8, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Assoc[
       TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyLength], 8], 
     "Path" -> {}, "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 8, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq10", "pq13", "pq4", "pq5", "pq7"}}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+8.96563411672981e-39", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.9882352941176471, 0.9254901960784314, 0.8254901960784313], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq10", "pq13", "pq3", "pq6", "pq7"}}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+8.96563411672981e-39", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.9882352941176471, 0.9254901960784314, 0.8254901960784313], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq11", "pq13", "pq4", "pq7"}}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["(-1.6336805734286066e-38,1.67969766769819e-41)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.996078431372549, 0.9725490196078431, 0.9372549019607843], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq12", "pq13", "pq3", "pq7"}}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["(-1.6336805734286064e-38,1.6796976676981893e-41)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.9882352941176471, 0.9254901960784314, 0.8254901960784313], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq3", "pq7", "pq9"}}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "(-2.1910039842483888e-32,-1.0487787081141445e-34)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.996078431372549, 0.9725490196078431, 0.9372549019607843], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq4", "pq7", "pq8"}}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "(-2.1910039842483888e-32,-1.0487787081141445e-34)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.9882352941176471, 0.9254901960784314, 0.8254901960784313], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation["CutsSum", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CutsSum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CutsSum"], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["(-4.382009442731101e-32,-2.0975570802887555e-34)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CutsSum"], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["FullIntegrand", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FullIntegrand"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FullIntegrand"], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["(-4.382009442731094e-32,-2.0975570803032983e-34)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FullIntegrand"], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
          FrameStyle -> GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
          Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{557., {255.634033203125, 261.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{557., {255.634033203125, 261.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.872499646321622*^9, 3.872502178257008*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"2a720300-a8cf-4d63-a1b2-afc847e04936"]
}, Open  ]],

Cell["And now with more detailed info about the E-surface analysis", "Text",
 CellChangeTimes->{{3.8724996602104473`*^9, 
  3.872499670651071*^9}},ExpressionUUID->"04c754c1-5323-486f-8c5e-\
54568be11bb6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayEvaluationEsurf", "[", 
   RowBox[{"evaluationWithEsurfaceAnalysis", ",", "SGYAMLinfo", ",", 
    RowBox[{"Categories", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<s-channel\>\"", ",", "\"\<soft\>\""}], "}"}]}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8724996781586246`*^9, 3.872499700369084*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"365ac0a4-498d-412d-80e5-ba04e3e728f7"],

Cell[CellGroupData[{

Cell[BoxData["\<\"--------------------------------------------------\"\>"], \
"Print",
 CellChangeTimes->{3.872499700811059*^9, 3.87250217841532*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"4c2919cc-4922-4b07-9ecd-b9c8b87eaebe"],

Cell[BoxData["\<\"Analysis of s-channel E-surfaces:\"\>"], "Print",
 CellChangeTimes->{3.872499700811059*^9, 3.872502178418645*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"b3d10f93-bbf7-47e2-a42c-95d399801d43"],

Cell[BoxData["\<\"--------------------------------------------------\"\>"], \
"Print",
 CellChangeTimes->{3.872499700811059*^9, 3.872502178422509*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"1b26d73c-5dcb-47b0-a739-a0486d4a418a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #0\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq10\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq4\"\>",
                ",", "\<\"pq5\"\>", ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-3.410605131648481*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-3.410605131648481*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> 0.03597516137233311, "complex eval" -> 
                Complex[0.03597516137233288, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, 
                "eval" -> 0.03597516137233311, "complex eval" -> 
                Complex[0.03597516137233288, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.06825127194777292, "complex eval" -> 
                Complex[-0.06825127194777315, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.1140743186201379, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.1140743186201379, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|
               "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
                0.15004947999247134`, "complex eval" -> 
                Complex[0.15004947999247112`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 10, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
                0.15004947999247134`, "complex eval" -> 
                Complex[0.15004947999247112`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 9, 
                "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823255905679108, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823255905679108, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 14, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, "eval" -> 
                0.21830075194024426`, "complex eval" -> 
                Complex[0.21830075194024404`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 15, 
                "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, "eval" -> 
                0.21830075194024426`, "complex eval" -> 
                Complex[0.21830075194024404`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.3292691190543568, "complex eval" -> 
                Complex[-0.329269119054357, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-3.410605131648481e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-3.410605131648481e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233288", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233288", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777292", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777315", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1140743186201379", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1140743186201379", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247112", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247112", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1823255905679108", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1823255905679108", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024404", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024404", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.3292691190543568", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.329269119054357", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{665., {237.8544921875, 243.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{665., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #3\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq12\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq3\"\>",
                ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-9.340081987829762*^-10, 0.00011719946123979022`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.9999999999999999|>, <|
               "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-3.410605131648481*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> 0.03597516137233311, "complex eval" -> 
                Complex[0.03597510676797447, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, 
                "eval" -> 0.03597516137233311, "complex eval" -> 
                Complex[0.03597510676797447, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.06825127194777292, "complex eval" -> 
                Complex[-0.06825127194777315, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.1140743186201379, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.1140743186201379, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
                0.15004947999247134`, "complex eval" -> 
                Complex[0.1500494253881127, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 10, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
                0.15004947999247134`, "complex eval" -> 
                Complex[0.1500494253881127, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 9, 
                "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823255905679108, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823255905679108, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|
               "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}},
                 "eval" -> 0.21830075194024426`, "complex eval" -> 
                Complex[0.2183006973358855, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 15, 
                "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, "eval" -> 
                0.21830075194024426`, "complex eval" -> 
                Complex[0.2183006973358855, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.3292691190543568, "complex eval" -> 
                Complex[-0.329269119054357, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style["edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-9.340081987829762e-10,0.00011719946123979022)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999999", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-3.410605131648481e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.03597510676797447,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.03597510676797447,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777292", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777315", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1140743186201379", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1140743186201379", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1500494253881127,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1500494253881127,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1823255905679108", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1823255905679108", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.2183006973358855,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.2183006973358855,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.3292691190543568", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.329269119054357", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{826., {237.8544921875, 243.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{826., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #1\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq10\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq3\"\>",
                ",", "\<\"pq6\"\>", ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-3.410605131648481*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-3.410605131648481*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> 0.03597516137233311, "complex eval" -> 
                Complex[0.03597516137233288, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, 
                "eval" -> 0.03597516137233311, "complex eval" -> 
                Complex[0.03597516137233288, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.06825127194777292, "complex eval" -> 
                Complex[-0.06825127194777315, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.1140743186201379, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.1140743186201379, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
                0.15004947999247134`, "complex eval" -> 
                Complex[0.15004947999247112`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 10, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
                0.15004947999247134`, "complex eval" -> 
                Complex[0.15004947999247112`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 9, 
                "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823255905679108, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823255905679108, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 14, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, "eval" -> 
                0.21830075194024426`, "complex eval" -> 
                Complex[0.21830075194024404`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 15, 
                "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, "eval" -> 
                0.21830075194024426`, "complex eval" -> 
                Complex[0.21830075194024404`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.3292691190543568, "complex eval" -> 
                Complex[-0.329269119054357, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-3.410605131648481e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-3.410605131648481e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233288", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233288", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777292", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777315", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1140743186201379", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1140743186201379", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247112", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247112", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1823255905679108", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1823255905679108", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024404", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024404", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.3292691190543568", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.329269119054357", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{665., {237.8544921875, 243.1455078125}},
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{665., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #4\"\>", 
             RowBox[{"{", 
              RowBox[{"\<\"pq3\"\>", ",", "\<\"pq7\"\>", ",", "\<\"pq9\"\>"}],
               "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.9035205865284297`*^-6, 0.0009428797402852352], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.021490380131475|>, <|
               "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.274612386941044*^-6, 0.0008510775083242967], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> 0.03597516137233311, "complex eval" -> 
                Complex[0.03597257230584648, 0.0011757038799417373`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.2604433028804474`|>, <|
               "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
                0.03597516137233311, "complex eval" -> 
                Complex[0.03597257230584648, 0.0011757038799417373`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.2604433028804474`|>, <|
               "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.06825127194777292, "complex eval" -> 
                Complex[-0.06825127194777315, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.11407318131394448`, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.11407318131394448`, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
                0.15004947999247134`, "complex eval" -> 
                Complex[0.1500480282321779, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, 
                "eval" -> 0.15004947999247134`, "complex eval" -> 
                Complex[0.1500480282321779, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823244532617174, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823244532617174, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 14, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, "eval" -> 
                0.21830075194024426`, "complex eval" -> 
                Complex[0.21829930017995094`, 0.0018983759649775], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}},
                 "eval" -> 0.21830075194024426`, "complex eval" -> 
                Complex[0.21829930017995094`, 0.0018983759649775], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.3292691190543568, "complex eval" -> 
                Complex[-0.329269119054357, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-2.9035205865284297e-6,0.0009428797402852352)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.021490380131475", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-2.274612386941044e-6,0.0008510775083242967)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.03597257230584648,0.0011757038799417373)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.2604433028804474", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.03597257230584648,0.0011757038799417373)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.2604433028804474", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777292", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777315", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.11407318131394448,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.11407318131394448,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1500480282321779,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1500480282321779,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1823244532617174,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1823244532617174,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.21829930017995094,0.0018983759649775)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.21829930017995094,0.0018983759649775)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.3292691190543568", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.329269119054357", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{819., {237.8544921875, 243.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{819., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #2\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq11\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq4\"\>",
                ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-9.340081987829762*^-10, 0.00011719946123979022`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.9999999999999999|>, <|
               "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-3.410605131648481*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> 0.03597516137233311, "complex eval" -> 
                Complex[0.03597510676797447, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, 
                "eval" -> 0.03597516137233311, "complex eval" -> 
                Complex[0.03597510676797447, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.06825127194777292, "complex eval" -> 
                Complex[-0.06825127194777315, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.1140743186201379, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.1140743186201379, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|
               "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
                0.15004947999247134`, "complex eval" -> 
                Complex[0.1500494253881127, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 10, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
                0.15004947999247134`, "complex eval" -> 
                Complex[0.1500494253881127, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 9, 
                "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823255905679108, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823255905679108, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 14, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, "eval" -> 
                0.21830075194024426`, "complex eval" -> 
                Complex[0.2183006973358855, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 15, 
                "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, "eval" -> 
                0.21830075194024426`, "complex eval" -> 
                Complex[0.2183006973358855, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.3292691190543568, "complex eval" -> 
                Complex[-0.329269119054357, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-9.340081987829762e-10,0.00011719946123979022)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999999", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-3.410605131648481e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.03597510676797447,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.03597510676797447,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777292", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777315", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1140743186201379", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1140743186201379", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1500494253881127,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1500494253881127,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1823255905679108", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.1823255905679108", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.2183006973358855,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.2183006973358855,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.3292691190543568", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.329269119054357", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{826., {237.8544921875, 243.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{826., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #5\"\>", 
             RowBox[{"{", 
              RowBox[{"\<\"pq4\"\>", ",", "\<\"pq7\"\>", ",", "\<\"pq8\"\>"}],
               "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.9035205865284297`*^-6, 0.0009428797402852352], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.021490380131475|>, <|
               "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[-2.274612386941044*^-6, 0.0008510775083242967], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> 0.03597516137233311, "complex eval" -> 
                Complex[0.03597257230584648, 0.0011757038799417373`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.2604433028804474`|>, <|
               "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
                0.03597516137233311, "complex eval" -> 
                Complex[0.03597257230584648, 0.0011757038799417373`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.2604433028804474`|>, <|
               "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.06825127194777292, "complex eval" -> 
                Complex[-0.06825127194777315, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.11407318131394448`, 0.0015737495933600596`], 
                
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> 0.11407431862013812`, "complex eval" -> 
                Complex[0.11407318131394448`, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
                0.15004947999247134`, "complex eval" -> 
                Complex[0.1500480282321779, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, 
                "eval" -> 0.15004947999247134`, "complex eval" -> 
                Complex[0.1500480282321779, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823244532617174, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
                0.18232559056791092`, "complex eval" -> 
                Complex[0.1823244532617174, 0.0015737495933600596`], 
                
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 14, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, "eval" -> 
                0.21830075194024426`, "complex eval" -> 
                Complex[0.21829930017995094`, 0.0018983759649775], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}},
                 "eval" -> 0.21830075194024426`, "complex eval" -> 
                Complex[0.21829930017995094`, 0.0018983759649775], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.3292691190543568, "complex eval" -> 
                Complex[-0.329269119054357, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-2.9035205865284297e-6,0.0009428797402852352)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.021490380131475", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-2.274612386941044e-6,0.0008510775083242967)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.03597257230584648,0.0011757038799417373)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.2604433028804474", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+0.03597516137233311", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.03597257230584648,0.0011757038799417373)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.2604433028804474", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777292", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.06825127194777315", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.11407318131394448,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.11407431862013812", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.11407318131394448,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1500480282321779,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.15004947999247134", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1500480282321779,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1823244532617174,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.18232559056791092", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.1823244532617174,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.21829930017995094,0.0018983759649775)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.21830075194024426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.21829930017995094,0.0018983759649775)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.3292691190543568", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.329269119054357", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{819., {237.8544921875, 243.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{819., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.872499700811059*^9, 3.872502179611621*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"8c123205-54d7-4b79-9500-636623cbfdeb"],

Cell[BoxData["\<\"--------------------------------------------------\"\>"], \
"Print",
 CellChangeTimes->{3.872499700811059*^9, 3.872502180462431*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"a7c3daaf-e5c1-4310-822f-3245c6c3c677"],

Cell[BoxData["\<\"Analysis of soft E-surfaces:\"\>"], "Print",
 CellChangeTimes->{3.872499700811059*^9, 3.872502180464733*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"950fdb7e-b394-445c-a1ce-2287f55035bc"],

Cell[BoxData["\<\"--------------------------------------------------\"\>"], \
"Print",
 CellChangeTimes->{3.872499700811059*^9, 3.872502180466783*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"4235a489-425e-45e7-999d-2cb4bab29228"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #0\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq10\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq4\"\>",
                ",", "\<\"pq5\"\>", ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
                "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 
                1., "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, 
                "eval" -> 1.0359751613723331`, "complex eval" -> 
                Complex[1.035975161372333, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, 
                "eval" -> 1.0359751613723331`, "complex eval" -> 
                Complex[1.035975161372333, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, 
                "eval" -> 1.114074318620138, "complex eval" -> 
                Complex[1.1140743186201378`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, 
                "eval" -> 1.114074318620138, "complex eval" -> 
                Complex[1.1140743186201378`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500494799924712`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 9, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500494799924712`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, 
                "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823255905679106`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 10, 
                "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823255905679106`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 11, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, "eval" -> 
                1.2183007519402442`, "complex eval" -> 
                Complex[1.218300751940244, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 12, 
                "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, "eval" -> 
                1.2183007519402442`, "complex eval" -> 
                Complex[1.218300751940244, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], "Path" -> {}, 
             "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 12, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.035975161372333", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.035975161372333", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1140743186201378", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1140743186201378", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924712", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924712", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1823255905679106", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1823255905679106", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.218300751940244", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.218300751940244", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{607., {183.8544921875, 189.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{607., {183.8544921875, 189.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #3\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq12\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq3\"\>",
                ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
                "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 
                1., "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, 
                "eval" -> 1.0359751613723331`, "complex eval" -> 
                Complex[1.0359751067679746`, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, 
                "eval" -> 1.0359751613723331`, "complex eval" -> 
                Complex[1.0359751067679746`, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, 
                "eval" -> 1.114074318620138, "complex eval" -> 
                Complex[1.1140743186201378`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, 
                "eval" -> 1.114074318620138, "complex eval" -> 
                Complex[1.1140743186201378`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500494253881126`, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 9, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500494253881126`, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 8, 
                "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823255905679106`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 10, 
                "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823255905679106`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 11, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, "eval" -> 
                1.2183007519402442`, "complex eval" -> 
                Complex[1.2183006973358856`, 0.000060994569031017136`], 
                
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 12, 
                "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, "eval" -> 
                1.2183007519402442`, "complex eval" -> 
                Complex[1.2183006973358856`, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], "Path" -> {}, 
             "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 12, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.0359751067679746,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.0359751067679746,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1140743186201378", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1140743186201378", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1500494253881126,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1500494253881126,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1823255905679106", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1823255905679106", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.2183006973358856,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.2183006973358856,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{767., {183.8544921875, 189.1455078125}},
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{767., {183.8544921875, 189.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #1\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq10\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq3\"\>",
                ",", "\<\"pq6\"\>", ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
                "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|
               "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 1., 
                "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, 
                "eval" -> 1.0359751613723331`, "complex eval" -> 
                Complex[1.035975161372333, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, 
                "eval" -> 1.0359751613723331`, "complex eval" -> 
                Complex[1.035975161372333, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, 
                "eval" -> 1.114074318620138, "complex eval" -> 
                Complex[1.1140743186201378`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, 
                "eval" -> 1.114074318620138, "complex eval" -> 
                Complex[1.1140743186201378`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500494799924712`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 9, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500494799924712`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, 
                "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823255905679106`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 10, 
                "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823255905679106`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 11, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, "eval" -> 
                1.2183007519402442`, "complex eval" -> 
                Complex[1.218300751940244, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 12, 
                "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, "eval" -> 
                1.2183007519402442`, "complex eval" -> 
                Complex[1.218300751940244, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], "Path" -> {}, 
             "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 12, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.035975161372333", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.035975161372333", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1140743186201378", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1140743186201378", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924712", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924712", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1823255905679106", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1823255905679106", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.218300751940244", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.218300751940244", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{607., {183.8544921875, 189.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{607., {183.8544921875, 189.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #4\"\>", 
             RowBox[{"{", 
              RowBox[{"\<\"pq3\"\>", ",", "\<\"pq7\"\>", ",", "\<\"pq9\"\>"}],
               "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
                "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 
                1., "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, 
                "eval" -> 1.0359751613723331`, "complex eval" -> 
                Complex[1.0359725723058466`, 0.0011757038799417373`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.2604433028804474`|>, <|
               "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
                1.0359751613723331`, "complex eval" -> 
                Complex[1.0359725723058466`, 0.0011757038799417373`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.2604433028804474`|>, <|
               "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
                1.114074318620138, "complex eval" -> 
                Complex[1.1140731813139446`, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, 
                "eval" -> 1.114074318620138, "complex eval" -> 
                Complex[1.1140731813139446`, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500480282321779`, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500480282321779`, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823244532617172`, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 10, 
                "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823244532617172`, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 11, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, "eval" -> 
                1.2183007519402442`, "complex eval" -> 
                Complex[1.2182993001799507`, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}},
                 "eval" -> 1.2183007519402442`, "complex eval" -> 
                Complex[1.2182993001799507`, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>}, "AllowEmbedding" -> True, 
             "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], "Path" -> {}, 
             "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 12, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.0359725723058466,0.0011757038799417373)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.2604433028804474", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.0359725723058466,0.0011757038799417373)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.2604433028804474", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1140731813139446,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1140731813139446,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1500480282321779,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1500480282321779,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1823244532617172,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1823244532617172,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.2182993001799507,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.2182993001799507,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{760., {183.8544921875, 189.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{760., {183.8544921875, 189.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #2\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq11\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq4\"\>",
                ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
                "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 
                1., "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, 
                "eval" -> 1.0359751613723331`, "complex eval" -> 
                Complex[1.0359751067679746`, 0.000060994569031017136`], 
                
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, 
                "eval" -> 1.0359751613723331`, "complex eval" -> 
                Complex[1.0359751067679746`, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, 
                "eval" -> 1.114074318620138, "complex eval" -> 
                Complex[1.1140743186201378`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, 
                "eval" -> 1.114074318620138, "complex eval" -> 
                Complex[1.1140743186201378`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500494253881126`, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 9, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500494253881126`, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 8, 
                "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823255905679106`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 10, 
                "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823255905679106`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 11, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, "eval" -> 
                1.2183007519402442`, "complex eval" -> 
                Complex[1.2183006973358856`, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 12, 
                "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, "eval" -> 
                1.2183007519402442`, "complex eval" -> 
                Complex[1.2183006973358856`, 0.000060994569031017136`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], "Path" -> {}, 
             "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 12, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.0359751067679746,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.0359751067679746,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1140743186201378", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1140743186201378", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1500494253881126,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1500494253881126,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1823255905679106", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1823255905679106", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.2183006973358856,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.2183006973358856,0.000060994569031017136)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{767., {183.8544921875, 189.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{767., {183.8544921875, 189.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #5\"\>", 
             RowBox[{"{", 
              RowBox[{"\<\"pq4\"\>", ",", "\<\"pq7\"\>", ",", "\<\"pq8\"\>"}],
               "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 1., 
                "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 
                1., "complex eval" -> Complex[0.9999999999999998, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, 
                "eval" -> 1.0359751613723331`, "complex eval" -> 
                Complex[1.0359725723058466`, 0.0011757038799417373`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.2604433028804474`|>, <|
               "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
                1.0359751613723331`, "complex eval" -> 
                Complex[1.0359725723058466`, 0.0011757038799417373`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.2604433028804474`|>, <|
               "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
                1.114074318620138, "complex eval" -> 
                Complex[1.1140731813139446`, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, 
                "eval" -> 1.114074318620138, "complex eval" -> 
                Complex[1.1140731813139446`, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500480282321779`, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
                1.1500494799924714`, "complex eval" -> 
                Complex[1.1500480282321779`, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823244532617172`, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 10, 
                "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
                1.182325590567911, "complex eval" -> 
                Complex[1.1823244532617172`, 0.0015737495933600596`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 11, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, "eval" -> 
                1.2183007519402442`, "complex eval" -> 
                Complex[1.2182993001799507`, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>, <|
               "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}},
                 "eval" -> 1.2183007519402442`, "complex eval" -> 
                Complex[1.2182993001799507`, 0.0018983759649775001`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.1608603595169382`|>}, "AllowEmbedding" -> True, 
             "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 12, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 12], "Path" -> {}, 
             "DisplayedRowCount" -> 12, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 12, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.9999999999999998", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.0359725723058466,0.0011757038799417373)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.2604433028804474", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+1.0359751613723331", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.0359725723058466,0.0011757038799417373)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.2604433028804474", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1140731813139446,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.114074318620138", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1140731813139446,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1500480282321779,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+1.1500494799924714", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1500480282321779,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1823244532617172,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.182325590567911", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.1823244532617172,0.0015737495933600596)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.2182993001799507,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+1.2183007519402442", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(1.2182993001799507,0.0018983759649775001)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1608603595169382", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{760., {183.8544921875, 189.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{760., {183.8544921875, 189.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.872499700811059*^9, 3.8725021809433928`*^9},
 CellLabel->
  "During evaluation of \
In[121]:=",ExpressionUUID->"ba575232-fb64-4213-a219-c53950314c0c"]
}, Open  ]]
}, Open  ]],

Cell["\<\
We can now approach this point automatically in a double-sided fashion with:\
\>", "Text",
 CellChangeTimes->{{3.872339724999893*^9, 3.872339736881555*^9}, {
  3.8723397908789473`*^9, 
  3.872339796831873*^9}},ExpressionUUID->"b9c175cc-d9cf-470b-96c1-\
516f1294ef9f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RefreshHooks", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DoubleSidedApproachData", "=", 
   RowBox[{"DoubleSidedApproach", "[", 
    RowBox[{
    "HookWithDeformation", ",", "aPointToExplore", ",", "SGYAMLinfo", ",", 
     "WithDeformationHyperparams", ",", 
     RowBox[{"NPoints", "->", "100"}], ",", 
     RowBox[{"Seed", "->", "1"}], ",", " ", 
     RowBox[{"LambdaMax", "->", "5."}], ",", 
     RowBox[{"LambdaMin", "->", "0"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.872337559347337*^9, 3.872337667120802*^9}, {
  3.87233894516018*^9, 3.872338971657679*^9}, {3.872339823018753*^9, 
  3.872339850517316*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"47115be0-06a3-4f9e-b1e1-09ca889a3723"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"DoubleSidedMonitor", "[", 
   RowBox[{
   "DoubleSidedApproachData", ",", "SGYAMLinfo", ",", 
    "WithDeformationHyperparams", ",", 
    RowBox[{"cuts", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "4"}], "}"}]}], ",", 
    RowBox[{"IntegrandToPlot", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SafeLog10", "[", 
        RowBox[{"Abs", "[", 
         RowBox[{"Re", "[", "#", "]"}], "]"}], "]"}], "&"}], ")"}]}]}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.872337718336713*^9, 3.872337718673345*^9}, 
   3.8723389511081457`*^9, {3.872338981680163*^9, 3.872338983462089*^9}, 
   3.872339022372488*^9},
 CellLabel->
  "In[124]:=",ExpressionUUID->"7b340396-0ee8-4ecd-b4d2-0d3a79064eba"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.004]], 
            LineBox[CompressedData["
1:eJw90g1Q03UYB/A5xss2GNtQCwHBF8hyXHphJhbPMzYmWkeJh0VsDAwGIQ6n
MzxSOTjEy+QSsgREFMXTwuvwzkoCcokaL4pEkLzIi4hIwBGvMRAowN+z5+5/
/3vu/zyf7+/+91uxKyE4msvhcKLnnvk3VaNK/ijDsMV0Ome+voNbNge19yVb
TLkLfQm03j2qWV2iMr2xUBXQ8HSwIPiwin2vgmvB0lrnzSrTC60Otns3Pr7I
VZl8Fub/hF5n7xu72wJMMbr5+gtmZxPTPJcHmM4s7DeD9fnUXGxXmu7fm69H
cKfs9VJzvpJ5nfD7k0GtMFLJ8h7D/kzhkY88lcx/ArxgWctYt4Ltd0Mfnmuq
KVKwvB7g1a7j+BkVzOsF+5hzNQY/BfP+hv4gzfpMgYJ5/fDhHtX+5CZ/5g1A
TYI+ZfiyP/MGYUdHvSb/oD/zhqD0S5fcqG00PwQ11zM3hLr5M38Yqn7RZ9iP
yNn+CNyuvmpYeUfO8kbBf5PuTG+OnHljMHG8xYFnkDNvDEKWtt0Vvitn3jik
5LjHnlxD3r+gcNbHvCogbwImhQ3LjEPIPDNkGg4HjbUi88xQ1rw8su0eMm8S
xo3upX23kHlT8MrakJy4cmTec5DVB2bHl5I3DcMaY15XKXnTkOL69ctZ5eTN
gGT7CavWX8mbhed2KRuyLN5/oA37dtz4M3kc7EkdevvTIprnYKfyp4EdueRz
0DPA1is4Hdn9W4SVHZf5UQbKW4Tjy6oTmtXkcXF6bcfV6K3kcVE14zL98Uby
uMhNrtrz0IvOY4Vpbw0ktb9EnhW6ZdTydALyeFj85geBJdPAPB5OrFr+eegz
YB4Pv3o/UHWoAZhnjZLjLpsGK4B51jh+LFKX9CMwzwaDflNU9l8hzwY99A6H
RPnk2aDb9/ra4lPk2aLAMUxUeII8W0zjR64oP0qeHWYl1LY0JJNnh3YPd7pW
JpFnh+E/+FQnfkYeH+vK+s5W7iOPj+te03ZdSCBPgF2eBStH4skTYAb/j/rC
OPIE2OhcZi6KJU+Iigle05SOPCF6jCgL06PJs0f9tURfVRR59nhho0/X+k/I
s8claVeWKnaR54Bx6pGdxkjyHDBPu3nGFEGeCPn7nrp4RpAnwr1iUcRZLXki
dE++bvbSkueIre+0ptwMJ88RD8gdRqPCyRPj7l7TySVz/Yv7JcZvJld1PtCQ
L8bs0IG8LA3ti9FX1FSs1lCeGHWxp2TeGvIkWGF6ILfSkCfBZ2sUfu1q8iT4
3j9fHCtXkyfBtpmLp8+ryZvbd7WZSleTJ0Wul8fWvWrypNisDZCpLZ4U6y71
hGyzeFIs6RSn+lo8KZovrT4gs3hOaLxdPuWupv/jhDdcKroXWzwnbIvJFggt
nhPizfhArsVzwsmIgiNTYeQtxg5ZQOboXP8/Yja/rg==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90ntQ1FUUB/BlF3/7BPZhECYQ2rgghiO7DhLkPbHLwi70GBbcJl8ILguj
iOSkUFCW4QybxlIaChIYKUtDhFIDEsnPIWkQeUxQmPkHUpIYEAkoIo+Efuee
md/85s495/O9c+f6J2fGW/k8Hs/65Fv8Yx2ckyldfE1s8enFqiZO+fm6S04j
W7K0vkR81fve7NpkZDVL1Ur6dkd8OtoZw+23kxnf/Nx+Wwz7v9ZD+E994red
iWG1S/29JOkvo/eO6mjWlrpYvxL1DWNB22vRbOnS/G/k8OQWx7FZA9t5fbFu
kTOZo9lf1xg4b4A0TgyXrd1l4PJuE/5XcVpmhYHz/yCXXcqCoD+Km/+TTBmz
k3tPRXF5Q0QZl5VZvyOK8+4Sy9UvNnYERHHeMBl4fNY6+0DPeX+TFEfhsF+7
nvNGyNGBEU9huZ7zxogswDs1L1vPeeOEXfjYakrE/nEybzCf12zUc/6/xDaf
kzXvhfP3yeBc2LqsOR2XN0FS9OXJCXd0nDdJfEhz3oFuHedNkl0/wIay73Wc
N0XK++dqK6t1nPeA5Oe01G47jd5Dks1aLGft6E2TmNxi1St56E2TqqD6rZFZ
6D0iZfK3c5JS0Zsh4sp7sce3ofeYXKnzd6szozdLBn9JWXkxFr1ZkmdVdL6r
R2+OdLxe84JgM3rzJJ1X4x+8Cb0FUtn0efM/IejxQGzinwsLxn4evDoT3jAf
iD4PmnsCHoWs0XHvzwW2uPd90LEK81xA5DqTdtkPPT7EmFXVfB/0+GDIaPB0
rECPD4I+jWnn03geAVQlgyPdEz0BVGjYm87l6LnClegjF71U6LnCT/aFwAsK
9Fyh4sZ0z345esvAwHpUx3ugtww2JAQ/Y3ZHjwFpXfvoPjf0GPBYOxZeKUOP
geKPpBmjUvSE0Bp28PlYKXpC0EwU2Zok6IngnfqSF8Mk6Ilgz26ea5sYPRFY
Ik0RO8XoiaFYe8ghEKMnBk13T9cFEXoSuBaqHkoToScBY+PeQbUIPQn0JjmH
R4XoSaGxPjSsSYieFN4bs6w+JkRPBiNe47IUIXoysNtP7tksRE8GveFXW32o
5wYfvh9XxaOeG1QU3qofYtBzh9w3fizqZtBzh3Pj1+83Mei5Qy2rLXIy6HlA
fHFb8CkGPQ9QHxCfKKCeHNpPHC3MZfB9yWHvW6un9lNfDiftx8tS6bwczkx+
Z91O8+RQYtsanEg9Bcxcq/j9ZeopoED7TUI09RQQJEo+8hL1FOC/ZtYcQT0F
SNbf+TaUekpIXMj4TEM9JZhLS++tp54SLDcffrmOekqIC7E1BVJPCW6eAn81
9VTgnTbd/Ry9HxU0ONJbVlFPBa0/m+8+Sz0VxOUf0vtRTwXs7cguH+otB0+/
lsMrn6z/A5/xoI0=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90ntQ1FUUB/CF5c0u7INNGsRikQDhD5BMHMV72gc4oJOy8khXJALamNJ8
BEMaNaj5iGjUAXmpWdHwcAqlDGcyf9viJrorCglauEnuiwBZHissyyOh3/md
md/85s495/O9c+eG5OxOzXNlsVh5z7+FP9Z0eZbmWN0G6kz1QjWSHfyELl3c
BqpmcX2VJFTsUR+8k0TFLZaG/CWM2XngvSR6v4MEuDp2Udwk6n/tLiHnVq5W
Xk6kXl3s7ybJ+rMVLRmJ1Dv5C9VDunNlN1VOOVW7OP+QDL+cd2DPN3JKr1uo
PlIUVFnxIFVOe4/Jz3/fvrGdK6fz+snuHVqeuUdG+09IYXTaFrdWGT1vJDU6
sbv3tzI6z0yO6+e6VzXJaM9KzJH3L3ZQMtobIOUNfV/XqtEbJHJBbHPm5+gN
kShqnadmC3pPSUPY95WcUPRs5LyhYW5qRkr328hHhpHUpY+ktD9KMu8dFhrV
Unp+jGwXLqFSmqR03jhJNGW1XaiQ0t4EKUnc5pl/CL0JMlU/ER6/Dz07mVde
uqzLRe8Zyc0dWWPJQG+SPMsMfDd9I3pT5LFknWr0dfSmSNc9Ml8Rj56DtGu2
rQyPQW+avBj4XWxZBHpOcvqFuiM/hKA3Q+zaooKSIPRmiHr8w81WEXqzJN0l
vtjAQ2+OXGueblZw0Jsnyq92Odd6oceCTdkTVWVu2M+CvYY/Lq11QZ8Fr9j1
CpiT0O/PBY42DqafckroPBdI6oxOWeGQ0J4rfKboU7lMSmjPFa7M/1nKt0to
zxWufaCY3jouoc/Dhre5n7RqR9Fjw49fSHxzbOi5QfumEr14BD030PXORLk/
Rc8NwobGfnIfRs8dxEXem0OG0HOH0Kqh6LRB9Dwgg6XUnvsXPQ+4Hnq1xzmA
ngdUF/grCgbQ8wQx51Se1YqeJ4Q1n1Dtt6LnBe3Jrf0cK3peYL5t/7jFgp4X
mAwnuFkW9LxheezeTwMs6HlDb1XCky4zej5QK4pUVpnR8wF7fXFErhk9H7gY
FVyzyoyeL9Qbjog4ZvR8QR/0i7/FhB4H1rdc4GhN6HFALco522BCjwN3C3x3
lpvQ40KrdKOj0IQeFyI1qcE5jOcHKVc6Dr/BeH6Q32azrWc8P4hr0EXGMJ4/
3Jl8f1bMeP7ArksmSxiPB29VNv7OMeH74sGxpGX72IzPA4mJL3YacZ4HndVv
to0bMY8H/0z2Lh02oseHgycj1liM6PHB5/xWR78RPT6UUl+mPGI8PjxwOl96
yHh8YMftV91nPAE0ZSsDuxhPAD6zhcs7GU8Ah2Z/LdUxngCW2eQrbjGeAPrU
IuFNxhPCb7dEr2mNeD9CWH1jrKyd8YQQnO0t0DCeEGpDFZSa8YSQoko7TTFe
ABSHC45ef77+D+ls28o=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90g1Q03UYB/Ax3gaMsRfPlK48CK6yhKkIac3fs41N4o5BoIQYDOPtShOF
iANHyEFWCN1xaONFBfUyNnkXspRyHmW5gAGSgKJCgOJB451I5oyX37Pn7n//
e+73PJ/v//73c/swKTSeyWAw4pee5TfW3aPzyiL1Lp26ZLk0xGSX+0qz3y5d
6Ur/E/F+qhKNP5Drtq5UC9n3ve8O5Xk5Pb9Fsv8K129SynWrWge5NxVcVukh
1/mszN8mSemiiZ4FmS4xYbnukBw2N0Ivl+nKVvb7SDU7JlrAkunaWpernxjC
/GLYen/qDZDOve6HOvL9ad4gqbBXVJ4N8af+EJn3KuuScfzp/jAxGHmm0ttS
mveIHN9/yMOrTEq9UfK27QybFy+l3hPyhbfnww2bpdQbI/mLf4LLcwn1xkmy
sOhaTruEekZy0yZzQlguod4kEYR0P5w7jPOTxOljyB+VSqg/RXwdHrNK1+H+
NBGJKt6sGRPTvBkiNEeuT9GJqTdL3npw+WqBWky9WbJm1GHi5BEx9eYIs6xX
tD5YTL15EpZ60rFBiN6/RMHKLDetRW+BfN6QdkPFRG+BhMZ16+NngHr/kcCP
ot1SngD1npJrFxMZM0NAvUXSuk1tPTcI1DOR9PpfOAf+BuqZyB5+SZHrMHrP
SPC+nuOxI+iZyTeK/Obl81XvOZmLK0x7dh89BnyqHamb6sR5Bvh6GRT9OvQZ
MEJ60u5WAb1/VqD/zawYV2OeFRg5u6v256DHBDf32KF/ktBjglyV6zUUhR4T
PFKizyiD8HusYWTwy8qEnehZgyLKerNRiJ4NRDXsNQx7oGcDeQrmqI8rejbw
QopD0E0uerZw6gd7eRYLPVtoSov4QGaFnh2cqRK4muYI9ezA+Vh628tjhHp2
cE5/YsONQUI9ezi3c7uysY9Qzx6yKtnJbV2Eeixwee29N0Za0VsKlv14sPd3
9FgwcD/D9asW9Bxge7arsfc6eg5QEq/acrkZPUeINdUkM6+i5wjdrC73pivo
OcLs+w0BzU3oOUHBxulXnRrRc4I/cjbOftuAHhs+aw3PC69Hjw17up23SOrQ
Y0PxkcyEsFr0nGFdQMvF3Br0nMHlHiuosxo9Dtgs1B7YVo0eB9pZd2qrq9Dj
wKI4I8CvCj0XIGvLOw2X0HMBVZJBknoJPS4wLmQPeC71q/eLC4+ShrwHtOhz
IbRRO35ei/tcUB0+xfhEi3lcqJgMUYm06PEg5usThQItejwYDjAXGDXo8eBK
hn9PmwY9Huywi35cp0GPB4n1199Va9Djg3J3X/ExDXp8+Hmr+ehBi8eH06+X
fxdp8fhQ+NKtzkCLx4fxC/2/vmPxBFCRlxoo1OD/EUBcXYaPp8UTgLojOPJF
iyeAaYZHMd/iCcCcFdHuaPHWAH+TacB6qf8fok7I9w==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"F[\\!\\(\\*SuperscriptBox[\\(I\\), \\((LU)\\)]\\)]\"", 
            TraditionalForm]}, AxesOrigin -> {0, -27.184140819547363`}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Local Unitarity integrands, F=(SafeLog10[Abs[Re[#1]]] & \
)( Left approach )\"", TraditionalForm], 
         PlotRange -> {{0, 5.}, {-56.409452144368814`, -27.184140819547302`}},
          PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Complete LU integrand (scaling: 0.013 )\"", 
           "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0.004 )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0.004 )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 0.013 )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 2}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Before"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.004]], 
            LineBox[CompressedData["
1:eJw90gtQVGUUB/BdWNhlwX3wDCIDBmuESUx7kUP7hFW0bKh9i6vhSvGQEB8w
SYwyuYqW4rCsioCBMpIEMUiOSH1nRqkcQEHQQR5KI2vyJl6SkAT0nXtm7tz5
5n7nd/7fvTfws5QYswOLxTIvXIt3rJyDtz9aU6EC25nFKicrc25lcT5Wwdml
9TWS6beN7J6NgrVLdYPkp2+pC6qMos9vkegjFv1+XRT8r7WQjf4ZyupnkfDW
0v42sit8w/JPCyMhfudi3SfDRQH+D1SRULDU/4CknXd+JWdaCc1Ni9VNypPU
r+/7QUm9XqKWRXx/LFZJ5/1J6iyqHWahkvqPSUxxVdqeGwra30f8tJqsA5UK
Ou8J+cN0/X39QQX1npLE8E57ipeCev3km50Fq3+8K6feIEnNvfl2hlVOvSGy
uV0woTHKqTdChuteNQuC5dQbI0fzV1Qmjcro/jECnUkc/19k1P+bdBT+2lV0
XEb7x0nvxbT5rbEyOm+CxO+oSWlaJaPeJEmV+8afZqE3SSxzOmtEm5R6UyQ6
u/+xb7mUetNk/nLphI9FSr1npIjbcPHel1LqzRC/zNeeXI6TUm+GtK/O7Mw3
oPcPCV93XJUbg95zsr5q8Nzn0ejNkpLas9tBht4cmZ5rfPjde+jNkVPOvzkO
rELvX9LRK9k+FYzeC1Kf19fa7YfePFl7XhfcLkKPBV9HO428xMX9LEjNipoa
mJVQnwUnxrlBRwcl9P9jw7jXTzVDPRI6jw3rxb5pYe0S6jnANo1lhtyRUM8B
HnrO2YvvoucA8S3v5rn2SmgeRxg3Npwqe4GeI5hsXlXVgZiPAzzHvGslNZiP
A6Xy5g4fTzw/BxIMJ69AN3pOEGqNONNUjZ4T9CeOOJ22Yj5nKEzkFbofwnzO
kG2bCojcg/mcYXxLV21qAnpcCDjcodgXhx4Xxry5dTlb0eOB2ncyPcCIHg98
XELtd3To8aB54KvBTVr0XMAcUGYwadBzAYOYndujRo8Pg7bcyktq9PhQ8FdL
S7kaPT5MNLL5LWr0XGFFx7lHAsZzhZT2zaGxGvTcoPXAt8orGvTcYMOlHpNQ
i54bKGLCvBOZfMvAZ6OQ36BFbxlUVKhKX9ahJwArX9eVrENPACt/L/a+zpxX
AEb7cq6jHj0hrCnbnx+pR08ICRd23TukR08Edrl1tE6P/5cIMu77B43o0RfB
B2Jhrb8B+0Vw1VM7HWXAeSLg8ULeSTagJ4YvZtJvnjCgJ4YuWchopQE9MTzS
PmU1Mp4YwqpM0j7GEwOv7Pboc8ZzB7a8dZPQiJ47cCa0JwOZ772wvlA/8qYR
PXd44/CQTWpEzx1+Tiy++qERPQ9gm2x79UZ8Px5gPtY3Fcd4HmArDtEnM54H
NJXY6/cyngfktFWsy2Q8T/ikaPdw9sL6P0bI7g8=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90wtQVFUYB/C7d+9ddnnuw0pjepnkGA+tBSrZXrssjzApILWYGB4DYcNA
akwOOilaWkvhYCCgKWNoArGFFBJoez7doLEBTARnNbGAZeUlgy0Lu8gjwPPd
b+bOnTP3fL/vzJ3/eSo1Jy6dZRgmfeFZfGPVhIwZH52MhtLyxaomxxPXv9y1
OxqOLq2biEX/3fIcaTSol8pMYkaX+31VFkW/Xyb5xcV9PQFR8ED7iyRVHdau
bomE4KX918jsJ+TQ+pRI+CBjsa4TnXE4zclEwrGl/htk7rG6uo2nIqC9bbFu
kYTxcusLMRHU+5dsNTSomx16Oq+XaG6XTdoq9dTvJ6v5OOuNd/S030quP9Fa
0eihp/NsRKvJ/LWmJZx6g+SMtMH79v5w6g2R6nqtdUdEOPVGSNtHUYo8r3Dq
jRLz85sbeyw66o2RkHd9talVOuqNkyzbXXXFLh3dv7AOChjg43TUv0em/GUD
d5/F/v/I3oYTD5/hdXSenbDh1qDSXi31JkjuypDaPJOWehPEPFx3UXZcSz0H
qXnd9WrCXi31JolBfTXmi2wt9aZIe+43KeIs9Jzkisv3JpeLnpOkJhlzW/ah
5yKxbUU7nitCb5p0vvnlZN0J9O6Tc7btv1+pQW+GVMf2hR5oQG+GGB8RfTpu
Qm+WbD2Y0an+A7058mNas+vjDvTmSVHSeU13F3oMFG6YM227ifsZiHUk/5T2
D/oMvBj05Hno19L8iaBcyhYcu4PzRLAm+nQoN4IeC/4lKVXSMfRYkFuL7/0y
jh4LDyUuK1LZ8TxiyHim3xjoQE8MlaUhUR5T6HFQsGtP6s9O9DhoTJ9/OmAa
PQ58lXZH3n30eBgqyfj21Ax6PHxuSo4xzqIngTXBsqayOfQkMCCODPxwHj0J
5O975dAqBvPhBoln2W1/MpgnNwh7n6xIEmH+pGDTlBT2ijBfUhhq3nx0E4t5
lMLauIQuE4ueDFiV/ntfMXoycDYZ3s4Wo+cOsj2t9kYxeu7wXtigwSVGzx0u
HL7kVHPoecDQpmBJJoeeB1giJtKPcOh5wkmDeyPh0PMEvw7RQSuHnidMl1ji
eeE+eEF2XPPXK3n0vOC0+UCZhkfPG5TbA9vjefS84dwbfXmZPHrekNy5djBP
8HzA/+/h+ALB8wHHOo/JcsGTw8XoLGbxPj7IlxzUtTsr6gVfDruzL01fEPrl
sGrYENIqzJNDzP6wnA7BU4DR/6q5W/AU0LJCs+GW4CnAIWp4vE/wFPDatDT2
juApwOLTMzYieEoo3DnsNS54SvBaF9xsFzwlmJtCmSnBU8LUD8oRl+Ap4aUj
9Z/NCJ4KtrSMds8J/0cFZ7ectDES9FRwzaf7N1aCngreCricwknQU8HGJrmF
l6C3DGrzK/3cFtb/A7HH7iw=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90gtQVGUUB/DlucsuLixrk1AwGThFAhUKlBMqu8tDJ0dGkAEkBksegQkS
UMIUjx2iGdA2HomsS6O4yFo8hJEG0r5DyMySSAUSmHDdV0S4YyBqyzvAe74z
c+fOmXvO7//NnW/r+5mHkq05HE7y2rP+xhpPi3A0NUfA2XPrpSEVK+WeK7II
qNvou8hfU2M/6Zhw2LFRvaScdy/5lYJw9ns/aRtpgRTXcHim/UbGDMo3PbvC
YOfG/DC54Wc+1RcXBqkp6/UHURd1SqsXQkG5sX+XuO8+9m5fXSjcHlivcRLX
T9prZaGspyPhviKedkjG5ulJW8uyNPMDGesbyeAVTg9jJWP3TcT4dmWpokfK
5k2S0ETFyY5pKetNEe5ti37uopT1/iH51bZp3DIp6z0gx56L1vmt9c88M+k6
GBYVexm9h6QmaFg49R16M0T/p1dVShTOz5Bh10S7rV7oz5LtZ04V/roqYfcf
kXOVR709dBI2b44w/PzDsT9LWO8x8TcLXt+llrDeY8Lt99lu/lLCek9ISVXG
5PNZ6D0lA8EPM88nofcfUR1hFHcS0bMQsW32x8dT0bOQyGXLjZdz0JsnVZe2
7Q4uRm+BBC1qfaJPo7dIAtM+tQhq0Vsiucw+5YcX0FsijoWzNV9p0FsmXn/P
zavb0Fsh8b5JGUOd6K0SzfkfpgOuo8eBqT2GJjPgPAc6GxPkwj70OfBR0cXG
Vq2EvX9WoCna662/hXlWoGxZ/PrqIHrWUJoTF+77O3rWkN8+Np04jJ415JLX
Gg6O4HlsYKyuPpY7ip4NqBsLJivG0LOFjj1l0sm76NlCxK2Chi330LOFgIDR
ylfH0bMDD8ZV6DaBnh2EwKGamQn07CF/tPGdVgY9e1C1vdcdex89e1Ba67P/
vY8eF2JOcuW5OvS40FY/qzXr0ONB3pGOBzF69HiQFmo5ek2PHg/8+375xMGA
ngN0XVVFRRvQc4Azn3csfGNAjw+RxfPRQwb0+DByIP0NrhE9Prjv5coCjegJ
4EdTnn+SET0B7H8UVVFqRM8RbCYChxqN6DnCiaaSvJvUcwSfE0sMQ71NoBXt
THlKvU2ggt4EgQk9IcR7ZvA9TOgJYbKM3+pnQk8IWT3F8mATek6Qap/Xvd+E
nhP0NlsVx1DPGd6KjlxNMuH9cobCS95x6dR3hrzu4y3ZdN8ZtBOfvZBP85xB
5N7UVUQ9Ebhty/n2C+qJgCl7oiunngim5U4KBfVE0B7cfr2aeiLwDxHl1lLP
BeYd7vQpqecCJbtCuuup5wLaLckJF6jnAvEjO641UM8FDoubBtTUE0OtG6O5
TP+PGG6KfKI01BNDelXQ4BXqiSFzivfS99QTg8r7xQPN1NsMm+VZcS1r/f+s
hhGD
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90gtMk1cUAOAKpS20QB/AcDIeWkcaLKCQOJ3YB21R0UmGyFgQ5gYMFgjQ
gJswWMRBNgiGiEMBmVAerRJAMx3oxHtAjLw27Mh4Z3TiAyIQRDbQCRvgPT3J
zZ+T/5zv3P/+1+PT5A9jLRgMRuzqWntiLOW/1XHZGATnS9fiMpG6n2HsTA+C
svX8Jtntw7GUuAeB33rcJW2eZHnRqKHvu0gys6s0P0cDb7QHpGOimvWLhwb8
1+v7ieqDjQ3X76vh87i1GCDuf0ZGLWvVUL7eP0wkd5gNm7eo4dfetRgjj78/
ovloSEU9E2m4l7E9pVhF5/1FvCUl77kfVVF/gghyxN/sEato/yMSndT9w7iV
is57QtILOjJySwOpN0nKna+9rVMHUm+KfJ3jcGx8WUm9Z8RyIZpzoVVJvWli
rGon6hwl9WbJ3agrkgsHlNSbI/keASVjjlg/Rz6u1roWTCio/5yc7vNqEv2k
oP3zRGycGRk+raDzXpCqipFXwWEK6i2QxOPN0k2eCuotkNC031PbX8qp9zex
OLTEruyTU+8fciOkdfDHBjn1Fomtd+ti5Hk59ZbIpQqrk375cuotEa6irMT1
FHovyX1JvdvGk+i9IgcPP/1uLgW9f0lvISdyXzx6r0lN7sMJp2j0XhP5tm6+
Ngy9ZaJy8k3LCkZvhbCdA6diFOj9R2L2s2WRO9FjQLdwG7dKivUMuN1SUZol
Rp8BD6JCrx10kdP7twFOHHDOzHbEeRugse+L0Ut89CygoT7NNd4OPQtIUvk6
DtmjZwF5MPKs0An3Ywm8weaE0a3oWULMu7LuXfvQY4I4cS7TawQ9JiRkenAq
d6PHhP5sVe6kA3pW4NEbMT22IqOeFRhnGsMND2XUY8HZTtbs5j4Z9ViQ+ElW
alibjHosqGt0YuU0y6jHhotDpuK8q+ixoal52rq8Hj0O3Hrc1ulrQI8Dg2mT
/qZa9DgglXq/f6wGPWuonQ65klyNnjX8xtObZnTo2YDK4L/SokPPBvLite63
dOjZwO3rugiTDj0uxA4E+LiZPS4URT/PSKpGjwehj3zOdVSjx4MI11NNbjXo
8eDsi/7YTPP+bKFTfCPijxr0bOEmzM571aJnBztCGV7ZtejZgeeu/XE95u+1
A2dt11FRHXr2MLdny5OwOvTs4ZDfpq3FdejxoaVZKetZzd/cLz7scOtJXalD
nw9HXO4wpXrs50OckaUJ1+M8PnwVN5KbpUdPAO1TEodKPXoCCG0Z3Uv06Ang
Z01ZyKjZE0CTjbBowewJ4MRnp2RcA3pCKA7/9qKbAT0hDIRzTdvN/1sIliEp
e5UG9ITA1VY+DTGgJ4TholB2lNkTQXpz8L0EA56PCHoEpeo0syeCdw6PG7LM
nghcvizj5Zk9EUDn8YJCs+cA81c9A86t5v8Dcz/s6A==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"F[\\!\\(\\*SuperscriptBox[\\(I\\), \\((LU)\\)]\\)]\"", 
            TraditionalForm]}, AxesOrigin -> {0, -27.216988319770554`}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Local Unitarity integrands, F=(SafeLog10[Abs[Re[#1]]] & \
)( Right approach) \"", TraditionalForm], 
         PlotRange -> {{-5., 0}, {-56.04030600306215, -27.216988319770493`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Complete LU integrand (scaling: -0.01 )\"", 
           "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: -0.004 )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: -0.004 )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: -0.01 )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxd0slJg1EAReE4z7MNWIPuYw2WIESXliNqBZbg2pWgIAiC4EJRRFEkzvOU
/+C75FwI4ZD/fS+EzCyuLDQ6a7Va4+/VevdW11rbrP/3etVbpWerbevznXq7
sl96rnr+oPTyUmuHpTeq80el93ZbO5Z3ovtO5Z/p/Lnuu5B3Ke9K3rW8G3m3
8pp6vin/Tufvdd+DvEd5j/Ke5D3Le5H3Ku9V3pu8d3kf8j7lfcr7kvct70de
bb79+TR+mv9fR2nuS7NOeWm8NN+nS16adctL46XxeuSlWa+8NF4ar09emvXL
S+Ol8QbkpdmgvDReGm9IXpoNy0vjpfFG5KXZqLw0XhpvTF6ajZfm/5XGT3M+
zX1pNiEvjZfGS+Ol2aS8NF4aL42XZlOl+X3SeGm8NF6aTZf+BSreMF4=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10gswXGcUB/C9i7Xe+yCtbIMyjVdbKzRpKefYVW1JKRIxSUQnE6KpMMQr
0qlKJqL1SKPSFM0YHZ2UMCUNRlMhiLEZKiaRVBmPeq3GYx8eK17Fft+ZuXPn
m3vO7//NnfP6yfiQKDaLxYraerbftFoOTfJWQxi8UbRdFcD+kHeW48dg8c65
ESbuJEk17gy67VQbVAn0g/+1ot9lcKXMyq+OzaBWewx67d6p0mEWuu/0PwGz
LwrSxSksPB29Xc9A4pvNWC1sQsnOfD+wYvwvVsg3oLtruwbBqQomHWTroPVG
QH58LlxeuAbavFF4VTpxKy5gFbT+GERvnGQKZ1bI/Dhc0y91L0nTgDZvEkaT
Tk35K5aIJwdjX98a5vAi8aYhI9F17P6vauK9gL172k+I5pTEm4HfrDmXXR0U
xJuD/Mb4zfm7M8RTwLsNvc+d+dOkXwE59fObcbETxFdCxXLT3t7uUTKvgvLu
4aPDqYMkTw0dDmdqc8/3EW8BXBIefPJZWDfxFuBmqKPtNecW4i3CmyK9lErj
n4i3BBedJH+EHaht1nrL0OA//K29XXuz1tNAp/eSOMu0p1nraSDBIyJhoepp
s9ZbgQ5RbMLfmf3NWu8l2Jj0B9twhoi3CuUcpSxuzyjx1uDe7alKBW+MeGsw
O3iO+WtonHjr8P1X+7kZ2ZPE24CfW355p9pMTrxNWM4t++6NlGnisTC17+GR
rqb/SD8LiyUiqwL5C+KzkJsXefaMZqZZu38MJjEhs9L5WZLH4OPPjzLsnjni
sfGSs6AttWieeGx86hb12j4HBfHYKKuL721IV5D76GDWyuVB84cK4ung19AQ
rstVEk8XPTwzUtx9lcTTxdG3bQr90pXE08WR60e+6alUEk8PXW8XWYY/UxJP
D4e95jIj1qnHwdS8CMsQGxXxOBhpm712E1TE4+AlSeb90mMq4uljmHPg7uok
FfH0sTX5cpkwR0U8Lp5mJ0dZllKPi9i3+ON6DfW4eM+/1nGlhXoGeNXilU+h
h3oG2B9WbrExQD1D5B+L7j0xRT1DrLIcKM5SUs8QL+ik//7DS+oZYf5ywFQV
W008I8yZNpoYM1ATzxhHVg/lh/LUxDNG849jkL9LTTxjtPnTYpdYpCaeCRb5
B9s9sKaeCRbnrlQ+saOeKSa0BwYl21PPFM+nFXjdcaKeKTp54OHrb1HPDHfH
fBTgIKaeGeaMVcvO7aMeb2ufRnIy3NVkv3gYVGCbFrKf+jz0lAXWqw7QeR42
WLm2R71H83h416T1So0H9fiY1JQQ+dyTenxUBDWKh96nHh87S62TO72ox8ee
+n8+KPKmHh/R0S06FKgnQG7bo4MrQD0BJl4dd85D6gnwhotMw/OhngAvVEUm
ZvlQT4DieJ79vA/1hLjQoZd+UEL/jxBtjw/cKpVQT4iMqOvRtIR6Qqz9MnbI
WUo9IdaVrLdGS6lnjkKXU1iydf4fji3frw==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10glMlFcQB/Blb46FZRFaKtrSkFrUYCwgWI+ZCGkDhVKJWFOsHCJKDSko
bFsaQqiECihFoCAgKhgwUAzQKhaQUtxluVZZ5F5RQY7lLjfIoRV2vkm+fHl5
M7//y8uz9P/e8xSbxWKdevut/5myyO18Vt4jwPSM9SqAX2LNszKqBZi5sS4H
abUm9vB1AdpulAzclb+3jyCz3wC/NluZ7+jgo1ZTATfr6UR4AB/tNvpbIcHR
MtpnnIenA9erAzjzUf1CFh+zNua7IVfmNSAt4OEj5Xr1wKRImNrhySOvF4Zu
py0Gr3Aprw/2zy2en8jhkt8Pu319w45acml+AO6Z/qvUTeJQ3hDccimvgBU2
ecPQ3SrM/sSfTd4IpJxxRle5DnljMNpWmvKVpQ5547BP3mSR9BOLvEl4etM1
qTDrDWi9KRB9abOn6OBr0PZPQX3QbTezF6ug9adhxntL7MUfV0A7PwNXTxQ2
l6pfgTZvFkqFF1nJTkvkzYHIPdD7QdkCeXNwI8tss6nDPHnzoKpMOKtWzJK3
AB78LL+7p2fIWwTX46OFde9Nk7cEO/YeUSTV/EfeEuRIbaXvhE2Q9wokJTdV
u9zHyFsGF+iKC3AbIW8FIoZswjtDNOStQmS0zxdflw+Stwp40LninNUAeWsw
Y6+jG1fykrzXwMlNTOjy7iPvDSRndpkkWPWSx8KK9/NE0cbPqZ+FJyWNIbtE
PeSzMCDd3++soxq0708HvV/+sZr2Wxfl6WDMqCbc3qiTPDbenSxWTf/VTh4b
A5pbM25FtJHHxvvdwaOHfVvpPBw0iNq3Zuf/hDwO5jWZZ5RFtpDHRcsy28uh
JSryuFgUtzLsO9VMHhejPxx91pn3mDwebmXtnkqKfEQeD6s+W1jYFqYkj48H
pFdiYmObyOPjklno9eeljeTx8YhH1Pm82QbyBFh/pnh7oksDeQIMHSjuiSmt
J0+If45/qiiwridPiJ9PCh64ldSRJ0S9tpbBYac68nSRlbZZ9kG/gjxddC1z
jKi4pCBPDz8yigm5Bgry9DCg/IJ143IteXqYMjwU5FdVS54+HldXZ6bH1pKn
j5c6hEH3vWrJM8Cp4W+yt26vJe/tWnBv234O4xlgxoFD3om9cvJE+CLK5mhO
jZw8EUY8VFwR5cvJM8RjPl7p0sty8gyxbzWgI+4HOXmGaGHjkbF2kvGMMP5b
B9MkT8YzQnW7MpnvxHhizF0MvLPTXk7vS4zWLs75rR8zvhiNsjUNLVuYeTEu
9FQN6mxi8sQYvOivPKTPeMa4x4inkXIYzxjVJ+KfXFiVkWeMynAUeC7IyDPG
msLlOOWUjDxjrGTn5vWOyciT4HepnkWRGhl5EvRR7K1O7Wc8CQp7I6+928t4
EswPiT+31sN4ErzjYPO3o5rxTDC7gK9b0ymj+zHBEbGMl9jOeCa48592h6ut
jGeCDyfslrpaGM8EfxZ1HnNVMd4mrNS/IdY8lsH/8uzF/A==
             
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[\\(Log\\), \\(10\\)]\\)[|\[Kappa]|]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Deformation magnitude( Left approach )\"", 
           TraditionalForm], 
         PlotRange -> {{0, 5.}, {-2.0413618549948147`, 3.8201327610754605`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: -0.006 )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 0.005 )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 2}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Before"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxd0slJg1EAReEY53lswBq0EksQokvLEbUCS3AVwZWgIAiC4EJRRFEkapzn
5OC75FwI4ZD/fS+EzC6uLNSqlUql9vdqvXura61t1v97vd1bpefa29Hnu/VO
5aD0fPv5w9LLS60dld5onz8uvb/X2om8U913Jv9c5y9036W8K3nX8m7k3cq7
k9fQ8w359zr/oPse5TXlNeU9yXuW9yLvVd6rvDd57/I+5H3K+5T3Je9b3o+8
ynbn82n8NP+/rtLcl2ZVeWm8NN+nW16a9chL46XxeuWlWZ+8NF4ar19emg3I
S+Ol8QblpdmQvDReGm9YXpqNyEvjpfFG5aXZmLw0XhpvXF6aTZTm/5XGT3M+
zX1pNikvjZfGS+Ol2ZS8NF4aL42XZtOl+X3SeGm8NF6azZT+BaYCYl4=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10gtMk1cUAOBSSnlIkbaii8gWsoxtigiooIPRCpNXKwgpgzkE4kIxymSM
x1YQE3A4NCbAJkOoMAiPTabAmBPG0HNQI2FWdJqoDCRlMoRVnm1pS6Fs8N97
kpubm/+c7/zn5rofyYhNZbNYrNT/1+pO45uiJ44ZnSxxZdVqXIY728UOpypZ
4uq1828Ab26242SyxDvX4jZ43wm92BJMv/eDJSYuctiBJWa0h9Bkbt2vKF0R
7VrLfwym58KKfdMWUZp8NZ7A7tb80g3bLSLlWv0glDheuyEJXRbdV63GMIxI
kiZ9fzaLGE8NvFj/wUC1ScT0G4WQ5webq0YMxH8B+c3yB8nNelI/Bm7RLfIh
Hy3pNw6F3kdbZ/JniTcBvoFzaV0sDfEmoc8Hciq+GCOeBu67lf8U3/oX8V7B
TMmR7P3H7hJvGhZDFJnN7teB8WZBOR3KuaZ8Ckz+LJQpNX7S0n+A8ecgsX5Q
tYM3C0z9PIgzHh029eqB6acFd3XV6KdTZuLpoF0xHH812AoZTwcTbOnRTQ0c
ZDw9KMsPuvS22yLjLQD3V5fr0np7ZDwDvDCFpHD77JHxjNDDG9jjedqOeEaY
ypu61dDDJZ4JaqY2N0WbOcRbBF+vr8sF6dbEM4O+3GOs3oVNvCXgXt17bmie
RbwlCI0TFu8yrpB5l+He+cjld2UWMq8FlGcM0q1TS2TeFXiV7fLQ0kXnZaGq
d1p0qG2R5LPwcU70eEG/idwnC1cUcvaklQmY92eFzxRv79gkM5J+VvhjeVKX
tMdAPDbGywqSTvgbiMfGl3UK3t+3FojHxuWZxazcxAXyP9bociJsKJq9QDxr
lHsEWQ926InHwS37SoSd6XricfDUFck0eOmJx8HwgOHEeYOOeDZYrbndltGn
I54NNhZPnM69pCMeFx+9pfosKVdHPC4O95/PvCDTEY+LSf+WjVX6Uc8W5z1r
bIyu1LNF1HBUMRzq2aHaJ9A1akZLPDuML6rxrxvWEs8O33hpzOKotMSzx+8+
uOIkuqElnj0GFXT7ubZrieeA6pQO32ON1HPAs1OSRnY19RzwZEbhGJRRbx2e
k9ZmF5ZQbx1y70YXbi2kniO+1hGQU59HPUf0L7auepBNPUcU79XcrMugHg9t
rb83so9Tj4f2pj/ixuXUc8Iotbwl8BPqOeHZOfjYlEw9J8wdPb6Tf5h661E6
ku6fd4h667EodfzMtgTqOWPI6afvuX2oJe/LGYPvpUSGy6jvjN212z5vjqX1
zvhRUcXrvjG0nzP6tR1IGI+mHh+/mtvyy80o6vGxrPhiUOcB6vFxyKPkS5WU
enxM3jggNkuox0evS00DYgn1BJjzLf+H6kjqCVC2nHCBG0k9Ab5/Mqu2KIJ6
AnxmK+HwIqgnwI3ev+9uDKeeEBvm9gyEhtP7EWJ1nnOZNox6QoyQvZNyOYx6
QowTBwSnhVFPiDHd+XGeYdTbgClFFX8aQrXwH3WcHJw=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10g1MU3cQAPDaAuWz9gNJcAIF1KmLbmqdikorol0shrDNmCHO6QaTTSZs
CDgNzlZAmMavZdAVkFBwiiIoOoaid7RTRsDx5VxUaqp8DNCRUkqpo4wJ794l
Ly//vLvf/fPugnfvez+ey+Fw4l8/U282Fu5bU7hOzVfka6fiIkzE5x7Y/B5f
8dP0uQ46ikLizK58xfLpMEJ77EZZ8E03+t4EqxcsGoze6qZgtDZoFpabdxpc
FbLp/E6QbcqxtYe6Kj5PmIqHkPzB8Y0PMlwUuun6RxCnORpvBZ7ifstUdIGz
xuhls3PJM4Nf5oXqP2dzqd8zgG0+vOE3Z5DfDRetvOY9szlU3wPSK5cjF9/j
UL8+UJoz/a+9OylnvH7YJi/Y3nDWKWe8ARj4PuXJ1vOv5Iz3Au58+kOi5Ru7
nPFeQspXJ5S/c0fkjDcE2pxbgXurhsizQFz7xr4FA32Ub4GulepjW3eYyB+G
9ifNJ/1bG6neCrGei1P6W24C028E5pnEo1FnHwPj2aCic0LzqP1vYDwbpJ4L
MPREDAPjjcIcEEvEzlFgPDv4TRieBl1xkDcG1s8Cs6V7HOQ5wCFU5uoFdvIc
EBR2as1bohHyXsH6xNq7ze9YyPsXhBrdydvRL8gbh/IHF7J6x/rIc4L6edcy
5aZu8pyQoAn31gabyZuAnQ2bUvx7H5P3H9jmRC23bn5I3iTsOhO1U/1hB3kc
LLnuYZrbep/yOdhRm37ghKmRfA42ZUeERl41ALN/M1CvvsDrj62nfjPw+epk
/Y7U6+RxUZmo/7bT5xJ5XHSaKqNKjEXkcfFEqL5YUPUd3YeHNbOWhE2Ks2he
PPRdlOFcv0xH83XBsLaC7pe2MpqfC9a9rclqSrtE83bBxsPc/KLCatofV1za
Wt9burCGPFfMGPC1Z+y9QZ4bBrz8I9uUVEve6/OrbX/tX1FHnhuWaAO2jDbd
JI+Pl6LTROFL68nj4/zOf24dSr5NnjtWxtt65MfvkOeOZcuLY44fA/LcMWm8
NDRdhuR54OmK0nWRBUieBy6dZckUDiN5npj980cr/RQN5Hli8A0wfZndQJ4n
6irKo93vNpDnhXG1R3PuORvI80JVuKlrzxIDed64drvoqS7WQJ43GqRl7Y4j
BvK8UeO1f5BfbiDPB11XPFsV8ZuBPB8MHVDtkphZT4BHqnYFPXGwngBVWxIL
hwRG8gQoKAgo1oYYyZuJBWkdZ4JkRvJm4uxWj8P1G4zkCVFpn9VWHmOUM/sl
xLZBq5/Xx0byhXgo5o0rfolsvRDvqhqjhr5m+wlRNVibW3OQ9USYnpQcfVTD
eiJs/iRrw8E81hPh2ur0kOpTrCdCqTRBtOpH1hPhZHhd3zwd64mRE97yRd45
1hPjXHX66VQ964lRWqmsHD7PemIMfOpb5FPBemK0FGttHZdZT4J53Hypqor9
PxKsK+LlZF5lPQnax67rU2tYT4Lj+r5g2Q3Wk+C1BWNWwy+s54uXAy/unv+r
Uf4/ysj7Pg==
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[\\(Log\\), \\(10\\)]\\)[|\[Kappa]|]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Deformation magnitude( Right approach) \"", 
           TraditionalForm], 
         PlotRange -> {{-5., 0}, {-4.454334971048468, 4.170748915759505}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0.006 )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: -0.005 )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.872340003850774*^9, 3.8723410369383297`*^9, 
  3.8725022465396748`*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"1c2b95a4-b50f-47a1-a7b9-3fcb2fdec60c"]
}, Open  ]],

Cell["\<\
But it sometimes better to not look in Log Log plot and study separately the \
real and imaginary part of the integrand\
\>", "Text",
 CellChangeTimes->{{3.8723400305493097`*^9, 
  3.8723400640206757`*^9}},ExpressionUUID->"fc1be356-7b7c-48e6-b721-\
f8d1a07c617c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DoubleSidedMonitor", "[", 
     RowBox[{
     "DoubleSidedApproachData", ",", "SGYAMLinfo", ",", 
      "WithDeformationHyperparams", ",", 
      RowBox[{"cuts", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "4"}], "}"}]}], ",", 
      RowBox[{"IntegrandToPlot", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Re", "[", "#", "]"}], "&"}], ")"}]}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"DoubleSidedMonitor", "[", 
     RowBox[{
     "DoubleSidedApproachData", ",", "SGYAMLinfo", ",", 
      "WithDeformationHyperparams", ",", 
      RowBox[{"cuts", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "4"}], "}"}]}], ",", 
      RowBox[{"IntegrandToPlot", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Im", "[", "#", "]"}], "&"}], ")"}]}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "}"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.872340164654951*^9, 3.87234019954237*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"02b82632-eee2-432f-8c27-8b372966695c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.004]], 
            LineBox[CompressedData["
1:eJw10gtMU2cUB/BCoYWKQAu6ScOUGJngAwdaRdHvBGRVZibQicPxHo/SdmKH
QxkjThCCUUGejrHJYwOGERYG0hYfgckGDN0AH2jRRgQBh/IsUEvBDe65/+Tm
5uae8/vf3HwOEXH+UcYMBiPq/2vxTuf8oHvyzSlXwaXCxVSRnk01TgnpRwTf
Lz2ryDtp8fl3Ar4VuC3lNvnjppgvn7mE79tJnfhrXaKiTkBpnYQ5JBZm7egQ
bF2av0e28VfxZ/LVgpjoxTwkXkf4fyWPOimKlvYfkz4Xr2PbEvYq7t5ZzBMi
zhftfToWqqC8ZySyYsGZKTqpoPr6SEfwplOH72QrKL+fTHf0ttwLuIr7A+So
Kvt63D+3FVTfILnyg/N8+LAavWGiPPbTq5/rJ9B7SaTjC7kZKSwl5Y2QFW3r
Ymvr+ErKe0UmP+hOERdsUVLeKDHw1/msPuqlpLxxUsX9ND3RNwDnx0mk4lnQ
6ZWxSsqfIA0sD3XZoSTcnyRPBvwaWVWZ2DdFcnZD9YGaEvS05IvnH3Vkx9Si
pyUeFTxh085m9KaJf5yn8KFJJ3ozJKkneNuD6l70Zolmc1jGCv0L9HTkuXMW
W//nGHo6wmp9t07Xo0XvDTHR1tgVv9ahpydNR++3hqTNoTdHtrh3ex1LN6Bn
IJLGPWEOPgb0DGS4iPFvj3wOvXlSdVCT4delR2+BhBjVl7bLae8tKfmMnC0v
W0CPASMNIQ1rWEwVNc+AXTfmV27XmKsonwHrd/ydEH+Wp6LOnxGsaT9SyWby
VVSfEfgk2/i9f26tiuKMobbrXPuH1zegZwzN3Eeaos1u6BnDvmupk9u73FXU
9zDh1m88W6tBQI8J9uw+F2GGN3omIDjV7Dx0wwc9E9CbXkkZcfNFzwQYhvyi
cVcReqZQenxw1HZfAHqmIC5wWD0SGogeC7JikvzLxEHosWDjuZHHrqJQ9Fig
vrwrzZgTjh4bfimL15z3i0CPDd+0KTRDyZ+jZwbjHzs0bM2MRM8MCqMN/MaU
KPTMwI7ruKMgKBo9c8hdJUo8YR+DnjmU2ylnw1pj0OMAGO1+mhQkRo8DY1U8
mNaI0ePA7BlD86BvLHrLoFGf1yusj0VvGXQ9WHvrBUeCngX8+KBeGxogQc8C
tOOZnuu/k6BnATXdF/POdEnQWw4nvDc65TCl6C2H8mE/0X4XKXqWoLxqEXf6
kBQ9Szj4lUeLNkGKniUMbHi7eW+eFD0r+PWCy0l9Ne1ZwXTgwidZLbRnDVP8
JgvJIymeL2uo3/O6rf8l7VtDJdu0YP8bet8aBl542mtYMuyzhtGS6NW9PBl6
XLgrv6j80l6GHhfuB5Ye73SUoceF/uKenXYuMvS4kDNTuFIuoD0u9KWUPp/w
oD0e2HLm1dc8aY8HnMrfV90T0h4PvF3rjIIP0B4P1Oa5hZG+tMeDcGamWiei
PRuoSLw85XhYhv/HBqJai1P1gbRnAwofeUdyEO3ZQHlawGNVCO3ZgEtqdk1D
GO3ZwnuTFmFJETLVfzRs22o=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10glMFGcUB/BlWXYXFnDZLVJKlKIV4lUpx+6CyPcEwwqVoBzKUW4BrY0c
hiZgQSUoiUaxWjmbhuVUUaERCRQhgltAuSuIkJVCuAtWkFsQWpj3/ZPJZDLv
/f6TyWcSEukexmaxWGH/X+t3moSZWFuB12br9Mz13COV58slbRy5ddbGcyX5
4OBS/fBarLXlRp4Tf/fJr3eeycX3L4hyqrWldbDZmtHaSYGspaKxd9baamP+
FcmMXH5UU28kiQhfz2uy9VHhs4rNByXZG/s9xEde1egVFSppaV6PinifjX2z
PSZZwnj9JMcoKmB5IE/C9A2QKssvHR/8XSth/EFy68aq+0jZW9wfInbs8TT7
znnsGyH2xinJg3ZCKeONkXNn9j32Pb1Dynjj5OG3Te1qtrZSxpsg9r2RQph0
lTLeJCm6zLr922iglPH+Ja7bXTovjkWiN0VW02ezzHUScX6K1Mae9nB8fhX9
afIyyaLSTZGG+x8I+86Bkj32udg3QyySSl85mz5Ab5aYf+Ns1K4qQ2+WdOqn
t+i2VaM3R/7wdjgrzlCiN0+ml7L46ZlN6C2QPHZITPNKB3qL5Hx/rPo21Wv0
Fon81r5zW06q0FsiPx4+mt3vOIDeR1Jtk1vsmTWE3jIp9vCeN9k1ht4KuTBk
2JQ5MoHeCgk7MvjOr+49ep+IWCn2XOueRm+VOAf69bl1zKC3Rvoz4v7a3TCH
HgtGnXvkTmULOM8C2cGqBdEvS+izoK7afqQjZFnKnD816Db/3CF1yyfsU4N3
inbjL+pW0WODraOFT7wZS8Z4bLjt/L1lzgBLxnhsUJT4znmkqsmY71EHnSR3
/3xztozx1KFvOPVJ659sGeNxIP9OT42Vmzp6HKhJSVB4tKijx4Gil5Gcp8BB
TwMSDVTHBPc56GnA5fuHjEc0NdDjgtM1vfyZIA30uGCg/Litt0QDPS70q9rM
7BY00ONBdtOz+HIpFz0eRIOiuC+aix4fnKpXDR0Kuejx4dRAa3BYFxc9PvTI
fzVQrnHR04S5ZvO69h089DRhVVnAnpPz0NOCuPqIvp/DeehpwXFjkQkriYee
FqTcFbTezOKhJwDpySvZ10upJ4DlPTPRNkrqaYPIatdkexf1tCH8wMWuq8PU
04ax6Ia8jBnq6cBsxZsJUxYfPR04ll/T5i/go6cLeYLlsGB9Pnq6sLv8nqH7
Vj56urDmGKfuaspHbxPk52fv/2Ev9TaB/vDEVw2W1BOCWnzW7zE2fBlzvoTg
fqlaccme+kIYCtr5lONI94UQKlhSE8hpnxCm9fe+VbhQTw9OXah36XKlnh6A
Qw2r9Cj19KBg0frmfg/q6UFCjCz5ohf19OCf434JV05QTwQnxNddPH2oJwLv
RM+1977UE0HOXC0v8DvqieDxoSO2hf7UE0FASuvoiwDqiaEoqHu8JZD+HzEI
Q2NLngRRTww/+d89nBxMPTHkRWRH2YVQTwxmWo1p/SHU+wwa8oxHY0L5sv8A
xzyW4Q==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10gswXGcUB/C13muxz8ukqEgJU5ro0qDkO0JSpp16jJgMoonxqqhHS1pF
oxJJJKbTsMNEEqM0muiOiLC7lI50I0SpRBsaUY8k8kDFq55ZGvZ8Z+bOnW/u
Ob//N3fO1qjk4Bg2i8WKef1svGmZn32jrypa3lByfqOukqtx1VOuRx41lG6e
G4nOkOdn17K5cslmqcjdeXWbt8pFrvl+h1hFj0uVpyLkGu0uOVkUm3UyPVfu
stn/J6m0bJ3nSn+Sx8VuVB+5ye3sLmH1yC9szj8g12qHDlgPzsq7uzZqkPw4
EDCnNhcpNN4IkQ29L8nMd1Zo8kZJRvJEMy/8A4XGf0zyBpcLG31DFZr5J+Rz
ZVMbx/6gQpP3lLCkvmcCzMLQe05kJl8M9x8OQu8FKVUN+8usg9CbIFbFoUt1
TbHoTZK1kp7KWnYOelPkyvazOccLCtGbJhX/5ra1x1Rg/zSxOTa+5htUi/4M
yfVr3uZb3oTzs0TsnT/qFHYL8+ZIE/tF4NrxbvTmScrfZa0FWX+hN0/uLNf/
+lH8Q/T+I6XSHR4i1Sh6C4RYpLYcjH2K3iKJD/GruSidQG+JGLU7pTiVT6O3
RBYWv/c6IptDb5mkWBncThxbQG+FsBstFrtgBb1VsmfMMeP3G2r0XpHv1M8L
B86zlBrvFXlQOVNhHc5Wajw1ccgK7n1prqPUeGvEfu3j5JU/dJUab50w2y9N
f5uhr8T1g21yJj9KbIj9LOjSliYw5Rz0WWCeVMOuM+MqNfunBWGXvlEMfG2M
eVrwZVWzvLHDBD02WN6usj/K4qHHhrlEr+LGczz02DCZIakONOfjfbRhMsdO
nSflo6cNnNOdDS16AvR0QMc7syspWYCeDsyHJDha9gjQ04FZGVcRYidETxcC
Z3faXE4XoqcLETOGP5S1CNHTA6fdMp+eNSF6epBg4rPQ6i5CTw/uk0cGS0ki
9PTB46HKYbZMhJ4+LPemtdh2itAzgGpVaa7WjAg9A3BsCEidFIrRM4CcrqiO
vRIxeoaQnbDuGRMgRs8QTtV7+VyIF6PHAcb3WZzzMTF6HMjbu68hoYh6HDiw
287qxGXqGUG7rd9EfQP1jIDfn2a/4xb1uDDpYGZqfY96XLhvM5JYO0i91+fI
VF3dZ9QzhkL/T6d2T1PPGIITjo5lLlHPBMbfDCjvW6eeCaSPSZk4PQY9E1gt
7mjbw2XQM4X+rDMvs/gMeqaQ75Tca8cw6PEgwvaXfwK2MLhfPFi9GD6ia8Wg
zwPBjTTJ/q10ngdTXoMjfm/RPB7kS/raxu2ox4ebvOg6Hwfq8WHicFpe+NvU
44NBv8c+dyfq8YFEzns8fod6fJCo9qsjd1JPAFdihwquO1NPAPbDPp8Mv0s9
AZh12CVPSqgngCeNnv6DLtQTAP+QmXmdK/WE0Dsmq0l5j/4fIXCyfzu3ZRf1
hFBUHMqq20U9Idz7ynbVzY16QjjhcejD627UE4Fr88+nLdwZ5f9Ghr/m
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10gtMk1cUB/BSSoGWRx8aJYyJE0EymWKhmR1wj1ZAHGwg00r7qTyGQEUG
wzCVoUwHUVHRgIigCyiJLpGhQyxd1bmMMAdMeag8xjNUVMq7Rakwt8F3vpN8
+XJzz/n9b27u8tivtsazWSxW/P/f/J+pvdnRZZmuK6QXLs7Xj6St7OIcv3mL
tGRhrSV5G8oSf85PlUoW6ndyd9L47YZLx3H/T3Lt+yGvTaUVUlprJjWr1eqp
nHtSn4X+NpJRvh4efNIsTdgzX8+I0DH9N4s3SzWlC/Od5ObJuFGHEInmr6b5
6ib7lntc56SEaWivn5wVhumFK/Zo6LwB0t7xQUqdIltD+4NEuEt4KM5UgvN6
4ur/5RM/qlpD5w2RmIrct7I7Dei9JB7Du4q2VA6g94qsz7G11R95jZ6BpGgT
sweq+LW0N0IWPbssTihwraW9MXK69NN9mWpJLe1NkOrjhqzm0CDsnyDvF+tW
ysVRtbQ/SQZ2+HZbRu7F+SlS4jUbb3/tcC2dZyR1Owc6iyvPomci7otyy5Yk
lKNnIvYHx/anym6hN03aTZy2q5wH6L0macNZvhcqG9F7QzSbjKoJ81P0ZsjL
5NnYR/V96M2QSU7Eqb52PXpm0sS+U3B09CV6b8m51fn9ATkG9GYJ328nNyx3
BL05Uu+b0vc2ZAS9OaJjd5Gf0gzo/UMWV7s8dWsZRu8dyRWobUrSGO9fEuuc
751+ZQw9Frwb7yNcrhH7WeA8Oqh27jWjz4LbHjmC+BNsLf3+LECiCdbNsPla
Os8CJrz8Ly/LE2tpjg1Jja3dATpnLe2x4UZ43KMLH63Q0h4bDBFrGyQtnlr6
PJYgv281bTe0Fj1LWLbfwA087oseB3Kophn9XRl6HMj7oTR+WALoceCER/uh
8XVy9KzAdKy1Qbw5CD0rWLvKbubV7hD0uPBcd3NVeWIoelwI4N+q9I78HD0u
BFtwxyx4EehZQ/m6jUGnIraiZw3FMRWBL7Ii0bMBZYj8PZ8zX6BnA40Nid9p
j25DzwaMz8Yvnae2o2cLxWF5PRkuCvRswUuQoor+Q4EeD2oOHIZMagd6PAh5
Z7hi6t2BHg8ePjzgNhQehR4f2pfc9w++HYUeH4xVbNfnPCV6djCljNi+e7sS
PTtQbpi46lGsRM8Orgffmz7WokTPHopOe548Z6lCzx6snFbe3rxGhZ4DyD/7
5XH2NhV6DsAqfOhmylCh5wCBCfvy5YUq9Bzhb9djHeZKxnMEobus5kwd4wmg
onooOalDhe9LAHZjLM/BV4wvALcu69ebzcy8AEarpFk9XArzBJBkGXakS0Sh
J4SefvXSr10o9IRQuDztyWN3Cj0hjLy4XOK0hkJPCLP1ioxUKeMtrDdO+jGe
CAoLbshqNjKeCITeyQdbgxlPBOfjFDFUKOOJYPE368xx4YwnAidvT9lMJOOJ
gdfrG+muoPB+xKBrlAyaoxhPDMZQ9odZFOOJ4WCn/mPtLsYTg0+6i8OdaMZb
BC0Pin49FEtp/wNIaslV
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"F[\\!\\(\\*SuperscriptBox[\\(I\\), \\((LU)\\)]\\)]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Local Unitarity integrands, F=(Re[#1] & )( Left approach \
)\"", TraditionalForm], 
         PlotRange -> {{0, 5.}, {-5.248025859581882*^-32, 
           8.746720218031139*^-33}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Complete LU integrand (scaling: 0. )\"", 
           "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 0. )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 2}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Before"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.004]], 
            LineBox[CompressedData["
1:eJw90gtMU1cYB/C2IJQ3bQmgDBbGaxsGmMzSAskQJg6mCK1zSFwEBOTRgqIR
Z5xDHooDx0MQpCjCxiqZGxOQWtg4HyCOjaeIRBCFBq08O8b7JUy45+xLbm5O
7vf9/ifnHsvQOEE4g0ajhb99Nt6k8v3nvP8J38bNv75R5UhoIAv/U7CLW7i5
lqOZm1Z2zx8f5TpvVhOij/3s9uNYMv7+F5pt75Ic8JDWUFoXUikXvqnM6ar5
eLP/Meoc1qOn6M3VHIvYqF5kenW04fvzpjLJ5nwfKjPVFVofd5W1t23UAHpR
d1fDaemQjPKG0JWUVEHm669lVJ4C5UUqsw9FF8oofxjZ1uZ42Q/L8fxL5GUb
bPJisFFG5SlR5SdXSrJ2PXGhvBE0Js4c0U9m8ChvFB0piXcparTgUd444oh6
i6ffdeFR3gS6aL3VJeakP4/yVKhc6MM97R7Bo7wpZPnlwBmV9Bzun0KO2W5s
ek029v9FTInWQLhjGZ6fRoW3Tz3lttzHeTNIzHhQnf5DG/Zm0YOUZwm840PY
m0USuyBZY9409uaQ4xRya+pR41PePHJ4KL0zvYfNp7wFxLfPN8j+zIxPeYto
vGU1/gsfSz7lLSJVWlt1Q5A1n/KWkGlIiENZsh32ltHiNg3v3W722FtB2+Pu
ndPsdsTeKopyXglNat6BvVUUI3STDgm52HuDdA6HPp+sdsXeGprw8xvyVPPA
3jpaFDsJ33fwwh4NvGz1RWl93rifBgph1HSVyhf7NAi8UJ/hu3M/n7p/dNC6
WDqhKA3AeXTI9dON4XsIsccAM3qWWifzAPYYoJoPe+9VqhB7DGBY6Njl7QvA
+1EDb9uUet89vthTg+x2K+4JgTv21OEov3coKJImpzx12H7ipsDc2FNOeepg
Ljk7er87QE55W0DJMCg97Rokp7wtEGtaUCNTBsspTwOc0uI+cLIJw54GBNZa
VCk6IrCnAR07v1qPGIvEniaYnE1+9ehSNPY04VFF7XeWdTHYYwKtWBl/tUCE
PSZ8JPHPuLZDjD0mMLNpmSMFYuxpQUS12fnop2LsaUFLcLXhwRUx9rThnfRb
R4q0YrGnDcXDh+f2vV1TnjZ0pt+yW10jng5Umd1h6amIpwMmhZyfaH3E04Ww
bsnf0gYx9nSh36ovdn852Z8uTAaealZkEU8PjNZMStfPEE8PerQjqzmhxNMH
y45JzZC9xNOHhZLflHo84ukDfGj8xt6GeAbgnnswup5DPANYPunpUa9GPEOo
YBc+MZ8Tyan7ZQhr89rc1tfkPA0hYTVx5O4zEZ43hJmwVO7vXSKcZwjOnw4Y
9TwUYY8FlXtvNA//QTwWXJZqePfeIx4L1Aeb8vJ/JR4LhKPLCqPbxGNBv2BQ
4l5KPDa4rRcmrhURjw0XWl9e+/z//80GgXqSjXEu8dhQkbq1LCCLeGxQ3DCv
mM4gHgcm20zGVZdF+Hw4cD1h94r7JeJxICHHMaonhXgc6D9WlfNLEvE40Lbe
mt+QSDwjqFvy89H+ViT/D31l8W0=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw103tQVFUcB/CV590Fln1ohg+0UBQ0SWV3rzoUE/iY+IPQDMiVASYpRMAw
NyJiA8aUhNBGRAKSRJskRJZsFBc4PxE0Rl4qYhDG8khAYBcRcVnWJeH+zm/m
zp075/f7fO+cOeeNyPid+6x4PN6+V8/sm5Y+0Lwwpc9dlps3WxeJa52VW2to
qOynue9KUqSzKB9czZBtnKubZPztGnWf8BquN5DI26qsHx71yzitlRTpo786
3SGSe8/13ycXbulyemI2yT+Nmq12cqmO79X7LEKePzffQYo7l6nL6o7Kmxpn
q4vMuz5zbHXaJTnn6chxvb9pz5q7ci6vhzTWZdXGXRlHv4+sme7NfkcgVXDz
/cTcPHmZJ9qg4PIek4G7WYauh4EKzhskrqmFwed5+xWcN0Q+SPa0jjqbruC8
YdLYbyr7LzgfvRGiCZ4xXi3QoKcnH2oMplRRPXpj5NGJ/BD7Ew+xf4wkZISV
rns8iP5TIhwVt465T+H8OCl878T5tbkMy+U9I8U+sU4/H1nIct4EydxvuLDV
1Z3lvAnSXfktW7/Om+W858RWl5gxMOTLct4k+eWuMbw8YDt6L0h5x0SrZ/gO
9Ixkw7mQie7r/ugZybblLk/uePmiN0UWngqz3J5i0TOR6KD67yJyN6I3TbRs
Q5k21Qs9M+G5nfKcnvZAz0x8jtsEnDasRO8l+b0kZeTpwJvoWYjms/MrmnOX
ozdDLM7ZDebTS9HjAUTK2krJIuznQaVf+vr2xNfR5wHzQJHZd/Y1ljt/8yAo
h43qXrwA8+ZBXtOO5kOdUvSsYHVLk5+hSYKeFdhsV3UahsXoWcHUWbNd0lox
/o813PCuCPsoQ4SeNaSeKW70mXZGzwaC3jpzskPgjJ4NpKyseM5uEaJnAzHG
0s1+R53Qs4X63QkejU8c0bOFF0Oj0ZGRjujZga48+oLHsAN6dtAQuFNZneaA
nh20aKWbFq1yQM8eLi9x3ZbZLkDPHpoM6/8pyhagx8Bfx6M+WRwkQI8B3bk/
9o64CNBjQJ+usfMc4qPHh5YRv4OCGj56fPAclhb8m8tHTwChu95XCVV89AQA
BbEpC0L46Alga1HFS7UP9RwgQuZbPriSeg7g7x/TOCminiNMaGTBSguDniOY
z5Reaxtl0HOEk+o9R9y66X1wguaWBV9I7zHoOYE4YDLx8C0GPSF8bKmeWVZF
PSFUu9X56iuoJ4Sq7ORSUkI9Z+C1b93/ZTH1nGFJiXZguoB6IlCQLSr5q/vI
nS8R3ND+NiH5kfoiGP/zZro6i86LYJ3yit+BDJongrS/M13uHKGeGJyqar/O
TqOeGJJ2af3L1NQTQx1z8ful31BPDEyPOLktiXpi2JwT63snkXoS4PUqu0wq
6klAae3osvcw9STw6+7wuJFD1JOAaFWhoTiBehIQeMk3qz+nnhTiVmRHJR2k
+yMFtibedDKeelLIU5i6auOoJ4X5EcYAQRz1pHAtIeTevljqzYex8Kvv3j/A
sP8DnyHQCQ==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10gtQVFUYB/BlWRbYZWHZhcuygDyWYDQEWgjkGSgPQxHHRTAkF1gVK4zB
GASSoLKRHIIYKkDIQI2kSJOJuyuOcz5CHsrLETMEVAhRXsNL5CEIBfecb+bO
nTPnfL//mTOfbULyviNsFot15P9v/U8q1kT3W3/VH3XFpetVjVScrAO0fl/d
uY31dRQgSc+Ue+rQbhvViPRj0rZnP3Whmf3b6E0X2+Jeu2ia0e6i4Qibm/bR
ObT7xvluVOR05aA7XUUnHl2vB0ig2tzLSu+iyzb6H6IulOcSzp+nO9rXqx8p
/UwHQhfN1Yw3gMr2bi287vCumskbRMUunKSZ3SfVjD+Euny2GJT2VKiZ/qfI
UGXzZWJrvZrJe4asLWacC/OrsTeCTrjOVM95tXgy3ijqtLqa8Nq125PxxpG7
YGYwXtbtyXgTqN/z9imvtCZPxptEilqr3MNNjdibRpHDZRrHsBGcP42yFzwk
95JW8H1n0LhV7cfNe/kapn8Wxe6Xt4Y6SjRM3gtUYknTg5X2GsabQxNtv2vz
PnpLw3hzKMRp7GXqsq+G8V6ipiDTpfyqEOzNI4p7ze/eRDj2FlB4beqK/Nke
7C2icLFyzTsjDHuLSJ4W+uKRUTD2llBujVF88cUA7L1CGstumbDZG3vL6Ip8
9Y6jiQf2VtDfDaOzzb/IsbeCikR10ZWWrth7jXas9GS2v++EvVXE/szBLTth
M/bW0JSpudiG54g9Flw9IPizdMsb+DwLtr0yvfNhlQz7LKhL+Scq45idhpk/
LTBNKFxVxdviPC1IPqmob/jKBntsONYtq5sqtcYeG/ouxpwfiNuEPTb0N0wq
rKKs8H20wffSrhM/plhiTxuonanK1RoL7HEgo+Wh2FrbAnsceHI5ruZBshR7
HHhebjJ6c8ocezpQXtvgxc0xx54OtMk6forZZI49Lvyb5Nva0irBHhdCZ/W+
qM6SYI8LziXe3uU+ZD50gd/96ekULQn2dOHt+tZFh04z7OnBUgH78eMKM+zp
QcNcsE9vuhn29EDl9xc7db8Z9vQhz87ewsrDDHv6ILUNlr4nJR4PlLHc/Bta
xOOBI2dOPTxOYY8HKeBUdbqHwh4fyvbklkS0UNjjQ1ZIyiWuhsKeAfAPleSl
/EphzwDSZY2Nh84TzwA6T1UUXSgingB4j/rjqbPEE8B96oZhyefEM4Sobbs/
0M8kniF8940BHfEJ8QxB/JtHsOI48YxAX5ZPrSUSzwhiv0e5ASriCeGaAol0
lRSeLyH0STt1gg4SXwh351ejxqJJvxCSIoOSJyNJnhC22jtrhewjnjHUGFYO
PY8gnjHobhqZbgsnnjGo64tHx3YRzxgEFm0x/mHEMwbJ/cgzsJN4Iog7m6tI
CiWeCIZdI9z8QognglvSQKlLMPFE0PHz18f9g4gnguAK5ULiDuKJIWd6qO/y
dvI+YtD7wa9gNZB4Yrg119l+NJB4YvA5d7jgSQDxxDAfH8hLDCCeCZyxmbqw
/A6l+Q8UVttS
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90glQk0cUB/CYIGeAHCqHimgBW0BQkRAgFhiQQCpUzlZIqEfBoh2EeqEj
tQgUO8io1CDlqMqIQYXOMGJCtGEftVC8aIDSwghVQI6mHUIBBTmkwu72zXzz
zc733u+/s9+u3XMwMpHJYDAS3z4Lb1oT72VUVw+bCi59t1A3UOixzj/O1G8S
FC+u1ajv2PbZ5pPRAo/Fuo/6r+SKxcOHyfcHyHP/xms/aeVKrGlRsp3ugdIO
Kbcs9rcjkSbHK7yiX7kvaaF+R4morSovz1BVsjjfhW6F3O28Vbte9eTxQnWj
5dGtF3MbglXYe47+jPQqPXp9rwrn9SJ39zyno8UZKuz3o5vPdlW7vVtA5l8g
vVVA1cDOy144bxC1Te3kyHIeeWFvGG0dkzCvrNZ7Ye8vtO5bG8eeELYQe3+j
tUn6MpfjTkLs/YNKnl6+6hTjL8TeCKrWnVNofWOF2BtFoorh0tTaz0n/KFoh
L9XPaTKF2P8X/aJnZ/0skJP5MTRT5l7j0FJJ8saRA3PV+zOKH4k3geZrFGm/
pmmJN4F0v0WEdRf2Ee8lKuyv1p7oGCfeK3TkQmO9NITpjb1JVNBnk/o6xMwb
e1Nop31HYlYo1xt7Uyi0TXpnOG6ZN/Zeo09TZ/c2ZVl5Y28adeYDY4/vSuLN
oNitPQ/s29YQbxZl6fOV+Y3riDeLNtQNjeqinIg3hzp0oqjJWmfivUHxHde3
iVkbiTePnMWZX7i6eRCPAVYPD0ac7RKQfgY4OycrVCM+xGdAQjDTJtzTzxvf
vyXQfOnU1f7yAJK3BGqC3Li+/oHEY8ImC06Z1jiIeEzIsGTVDOYEEo8JPmf8
qgrDAsh+WLDyhbwuTOxDPBa0VLWbH4t0JZ4B8ILMda6fjdZhzwBEfZZf2q7Y
rMaeAeTzJ7NUbQFq7C2F6em7/kd8JGrsLYUDxxuNVIM71NgzhOkdopPujtFq
7BnCBm6cUW9LLPEMISe4OzpJ9zHxjMCv0V7UmhtHPCOoCIrps78XTzxjaP96
96OCIinxjEH3UcGAfLOMeMZwv3xseKhIRjwTkPnc7EzulBHPBMyanhyImZER
zxRuB3veKzFJIJ4phHl+EhH2do09U1D6G2TPvKGeGdQnJaWwR6hnBpoBWxaj
i3psSCkdWq9okBGPDdt6dj8Ov0H3x4aiDzze6T1PPXOw8zBizKdTzxysBad5
/D3Us4BegVvSru3UswCRNX+buZB6FnBhvDDexZF6liCXjTVr+NSzhCLJq+81
LOpxID1m75bVL6VqfL84cDh86OLDIXqeHAiMShHXPJWSeQ7se54pv6eVkjwO
jIsGD7U3SYnHhQLJbYd+DfW4kB63vqLjDvW40LpqZKLwB+pxIUqxIWBZJfW4
kHDNZsa3nHo8GOV0P5srpR4PbHtdXkn+/988cD3akr38IvV4IKzfbxBxnno8
iLQ+ZDF2lnp8iOWlSUa+kZLz4cMJu/I4US71+FAsOtfcnk09PnzYsHys6jT1
+NCg2TgJX1FvGSR33ak0OSVV/wdqhu0l
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"F[\\!\\(\\*SuperscriptBox[\\(I\\), \\((LU)\\)]\\)]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Local Unitarity integrands, F=(Re[#1] & )( Right \
approach) \"", TraditionalForm], 
         PlotRange -> {{-5., 0}, {-5.862298354644038*^-32, 
           2.7776768893413695`*^-32}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Complete LU integrand (scaling: 0. )\"", 
           "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 0. )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.872340165924058*^9, 3.87234020025977*^9}, 
   3.8723410372540617`*^9, 3.87250224683679*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"89bb4ce5-8984-40d5-877f-076bbc74cbc5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.004]], 
            LineBox[CompressedData["
1:eJw11A8wm2cYAPBI0giCJKysVxs9zjBt/IvEdX0fU5RahwpT67lT1VlNprO2
dutyVyPlakVZFdfNEW3pVF1JcLRdp0PpqVwp9sf/opopUTHBxvd47r777r3v
fX7P+33f8752cdLw43QajXb8/2vjvhWsNgf7i8NhwitXN+Im0bvXrOplUmHx
5riReIwOnH2UkCX02IyHpODm9/NFnTX4vIOoZauaqPY2IaX1EMZkgLZ3YUDo
uTlfTYw/0ZrTxsaEJxI2oo+sB09Ik9RMZclm/gARJF5ONiEOyu6ujfiDxJcF
0cYVvkrKGyaXZOdbqw2jlVS9EdLV0vdLKvtLJeWPkfgjxQWz7iWYP04c0oT6
or8alFS9ScLyj79AF/eiN0Xky9GFUbYv0ZsmM45Lt7MH6CrKe0muaE5O1WZZ
qyhvloyYtCS2r7qqKE9D5A59+UKxr4ry5sgtTg5nT344zp8j/Mc73mlrilNR
/muSdef5jMAkFfPnyY0bv1neVZ7HegskIDOMMx98CT0teWBZWtVv9SN6WrL7
VGCdeqAQvUXyLvPWTiN1nIjy3pBxduGUr6BeRHlLpE6ebxl+5qmI8nSkJokM
BR0dF1Gejhhpvgq3+GlBRHnLJLHCo7wyiyamvH9J2UHLmQ8DjMSUt0JC7shi
dhvwxZSnJ647fvfZLrUWU56emIyq79GNbcWUt0psdGSZVmiP3hoR2ZzT+Kw4
obdO0s0jcuUCAXo04Ouv2fK1HjifBnWdrWedJSL0abBeMcScjP5ATPWfAXCW
u+kuMl+sZwDPbN7Lbi/ajx4d0pO9MrunA9GjwxPJr+lfHzmIHh100edYVl2H
cD0MiJutzvjZNAw9Btis1bJS88LRY0LHaE+A5fBh9JjQYOj2QjcTgR4TaHKp
o/a6BL1tcLqiamWdF4neNpA8rlj62CkSPRYkve063jwvQY8F00rHR/WnJeix
oGfNJcz4fgR6htB/yuuYYvAweobQfbezOb13a31s4JrXxr2oC0OPDc0PDBjq
jFD02KCoUmRkXd96XyNwYv/tFxAYgp4RQPblV1cXg9Azhj5Zpdl3TVvfzxie
TpxcvFDij54xrCyG9kaU+qFnAjNBSs5Y69b/MIHbbn68NwxAjwPW84rplr69
6HGAnlNV/u2UGD0OVEbXrqf4eKNnCm7SA8/8OjzRMwVdrtsurzx39MyANlee
GvWDAD0zKBwMD41Nc0XPDLw/ExqWCZzRM4fAaa/OQR9H9MxBrlHkd+fao8eF
T+2tgipcdmF/ccHHsylFz7RFnwv7l7olatedmM+F90f2Ds0ot/qfCwklvlGi
a2+hxwP7SefAvH4+ejzY9zDCpjSGix4P/mxoyMz056DHgy9sCl4dCmGjx4PX
8nim/T0menzQcKuPPsk3QI8PxVYOqvhvVnH/82Fozio3+XMd7mc+HPPW1sdO
LOB+50NDpV0Sr/EfPA8sYEAR45+WMYXnhQXoa4Njo6xH0bOAnPveJYzG5+hZ
wEcpsqLt+i70LKAmct9F6Zl69CzhRJrdAfqeStV/0/2odQ==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxd0slJg1EAReE4z7MNWIPuYw2WIESXliNqBZbg2pWgIAiC4EJRRFEkzvOU
/+C75FwI4ZD/fS+EzCyuLDQ6a7Va4+/VevdW11rbrP/3etVbpWerbevznXq7
sl96rnr+oPTyUmuHpTeq80el93ZbO5Z3ovtO5Z/p/Lnuu5B3Ke9K3rW8G3m3
8pp6vin/Tufvdd+DvEd5j/Ke5D3Le5H3Ku9V3pu8d3kf8j7lfcr7kvct70de
bb79+TR+mv9fR2nuS7NOeWm8NN+nS16adctL46XxeuSlWa+8NF4ar09emvXL
S+Ol8QbkpdmgvDReGm9IXpoNy0vjpfFG5KXZqLw0XhpvTF6ajZfm/5XGT3M+
zX1pNiEvjZfGS+Ol2aS8NF4aL42XZlOl+X3SeGm8NF6aTZf+BSreMF4=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90gtMk1cUAOBSoC1P+3BG2WaCOAJBJwmEMtHdI9D5gvLY2JCH1kIptYQy
Hq0DhPkapoibTKoIImqdYXGjDPiRuWxBJmSiA8rDDWQMKLiJIlWg3QYyoPf2
JDc3J/8537n5c9zFimgJnUajSZbO8k3iUEDLzTbPe43ny5ejBvH0I2lqm5nG
iyt5M6qVjrzlpnyD8luJViT0dji9uzeYsnz/BfVEDOWs3yClLFoXqk7qdAnd
pab8V+p7kKTTvHtNYSMlTVmOfiQJz+3+ua2Pqljp/x19NcU0L5a8oB7cX45H
6AojkzPQzWyyeH+ii4WbqGAndpNl3gjKrktviXvfjW/xx5BB3u9b9toevqXf
gLK2fZsSHSPmW+ZNIN+yW+LNtRl8i/cX+uED21l6pIpv8f5GV4OOx70sysPe
JIquR4xPzPnYe4rCdBQvxJCHvSnEFNfVLw4fxt40aqFua8a/zsb10yjpsH9Z
s3MG9o3oyQOvSttDUtz/Ao1m5Z8QvCfC816icN1GRUvWh9ibQe4zkY6R9yOx
N4OeeD2sO5IpxN4sii8NKbzwKhJ7c8jew1+gCIrBngnVmH7duXZ1PPbMqOJx
eZp6XIQ9MzravHaiU5KMvX/Qd7Eee/37yPv+RfbefdEH2XLs/YdGtKV//ERP
x948Kqmn+4iiMrA3j357dm0qVPUx9haQomghTJudib1XSF/ZMfpFWBb2FlF8
sWfDED0bezQIGCtdV1WRjetpMLGoPtfjloN9GujvKJy2n8jhW/bPBvoY3L3b
B3PwPBsYlA87d29QYo8OJz+/1HMmUYk9OnxqfLfyZokSe3TwjvK5wWpU4vfY
AqXNP+PXp8SeLWjoZ0/lPieeHZTdTtpktFNhzw60zfsScteosGcH99RXtnRt
VGHPHna6HdCrfcl+2YOm+K7Uc6sKewx4tCfdlhVMPAYode09R3cRjwG6umMX
+sOJx4Tv5RMF26KJx4T93N684RjisSBiS03gWCzxWHCsPeN6cjzxWFAtehvy
EonnACLvqvVbDxDPAQpay+/qRMRzhLPGtIeTB4nnCEeutlXPionnCCGTX6r7
k4jnBEUNT3PKkonnBJ23BIxACfGcYcdU1NAdCfGcIcD0Ucc7KcRzhqHxwLnL
KcRzAWaCyWxKIZ4LfFbsvxAiJZ4rvMno6jwpJZ4rtFdVGn+UEs8VFMJn2mkp
8VaBUK8xv55KvFWw39XQtSOVeGz4pmB0SryUW/aLDblesXOFqcRnQ2KRNrPc
2s8GoWfLQG0qmceGGMHpc61WjwNZDYWmXqvHgXLpc6HB6nHAYBofNFo9Dpxf
1PUvWD0OJPT6ZLBkxOMCJ7FXz5ERjwvy4noPNxnxuGAX4H7cXUY8Lgxck7l4
yYjHhXWT+wY3Wz0ehMY10f1k5P/wwJRwXcO3ejwQ18/fCLJ6PHgcoREgq8eD
5I7i/GCrtxrkLEWsYCn/H4/CqLg=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10wlQE2cUAOAkEIgJRw6slg439aIoFgkJSP6XQIJSq4K2aLWDeICgNoI2
SIo4yiGOYIGpBdQRwVrKaDuOHRNiUAtC1QJqgVJBWsFwlyJXFGJaWtiXN7Oz
88++971/d//nsVMZtYdBo9H2/H/N3i0hyW4eumGSCotKZqOSBN+KXWz1JEZ4
bm6tI4/ik7ovPk0V+s/FPfJivEcSHFuKzx+SqMRrL/Ye1wgp7Qnx7/QKiC5u
EK6ay28hkaeTy+tl7cL4uNloI+uU9imqeyOa83P17ST9QMHB0+e52qbG2egk
XjXCtMhoXy3ldZHil9XxoTbhWqpfN9ni/yLD8dkOLeUbiGdNRb+8NRfre0jv
9jLPEavvtFS/PnJ9nnriizu16A2QDpvlZUVHn6E3SDyuRl7mG8fR+4uoHF56
+xazqihvmORPH1fXWLtWUd4IObfj18K6oJVVlDdK0mp1u1oLZZg/Sv5wo0cy
9VFVlD9GTn/YuXkNZzfWj5PBxP7Aam1yFdVvgqR3SytfRxxDb5LQ5y+qa1+Q
jd4k6Y5QlvzWnoWekVzbL3Cdao4SUd4rosjTSaR+V0SU95oMfpz4Z2RKjYjy
poh6y2Hd2k9bRZQ3RXa5OkgEpQYR5U2Tjey1Rd+eGkXPRIzOuZ0yxTR6b4iM
PrNpOZ0hpjwz0SdcfP8tJUtMeWYSwlPpGWyumPL+IbrH5ZO0s05iyvuXZJkq
B4PevC2mvBmy5kZL3kk/d/RoEJPDceVPemE+DRKS3lEt+2gJ+jQIdPFh9G31
FVPnjw4Z8oN0n2MrsR8dVo/V5zwoXoUeA8q+epzZNBiIHgPK1VtPfP5JMHoM
iGfxmQsaJbgfK9DIjJmX7KXoWYHsxDTzcIEMPWv4Xr9Q4dQVip41sDcd6Zsa
CkPPGhpiNIsmK+ToMaHBfcw0w1Ogx4SR10OvNixVoGcDybaHDPpxOXo2cFZ1
oP6mSo6eDTTmJm1k/xSGni1cNah3XukIRc8Wemy4+oxmy/5YUCszxvbfkKLH
Al2vgtGSBeixIPfnFZmnKizvOw+WMBNkivDV6M2D/UqX4RKjGD02jO7zs0+/
Zfl+bNh73ziRcz4APTb01nY82XzBHz0OaLhSjuGO5X9wYPcvjY6vrPzQs4Mt
cbq+223voWcHN3+4fSltYCl6dpB+9J45KWgxevbgc3lbc+hDb/TsYUNRmFtA
gSd6DhDSo0mKPuOOngPkx6VGxKS6oOcA1/Xb6WV+zug5QnH5trqOoAXoOYLn
rYbcpnwn9LjgZhsS+o0PH88XF5KvPd9ntuaizwWJzDmixdcO67ngLc95PKS1
nH8udGfkfSC6yESPBw/kKcEFvzPQ40FfVynvwjYaejzwC9ugzJabcf544Nrk
07Z+3RTOJw84d03DXncncX758OOoVPGocExEeXxYXxp5arf6b5xXPhhMYbGf
JQ6gxwcPxrsnY3oN6PGhsTrFgad7jp4A7pZo+49kPcX5FsB978v06IXN6Akg
vK3/OUP3AD0BjB8a8phvrkZPAPr7y0r3p1xBzwk0tV96slZ8XfUfJOmmuA==

             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"F[\\!\\(\\*SuperscriptBox[\\(I\\), \\((LU)\\)]\\)]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Local Unitarity integrands, F=(Im[#1] & )( Left approach \
)\"", TraditionalForm], 
         PlotRange -> {{0, 5.}, {-3.4245141462333636`*^-33, 
           2.048867300206323*^-32}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Complete LU integrand (scaling: 0. )\"", 
           "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 0. )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 2}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Before"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.004]], 
            LineBox[CompressedData["
1:eJw10g0wlHkcB/C162Wt1911d1ypw5mjziUvu8eJ5bAzbuaijsiZzsse5zXv
TEhTnZMUjlDEzcpLuJNm7G7i/6vuciVFhZqQ9xiVTdsmabvj+fWbeeaZ/zy/
3+f7zPP8zMISdonoNBpN9P+1dv9QD5b0BhJhN6+8cq2ayLs4y2DamyTe6fWz
jARs4Dr5fFfMs1+vayQolX0l5GUrPr9BmibrMk1b7vIorZ+klZjbhf72jOew
3n+PlFco43+y0+BH/rxWQ0Tvz9Z9tkoT/pn1+YfEVNQ9Otpmye+7tVYjROUo
WZk86CChvHFSO5f1Xr6cIKHyJsj1xbPKMd8yCeVPEc9FW25W9AUJNT9NDlTd
PZWjK5FQebOkec5YK6VFht4c0XCRdNGfydGbJ9+Ai89gs46U8hYIa9rrxsnR
zVLKe0pK6x6G6RjYSinvObk1sbRQznCVUp6ctMX6bnPd74P9cuK6xT2kSi9A
SvkvyPAASVQmhOL8Ekm1Ht9VZhaNeS8Jf2xme/HxJPQUpDZhqDJLMxM9BRFa
NRDazlz0XpFOk7h8YcNR9JTEMd5VlO9ahN5rMmxj/6g5shq9ZRKV3Pip0UAr
estEdUyxosjuRu8NMd50/9Bj+m30VoiZuH5ozH4EvbdEEDS83ThmHr1VktJw
+ZC1qRK9VZL9Ks2su4Uuo7x3RCY+HNbTpS+jPBW5Q/OmfX7JWEZ578mvykoH
k3QLGa4fFHscP7iH9hX206D9fNzz2WqejPJpkG4hHo2oF8io/VMDgzw+o31c
iHlq4J4tFbvU+KJHhwDhg7nIsAD06BCYHJXepxuCHh1OP3m69dyGMHwfBrTy
UrwyxCL0GHA2T3vQ4u8o9NSB+UhgHPBlDHrqIO0QVjXXx6KnDrbtmco7FnHo
acBV161uDtJY9DTAuidcUVsUg54m8HJnipanfkFPE0xYJyOSn0Sipwk57n3X
z/SI0NMCjZmjpeRcOHpacP7tj6shFaHoMSGitMXo47370GNCw0WBZfRgMHpM
+Cdjx7fxDYHoaYPflPyA6rY/etpQzC8sPyrcjR4LpArLETHLDz0WdN4zcjps
/j16LDBQKXj7G33Q04Fh1b85osoP/0MHZt022lyb80RPFwIqOxxNCzzQ0wVi
zu33SBOgpws3zZlqER470NODZs8LUjWmM3p6kFQSMnpkGx89fbBXyJMGWxzQ
0wdaSHhBZKodevrgf4J9RDvXFj0DMJ3jJ8Tn26BnAI3dFTXTGVvQM4TgQmct
t6tf4H4ZwsBq06X+vZboG0KPU5yZh5MFzhtCaEFZb7i/GeYZgrQCmAa+m9Fj
g/eK1e9d/hvRY0P2iGdfZ5sJemzwV3ts5L3nE/TY0BueduyK4CP02FDXmDdx
SsRFjwMn/li24RA2ehz4a6ffa2+hIXocsIotXFh8oYceB/rkm+YZNTrocUB7
cWGgpFAbPS5cDJJd/qFDC78PFwqTxL33OZroccGT/XVeYLU6elzomzRxu+nL
QI8LzvWJrHorOnpGUObvxZ7/TE32H77X900=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxd0slJg1EAReEY53lswBq0EksQokvLEbUCS3AVwZWgIAiC4EJRRFEkapzn
5OC75FwI4ZD/fS+EzC6uLNSqlUql9vdqvXura61t1v97vd1bpefa29Hnu/VO
5aD0fPv5w9LLS60dld5onz8uvb/X2om8U913Jv9c5y9036W8K3nX8m7k3cq7
k9fQ8w359zr/oPse5TXlNeU9yXuW9yLvVd6rvDd57/I+5H3K+5T3Je9b3o+8
ynbn82n8NP+/rtLcl2ZVeWm8NN+nW16a9chL46XxeuWlWZ+8NF4ar19emg3I
S+Ol8QblpdmQvDReGm9YXpqNyEvjpfFG5aXZmLw0XhpvXF6aTZTm/5XGT3M+
zX1pNikvjZfGS+Ol2ZS8NF4aL42XZtOl+X3SeGm8NF6azZT+BaYCYl4=
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90nswXFcYAPDFeq/dtauphnaoZCKRijR0FX+YSDRpHiIJk4cJIdTuIkLc
DdHWa4LOhgTrGUSMqmYi1bCLZpyv8apHQoMEJW1GmG6IIJ4haXHPPd/MnTvf
3PP9vvOdeyz9zx8N1GSxWIGrz9qbids+xbyUY49rcvLWogKNBrhNm3/8viZ/
Pa9DS7t4djVntyh3rUcjYh/4tumCi6eS/t6GfnzbXowcLylprRsd3JrYcMT9
ptJ+fX0PepRRY/dqrkn5TdBaPEGyDirX64VaWbBeP4CsPIZCZAVc1cPOtRhC
Fp6KDLfTIhXt/YP8PFNuXfc6paL7PUclpx44vHG+pKL9EWT7smvZozcR179A
7azXK2ZRP4vofmOoyqauHcK6RbT3L+L+cfyqwLxHRHtq5Bh7aNRS2iGivXH0
1N5v/MTh30W0N4H0NcyfFcruYW8SURq1nI2VJdibQp/0iYZsM+Lw+il08n48
n+8ag/c7jTrlfd7jo6kqun4GbZPluO1ukeP9v0Fa3JRC1fwPeN5ZpNc6UOuZ
mYznmUVWZWZfOGkmYW8OyTNcO/dHxGFvHlVSg2MJltHYW0Dqrb/OiUIuYG8R
KShWaMwHgdhbRLKD10yjkj2xt4RSNztJnhXb4fneImokwKQizRufxzLyZU3e
P9Hvj+ddQQ5OVMGx18F43tW8/FXynaZQfJ7v0E/b8/J4beHYe48aOfb6f+2N
wN5/KCLaIwqFRWKPBdZhivR6r4t4PQumZ3MMdupHYZ8Fd4cX1PFZUSL6/mnA
g+n4czksCvfTgCUbndig4xT2NCF08pczJxUU9jSBxb4aUtZKYU8T2vI/u5I+
SeH9aEGFZX5VCUeGPS1IWRqZ6bWSYY8NmSsJXVUOMuyxobvIO1HsJsMeGy6W
t1xRH5JhTxv2fR1y56UX42nDVF390MppxtOBr6JbLa75MZ4OqCM8apcDGE8H
zMAkLTGI8XQhsvxmjE8w4+mCc1Z+1l0x4+mB8NPB5hsSxtMDxx3aXS5SxtOD
Pft4g7ekjKcP2UWl1cNSxtOH4csjzYtSxjOAzF75oxUp4xmAadnu76eIZwDZ
faaT/cQzhIaihJk64hnC5c7PQ7OJx4G0QPe4cOJx4IadxW/7iceBsIYiFyvi
GcEW28aH7ySMZwThmdL5AQnjcQGVio1qybxcSCtY2JMrYTwuHOj1qo6RMB4P
hBp2vr7E48GZfndnd+Lx4bsPwX7Hak7fLz7oKsU7NxKfDxNx24W6pJ4PrUeG
6+bETD8+PGm7zh4j/8MYWpIUj5+KGc8YbLZtYHeIGc8YeoxyY5CY8Ywhe8b1
oxriGYO1XKv5NvEEwJ+4d66UeAJIsjZ8XkA8ASTzizcpiCcA78I/zdKJJwDz
8frqVOIJ4Xw37+8kMXM+QlCU6cjjiCeEzT7OlbHEE0JaQ+aX0cQTgn/wJiuK
eCbQPLThbORq/j8GcN53
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw10w0wlHkYAPC1i0W77AfSNcz6TFRHaffsNDgmhMvHYZFu5tTG5Q7HbHTp
Th1NTuVIIp8dqTu6c7o5u7n6PxHNCWcvNelUHPnK3bE2n4vD+/TMvPPOf97n
+T3vvO/zWMYkhkjpNBpNunqt3d9GrvP2AbNXXsLLxWvxPVGqmZfEuw8Jr6yf
FUQU8YitvHFKuGs9WgjDL/K5DbMCn/9OMsVVxwY/axFSWjcpmFXtc8x7KXRZ
z39ElvzYJhbKWWHskbV4QlLrX/39nYgjKlmv7yXh3qbtAV9ZiTo71qKPCD5N
cagWOogor588j/4z5eR5YSPVb4CYZp1obJcmN1L+IIkZO27fPV7USNUPkeau
/n2dIG+k+g2THt9S/8DqR42UN0rMKj/WZp0YR2+M/JI4fMZ10wp6r0nB9FKt
+DhHTnkTpKbvUvnCboGc8v4li8UrOt4mO+SUN0naph1lQclizJ8kX9ZAdDvL
W075UyRys9RzS2Iw1qvITnaX4CdBlJzqN02YcUyJ7bkY9NRk9JvcAAvdT9BT
E4/fdjY93Z+E3hsynNFbbXddht4MiVhI70l3y0BvlnzkvNG2KvY8enPkgvV8
KldZht4cKRqQJ6hP/ojePPlvMSX/Jf0uegvEWdXCeLmrA71FwjA4KzGL70VP
Q/w0tVe2mg+jpyFjAZFOd+tU6C2R/oaAlAd3ltFbJvMTcfo2t/UUlLdCdtfK
XDel8hU4fiC4dTVTQrNQUPm01Y9nODVcZqegfBr4H9W8OFzjpKDmTwuSzl3W
bugXKah+WmBvEV+9p8IDPTqYqs+NxcZ4o0eH/HqLtE7WB+jRoanCd9u1zSH4
PgxQxHfvTasKQ48Br3lHHlvfj0BPGxx+LjML33YAPW346351aW1NNHrakDXy
ZOYP64Po6cCpwrPuLvJo9HTARXRPXfntAfR0wVLHK29uMBI9XRgunjicMiJB
Txfsnzk8KHkQhh4TKrMGC8i1D9FjQkn1bc3BomD09KBOHWtiGhWInh508DW2
Rx/7o6cHmu45r4TrvujpQ4BLXfpy11709KE017coy8cLPQMwCR7oqzJ4Hz0D
aDuTI/7ayg09A3BriX8v6YYYvQ3wQ5t7hrT47f/YAM60iztaRl3QY0H+/u0i
85yd6LEgsDdb6XnMCT0WtOa9YRz23I4eG0ybypu09BzQYwPp9evPfHcLeoZQ
lvBC9rjOBj1DaGgNuhArs0LPEL6YXD6jnyFAzwi2PuHJErLN0TOCxciUa0Np
76DHgbhxY7Z780acLw4ciMqE7igT9DlgV+uzxdOVj/UcyGtNVB4K42I/Dkwm
y4yNgozQ44Lq8+fld8JY6HGhz27haVO9PnpckDy8KPCWMNHjQvNDx8J7Hjro
cWEpZ88/hVIGejxoDrnpyiNa6PGAxddl+PjQ0OPBzeYZ+uTUEu4fD04bZ9O0
KxZxP3lwayh0LP/8PO4vH6xDrXtCf53F/eZD1jRrsIc3g/u6ej56tTyiTI0e
H5YmToe3B02jx4eGkWeWNfYq9IzBx7LefkwwJf8fFKj9kw==
             
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"F[\\!\\(\\*SuperscriptBox[\\(I\\), \\((LU)\\)]\\)]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Local Unitarity integrands, F=(Im[#1] & )( Right \
approach) \"", TraditionalForm], 
         PlotRange -> {{-5., 0}, {-5.38765351505969*^-32, 
           8.97942354881736*^-33}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Complete LU integrand (scaling: 0. )\"", 
           "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 0. )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.872340165924058*^9, 3.87234020025977*^9}, 
   3.8723410372540617`*^9, 3.872502247068058*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"6515e3c3-0e45-432b-b974-505b8427afda"]
}, Open  ]],

Cell["\<\
And one can bypass the double-sided study and just directly look at a single \
approach\
\>", "Text",
 CellChangeTimes->{{3.872340370061692*^9, 
  3.872340385764587*^9}},ExpressionUUID->"c21d24e2-7785-4f65-9f5f-\
be9b1c633ec8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RefreshHooks", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApproachRawData", "=", 
   RowBox[{"AnalyzeApproach", "[", 
    RowBox[{
    "HookWithDeformation", ",", "aPointToExplore", ",", "SGYAMLinfo", ",", 
     "WithDeformationHyperparams", ",", 
     RowBox[{"NPoints", "->", "300"}], ",", 
     RowBox[{"Seed", "->", "1"}], ",", " ", 
     RowBox[{"LambdaMax", "->", "5."}], ",", 
     RowBox[{"LambdaMin", "->", "0"}], ",", 
     RowBox[{"ApproachSide", "->", 
      RowBox[{"-", "1"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.872328487760111*^9, 3.872328559217106*^9}, {
   3.8723286818630543`*^9, 3.872328682338717*^9}, {3.8723294385614223`*^9, 
   3.87232943920667*^9}, 3.872329526318261*^9, {3.872329614847273*^9, 
   3.8723296151941566`*^9}, {3.872329647149605*^9, 3.872329650537242*^9}, 
   3.872329748253723*^9, {3.8723305421330557`*^9, 3.872330542202244*^9}, {
   3.87233626185772*^9, 3.8723362640503073`*^9}, {3.8723397595395403`*^9, 
   3.8723397789426203`*^9}, {3.872340073858417*^9, 3.872340077478485*^9}, {
   3.872340348119248*^9, 3.872340360763629*^9}, {3.872340484089031*^9, 
   3.872340525203754*^9}, {3.872340613021908*^9, 3.87234063777736*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"991e0a02-2716-4fa5-809a-dbb01e3714df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"MonitorApproachResult", "[", 
   RowBox[{
   "ApproachRawData", ",", "SGYAMLinfo", ",", "WithDeformationHyperparams", 
    ",", 
    RowBox[{"cuts", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "4"}], "}"}]}], ",", 
    RowBox[{"ApproachSide", "->", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"IntegrandToPlot", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Re", "[", "#", "]"}], "&"}], ")"}]}]}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{3.872340594999331*^9, 3.872340655460703*^9},
 CellLabel->
  "In[129]:=",ExpressionUUID->"16697681-45ff-435e-a4f5-cef9b275ad7e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.004]], 
            LineBox[CompressedData["
1:eJw11HlcjNsfB/CZ1mmbZgnFrStaiMjSNKOQKLeoWxNF165NzZQ9ciUtV2Qp
pMUSQrKklMYI50uW7OoX2kubSqWV9n6a55zvP/N6Xs8zz/m8P2fO6G8KFHrJ
0Wg0UzqNNvpJxtGlx+6H13jeOPboxCIFxl7FHqExjyO7voTqQxmm6TZzefGJ
o5OGbDQlXi+Fi3iy2+xM5DynUVo9w5HntnJ07qHoyNj7RvNW8ZJkz0vRuOTJ
xhX/28yrqhidRyjgU1Sg1nAgjyX7/hOkUGlNOxS4lzdHNnmop+mm5ZXmcPy+
50jFx3Rf8Z3jvD1Bo/MSrVxzu4IviMfvf4Xs3n88u8I6Nedh7ui8QTvu9BhV
a9/LkS1X8Q6N/dy4prHoaQ6l/Yh+Nvzaf/fkxxwqfwFSyDmfdPV9ec7kSaNT
iN6nlz7iPWnMmSvL8z9UX6tBj9DoyVkimyL0pNqpOCyXLpHFW/kJffwqv6Qt
UUPiLZvPiH2q6cnxEG2JLG7QF9R4PvJDhY6BJEo2xSj0Roovf62Z5Kwsfwm6
pa3uarB1nuTmjdEpRdF2Gfmz/l0ieSTzlKHbqYOeO92dJe/ejk45+pibqWTW
t1pSSQFRfLCLJT3BU9LeNjqVSNrd2DXkslVCeatRTESk8MS3vXj9alSk5JEU
nRwhofxfkVA0aWvYvhgJ1edXFOHbELvaL0kiq2NSDTJP1nxkoH8V56tBlfub
i9MfZEio/apFYx6cXDytViqh+q9FIbotj2Ks8iRUX3WozeyTV34H4Px1yMpo
w7jKqqe4v3p0cWQNQ+9mLvbUoxE53XR/vRQLqs8GdH/hsUsxiz5Z/JD5GpB8
W0qH1LvJgur3G1o0+IReM/zTgvI2ombxiUZmuByf8jainSrNGYZW6nzK24QW
mN1t2TGgxae8TWjzpe0W557q8SlvM/qhM7AieLURn/I2o2e8DQOCiWZ8yvsd
dfh/Tu7804JPeb8jnwiVY4b7rPmUtwVxnZtrznss5VPeFhRhoGPhv8OZT3lb
0Z3Nad5+au58ytuKjl+al92ivoFPedtQkqs9b7eVN5/ytiHPLG+m/5UAPuX9
geKcJrhY03fxKW87YrqX72lL/Rev347ijeYJ3+wMx/52FJZ4aKWO0xGcpx1N
ibXk0HNicR8d6OCW1sesvHicrwPZGh0PuvQiGffTgeafVSn3mnkV5+1Aga7b
fHNNb+G+OpGJc1Pduay7OH8nenh9ZzEv/z7urxPNNR6v3+QF2NOJ3IduFBTf
fo777ELBcs+yo1PeYl8XWjourC36WyHutwvlKX+QDLQXY283io4oC+Jvrcbe
bnRvIzeVn1KPvd0oNEvnw+CWFuztRgnGHpKncZ3Y24PGKL7Y12vSi709CIwU
KwaMRrC3B+m0I8u8InkB5e1BbeyY9MLPDAHl/Yn2l400a+9nCijvT5T2PPVW
51KOgPL+RIftWCf+3DxGQHl/opDWFtVJIm0B5f2Fkk3iNWP/miCgvL9Q3p3K
MwPfdQWU9xdaWH/TZue0iQLK24vW5g9uX2mvL6C8vah2hbjJ322SgPL2osRm
xvCv1ZMFlLcXSaLeZj/xMBBQ3j5kMz03U7rOUEB5+9CH//KqWv2MBJS3D5lv
3Djjargx9vahqV3d6lG3pmBvPzrqqpKU3zgVe/vRkI6Sna3lNOztRyV18+Ou
XJuOvf3IwvjWej/TGdg7gMoD7v2rXDgTeweQGyfab/sbM+wdQMOlOW7maBb2
DqLgOQObwp7Pxt5BNOTxqiy2ag72DiK95avqzjPNsXcQTXe1TK125WHvELJv
REtjMyywdwh5X6aHVRkKBDJu4hBK/WdTRWv2POwdQtX9DMfX66ywdxgtzpip
5WWwAHuH0TInp2obeWvsHUamFoeVquQWYe8wykhcbG3KtsHeEfQs0Mx1yozF
2DuCBOd3esatXoK9I6jC2yeu96Qt9tLA05Apiiqxw+vTwGRqleHE6X9hPw3e
7ckymXXYHuehwQmXLZ1ZbQ64Dxo4NvkXaHssx/lo0LcrwE6Q74j7oYHCgcdH
Hcz/xnlp0KhuYrbFyRn3RQe9px3hHwadcX46LI283PL1sgvujw7dEh1wnC/E
HjrMDlx23TdfiH8/dCj4W91fYO2KfXRIm7XDKfKiK+6XDvSBC/41da7YKwcb
aTHyHxgrsFcOjpmUJL1TXoG9cjDROHNJZIUr9spB30/PSfWRrtgrB1WlL6X2
Q0LslQNft7kBl62F2CsH3/TUjOMcXbBXDpyjcpgXJhGvPNhUez4UhjhirzxY
GUQ8dljqgL3yEGe8ynNsih32ysO1B09LHpyxwV55GFc0mbdNaIW98iCfppOG
XszGXnkwHTA7tWyBPvYqwPGqz9UevjQp5VUA66JHB+zsTaSUVwF+lC3VdDjG
l1JeBdiw64JQd6yNlPIqwFhXrXPBXUullFcBHh2LC+gocJRSXgUwvxbcdL/Q
RUp5FSCH8fLp1swVUsqrCJcX1msZhLpLKa8iLBhkXt49z0NKeRXBLcTcPrt8
jZTyKoJNw4qRws3rpZRXEQLHJORIGjZIKa8iPHdpPV2jtklKeRVhwrWy1wUT
N0sprxK4hARONTP0xF4lmK5SoF+n7YW9SvB0+cpW5UEv7FWCCKSX9fW9N/Yq
gcYkt7ayWB/sVQKfoB92Iba+2KsE783Xjng3+2KvEiwO11a3PbgFe5UhYI20
slDVD3uVwSA4vL7gkB/2KkPtqytSpT4/7FWGCddvd5iv98deZSi48+CIfq4/
9ipDXLpmyX8aIuxVhoixgvY/3EXYywBacsP2Uwki7GXAM631ubGFIuxlQKFD
sFOOohh7GdCX5Hz0zGwx9jLA+67ZqcerxdjLAOPTHxwy94mxlwGMWNqJxgQx
9jKgrjJq+6dMMfaqgN74t6eqX4ixVwW8syeE+BWLsVcFKuI2cN82iLFXBd4e
v9Lv1inGXhXI35DNchsQY68K8A+mFWvIBWCvCqSY3mx+qBSAvarwR/TF9edU
ArBXFTZo1vOrVQOwVxU6d6zKk/y+pryqkFy7psfx9/OUVxVqXke8fPX7fZRX
Fcbv/nTIST4Ae1XhQ/RF48Fh4lUFS7FaxI8+4lUDy1f+aTbdxKsGtyfcYmu0
Ea8aFGd3Vmz+RrxqkKD+Rs2jWiyl/v/VYFwS9xqthHjVoPt7V4d3gRh71cC8
XDch6ZUYe9XBs/Ds69QnYuxVh+or/j6JUjH2qkPywsnaezPJ/qpD6eSSgL/T
yP6qQ9S1QzSDS2R/1eHLPb39Qwlkf9WhddXO519jiFcdhjiLRj5FEa8GxIwV
plaGEq8GaA2Puzyyh3g1YGP3PQerbcSrAdP23g2N30K8GlCk6pvN3US8GuBf
7tJ514N4NWDExKl1tyvxMkH/favyxuXEy4StRxvWbLclXiakdeS+uLmAeJnw
61JGgwafeJlgm8GaljiLeJng0Fdb5DiNeJkAJmOHphkSLxMstPUT5/xJvJow
I3nJAU8d4tUEq9Nufo+5xKsJ9kZzh6yZxKsJav9UPP/OIF5N6N9hY/1Ynng1
Qez7ulgyTM6vJmzuSGj70kfOLwvucJI+6faI8PosiA5bVRzVTs4zC0xKUgTa
LSKchwXDP1V5b76R882Cbw9mKF6qFeF8LMi+2V6aUCXC/bAgaDC0MbNMhPOy
oKTLae33LyLcFwsW7Kv0WVIkwueRBV2ekbyHH0W4PxYEpHN6Xd6JsIcF7iUb
yxVei3CfLJizpFyr6AXxsYBt0Vz0OE+E+2VB2qKVwmdAvGy4u/z889pHxMsG
9/uL/P7IJV42hKeNhIjvEy8bDqcq2X2+R7xsOLXbQNEti3jZoKLXpNiSQbxs
UKjKi4tPJ142HKnRUVp1i3jZEGrlfmv6DeJlg2tT/1et68TLBg3HCwqsa8TL
hvE5vbt0rxAvG0qFVWetLhMvG5ap2FSLLhIvG0aiDTNvXyBeDliOJIUOnyNe
DpRG3Hu27izxckC1Zf+vd4nEy4GDb+rOLEsgXg6snpdl8OUM8XJg+/pgo61x
xMsBoUKY4djTxMuBCStz0vNPEi8HDnWfFh6KJV4O3InUueoSQ7wc+P4qbb7x
CeLlwBsxXaJ8nHg58PW87p3Oo8TLga3BU15+iyZeDkzc65nScIR4udD6dtz3
tsPEy4W6sqC/aIeJlwunPp/2HR9FvFxIDLIdsDpEvFyw7+dk+fxHvFw44GRo
mxRJvFwIOjlzS1EE8XIhqXhNyZgI4uXCR+v5wnXhxMuFUp+sk7fDiJcLurNr
/pEPI14unOgev239QeLlwtuRN/FPQomXCxXHAuOnhhIvF+ha+wTxB4hXC3L7
nOxVf1//H3CdQyY=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw11nk41ekbBvBj/57VWZTMSKJRqbToLC3KJFpM+zS0x6+aMUJlTWG0EkIl
KS2imaJCUzGJ98moprGURqIooexLSBziF+d573/O9b3O8t6f+yzXGevssXq7
OovFmqLGYg3d0rSu6NcPrDGT6ouGEk3OJB75+e9muVQ8fJ1AaiuiDVfDYmls
3FCuEaM8ddNn69ZJh+8WpZML7E2ik3ddpD+tHcodUm5Y6ZD8Yq/07PDj/yKX
qgY2vsgIlb6tHEo2Ea4qCv55S5xUOPz8B6RQ4dVo+Oyq1HI4f5OOaTlBNYJM
fL2HZHvO6aZzYx9L/XyH8pi0XdyyrlRQiq//hDg/9ok4XlkrvZ81lHxy501A
cOOpTunwcZWFZEPAukkDc9RlKu0zcqnVZe/pcqFM1b+YfNGMKTOoN5KZmgzl
OckVzZ2+xGSybOZwn//IlUdVMe9cZ8kWDqeEXLuQNOJYoZ1suN7aF8Txafm1
Dct/lO0YTim5kMeeWt3pJBuu6/uSpE6fYrb2kIcsZDhlxMezZ2uG7z7ZueH+
5STx1Zigm3lHZSnJQ3lFqrdf+hNcT8myhz2vyeI6U89jrgmywoKhVBC1e4Mh
Ew7ckL1RAUmsKZO2/FmmrL11KG9IfdhHztyMPPRWkbDWhcoNk4rx/CoyIiTe
L9m6Av3vyOeu3d294jqZas93pCAvItf9dodseA6TajLrVn7HSIMB7FdNsmYr
X3AZRq56v2rImL7qyHkciVy1fw1JXsPO39c2Wq7aq5YkGLBsnjqOl6v615L+
ou5UlnCGXLXfe9JRu/NmQuYcucrznqReTVpfNspWrtrzA/mnOKKt4uUKeduw
7wMpCvt2MavEQa7at46oaR/PDbzhJFd564lR8HmHJNavcpW3nqSvyzRo6toj
V3kbiINvrkvC9n1ylbeBrNxvrrHj4kG5yttITj0JtJhQESZXeRvJz+eYXWvO
nkRvE7lVq7z53uEcepsIx7J/jEfdZfQ2ExeL/8r5jdfQ20zSHQZ7MuLT0dtC
jhRxN2vlZKC3hajtyKr+QAh6W8nq9DZlsPAheltJh3XmZHlOPnrbSGDB9eul
ps/R204qo8456kS9xPPbyaIVcCnd5Q3620nZ0YFvlAdqsE872RO6+brFh3rc
4yN5cPV/vLDzbdjvI7kprMjR7uvEfT4SQYvoWbtZL/b9SAaiNpkowgdxrw7C
vDziWpapoVD17yABC6KSJscyCtV+HWTjoCB972mBQuXpILxV/2Np94sVqj07
yVErN/6Fw/oKla+TrLSd2ZCkP1qh2reT/GW9Ipb3aaxC5e0i4b+2XbE1MlOo
vF3EqK5snPvESQqVt4v8WrIkftu5aQqVt4u8/es3xUOLmQqV9xNZnXBy+aMV
CoXK+4ncjThh1dU0V6HyfiJaVX6hdQ3WCpX3EynUMzPevt5GofJ2E3O9GJ+J
kbbo7SYxxT1b0+wXobebhOrFZkzeuhi93YR/RZHqmbkYvZ/J7vKuZ+Zf71d5
P5Pc6YMGGf6L0PuZ6J/3Ll0mtUNvD5lx2bHr7b2F6O0hY+x9NUOm2KD367Vp
2qbepO/R20PsjA0a86dao7eXNKblrQlJsUJvL2koP/2PeOYc9PYS/VObBx73
KtDbSzYFmu9p75WhV0meb7N6NWGaFL1K4rrq4RGnWEv0Kkngqw18L/MZ6FUS
3Xubl3vXTkNvH8lRPLmZFTwVvX1kgY+vmaXvFPT2kbTX/rXiy5PQ209YpqfM
+/omorefbGV7/eMQNAG9/WR2use1pePHo7efWIVp2p9u+w69Xwjr3nceoSXj
0PuFGPrM/6P5ualimBv3hSQnBzZ/rDNB7xcSfyjI2kxkgt4BUpEkmrn9h7Ho
HSB//pI0rijWGL0DpHWJVOldMwa9A8Rtbl/krnQj9A4SNWHkk/7To9E7SNIq
L7m9jDZE7yBprutaPXjxW/SyAJylJdfJN3g+CzJCx+9d2maAfhYo5xn/4T7F
APuwoM7m4PRSv1G4Bws2sUTXtjzTx34s6AmsWqZjqY/7sIB5IQ+vuTgS+7Jg
712j9rEjR+JeapBSfz5QM2YE9leDVTGKHW+/HYH7qYFWwCblyGQ99KiBcsGO
ttHz9fDzowZxhYuLPF9J0KcGf7e4nUncJ8F91aD4xzkxC0wk6FWHCU8LbdoK
xehVh19KzHeuDBSjVx0ycl7b61mK0asOmot8XrU1idCrDsd3ikwvXBWhVx10
DHXT3v4iQq869F7s1/afLEKvOhSePDND3ilErwaE3F6+7v19IXo14MHMW5t/
ChWiVwPux6Ue3+IoRK8GKB87riqfKESvBgSfSSyw6tNFrwaE1eosN/xDF70a
cHhU6nmBgy56NWHVlDPR5Rxd9GrCFeM7Gna5AvRqgmvDvCDjAAF6NSHwu1uf
FHME6NUEv6tX/Z37+ejVhOZdr7U8gY/er8/vuT7b5igfvZoQee/GzJsr+ejV
AkF0vGO0IR+9WvB47Z6JBY089GqB2k69sdZZPPRqgfepH8OfRfDQqwWfG1pc
nJ156NUCi5XyHyoUPPRqQaS2vZWZiIdebahKc7kysYmLXm0QDGyzLH7ERa82
VP9Q84hJ4qJXG56sWL0x+wAXvdqwr8RZWeHMRa82bDnUdOmnhVz0asPTLMms
b8Zz0asNvIjkI6O4XPTqwLTEqG9s2jno1YE0QyO78FIOenVgZKSHbl02B706
ELHmqNmi3zno1YHCtumvL0Vy0KsDYwfOSxr2ctCrA48c4mxGbOegl4F/wnZs
+3YVB70MdOUbtXy04qCXgX2/xeRHTuKgl4Gqy39uajbgoJeBcy++dx1kOOhl
QNo1yvhBDxu9DLQeTNc2b2Cjl4EaPa6G5Ss2etngbPF+2Yt8NnrZ8LTZZhcn
h41eNnxqmj2/II2NXjZcDul9qZfERi8bzJsk8W9i2ehlg1mipsW4cDZ62eD7
udqt6jc2ejmwbs1SH4EPG70cqDvsEXfNlY1eDkzI27r5hhMbvRyAeLfAEY5s
9HLg7vzb1ZXL2ejlQGtqcYK6HfVywPbSrS9BVtTLgej6A06rpdTLBfaVv7b4
TKFeLjhJrdPqv6NeLkR53rL43Yh6uXDi1N2yFH02/v5zwXaha0G3kHq5sOVK
o90hDvVyYVp31eVVmtTLg650qcPGAQa9PGgf+ehTQg+DXh68FE0zN+5k0MuD
L2euZ5a0MOjlff096dmfXU//D/HgRIK9S1kNg14eRAdtOGz6lkEvD0LG7WyJ
f8Wglw8fRrgWLyhl0MuHoqcjvCTPGfTyISXI3JxfxKCXD8Ehl9dZ/Muglw8i
+24/70cMevnw/E8XwbtcBr18uGrglOpBGPQKYP1A9uCY+9QrgFI7m/T2TOr9
eh3GOlh1h3oFkG2aZ916i3oFoBd9MndUGvUKwETNvHnzDeoVwP3I/ddJMvUK
4GethV9mXaVeXfDLD6suuEK9usAqtf3VN5F6dcHctiZFkUC9uqBx8ONj3YvU
qwuGyVl1ffHUqwv7+tvm9p+lXl3IsVqiJoyjXiHIyRwfWSw9Xwi3O6/UusdQ
vxDebj4Un3mS9hHCg6yrXeITdA8hHJjutTQgivYTwjLvU2qfj9N9hNBx5++D
QRG0rxD0Z4RZjwynewlhxjrmxr1jDH4fhWCx8bbNzlC6nxDu6VocMg+hHiGI
2NqdXUfonl/PLws3yD9MfULYtizx8PVDdF8hXEsJf3LmIPWKgH8/d1/kAeoV
gUtSviwqmHpFcMZLFHf2N+oVgf+arIU3g6hXBN5zQt7+G0i9IiiQpYjbA6hX
BHnMtWOjA6hXBJUy+efV+6lXBPVOhtyofdQrAuadaH+JP/WK4PaJ39WN/an3
a98Sk/V79lKvCGbHuFnn+1GvCHwCOrzN/ahXBDckodmRvtQrBlb1xgqlD/WK
4XVIaZyrD/WK4WjGYfLOm3rFsFGDZ7DJm3rFMC6a8ar0ol4xWB3TvOTsRb1i
+H3tVvdmT+oVw79h39/y96ReMeidD7bme1KvGITjz7cl7qFeMTS3JMbO20O9
Ykjxmiiu3E29YuBMlc0O2k29YthiN6t53G7qFcOIBqVW0S7qlYD7uMgd/ruo
VwKa85a0TtxFvRJ4eCw1sMKDeiWgyPFQRntQrwSaUtbYLvWgXgnY75Ut1PKg
XgnEyZUVue7UKwG/9wHdB9ypVwJRz0/62bpTrwT0nHrsOe7UKwEdkyXri92o
VwJvFvdHnHWjXglk7nF8vt2NeiVQmL1TYulGvRIQTGXPU3ejXj1o35ox/7+d
jOL/Vgahtg==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw11XlcTOsfB/CpaaZm2mapmaloVaFsWUZatG/a7o10XVeliJ+dLpVca3ST
Ja6KGCU3V1xLzFKW55u00IKyhmyFyk0lbWr8NOd5vv/Ma17nzHk+788z5xyL
xWt+XqJOo9EmqNFoI59kFhpoHnSNuSQVckcmA4U73ruS/OmmlKf6nocuOd3g
DX2vkWYdHZmzKEZjS4SM9VyqOsy9jGKqh3Mk3FZp+LyRkaL03YlRpaZ90mOq
84uRmyghyUHMkL16OTI3ENs8yoIZxZdxVL8vRTH5JzPDTljIpqqmDLEWbPTY
2jxJRl2vHC2vt7Y2vuUsS9g0MpXoztuLDjGP/WXU9e8gu0kWWY2W82XXr41M
NRrQqKVXnomVqZZ7WYu+M2ZejItdL6O091FLiPmNMfO3yaj8D5Bt2BefxG/p
MivLkalHNk2bTZ8XHpVNU+VpQIftL/w6TVYg81LNQ1TOMLdpEFyVqeLNe4TO
PTBddbu8VLZUNY9R3+JxjbSEezJV3E1PUJKeBoxqeS5LVc1TdLtHy8Ot/KMs
R5X/GbqH0icFaffKzhWOTCPaLujRDuv+Jruh8jxHq5t+XR18lS2vrRmZFyjS
xfC1b7+RvIkCoit/3jtxMWOcvLNjZJrQQadfUsIiHOWU9zXKCZ2QUWzjL6fW
f43aWGUOZk8j5JT/DXJKPLK9zWeZnOrzDcqapLGyK3CTXFWH5VskVUzOjq9M
kVP53qJwnsUDzdzDcmq/3iHkNF7n6NNcOdX/O/RomdfayLHn5FRfzci1e6r5
1vFXcf5mpBdjvjOuqkRO9deC1iu8bKUzb2JPC7oqN66TziqRU32+R3YmXRMz
9p+Vf1b53iO/82lXzjQfF1P9fkDjGId1aT7XxZT3I1o/uetsj2OlmPJ+RLHJ
zlEfHOvElLcVnb4SMO3g0QdiytuK6kZfXDw8uUFMedvQdrOqW939DWLK24b2
urNcF/U1iClvO5qo2/Um2qpBTHnbUWOQe635sgdiyvsJ0drHVZwMrhVT3k/o
hfhOsuPGcjHl/Q8t/POn+/KXUjHl/Q8VZ2YECuYfwd4OZFs0OjW2vAx7O1DK
zX+H1656KKe8n9FjnYahpuOv8f52orktOQrbgI+4705Uknaq1Enaife7E61p
y/RfLerF/XeirX0zRPUrh/D+dyGbuLpcl3Y1BZWvC+U8FNrtdGMqqH66UPvo
otUVodoKKm8XKpW7hbpJOAqqr26Un2f3HRkaKKj83WjePIcqX1uRguqvG+nv
Mrn2b+coBeXpRhavgorM5lgoqD6/oAOjZLI3eWMUlO8LcshyNpdkjlVQ/X5B
ayIv1CX7TlBQ3h70qfpfOnvFFAXl7UEX8pjFkqJpCsrbg9r+rbnvkDZTQXl7
kI9929f4b84KyvsVOd/RFe9Vc8fer8h6eVLJsTJP7P2Kyr0MB/YX+GDvV+Tn
qCeuT/TH3l6Ul/WLkDs8B3t7USvjskv9pyDs7UVeb1K2rTUMwd5eNPti21hx
TAj29qHgovghh/fB2NuHSn5WOm6vCsLePvT5vn5Pgmsg9vajIH7k91mJAdjb
jz6J1j7Ze9IPe/sR+No3e9T4YG8/ctjo++Wlvjf2DiBLGtPQYoMn9g6gfmut
qqMD7tg7gFLP60dn5bth7wDKiHjdaPLKFXsHUUffu/BhqTP2DqLroxqsOBWz
sHcQHTyw4X48yxF7B9GxqF/z05PE2PsNFTko79oazMDeb2hruk9h1oNp2PsN
zTq71OXyhanYO4QelbZ2V5xxwN4h1GFquFhSPAV7h9C5M0lrY99Mxt4hdJgn
nZ83ajL2DqMvrlOPL6ifiL3D6K5/1MLAtAkKFffoMPIZeppU85s99g6j05Lt
Vv3+dtirRBsdBSzfwPHYq0SMP2ymbl08DnuVKCBYklyYNhZ7lehQi3G6bpkt
9n5H3YZGfHO2LfZ+R0YhVja7F9lg73c0/klOChtZYy8NLkboXj063hqvT4Ps
1nvXXHLHYD8N7PInpRmbjcF5aOA8aHj3fwVWuA8abDPabbdluhXOR4PUPq5W
UbUl7ocG0nVPwhOXWeK8NKBPy20O1bbEfanBhsbEiltXyP2oBoaLM5Qx0Ra4
PzVod4wIbOBbYI8asKzploq75vj/owZrNoWVlKaYY58a7CyICCjwMsf9qoGj
R8IcS01z7FWHZQ1W0s9HzbBXHd7P1g97YWeGverAP/eP2qkyU+xVh6b8BZLX
UabYqw6ff3mXNptuir3q8CmqbnBl4WjsVYcXpR1ho8NHY686fKjPPMlmjsZe
Ojy4ncnuKR6FvXRwPT1n/Yl1o7CXDiXz3Ibr7EdhLx1mTeDdnNtugr10EPjF
RyrPm2AvHZ7dDn0qWWeCvXSQC21sdRxNsFcDEiuf8c3oJtirAYuW/NRXdM8Y
ezVgqZ449W+JMfZqwKt/os4/XmOMvRpgdikqeKynMfZqwGXuoxl/iIyxVwM+
HDdovfHZCHs1QIf7fkddlRH2MmCL0VdJdr4R9jJAUlTqyNxmhL0MOHO6Nlt9
kRH2MqDUrH5qkosR9jKg2qr25AJTI+xlwLTfrm0+RDPCXgasT3uyiNsswl4m
vF3pXFVZJcJeJjRX3NE/c0GEvUwQaUyOyDsiwl4m+HZr7Ti7RYS9TPBZ9t7s
ylLy/mBCabf7iqJQEfYyYWL2rFnHnUTYy4T8dP3eJT/eN5RXE9b6+B1iGIiw
VxN0GzbvWqcmwl5N6DxceD33sxB7NSFUaipJaxJiryZML6nqt6kTYq8m8Ffo
0VffFGKvJuwIos+NuCjEXi0YOKDe1JQrxF4t+MbIbx08JMReLXDaoOQUpAix
VwtKe7ydGhOE2KsFti9OZGesFGKvFuTecZJURAmxVwtiXG6px88TYq8WWLo+
KvkrQIi9LHjLbv5q5SbEXhakW44xGT1DiL0syJleUrHZnnhZYPJct9LJinhZ
YGzhbfyLMfGywDegpf0el3hZ4OySeeg4i3jZELmQuf+aGvGyIaPg065xgwLs
ZUOvna3nu24B9rLBVqNH3tIuwF42nBN69kxoEWAvGzzszcYVNwmwlw3rwL5g
11MB9rLh7m8uT/fVC7BXGwIsen3rawTYqw3Hg1OzQyoF2KsNKxqTdtNvCbBX
GxI+7Hzffl2An//akOyz7jRTIcBebbAXmd366YoAe7VBHW0Or74gwF4d0F6U
nb6uUIC9OtBrX37Ko4B4dUDaq2h1PkW8OpBoVVa2SEK8OvBRpnm64Bjx6sB5
+W1dfhbx6kBdcu7hU4eJVweOxdKehB0kXl04szNuj/U+4tUF9ssX0YI04tUF
Q4iYbL2HeHWhvG3mndBdxKsLDwXX9LK3E68u/HViS8fAH8SrC2FvGdG/JxOv
HoTPDFzOSiJePWArAw2km4hXDzwKJQmbfidePfhrn44sZAPx6sHf2jO+Oq8j
Xj1QGDjEua4hXr0fz/cZ3mGriFcPLrl73U9aQbz64F7+MPTqcuLVB5bVfsH3
OOLVB6Vl/6YFS4lXH/xXTa8vjyVefVh4BKW6xRCvPpxi2jDuRhOvPjRduieL
jiJeDlwOQzzNSLI+Bz4ELDhc/BvxcyDt5hRFwkKShwPPjesYXr+SPjgQLUtm
mCwg+ThQmG7mPRxB+uHA/V5leNt8kpcD2wJOPHgTTvriwI6A9JB38wT4fuTA
yrleazrmkv44wJo5XK8+l3g4oPw71dw8jPTJgQljJqr5/Ex8P9bbmGoR/xPp
lwPqa2KnFIYSLxfO6+W9+xBCvFwY/sLpsA8hXi4ohxeyEoOJlwuaph87q4OI
lwtCv6uLrYOIlwvLN/mZpQQSLxfkJVmtbXOIlwvmrq27w+cQLxfifUtvVgYQ
Lxd0TaoXuAYQLxemQJlNiT/xckEvZ0nnLH/i5YLo4dw94Ee8XLDfpXMjwI94
uZBzoib2mS/x8iAqLTVspS/x8sAm4XEk3Zd4ecCd8ypa4kO8PGiZHDLVxYd4
eXC71ufiK2/i5YHRUGBRijfx/jhu7G48yZt4efDwbVDFcy/i5UEzepG514t4
eVD795+rXL2I90eeSOGEHk/i5cGx4Nji857EywPv3Mi+OE/i5cHLZmWNtSfx
8kDJn2bx3oN4+bCt893zfzyIlw9Xql+0rPIgXj7Y5teOne5BvHzQynQ5oHQn
Xj74X9ipcdedePmwfPBmfJY78fLhdk9dzVJ34uVD3PTAQbE78fLBecX2drY7
8fLB6VjsgVduxMuHipyDj6RuxMsHxybXC/vciJcPvdHu7Dg34uUDv2uo0d2N
ePkQciCGZ+pGvAawx/zzqW+zBYr/AzXDDPY=
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw11nlcjNsfB/BpqmmdmqUkksjSJULMoqK0WkK7aibcbNn9LLnXGlJkC42i
i0KF3GssjZGcb9woWVpE7m2RUkmqW2lPP8055/vPvJ7XzDzn8/6cOfN6Rv26
yXslk8FgTFJjMAZf6bT/sufWrXpdgQl3cGJRVcpMV/fXJgKe6joJnVHXM5uf
MUZwLmFwrqO54aXvox9PFaje5spRtsym51KHg8Dfb3Duo6rTc4YsbPUQnFd9
Xok+hS/oy93tK6gsH5wsNF96ZsPshGUCjur72ahxSpnwTdRaga1qnqLqy1Hu
7vXbyP1y0J9Wat+P2u8X7AwfnOdINpktKC+OJvfPQzPWTrn6pCAu41Hm4OSj
jwY6vu8KrmSolit/hWrh4fIvt+UZWFuAwswb8jLMUQbOX4g2nQnTyWfmZ1iO
HpwitH6oqR97wvuM6ao8xcg+K1K48Fp1hotq3qIfZ20Cmne3ZKji+ZUgo73z
POeu6s1YpZp3yBcVpcfEsBSquOHv0ZXRE07sXspTRKumFEVvq8hISRuhuKDK
/wHd9HhYevPeeMXNG4PzDxJ+GxE9/sk0RZbK8y+KWrk622i5g+LVy8EpQ8a+
hWejst0UFRiIVsQ4Bw+s81K0NA1OBQrmR1ydsyRIgb0fUYW3MHFHSihZ/yP6
+u5Ey/iq9Qrsr0L9vtvNTCu3KXCfVcjGJmbcjvN7FKo6Rn9CkV9Xb6g6cojk
+4R0Xjm8uvskRoH3qxolVy67NdnqtAL3X40u3Wo9vRXJFLivGlSv2xDnveaI
EOevQc0mTumfAy8JcX+fUWz+6ogN7reF2PMZnfqrUXtk6WMh7rMW3ewK5Egj
84XNKl8tujfecseF/e+FuN86FMv2jNi2olqIvfXIoXUe8/KIZiH21iNZdu6H
tuVdQuz9gqK6thqffMgUYe8XNPqM6dhyD30R9jYg2RKFUb+esQh7G9Cbgk0o
9Ju5CHu/Ivaq5j8m/jZOhL1f0ZAIF2+u9RQR9jaii7wtiXp8oQh7G9GFfy8l
jfNzFGHvN9Q3nRed2O4mwt5vqDSzdqI3a7EIe5tQYsPJ1AI7fxH2NiELzdeh
3TdCRNjbjGzzs13ytVeKsLcF2V+rT9x8bz1ZvwUZJ5wZVbtnqwj7W9Ak+VO3
zUG/kzwtaEhcYnN/VoQI9/EfqjPPTzB6FUXy/YfmFgSG1xSdJP38h5436x/8
WxBH8v6HsvsenN8hSCR9taKVGq9PKB8kk/ytqOwPG/mY12mkv1bk/9J7j3fY
beJpRTv1NJYh+X3SZxsayzSb1Zv6iPja0OOB9UkGDU9Iv23oVGWZT0FbLvG2
owF56pY3WwqItx2t1u63YFwrId52FPE25UDXujLibUcNb708y2SfiPc7GtmR
93mydT3xfke1PGvXRVbNxPsdyapvFfxe0ka835Fl87RE2fsu4u1Alu1tqbV7
fhBvBxofm/NY4sEUY28H2lCyoPpoqKYYeztQRfQYxbH12mLs7US7Pplu7vbQ
E2NvJwr5a//WZY1sMfZ2op5CjWNXJ3LE2NuFAi1KVh6cyxVjbxeSNcb8ds6f
J8beLnTP3E80Kogvxt4uNLdIcr8+yEiMvd1odmRyYkWIsRh7u1HnVbcyzroh
YuztRis294U+O2gixt5udDkuOSk1fagYe3uQ2C1YXltvKsbeHpR3HBi/2g0n
3h6U3+LIhRQz4u1BG3bpPDg0yZx4e5GPQ3meRdFI4u1FyxyjZHvzLYi3F3G3
sHhOaBTx9qGDzcczjueMJt4+NCvgzzeJlZbE24dsDr7bl2Ywlnj70KQHdS0N
PuOItx85DIl1vXB7PPH2I9GS5eIvY38Rq7gJ/Yj51d6n894E4v15XflPZHGI
NfH+QDGRXKONYyYT7w80ryTF1V19CvH+QDM6GT7VzKnE+wNNsN+4fSp3GvEO
II57xP+sJ9sS7wC6/dZpU0LgdOIdQPdKGo/1nZ5BvAwwebHJ69gHAVmfAVvX
TOyxtBYRPwMQ/3PT9CNikocBhhPCUhVNM0kfDFh7lrfTLMie5GOAW0pkpX2u
A+mHASFuTNOFM2aTvAz4qDWzZe1CR9KXGlypcZpV2OdI8qtB7rl9SdXJTqQ/
NfBNz9+0yGEO8ahB0kNjn7W5c8jvRw3kLpO5do7OxKcGMV5WLYcvO5N+1cDE
fqROTY0z8TJhqgHnjwJtF+JlQkfK0SlvtFyIlwkO5U/eHS53Jl4mHDZUl9dG
OhMvE7K1zFzn988hXiYkD6zsuOI4h3iZMDN6drrM04l4mRDwnRN7aTT1qkPO
ibRMv70OxKsOe6rjHni6zyRedfiosS3Q9IqAeNWBdWnUiyzZNOJVh9fpxexw
b2viVYepPaN25jwbTbzq4KW4bxEwi0u8GsBzYTdYr2l5gL0aYPdmEtdu7jAl
9mrA8R77pS7HrZTYqwHRnwz3DhsyTYm9GrB9xbsX4W1CJfZqQIHHoctNhQ5K
7P35fX7nQUWRkxJ7NaDU/EHIJrmLEns1Ya3Y7s7o/e5K7NWEIb0PHbfPnKfE
Xk2I+uWXL3fKFiixVxPCkg5cLgxdpMReTVj3W46WonaxEns14S77Zm2VnrcS
ezVh8TPLEYUWPkrsZUHPYvvdNmN9ldjLAtNhI7ZXD/UjXhZY7h/upNXnR7ws
MOQGaVW99ideFkSUqDn/GxtAvCyQs7QS97guIV4WRLqV+a5qWEK8LLCt6Vnu
EhFIvFqgObJ3epFuEPFqwdwcC/vCqCDi1YLNnQkcVncQ8WrBMmGnx4ylwcSr
Bddc/D5ZZAYTrxY4DOuacpgtIV4tCJy13sMsQEK82lB8eHn+6XgJ8WpDTZe5
UWyRhHi14WTY7tT7mlLi1YaSgNOf46ZJiVcbGmP/aswKlBKvNlROP3L19i4p
8WrD0+TW+rp4KfFqA2eS/OVbuZR4dcDlsFVT5TMp8erA0pk3SsNKpcSrA3tF
Izfm10qJVweiw2P9/FulxKsDes9erfPrlRKvDtxL+WbLZoYQrw6MWTPU7REr
hHh14a7bjMwLOiHEqwsxOZfOVuqGEK8u1F4XjlT8vMZeXVg0Y6mX58/PY68u
2JSlWeb9vB/26kJsp2mNp3oI8epChqPGod4f1KsL5y2Pf2zqpl49yFuiy5rT
Tr168PPBe6N+E/Xqwd9/PZ8ZWke9epB0S7km8KNUif//9eBk3TB1xgfq1QOb
Nt6iVYVS4tWDBXd9vifkSYlXHzYm1o1PzZYSrz5oxrz8O14pJV59GP6/+O07
5XR/9cGpfPnLhdfp/urDQivLEMskur/68ML95T998XR/9SF+vq1l1Snq1YfK
RxxpSTT1sqGuZKpmxX7qZYO5rRZjYCf1suGb7r00uy3Uy4a0iscVsjDqZcNQ
wQEe/1fqZcMit98W3wmiXjYkeR2Yv8OHeg2gSjB51bIF1GsA57KnZW5xpV4D
QHv5Y2/Ool4DsB/Kd2WLqNcAIHXPkfip1GsAJrrBtp4TqdcAYttkwRPHUq8B
zLG72TltJPUagn/2+/JQU+o1hDhpa24Wn3oN4R/n0mBHA+o1hKZdR8Z81aZe
Q4if13ExS516DUF0I1Ko+EHPryEs8g/2fN9Nzy8HdvqFTh/xXULW54DvMith
dAs9zxwQ8X6PN2mUkDwc2Law7uyLOnq+OZDbzllxuVpC8nHA72SpOL5SQvrh
gLPPRnf5vxKSlwNd0U6PGt5LSF8cKB7+7pnzWwk5jxxY/TEiLrNAQvrjQFoJ
P8DrlYR4OGC4b7WdxgsJ6ZMDbfa1W4ufUR8H2IFdto+fSki/HLi+YrX8KVAv
F07PuzumOot6uTBqXXDe8Ezq5cLnb2YV6x9QLxd2Bo2/VnKfermwKtxjhd9d
6uXCkwWclV9vUy8XCs2a2mV/Ui8XWrjuKwPSqZcLek5RetY3qJcLPqmTnIzS
qPfno+SN4lDDFOrlQl7ClBKzq9TLhZCrpr12ydTLhUD53tnrL1MvF1K3ruDc
uki9PGjhlFX2J1IvD27d7LIMuUC9PGAZPfV/lUC9PBhWNbFjXjz18sBmYt/B
dzLq5YGLaU7kpjjq5YH1jteHjM9SLw/cNmoY5J6mXh6MuVYjPxxLvTwQPV6r
4XWKennQuKsvcdxJ6uXBnaN+Q7ROUC8PvIduNWg9Rr086HDZN64uhnp5MCPq
EbP2KPXywZ+3ZV7TEerlg4lnUepANPXywXxNy3PTaOrlw+/myUH2UdTLB076
Zt7qw9TLhyC1Q1cTIqmXD+ftT+YWH6JePjzbnCUyPkS9fPiWdVEuPUi9fFiU
bdyafoB6+RC71DWTeYB6+aDbtLcgJIJ6+ZCdNaUT9lMvH2q0Szqs9lMvHy66
VMXL9lGvEYR9uJ+m8/P6/21DHVw=
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"F[\\!\\(\\*SuperscriptBox[\\(I\\), \\((LU)\\)]\\)]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 1000, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Local Unitarity integrands, F=(Re[#1] & )( Right \
approach) \"", TraditionalForm], 
         PlotRange -> {{-5., 0}, {-5.863211992210603*^-32, 
           2.777829162269071*^-32}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Complete LU integrand (scaling: 0. )\"", 
           "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 0. )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxd1ElvjWEYh/FT86xFYo21FR/BJ5DwASRsLesj2FoJVpZYWVgIgoiI0MQ8
t8YWHU/nuZX3uXiu+N+bkyttz3v/7tN234nTR0+uabVaBztareY1Z29XM+fu
/utdpS/XPn+hmSu1y5e7rtc+fqyZG7Uvlu+/WftzbzN3aneWn79f+1CZB/F+
D2uf6W7mUbz/49q3bzXzpHZ5XG9PbeZZ7P+89oH9zbyofbjs87L2kTKvapf1
jr2ufarMm9pl3e63tc+WeVf7Utn/fe1rV5v5UPtO8Xys3fO0mU+1+wDWbo82
0xfeL/H8L+H/Gve0yzn2f4v9vsXn9T3u/z3u9SP2/xH36w9Pf9xzoPZY8Q3E
fX+G91d4f4X3d3h/h3cwvIPhHQrvUHiHwzsc3pHwjoR3NLyj4R0Lbzue3w5/
O/Zpxz3GY7/xuM947Dse95qI/SfifhPhmYh7ToZvMu47Gd6p8E6Fdyq8U+Gd
Du90eKfDOx3emfDOhHcmvDPhnQ3vbHhnwzsX3rnwzoV3Lrzz4Z0P73x458O7
EN6F8C6EdyG8i+FdDO9ieJfCuxTepfAuhXc5vHbhXlgO73J4V8K7Et6V8K6E
dzW8q+FdDW/r3v/Pt/Hb7GNzD5v9bO5js6/NvTpqs7/N/Ww8Nr8/Nj6b+9rM
mvDaeG28Nl4br43XxmvjXRteG6+N18Zr47Xx2sy68Np4bbw2XhuvjdfGa+Nd
H14br43XxmvjtfHazIbw2nhtvDZeG6+N18Zr490YXhuvjdfGa+O18drMpvDa
eG28Nl4br43Xxmvj3RxeG6+N18Zr47Xx2syW8Np4bbw2XhuvjdfGa+PdGl4b
r43X5v+/jdfGazPbwmvjtfHaeG28Nl4br413e3htvDZeG6+N18ZrMzvCa+O1
8dp4bbw2XhuvjXdneG28Nl4br43XxmsznfF8G7/NPjb3sNnP5j42+9rcy+bv
0eZ+Nh6be9r4bO5r/1WG18Zr47Xx2nhtvDZeG6+N18Zr47Xx2nhtvDazK7w2
XhuvjdfGa+O18dp4bbw2XhuvjdfGa+O1md3htfHaeG28Nl4br43XxmvjtfHa
eG28Nl4br83sqf0HErmUlw==
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw11XdYk2cXBvCXEBLCzNBipdRPrXXXWVxoIgphCYIgqIg4oK6vSB0MkRZQ
xL3qABWlglVc4AIX59BW+GgRVxWRUUSEIEMgmxG+kvd5zj9cuQJ57t/Ned4M
XRXhF8ZhGGa8CcP0/6RzNPG1VUQeI7MT9c8ReNfTFbvpGiMTG19nwO7wcUvK
fmFkJ1P75zL8MV5mEX+SkRnfFuWCjSLVc8s+RrY4oH/ugN1j3biseEaWZvz9
ewDDB5tzIxnZP9X98wgmvZ0RnbSKkQmNf18IjX2xvgMXMbIpxvkdJv7heirb
mX7eYzg/9mb0lEmMLDqqf4rh0d6+2ee+pJ9fAgbfAI8qC0b28EH//AWuF486
5DT3SY3HVT+BgjmlfENBn5TVPoOs7usuMYf6pGz+5zBuc0OBJrhPOnxY/7yA
awPuubqP7JNONeZ5CfpqyfG5bQbpfOP8DQs8DM7Xcw1SY7yAV/Afy/F/LYs0
SMON8xocr28/NGC8QWqMG1UO1bnD68/X90pTjPMG7pQcHlp8sld62pi/AlKs
bj/ydO2VXsnun7dgu7OT6S7rkT4yeioh53bezBXOPdInpf1TBTWeIU2Tc7ul
NSwQhudnOTnbd0vb2/qnBiZ16UoCf+oi3lqw9ptW4VSrJ+fXguN8/oN7M/XE
/w4W69+OPHFIJ2X7fAfzqhdeTK3RSo11DKuDWT8P0u4bqSX56mDJSs7Ob9dr
pOz/6z3EXQx/uuKiWsr2/x4sf7xW+6pSRfqqB+eULdlrLFQkfz04+GSHV05S
kv4+gLpVV2/p10k8HyBhPe9/f67vIH02QOLEtdc/bW+XfjL6GuDwny57si0+
kX4b4ckcv7ib1q3Eq4DJTh3f5TPNxKuA/UzQs8T3CuJtAk3B59VVdxqItwmK
J8HW41H1xPsR1L5J4+JH1RHvR/BOtNK8PPwP8TbDM4cjVwKvvyXeZrgVunj6
mMuviLcF0lcOKW/86RnxtsCnlFVbXNYXEW8rPM32vr1jYB7xtsLIW7V9J1PW
Em8bFM+Libw49C6w3jZY3hQDx58WAev9BPfWjGpo/O9zYL3tcLrNlXv7dDmw
57eD+b0N+5w7q4H1t8PhVWtrV8+oAzbPv69PNzt6HfoAbB8dcOrqiPvHuhXA
5uuAy7deuTM/tgDbTwcEZ1SUTrBuBzZvB7xe8vidtLED2L464VHJ0WZRmRLY
/J0wK+LFcn2hGtj+OuHGKFezCb9riacT5p6P+rvguR7YPpVgX5v67r+t3cSn
hKzhzwuPDzQA268SZobvUER/xSDrVUFOTFXgNWcTZL0q8J+QFnt3NQdZrwpG
xuStt95liqxXBQqO11q7C1xkvWr47cDLlYp8M2S9amgeNGW/HfKQ9arh9JGF
Awtz+Mh61YAX1j2rTDBH1quBpO5NzIAxAmS9GuDeGXjXK0OArFcD5bmjpx6s
EyDr1UDd7TVpx1oFyHq1UK+fF8orFiDr1cIGO/9z30YJkPVqYVpi9kGBuYB4
dfDQumz6uCRz4tXBMYPi4cd2PvHqYFlxbGtpIJ94ddAa2/rbhYc84tVDdblT
ftkwHvHqYapLUMjB/WbEq4ezrYOzfLq5xKsH54qlxYoILvF2gWvsrJjij6bE
2wVTvtl9RLzRlHi7wEl3SFeo5BBvFyhfVq6+kcAh3m7QHvm6PmMgh3i74Yfd
YX8G3DAh3m74aeOV3gRvE+LtAd61GXsrOxni7YHIwO80dmcY4u0Bh7QoaHNn
iLcHXAMku6bq+sg+94I8uzQhZ00f2edeQPkz2d9vDGDkpvbCk/0evaP9DWSf
e6HtLXfBvNe9ZJ8NcDmu80N+SC/ZZwOcTdZ6jWntIftsgP3B5tGzE3rIPhtg
8Lex69MH95B97oO2LQOfGfLpPvdBsuhD6sDgbrLPfWDXkJmebtpN7i+DpYVt
0qU3usj5DNq34gDrFV3kPjN452566o/iLpKHwddbfRp2lOjJ/WZQ5vv5uvIk
PcnHoPsvTr+GzNWT+85gX0w4p8lET/IyKI0qSfR+rCN9maDopz1Z6/bpSH4T
fBMzcoKdv470Z4JLrp8xcRyiIx4TfBdSob7YoiXPBxO8dCQk3+uhlvhMcDg/
55LlQS3p1wTXzAl9ULJSS7wcDPTfEfL9NC3xcnCGbExonY2WeDm4PWxqua1C
Q7wcbDofY133m4Z4Obi3XLPB5ZyGeDk4KGPp2pE7NMTLwd5PXZu3BWuIl4Nv
Ttm2DJ2tIV5TfBj4meXgIRriNcXPvpdX+nA0xGuK2Y7cMXca1MRrijmfj41z
KlUT77/34Os5phU31cRrit6unsfi09TEa4qSncmpQ5PUxMvFL+amSPI2qomX
i+e3DNs9NVBNvFycPbGw65Czmni5GH/Vsw2+URMvF9VWcf4P7OnzlIvz3mfu
jxGoiZeLbrOqgju1KuLl4uSrO1scGlXEa4ZFe8eD6rWKeM3wTPPvNyKKVcRr
ho8u2bTszlcRrxma2W1qd8xWEa8ZZu5SJG07oyJeM4zkBdyWHVIRrxl2BzW8
OJSoIl4evhhRuilkm4p4eRhlKgr+db2KeHmoNM08E7ZCRbw8rCrZH/mzv4p4
eei/XO49wUNFvDwMn+DyZpJMRbw8DPl4uP6kI/XysPft0a3Lx1MvH6c0KvPj
v6JePirHnTXT2VMvH52TX1Q8llAvH/N8wivqLamXj9jMLfXlUi8ffU+dOC3o
VRIvHze43PUTaJTEa461k5zsvT8pidccB42udHqlUBKvOX6x8Kn9mTr6/WiO
QYlnp52vUhKvOU73qRv9z2sl8ZrjtnsTshY/VxKvOQ5p1G3mliqJ1xxzDHuj
GoqUxCvAqbHiX7sKlcQrwBPzr9pIHymJV4BmTGJZbr6SeAXoV9P+ue9tJfEK
cM6O+472OUriFeCqudI4m6vUK8BhNwv9Rl+iXgusDb05eX0m9Vrg1y2mmU/P
U68Fht1Nnh10lnotcE+rZyYnjXot8Eyy7b4nJ6jXAm+9upSbd4x6LTAuIqEe
DlOvBcp54p76A9RriYW6NVUj9lGvJe71St+SkEK9lvjkRUqBZhf1WuKi6aMK
diYpyfPfEnlFPgljEqjXEjtTZw9pjKdeS8wdPjP/Xhz1WuGgm7O2ZsRSrxX+
UHdg99lo6rVCyz/iRl3bRr1WOH2XaerTLdRrhQ4J8UO5m6nXCkN2h4o8IqnX
CmUzmgvOR1CvFTYGfUzmf0+91ljfFFm6YyP1WiPf9JyOs4F6rfGPKctiT6yj
XmuUhw4rmraWeq1RoP8zoCGceq2xd/PCSxlh1GuNW9vOzV23hnpt0Ls2PNtp
NfXa4IOS9xH2q6jXBiOK8oebraReG9zTAcv0K6jXBguS3+VqQ6jXBudfb/69
bzn12uC2dxumiJZTrw3+UL4na2ww9dqiZ9P737yXUa8tetVsnBa7lHpt8YrI
8+a1JdRri2Pe539QBFGvLSaGNSSPDaJeW5w8u2rB1kDqtcWiCyvUjxdTrxDn
JZXPdFhMzxcipk+uiQ2gfiFKHpVl1PjTPEJ0/ivUw82f9iHEpy3V6XmLaD4h
Om0KWztuEe1HiPfTx/5w0Y/m/ff9kLA9I/xoX0Lce3bqjsu+9D4KcUni8S8n
+9L+hJjh6yWDhdQjxBqLv+8uXEj7FKLjjQVBDT7UJ8Sj4zf1/OhD+xVicGt0
nIMP9YpwZ8cXtwq8qVeE1Qdi41Z7U68IBZct71p6U68ID+86NSdvAfWKMMdq
rCZsAfWKsO84p8BuAfWKsPLrlOhSL+oV4eAR8wQ7vahXhNHRZf5zvKhXhCs+
K5N1e1KvCG1U9bfue1KvCEXLrhyP86ReEX5zJqtM5km9InRxmOXG96ReEcYX
XGt56kG9Ytx6TPRrmgf1inFE6/zV33lQrxgjcxXWjh7UK0b/3qCfeR7UK8YK
m4v1b9ypV4y8LQdar7pTrxhnx21OT3SnXjEubgpuXOJOvWL8skaRP9mdesX4
hu/JtXanXjEeYFwfKNyoV4xPGkc8e+xGvWL8bOKDbzPdqFeMaekB/yS5Ua8Y
M7cDrnGjXgle6Jhe5upGvRL8JnVzz2g36pXg2IkHZTZu1CvBtFjhYaWceiU4
17OxtkJOvRKsuRk6ulBOvRJ09x8VellOvRKcWTUv7qiceiU44bTt1jg59Uow
QDbL+Ts59UpQeLuo0k9OvRJkRH0zpHLqlaDv/e0B4+TUK0GXg/YjB8upV4Iv
p3AumcupdwCGJh5/rnVVwv8BJD7F4A==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw11XlczPkfB/Bpzu7miN0cnaywWLSLVs1YlNvmV6y0EZvVrqNstiwbSilb
lrVUOhwVKukQlcr7PTOObRM6iCjpUnTrGJ2/rXl/3/98H/OY4/N6vmbm/TXb
umedO5vFYs3QYLFGrsxM3fN1tI2/QPaJaGROgV1/m8OTPQKZePTxRTh+a3fp
EReBLDxyZBJh0D1k/4plAtno06J0WMyz9DGfK5CtdxqZmxA606NEY6JAdm70
9TlQEmPuUs0TyF5Xjkw+POfGJtxs4cuEo++XQ1Lwni7fMr5s7ugoodh5qZXZ
bT593j1473i6IT6WL/P1GZkH0FPEFvYd4dPnF8ACy2nv1jrxZXm5I1MIaeL5
EyMm82Wjx1UWQYBE4BfbxZOptU+gUJhQvVnBo/zF8G3W2CflJ3gyC/ORKQGN
rC2uLGeezGo0TylY2R3rKrbgyZaMThmoAu0sFjdzZaPxnJ6C+Xi/fctucGXb
R+cZeP0vdGmZL1c2GtenHAb8TcOfLeTKgkfnOSy95dq7cJgjixrN/wJcAo66
dwJHlpw0MhXAxlN2r/04svxRz0sovA/bm77myIoejswrGLih1OnqYcuq1EBI
6q0fV53KlrW3jkwV9JqVOYVuZ5O3Gsb6XU17Oo5N51fDzX8bFOEPNcj/Bpxn
SxxTDmhQn28ANuhxOqZoyEbrMK+B906BPNtiFuWrAavgf/s8fVj0fdVCUien
cMc4FvVfC/WBURID72Gpuq86iEmX6y0006D8dWB6/dqSGfdZ1F897LS2P1+1
nUWeetA6226/hMOiPhtgebWfUcZXw9K2UV8DRFcMPVnoOiRV9/sWPon9LXL+
74NStbcRNkgjNslPD0jV3kZI/2UgafBiv1TtbYLFq2y0Jl7tk6q9TdD0h9dL
p8sfpWrvO7jr8tu02miVVO19BzHLDOzZob1Stfc9yLf97dH+S49U7X0PY7wW
bGt07CZvM0yzXrXXdFaXVO1tBq/dYfb/sD9I1d4WiPljtp3gSYdU7W2Bm+G7
uf1n26VqbyvEHss13pnaSt5WiM+KqP99UjN526BQd5yWSVgTedvBpXhpg2VT
A53fDpOut81xnl9H/naIQkPrDb+9oTzt8Gqef7DT95XURwe0j1+X/GdiOeXr
AANRgp7R82LqpwOKXxb+afT4AeXtgLxH8XkPNmZRX53gXmcuWPq5D6jzd8IE
7RlejQ9vg7q/Tri3IntrgMu/oPZ0Ate7Zofro1JQ9/kBxJXi7lWnK0Dt+wAt
K2zuZedXg7rfD3B/09LqU4vqQO3tgqTSwYAXxW9B7e2C5J8jXml6vAe1twuO
TOcGnBhqBbW3C7zPT1TUfdMBam83VCR4rznS0wlqbzf8XvFJ9pYTXaD2dsME
EEvEA92g9naDhWvb5WOzekHt7YEL7G9nuRmpyNsDhoOKKpPrKvL2AHxV1DO9
SUXeHvgjDk2tHqnI2wtdPxgHme5QkbcXcNKL6bPv95L3vyu7bnm2qoe8KlAJ
7UPi9HvIq4LSWd+XLTDsJq8Kppa51ZSJu8irAhPrk19PF30g70eYMjV9qFjC
eD/C09snnBQTO8j7ERZ5ZN0r/KKdvB/B6KuFqoqoVvL2wfz1ia+/eN9M3j4w
DIj6M3/te/L2gelyb6tpBU3k7YO4lJrCkvWN5O2HxLKrgfW9DeTth8Ll1t0+
yfXk7YeQT1O/POPJfL8D4F/zao69XS15B8AjyfB89PQa8g7APwU/xF8zeUPe
AdgeYKsbaVZN3kFwGdqVZ+xWRd5B2HexMfqv8Fcwyo0chK1yOy+j+gryDsJS
u58urV/2grxDsN/xxToulpN3CHomrJrbueIZeYfgY+QLG25jGXmH4HP7OR6z
zzK/52HY/teqzf6OJeQdBpVnrq3QvJi8w8AKM3zGH3hMXhZeyNSqnPS4iM5n
4RXV8CuNvELyszCs/9oPNvICysPCyiyf/WGVD6gPFn512rElz+A+5WMh27v3
aeL6u9QPCwuCvrFYkq6gvCzc+7diXaixnPrSQKvPxh6c9DVQfg2M87/KaXTO
o/40cFN1Sm/OuRzyaGCmCytX6+Mt+v1oYM0Cz7jvvTPJp4HmvDk7HHQyqF8N
LGc5bpm6P5W8bLT3iPutVC+ZvGy0CdvqvqzkMnnZeLfMpn7t3UvkZaNTVcqq
C8oY8rLx1oE1UeEOZ8nLxj9+Kco//P0J8rIxzCIuVj/1MHnZ+LBXONU/2IW8
HNx8+sWMp7y9tM85eHDMTOthcSDtPw62m0p+9Ft3kvYtB6cqq3ytXp+hfchB
w2m+A4vmRNH+5+B5m5D5kikXaD9ysO2OYtHFc5doP3PR+klEbXNXPO1LLvpd
r7fUnneF9jUXk0wnG7O2JtL+52LOrIDAgl+TaX9z8SnP65DTryl0P+LiobBz
lsFuqbTPufjgEDs8JjqN7hdcNHrL/9zkUDrtdx6+HbOff+27DPLy0ORxXv2l
qTfIy8OTYLnWtfMGeXn4vnX1XasbmeTloW+TYY/vzpvk5eHOxrdd+41vkZeH
jh0TXAMKbpGXjxObHwVV7mLuD3z0N3KIL9LJJi8fD7DdO8/EZZOXj59+3FC+
78sc8vLR4eA0fpI8h7x8dF3xJnbnstvk5eOFyImruwtuk5eP3Y8+cd9vl0te
AdYKxw5Pv5NLXgFeWPuryHZ2HnkFuDLRLaTqfB55BZh+xmartXY+eQX4WWlL
7kHPfPIK0KpQ1faoJJ+8AjRuiU34bvYd8mpiintXnTT0Dnk1MfiMztTE2jvk
1cQTmTZeWfOAvJoYOzfWITQYyKuJOTHx7GXPgLyauGRAJ/uoEMmribv6L1n4
WCF5NVG3xN5fawOSVwtXr5l2eLkvklcLTyVdslkSgeTVwoPzxE78LCSvFh5b
c6g6qgzJq4Wzx7T7CTuQvFpove3Yxj26cvJq4dGW7ZbKz+Tk1cagKxvnjZXJ
yauNxebLf9r7nZy82hh3/PCiN3vk5NVGs5tQ+XOQnLza6BVryh0fLSevNl70
LzbrTZOTVxujkhLWat6Tk1cb++r8nNY/l5NXB5VBp1Ia38nJq4MuWUeP3R+Q
k1cHGzM8C3v0FOTVwaLwvAmHjRVS9f7XwYW2la92zFSQVwcrAntmZNkoyKuD
zV5buj1XKciriws3iaqinBXk1cX7u1udbXYoyKuLnbGcROd9CvLqYq5pfLHq
iIK8unjPz/vahBMK8upile3mN/9GKsiriwE6+94JEhTk1cUIu5wxz1MV5NXD
uVUvg6S3FeTVQ96Xb+Z/c1dBXj38siZ7uLaI8eqhL/9uiGU549VDi6aVbpJq
xquHRiFNLVcaGa8e1iir9jW1M159PJLqZvJSxXj1cW1uRcchlpK8+nhu8tjy
CoGSvPq4crVHdKu+krz6aOH28EP+GCV59VGzsdF75QQlefVRP2JibKS5krz6
6Nji8zTJUkleA1zaHOdxZKaSvAYY8WvJXyZWSvIaYMXfZ385tkBJXgMsldw2
yrVVktcAxz3WOpS3WEleAwwZNjoetkxJXgNMf802+GK1krxCtO8Z8yTBgTlf
iDKHUL92JyX5hbi8b0auyJnJI8Qn7zrH6rgyfQixE2MkVW5MPiFe2/ftpFB3
ph8hHnQYf32sB5NXiAEbgzQP7WT6EuKOXWP87u9R0v9RiPdWPljVupfpT4hF
aX9e7t3HeIS4Bh+m1/oyfQpx5buskBsHGJ8QT/mW2O7wY/oV4tG21eXsI4xX
hD67PNceDWC8Iuyd2R3ZEsh4Rei9xeOCNJjxirBwS+DiA8cZrwjPRPhvuhjK
eEV4VXN3dsYJxivChWk+5mknGa8I9zfZOp/7i/GKsOLleKO9fzNeEZqabhfN
P8t4RTgzI7u1OZzxitB55dz1pyIZrwiHbXMaJkcxXhFmdMxYkBzNeEV4nJ1a
bRbLeMXIsn340/HzjFeMznvyN9dfYLxifDr57DdzLzFeMU7y9znlHcd4xVhu
jPcS4xmvGOdOsXYsTWC8YjRNsU/puMx4xXjnWz0b3lXGK8bxy6N+1k9kvGI0
rjKM0UtivGJ02PZsNieZ8YoR5ZFBbcmMV4ztsZFdJdcYrxgnz7pRnJLCeMU4
BYI8D19nvJL//OGmK1MZrwSd5vw4Uz+N8UowWRBRW5DGeCX/3X84x/zSGa8E
O5c8d/k8g/FKsHFdxuXSDMYrwZ7ezDjvG4xXgiaTLp00yGS8Eiw+2nElPpPx
SrA/rsHM6ibjlaDqi8tWd24yXgmGH1hhuPgW45VghmVvp+IW45XgRstmlm0W
45Xgtq7wnZlZjNcQrxknbv0sWyn9P8ZgUgY=
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[\\(Log\\), \\(10\\)]\\)[|\[Kappa]|]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 1000, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Deformation magnitude( Right approach) \"", 
           TraditionalForm], 
         PlotRange -> {{-5., 0}, {-4.476923839140647, 4.174513727108202}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0.006 )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: -0.005 )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.872340756485861*^9, 3.872341152949692*^9, 
  3.8725023615878487`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"2a87c388-bdf6-4e4e-8a38-63e7a10d5ef1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Analysis of a max weight point", "Subsection",
 CellChangeTimes->{{3.8723381972270937`*^9, 3.872338239999392*^9}, {
  3.872339252533894*^9, 3.8723392621252413`*^9}, {3.8725017971496964`*^9, 
  3.872501801400735*^9}},ExpressionUUID->"b41ee0da-4662-4e82-b32f-\
dcd1382e301d"],

Cell["\<\
We can automatically map the xs variable to the point in the sampling basis \
active at run time (use all integration channels if multichanneling was \
enabled\
\>", "Text",
 CellChangeTimes->{{3.872501806456663*^9, 
  3.872501831878778*^9}},ExpressionUUID->"48f09def-0fc1-4c7b-a855-\
913187b84413"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxWgtPoint", "=", 
  RowBox[{"MapFromXs", "[", 
   RowBox[{"HookWithDeformation", ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "0.849593720848453", ",", "0.24429579449322847", ",", 
      "0.6402108135745326", ",", "0.8560665730509239", ",", 
      "0.7384368123709596", ",", "0.36724149939496614", ",", 
      "0.14036138814108864", ",", "0.16762193841514772", ",", 
      "0.6144196438490055", ",", "0.34658379011798746", ",", 
      "0.16176951799648479", ",", "0.7382519129987205"}], "}"}], ",", " ", 
    "\[IndentingNewLine]", "SGYAMLinfo", ",", "NoDeformationHyperparams", ",", 
    RowBox[{"basis", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<pq10\>\"", ",", " ", "\"\<pq13\>\"", ",", " ", "\"\<pq7\>\"", ",", 
       " ", "\"\<pq5\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.872501841409677*^9, 3.872501901525838*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"4b749813-faef-4b75-b2c2-2e9f8d043e0c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"pq4\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "102.16883253618943`", ",", "234.10486241879244`", ",", 
      "294.91316165170724`"}], "}"}]}], ",", 
   RowBox[{"\<\"pq7\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "78.64575549855896`", ",", "138.12647750312206`", ",", 
      "37.36477124154879`"}], "}"}]}], ",", 
   RowBox[{"\<\"pq10\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "194.28663536956336`", ",", "5418.534992597044`", ",", 
      "1584.0060332580956`"}], "}"}]}], ",", 
   RowBox[{"\<\"pq13\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "416.2421334449851`"}], ",", 
      RowBox[{"-", "5719.0449026207325`"}], ",", 
      RowBox[{"-", "1579.203900933172`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8725018941970377`*^9, 3.872501903458529*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"13327d86-27c8-4ae8-b561-541bb63aa930"]
}, Open  ]],

Cell["And now run the standard set of analysis tools onto it", "Text",
 CellChangeTimes->{{3.872501905429653*^9, 
  3.872501929192872*^9}},ExpressionUUID->"33582afd-5615-45af-86cb-\
29237692cf73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComputeAllMomenta", "[", 
  RowBox[{
  "maxWgtPoint", ",", "SGYAMLinfo", ",", "NoDeformationHyperparams", ",", 
   RowBox[{"DatasetOutput", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872338549533153*^9, 3.8723385602682467`*^9}, 
   3.8725019435030947`*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"6115b2ca-6b77-4b16-acb3-06ccffea0c12"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "pq1" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 0.|>, 
       "pq10" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 194.28663536956336`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 5418.534992597044, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 1584.0060332580956`|>, 
       "pq11" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 439.76521048261554`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 5815.023287536403, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 1836.7522913433304`|>, 
       "pq12" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 439.76521048261554`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 5815.023287536403, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 1836.7522913433304`|>, 
       "pq13" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> -416.2421334449851, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> -5719.0449026207325`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -1579.203900933172|>, 
       "pq2" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 0.|>, 
       "pq3" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 102.16883253618943`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 234.10486241879244`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 294.91316165170724`|>, 
       "pq4" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 102.16883253618943`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 234.10486241879244`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 294.91316165170724`|>, 
       "pq5" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 245.47857511305222`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 396.48829493935864`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 252.74625808523479`|>, 
       "pq6" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 245.47857511305222`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 396.48829493935864`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 252.74625808523479`|>, 
       "pq7" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 78.64575549855896, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 138.12647750312206`, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 37.36477124154879|>, 
       "pq8" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 23.523077037630472`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 95.97838491567038, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 257.54839041015845`|>, 
       "pq9" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 23.523077037630472`, 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 95.97838491567038, 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 257.54839041015845`|>, 
       "q1" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 500.|>, 
       "q2" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -500.|>, 
       "q3" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 500.|>, 
       "q4" -> <|
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 0., 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> -500.|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 3, {All}]]], 17, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 17], 
     "Meta" -> <|
      DatasetTheme -> "Scientific", 
       ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& }|>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"} -> 
        1, {All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[44.800000000000004`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "\!\(\*SubscriptBox[\(p\), \(x\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(y\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60], 
             "\!\(\*SubscriptBox[\(p\), \(z\)]\)" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 3, {All}]]], 17, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{
        "\!\(\*SubscriptBox[\(p\), \(x\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(y\)]\)", 
         "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 17], "Path" -> {}, "DisplayedRowCount" -> 
     17, "DisplayedColumnCount" -> 3, "DataRowCount" -> 17, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SubscriptBox[\(p\), \(x\)]\)", 
                  Style[
                  "\!\(\*SubscriptBox[\(p\), \(x\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\!\(\*SubscriptBox[\(p\), \(x\)]\)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SubscriptBox[\(p\), \(y\)]\)", 
                  Style[
                  "\!\(\*SubscriptBox[\(p\), \(y\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\!\(\*SubscriptBox[\(p\), \(y\)]\)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\!\(\*SubscriptBox[\(p\), \(z\)]\)", 
                  Style[
                  "\!\(\*SubscriptBox[\(p\), \(z\)]\)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "\!\(\*SubscriptBox[\(p\), \(z\)]\)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9764705882352941, 0.8313725490196078, 
               0.7490196078431373}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq1", 
                  Style[
                  "pq1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq10", 
                  Style[
                  "pq10", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq10"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+194.28663536956336", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+5418.534992597044", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1584.0060332580956", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq10"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq11", 
                  Style[
                  "pq11", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq11"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+439.76521048261554", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+5815.023287536403", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1836.7522913433304", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq11"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq12", 
                  Style[
                  "pq12", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq12"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+439.76521048261554", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+5815.023287536403", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+1836.7522913433304", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq12"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq13", 
                  Style[
                  "pq13", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq13"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["-416.2421334449851", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-5719.0449026207325", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-1579.203900933172", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq13"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq2", 
                  Style[
                  "pq2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq3", 
                  Style[
                  "pq3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+102.16883253618943", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+234.10486241879244", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+294.91316165170724", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq4", 
                  Style[
                  "pq4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq4"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+102.16883253618943", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+234.10486241879244", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+294.91316165170724", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq5", 
                  Style[
                  "pq5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq5"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+245.47857511305222", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+396.48829493935864", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+252.74625808523479", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq5"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq6", 
                  Style[
                  "pq6", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq6"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+245.47857511305222", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+396.48829493935864", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+252.74625808523479", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq6"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq7", 
                  Style[
                  "pq7", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq7"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+78.64575549855896", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+138.12647750312206", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+37.36477124154879", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq7"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq8", 
                  Style[
                  "pq8", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq8"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+23.523077037630472", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+95.97838491567038", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+257.54839041015845", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq8"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["pq9", 
                  Style[
                  "pq9", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["pq9"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+23.523077037630472", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+95.97838491567038", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+257.54839041015845", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["pq9"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q1", 
                  Style[
                  "q1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q1"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q2", 
                  Style[
                  "q2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q2"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q3", 
                  Style[
                  "q3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.984313725490196, 0.9058823529411765, 
               0.7764705882352941}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q3"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["q4", 
                  Style[
                  "q4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["q4"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(x\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(y\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-500.", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["q4"], 
                 Key["\!\(\*SubscriptBox[\(p\), \(z\)]\)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
          FrameStyle -> GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
          Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{469., {250.134033203125, 255.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{469., {250.134033203125, 255.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.872338562067137*^9, 3.872338582172536*^9}, 
   3.87233878136583*^9, 3.8723388538324127`*^9, 3.8723409370576*^9, 
   3.872501687137072*^9, 3.872501946904454*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"d8bdd29d-68a3-4063-bb3f-b54fea95f457"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"evaluationWithEsurfaceAnalysis", "=", 
   RowBox[{"EvaluatePoint", "[", 
    RowBox[{
    "HookWithDeformation", ",", "maxWgtPoint", ",", "SGYAMLinfo", ",", 
     "NoDeformationHyperparams", ",", "\[IndentingNewLine]", 
     RowBox[{"DEBUG", "->", "False"}], ",", 
     RowBox[{"f128", "->", "True"}], ",", 
     RowBox[{"IncludeJacobian", "->", "False"}], ",", 
     RowBox[{"Phase", "->", "Null"}], ",", 
     RowBox[{"Seed", "->", "1"}], ",", 
     RowBox[{"Esurfaces", "->", "allESurfaces"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.872497873697824*^9, 3.872497884437283*^9}, {
  3.872502555554886*^9, 3.872502558904656*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"396688aa-d714-424c-82db-45a8bbc07f37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyDataset", "[", "evaluationWithEsurfaceAnalysis", "]"}]], "Input",
 CellChangeTimes->{{3.872499645540351*^9, 3.872499645854395*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"1005adae-3b30-42e9-b0d3-4529c38dd31d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|"edges" -> {"pq10", "pq13", "pq4", "pq5", "pq7"}, "Res" -> 
         Complex[1.6137098348752192`*^-66, 0.], "Rescaling" -> 
         0.04537741435180097, 
         "MomentaInLMB" -> {{102.16883253618943`, 234.10486241879244`, 
          294.91316165170724`}, {78.64575549855896, 138.12647750312206`, 
          37.36477124154879}, {194.28663536956336`, 5418.534992597044, 
          1584.0060332580956`}, {-416.2421334449851, -5719.0449026207325`, \
-1579.203900933172}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {0., 0., 
          0.}, {0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[1., 0.], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, "eval" -> 
            0.11583577615981222`, "complex eval" -> 
            Complex[0.11583577615981266`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.14642790611375847`, "complex eval" -> 
            Complex[-0.1464279061137588, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.3487692914881784, "complex eval" -> 
            Complex[-0.34876929148817876`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, "eval" -> 
            11.232984468999618`, "complex eval" -> 
            Complex[11.232984468999609`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.323068713438246`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.323068713438246`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38976402407287, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38976402407287, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.479848268511505`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.479848268511505`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.786652627642935`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.786652627642935`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.323068713438246`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.323068713438246`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.389764024072868`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.389764024072868`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.479848268511505`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.479848268511505`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.696568383204298`, 0.], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.786652627642937`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.786652627642937`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}|>, 
       1 -> <|"edges" -> {"pq10", "pq13", "pq3", "pq6", "pq7"}, "Res" -> 
         Complex[1.6137098348752192`*^-66, 0.], "Rescaling" -> 
         0.04537741435180097, 
         "MomentaInLMB" -> {{102.16883253618943`, 234.10486241879244`, 
          294.91316165170724`}, {78.64575549855896, 138.12647750312206`, 
          37.36477124154879}, {194.28663536956336`, 5418.534992597044, 
          1584.0060332580956`}, {-416.2421334449851, -5719.0449026207325`, \
-1579.203900933172}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {0., 0., 
          0.}, {0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[1., 0.], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, "eval" -> 
            0.11583577615981222`, "complex eval" -> 
            Complex[0.11583577615981266`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.14642790611375847`, "complex eval" -> 
            Complex[-0.1464279061137588, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.3487692914881784, "complex eval" -> 
            Complex[-0.34876929148817876`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, "eval" -> 
            11.232984468999618`, "complex eval" -> 
            Complex[11.232984468999609`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.323068713438246`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.323068713438246`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38976402407287, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38976402407287, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.479848268511505`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.479848268511505`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.786652627642935`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.786652627642935`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.323068713438246`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.323068713438246`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.389764024072868`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.389764024072868`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.479848268511505`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.479848268511505`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.786652627642937`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.786652627642937`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>}|>, 
       2 -> <|"edges" -> {"pq11", "pq13", "pq4", "pq7"}, "Res" -> 
         Complex[2.5213018542318398`*^-64, -2.783566856796386*^-64], 
         "Rescaling" -> 0.054568751719203994`, 
         "MomentaInLMB" -> {{102.16883253618943`, 234.10486241879244`, 
          294.91316165170724`}, {78.64575549855896, 138.12647750312206`, 
          37.36477124154879}, {194.28663536956336`, 5418.534992597044, 
          1584.0060332580956`}, {-416.2421334449851, -5719.0449026207325`, \
-1579.203900933172}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 
          0.}, {-9.217856078202226, -14.888354463356455`, \
-9.490761587893791}, {0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[-0.38825142717822836`, 1.7261821267313058`], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, "eval" -> 
            0.11583577615981222`, "complex eval" -> 
            Complex[0.11576748508737342`, 0.03787383687093265], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.14642790611375847`, "complex eval" -> 
            Complex[-0.1464279061137588, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.3487692914881784, "complex eval" -> 
            Complex[-0.34876929148817876`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, "eval" -> 
            11.232984468999618`, "complex eval" -> 
            Complex[11.232984468999609`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.323025823472593`, 0.0016766169208109326`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.323025823472593`, 0.0016766169208109326`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38976402407287, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38976402407287, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.479805378545851`, 0.0016766169208109326`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.479805378545851`, 0.0016766169208109326`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.78660973767728, 0.0016766169208109326`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.78660973767728, 0.0016766169208109326`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.323025823472593`, 0.0016766169208109326`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.323025823472593`, 0.0016766169208109326`], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.389764024072868`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.389764024072868`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.479805378545851`, 0.0016766169208109326`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.479805378545851`, 0.0016766169208109326`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.786609737677281`, 0.0016766169208109326`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.786609737677281`, 0.0016766169208109326`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>}|>, 
       3 -> <|"edges" -> {"pq12", "pq13", "pq3", "pq7"}, "Res" -> 
         Complex[2.5213018542318405`*^-64, -2.7835668567963868`*^-64], 
         "Rescaling" -> 0.054568751719203994`, 
         "MomentaInLMB" -> {{102.16883253618943`, 234.10486241879244`, 
          294.91316165170724`}, {78.64575549855896, 138.12647750312206`, 
          37.36477124154879}, {194.28663536956336`, 5418.534992597044, 
          1584.0060332580956`}, {-416.2421334449851, -5719.0449026207325`, \
-1579.203900933172}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 
          0.}, {-9.217856078202226, -14.888354463356496`, \
-9.490761587893754}, {0., 0., 0.}}, "DeformationJacobian" -> 
         Complex[-0.38825142717822814`, 1.726182126731306], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, "eval" -> 
            0.11583577615981222`, "complex eval" -> 
            Complex[0.11576748508737342`, 0.03787383687093268], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.14642790611375847`, "complex eval" -> 
            Complex[-0.1464279061137588, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.3487692914881784, "complex eval" -> 
            Complex[-0.34876929148817876`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, "eval" -> 
            11.232984468999618`, "complex eval" -> 
            Complex[11.232984468999609`, 0.], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.323025823472593`, 0.0016766169208109183`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.323025823472593`, 0.0016766169208109183`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38976402407287, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38976402407287, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.479805378545851`, 0.0016766169208109183`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.479805378545851`, 0.0016766169208109183`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.78660973767728, 0.0016766169208109183`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.78660973767728, 0.0016766169208109183`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.323025823472593`, 0.0016766169208109183`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.323025823472593`, 0.0016766169208109183`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.389764024072868`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.389764024072868`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.479805378545851`, 0.0016766169208109183`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.479805378545851`, 0.0016766169208109183`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.696568383204298`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.786609737677281`, 0.0016766169208109183`], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.786609737677281`, 0.0016766169208109183`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>}|>, 
       4 -> <|"edges" -> {"pq3", "pq7", "pq9"}, "Res" -> 
         Complex[-2.7478993248905163`*^-48, -6.283475126119261*^-48], 
         "Rescaling" -> 1.0578988035830885`, 
         "MomentaInLMB" -> {{102.16883253618943`, 234.10486241879244`, 
          294.91316165170724`}, {78.64575549855896, 138.12647750312206`, 
          37.36477124154879}, {194.28663536956336`, 5418.534992597044, 
          1584.0060332580956`}, {-416.2421334449851, -5719.0449026207325`, \
-1579.203900933172}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          164.42481071463664`, 4585.707034422079, 
          1340.5445603290657`}, {-372.17336825533454`, -4921.2551421031185`, \
-1554.443759136272}}, "DeformationJacobian" -> 
         Complex[-2.7181864269371463`, -3.4737405080087775`], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, "eval" -> 
            0.11583577615981222`, "complex eval" -> 
            Complex[0.09403538058641038, 0.8705420073335972], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            0.07258683533546856|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.14642790611375847`, "complex eval" -> 
            Complex[-0.1464279061137588, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.3487692914881784, "complex eval" -> 
            Complex[-0.34876929148817876`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, "eval" -> 
            11.232984468999618`, "complex eval" -> 
            Complex[11.230942811692536`, 10.346221310422361`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.311147686998005`, 10.388842331465352`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.08406291045128|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.311147686998005`, 10.388842331465352`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.08406291045128|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38703741153065, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38703741153065, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.467242286836122`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.467242286836122`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.69384177066208, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.69384177066208, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.77404664596755, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.77404664596755, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.311147686998005`, 10.388842331465352`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.08406291045128|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.311147686998005`, 10.388842331465352`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.08406291045128|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.38703741153065, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.38703741153065, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.467242286836122`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.467242286836122`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.69384177066208, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.69384177066208, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.774046645967552`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.774046645967552`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>}|>, 
       5 -> <|"edges" -> {"pq4", "pq7", "pq8"}, "Res" -> 
         Complex[-2.7478993248905163`*^-48, -6.283475126119261*^-48], 
         "Rescaling" -> 1.0578988035830885`, 
         "MomentaInLMB" -> {{102.16883253618943`, 234.10486241879244`, 
          294.91316165170724`}, {78.64575549855896, 138.12647750312206`, 
          37.36477124154879}, {194.28663536956336`, 5418.534992597044, 
          1584.0060332580956`}, {-416.2421334449851, -5719.0449026207325`, \
-1579.203900933172}}, 
         "MomentaDeformationInLMB" -> {{0., 0., 0.}, {0., 0., 0.}, {
          164.42481071463664`, 4585.707034422079, 
          1340.5445603290657`}, {-372.17336825533454`, -4921.2551421031185`, \
-1554.443759136272}}, "DeformationJacobian" -> 
         Complex[-2.7181864269371463`, -3.4737405080087775`], {
          "s-channel", "Esurf analysis"} -> {<|
           "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
            "eval" -> -0.041964932356748134`, "complex eval" -> 
            Complex[-0.04196493235674836, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq5", "pq6"}}, "eval" -> 
            0.11583577615981222`, "complex eval" -> 
            Complex[0.09403538058641038, 0.8705420073335972], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            0.07258683533546856|>, <|
           "id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
            "eval" -> -0.14642790611375847`, "complex eval" -> 
            Complex[-0.1464279061137588, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
            "eval" -> -0.3487692914881784, "complex eval" -> 
            Complex[-0.34876929148817876`, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 8, "edges" -> {{"pq11", "pq12"}}, "eval" -> 
            11.232984468999618`, "complex eval" -> 
            Complex[11.230942811692536`, 10.346221310422361`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.311147686998005`, 10.388842331465352`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.08406291045128|>, <|
           "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
            11.32306871343825, "complex eval" -> 
            Complex[11.311147686998005`, 10.388842331465352`], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.08406291045128|>, <|
           "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38703741153065, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, "eval" -> 
            11.389764024072875`, "complex eval" -> 
            Complex[11.38703741153065, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.467242286836122`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, "eval" -> 
            11.479848268511505`, "complex eval" -> 
            Complex[11.467242286836122`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.69384177066208, 10.345467242559517`], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 12, "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
            11.696568383204303`, "complex eval" -> 
            Complex[11.69384177066208, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.77404664596755, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
            "eval" -> 11.786652627642937`, "complex eval" -> 
            Complex[11.77404664596755, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>}, {
          "soft", "Esurf analysis"} -> {<|
           "id" -> 4, "edges" -> {{"pq4", "pq7", "pq9"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 6, "edges" -> {{"pq3", "pq7", "pq8"}}, "eval" -> 
            0.958035067643252, "complex eval" -> 
            Complex[0.9580350676432515, 0.], 
            
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 0.|>, <|
           "id" -> 1, "edges" -> {{"pq10", "pq12", "pq6"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.311147686998005`, 10.388842331465352`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.08406291045128|>, <|
           "id" -> 3, "edges" -> {{"pq10", "pq11", "pq5"}}, "eval" -> 
            12.32306871343825, "complex eval" -> 
            Complex[12.311147686998005`, 10.388842331465352`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.08406291045128|>, <|
           "id" -> 2, "edges" -> {{"pq12", "pq13", "pq9"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.38703741153065, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 5, "edges" -> {{"pq11", "pq13", "pq8"}}, "eval" -> 
            12.389764024072873`, "complex eval" -> 
            Complex[12.38703741153065, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 7, "edges" -> {{"pq10", "pq13", "pq6", "pq9"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.467242286836122`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 9, "edges" -> {{"pq10", "pq13", "pq5", "pq8"}}, "eval" -> 
            12.479848268511505`, "complex eval" -> 
            Complex[12.467242286836122`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 8, "edges" -> {{"pq12", "pq13", "pq4", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.69384177066208, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 10, "edges" -> {{"pq11", "pq13", "pq3", "pq7"}}, "eval" -> 
            12.696568383204303`, "complex eval" -> 
            Complex[12.69384177066208, 10.345467242559517`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 1.|>, <|
           "id" -> 11, "edges" -> {{"pq10", "pq13", "pq4", "pq6", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.774046645967552`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>, <|
           "id" -> 12, "edges" -> {{"pq10", "pq13", "pq3", "pq5", "pq7"}}, 
            "eval" -> 12.786652627642937`, "complex eval" -> 
            Complex[12.774046645967552`, 10.388088263602505`], 
            "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\[RightVector]\)]\
\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\[RightVector]\)]]\)\
\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
            1.0840743737221799`|>}|>, 
       "CutsSum" -> <|
        "Res" -> 
         Complex[-5.495798649781033*^-48, -1.2566950252238522`*^-47]|>, 
       "FullIntegrand" -> <|
        "Res" -> 
         Complex[-5.495798649781023*^-48, -1.2566950252238505`*^-47]|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`UnknownShape[False]]], 2, 
          DirectedInfinity[1], {All}]]], 8, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Assoc[
       TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyLength], 8], 
     "Meta" -> <|
      DatasetTheme -> "Scientific", 
       ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& }|>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`UnknownShape[True], 
            TypeSystem`PackageScope`UnknownShape[False]]], 2, 
          DirectedInfinity[1], {All}]]], 8, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, 
       TypeSystem`Assoc[
       TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyLength], 8], 
     "Path" -> {}, "DisplayedRowCount" -> 8, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 8, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq10", "pq13", "pq4", "pq5", "pq7"}}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+1.6137098348752192e-66", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.9882352941176471, 0.9254901960784314, 0.8254901960784313], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq10", "pq13", "pq3", "pq6", "pq7"}}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["+1.6137098348752192e-66", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.9882352941176471, 0.9254901960784314, 0.8254901960784313], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq11", "pq13", "pq4", "pq7"}}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["(2.5213018542318398e-64,-2.783566856796386e-64)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.996078431372549, 0.9725490196078431, 0.9372549019607843], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {
            "pq12", "pq13", "pq3", "pq7"}}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["(2.5213018542318405e-64,-2.7835668567963868e-64)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.9882352941176471, 0.9254901960784314, 0.8254901960784313], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq3", "pq7", "pq9"}}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["(-2.7478993248905163e-48,-6.283475126119261e-48)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.996078431372549, 0.9725490196078431, 0.9372549019607843], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["edges", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["edges"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], {"pq4", "pq7", "pq8"}}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["(-2.7478993248905163e-48,-6.283475126119261e-48)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["8 total \:203a ", ""], 
                  Style[
                   Superscript["8 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> 
             RGBColor[
              0.9882352941176471, 0.9254901960784314, 0.8254901960784313], 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation["CutsSum", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CutsSum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CutsSum"], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["(-5.495798649781033e-48,-1.2566950252238522e-47)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CutsSum"], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> GrayLevel[1], 
             Frame -> RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["FullIntegrand", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FullIntegrand"]}, "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Res", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FullIntegrand"], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> Directive[
               
               RGBColor[{0.9019607843137255, 0.3607843137254902, 
                0.054901960784313725`}]], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["(-5.495798649781023e-48,-1.2566950252238505e-47)", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FullIntegrand"], 
                 Key["Res"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[{0.9921568627450981, 0.9450980392156862, 
               0.8745098039215686}], Frame -> 
             RGBColor[{0.9019607843137255, 0.3607843137254902, 
               0.054901960784313725`}], ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
          FrameStyle -> GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
          Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{550., {255.634033203125, 261.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{550., {255.634033203125, 261.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8725025613875427`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"3b859323-bc7b-4768-abc6-553268fae090"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayEvaluationEsurf", "[", 
   RowBox[{"evaluationWithEsurfaceAnalysis", ",", "SGYAMLinfo", ",", 
    RowBox[{"Categories", "->", 
     RowBox[{"{", "\"\<s-channel\>\"", "}"}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.872502589063039*^9, 3.872502972145925*^9},
 CellLabel->
  "In[139]:=",ExpressionUUID->"2f9be270-2c59-460b-94a8-dcb6cf303092"],

Cell[CellGroupData[{

Cell[BoxData["\<\"--------------------------------------------------\"\>"], \
"Print",
 CellChangeTimes->{3.872502590188264*^9, 3.872502835744377*^9, 
  3.872502972653879*^9},
 CellLabel->
  "During evaluation of \
In[139]:=",ExpressionUUID->"ab2fcf67-6f3f-4568-ab45-1dca1f15c6e8"],

Cell[BoxData["\<\"Analysis of s-channel E-surfaces:\"\>"], "Print",
 CellChangeTimes->{3.872502590188264*^9, 3.872502835744377*^9, 
  3.872502972657234*^9},
 CellLabel->
  "During evaluation of \
In[139]:=",ExpressionUUID->"8e0ae4a8-9313-4346-9ecb-3379430f87dd"],

Cell[BoxData["\<\"--------------------------------------------------\"\>"], \
"Print",
 CellChangeTimes->{3.872502590188264*^9, 3.872502835744377*^9, 
  3.872502972659976*^9},
 CellLabel->
  "During evaluation of \
In[139]:=",ExpressionUUID->"297acfa8-00f8-40c1-b01f-d674acafd1a8"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #0\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq10\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq4\"\>",
                ",", "\<\"pq5\"\>", ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}},
                 "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[1.1368683772161603`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 15, 
                "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[1.1368683772161603`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 9, 
                "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, 
                "eval" -> -0.10402955359765087`, "complex eval" -> 
                Complex[-0.104029553597651, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, 
                "eval" -> -0.10402955359765087`, "complex eval" -> 
                Complex[-0.104029553597651, 0.], 
                
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, 
                "eval" -> -0.12567063436405612`, "complex eval" -> 
                Complex[-0.125670634364056, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 10, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, 
                "eval" -> -0.12567063436405612`, "complex eval" -> 
                Complex[-0.125670634364056, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, 
                "eval" -> -0.22970018796170702`, "complex eval" -> 
                Complex[-0.22970018796170713`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> -0.22970018796170702`, "complex eval" -> 
                Complex[-0.22970018796170713`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> -0.24205390782762198`, "complex eval" -> 
                Complex[-0.24205390782762215`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, 
                "eval" -> -0.24205390782762198`, "complex eval" -> 
                Complex[-0.24205390782762215`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
                "eval" -> -0.34608346142527285`, "complex eval" -> 
                Complex[-0.3460834614252732, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
                "eval" -> -0.527424821109169, "complex eval" -> 
                Complex[-0.5274248211091691, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
                "eval" -> -0.527424821109169, "complex eval" -> 
                Complex[-0.5274248211091691, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
                "eval" -> -0.6506673970484669, "complex eval" -> 
                Complex[-0.6506673970484669, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.6521929719773, "complex eval" -> 
                Complex[-0.6521929719773, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.6530954554732252, "complex eval" -> 
                Complex[-0.6530954554732253, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["-0.10402955359765087", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.104029553597651", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["-0.10402955359765087", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.104029553597651", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.12567063436405612", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.125670634364056", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.12567063436405612", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.125670634364056", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.22970018796170702", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.22970018796170713", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.22970018796170702", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.22970018796170713", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["-0.24205390782762198", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.24205390782762215", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-0.24205390782762198", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.24205390782762215", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["-0.34608346142527285", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.3460834614252732", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.527424821109169", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.5274248211091691", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.527424821109169", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.5274248211091691", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-0.6506673970484669", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.6506673970484669", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.6521929719773", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.6521929719773", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.6530954554732252", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.6530954554732253", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            "4a362147-066a-41e3-93b0-baeb8c3ddaa6"][{8, 
              Key["complex eval"]}, "Item", False]}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{665., {237.8544921875, 243.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{665., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #3\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq12\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq3\"\>",
                ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
                0., "complex eval" -> Complex[0., 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 0., 
                "complex eval" -> Complex[0., 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, 
                "eval" -> -0.018145309141055235`, "complex eval" -> 
                Complex[-0.019408214937536285`, -0.013961756401824286`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, 
                "eval" -> -0.018145309141055235`, "complex eval" -> 
                Complex[-0.019408214937536285`, -0.013961756401824286`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
                "eval" -> 0.10782326333227867`, "complex eval" -> 
                Complex[0.10656035753579761`, -0.013961756401824286`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
                "eval" -> 0.10782326333227867`, "complex eval" -> 
                Complex[0.10656035753579761`, -0.013961756401824286`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, 
                "eval" -> -0.1259685724733339, "complex eval" -> 
                Complex[-0.1259685724733339, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> -0.1259685724733339, "complex eval" -> 
                Complex[-0.1259685724733339, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> -0.14053358894173834`, "complex eval" -> 
                Complex[-0.1417964947382195, -0.013961756401824286`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, 
                "eval" -> -0.14053358894173834`, "complex eval" -> 
                Complex[-0.1417964947382195, -0.013961756401824286`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
                "eval" -> -0.248356852274017, "complex eval" -> 
                Complex[-0.24835685227401713`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
                "eval" -> -0.5267240948592123, "complex eval" -> 
                Complex[-0.5267240948592122, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
                "eval" -> -0.5267240948592123, "complex eval" -> 
                Complex[-0.5267240948592122, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
                "eval" -> -0.6491908219916759, "complex eval" -> 
                Complex[-0.6513970586461396, 0.006614941041310439], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.6513898168402226, "complex eval" -> 
                Complex[-0.6513898168402225, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.6526926673325462, "complex eval" -> 
                Complex[-0.652692667332546, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.018145309141055235", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-0.019408214937536285,-0.013961756401824286)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.018145309141055235", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-0.019408214937536285,-0.013961756401824286)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.10782326333227867", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.10656035753579761,-0.013961756401824286)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.10782326333227867", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.10656035753579761,-0.013961756401824286)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.1259685724733339", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.1259685724733339", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.1259685724733339", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.1259685724733339", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["-0.14053358894173834", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-0.1417964947382195,-0.013961756401824286)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-0.14053358894173834", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-0.1417964947382195,-0.013961756401824286)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["-0.248356852274017", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.24835685227401713", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.5267240948592123", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.5267240948592122", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.5267240948592123", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.5267240948592122", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-0.6491908219916759", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(-0.6513970586461396,0.006614941041310439)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.6513898168402226", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.6513898168402225", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.6526926673325462", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.652692667332546", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            "4a362147-066a-41e3-93b0-baeb8c3ddaa6"][{8, 
              Key["complex eval"]}, "Item", False]}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{790., {237.8544921875, 243.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{790., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #1\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq10\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq3\"\>",
                ",", "\<\"pq6\"\>", ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}},
                 "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[1.1368683772161603`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 15, 
                "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
                "eval" -> -1.1368683772161603`*^-16, "complex eval" -> 
                Complex[1.1368683772161603`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 9, 
                "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, 
                "eval" -> -0.10402955359765087`, "complex eval" -> 
                Complex[-0.104029553597651, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, 
                "eval" -> -0.10402955359765087`, "complex eval" -> 
                Complex[-0.104029553597651, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, 
                "eval" -> -0.12567063436405612`, "complex eval" -> 
                Complex[-0.125670634364056, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 10, 
                "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, 
                "eval" -> -0.12567063436405612`, "complex eval" -> 
                Complex[-0.125670634364056, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, 
                "eval" -> -0.22970018796170702`, "complex eval" -> 
                Complex[-0.22970018796170713`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> -0.22970018796170702`, "complex eval" -> 
                Complex[-0.22970018796170713`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> -0.24205390782762198`, "complex eval" -> 
                Complex[-0.24205390782762215`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, 
                "eval" -> -0.24205390782762198`, "complex eval" -> 
                Complex[-0.24205390782762215`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
                "eval" -> -0.34608346142527285`, "complex eval" -> 
                Complex[-0.3460834614252732, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
                "eval" -> -0.527424821109169, "complex eval" -> 
                Complex[-0.5274248211091691, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|
               "id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
                "eval" -> -0.527424821109169, "complex eval" -> 
                Complex[-0.5274248211091691, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
                "eval" -> -0.6506673970484669, "complex eval" -> 
                Complex[-0.6506673970484669, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.6521929719773, "complex eval" -> 
                Complex[-0.6521929719773, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.6530954554732252, "complex eval" -> 
                Complex[-0.6530954554732253, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["-1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.1368683772161603e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["-0.10402955359765087", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.104029553597651", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["-0.10402955359765087", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.104029553597651", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.12567063436405612", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.125670634364056", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.12567063436405612", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.125670634364056", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.22970018796170702", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.22970018796170713", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.22970018796170702", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.22970018796170713", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["-0.24205390782762198", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.24205390782762215", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-0.24205390782762198", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.24205390782762215", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["-0.34608346142527285", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.3460834614252732", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.527424821109169", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.5274248211091691", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.527424821109169", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.5274248211091691", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-0.6506673970484669", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.6506673970484669", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.6521929719773", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.6521929719773", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.6530954554732252", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.6530954554732253", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            "4a362147-066a-41e3-93b0-baeb8c3ddaa6"][{8, 
              Key["complex eval"]}, "Item", False]}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{665., {237.8544921875, 243.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{665., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #4\"\>", 
             RowBox[{"{", 
              RowBox[{"\<\"pq3\"\>", ",", "\<\"pq7\"\>", ",", "\<\"pq9\"\>"}],
               "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, "eval" -> 0., 
                "complex eval" -> Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, "eval" -> 
                0., "complex eval" -> Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.10494021150978745`, "complex eval" -> 
                Complex[-0.10494021150978768`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq5", "pq6"}}, "eval" -> 
                0.17438392054247426`, "complex eval" -> 
                Complex[0.15502792305912136`, 0.8723137979725426], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.07258683533546861|>, <|
               "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.32149508223743894`, "complex eval" -> 
                Complex[-0.32149508223743883`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, "eval" -> 
                11.940708511046187`, "complex eval" -> 
                Complex[11.938903818536987`, 10.346377995106218`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> 12.03325538091291, "complex eval" -> 
                Complex[12.022675035916636`, 10.389806569126758`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.081955492089582|>, <|
               "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
                12.03325538091291, "complex eval" -> 
                Complex[12.022675035916636`, 10.389806569126758`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.081955492089582|>, <|
               "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
                12.10162534144965, "complex eval" -> 
                Complex[12.099033085274609`, 10.345451322342258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> 12.10162534144965, "complex eval" -> 
                Complex[12.099033085274609`, 10.345451322342258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
                12.19417221131637, "complex eval" -> 
                Complex[12.182804302654255`, 10.388879896362797`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.0819684516020955`|>, <|
               "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, 
                "eval" -> 12.19417221131637, "complex eval" -> 
                Complex[12.182804302654255`, 10.388879896362797`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.0819684516020955`|>, <|
               "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
                12.423120423687088`, "complex eval" -> 
                Complex[12.420528167512046`, 10.345451322342258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
                12.423120423687088`, "complex eval" -> 
                Complex[12.420528167512046`, 10.345451322342258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 14, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, "eval" -> 
                12.515667293553808`, "complex eval" -> 
                Complex[12.504299384891693`, 10.388879896362797`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.0819684516020955`|>, <|
               "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}},
                 "eval" -> 12.515667293553808`, "complex eval" -> 
                Complex[12.504299384891693`, 10.388879896362797`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.0819684516020955`|>}, "AllowEmbedding" -> True, 
             "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.10494021150978745", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.10494021150978768", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+0.17438392054247426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.15502792305912136,0.8723137979725426)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.07258683533546861", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.32149508223743894", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.32149508223743883", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["+11.940708511046187", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(11.938903818536987,10.346377995106218)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+12.03325538091291", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.022675035916636,10.389806569126758)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.081955492089582", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+12.03325538091291", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.022675035916636,10.389806569126758)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.081955492089582", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+12.10162534144965", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.099033085274609,10.345451322342258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+12.10162534144965", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.099033085274609,10.345451322342258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+12.19417221131637", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.182804302654255,10.388879896362797)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.0819684516020955", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+12.19417221131637", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.182804302654255,10.388879896362797)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.0819684516020955", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+12.423120423687088", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.420528167512046,10.345451322342258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+12.423120423687088", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.420528167512046,10.345451322342258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+12.515667293553808", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.504299384891693,10.388879896362797)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.0819684516020955", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+12.515667293553808", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.504299384891693,10.388879896362797)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.0819684516020955", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            "4a362147-066a-41e3-93b0-baeb8c3ddaa6"][{8, 
              Key["complex eval"]}, "Item", False]}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{760., {237.8544921875, 243.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{760., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #2\"\>", 
             RowBox[{"{", 
              
              RowBox[{"\<\"pq11\"\>", ",", "\<\"pq13\"\>", ",", "\<\"pq4\"\>",
                ",", "\<\"pq7\"\>"}], "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
                0., "complex eval" -> Complex[0., 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 0., 
                "complex eval" -> Complex[0., 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, 
                "eval" -> -0.018145309141055235`, "complex eval" -> 
                Complex[-0.019408214937536285`, -0.013961756401824258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, 
                "eval" -> -0.018145309141055235`, "complex eval" -> 
                Complex[-0.019408214937536285`, -0.013961756401824258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 14, "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, 
                "eval" -> 0.10782326333227867`, "complex eval" -> 
                Complex[0.10656035753579761`, -0.013961756401824258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}}, 
                "eval" -> 0.10782326333227867`, "complex eval" -> 
                Complex[0.10656035753579761`, -0.013961756401824258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, 
                "eval" -> -0.1259685724733339, "complex eval" -> 
                Complex[-0.1259685724733339, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> -0.1259685724733339, "complex eval" -> 
                Complex[-0.1259685724733339, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> -0.14053358894173834`, "complex eval" -> 
                Complex[-0.1417964947382195, -0.013961756401824258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, 
                "eval" -> -0.14053358894173834`, "complex eval" -> 
                Complex[-0.1417964947382195, -0.013961756401824258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> \
-1.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, 
                "eval" -> -0.248356852274017, "complex eval" -> 
                Complex[-0.24835685227401713`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, 
                "eval" -> -0.5267240948592123, "complex eval" -> 
                Complex[-0.5267240948592122, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, 
                "eval" -> -0.5267240948592123, "complex eval" -> 
                Complex[-0.5267240948592122, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq5", "pq6"}}, 
                "eval" -> -0.6491908219916759, "complex eval" -> 
                Complex[-0.6513970586461396, 0.006614941041310435], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.6513898168402226, "complex eval" -> 
                Complex[-0.6513898168402225, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.6526926673325462, "complex eval" -> 
                Complex[-0.652692667332546, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>}, "AllowEmbedding" -> True, "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.018145309141055235", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-0.019408214937536285,-0.013961756401824258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.018145309141055235", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-0.019408214937536285,-0.013961756401824258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.10782326333227867", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.10656035753579761,-0.013961756401824258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+0.10782326333227867", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(0.10656035753579761,-0.013961756401824258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.1259685724733339", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.1259685724733339", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.1259685724733339", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.1259685724733339", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["-0.14053358894173834", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-0.1417964947382195,-0.013961756401824258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-0.14053358894173834", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "(-0.1417964947382195,-0.013961756401824258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["-0.248356852274017", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.24835685227401713", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.5267240948592123", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.5267240948592122", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["-0.5267240948592123", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.5267240948592122", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["-0.6491908219916759", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(-0.6513970586461396,0.006614941041310435)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.6513898168402226", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.6513898168402225", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.6526926673325462", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.652692667332546", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            "4a362147-066a-41e3-93b0-baeb8c3ddaa6"][{8, 
              Key["complex eval"]}, "Item", False]}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{790., {237.8544921875, 243.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{790., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"], 
     TagBox[GridBox[{
        {
         TagBox[GridBox[{
            {"\<\"Cut #5\"\>", 
             RowBox[{"{", 
              RowBox[{"\<\"pq4\"\>", ",", "\<\"pq7\"\>", ",", "\<\"pq8\"\>"}],
               "}"}]}
           },
           AutoDelete->False,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
          "Grid"]},
        {
         TagBox[
          TagBox[
           
           DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
            "InitialData" -> {<|
               "id" -> 5, "edges" -> {{"pq3", "pq7", "pq9"}}, "eval" -> 0., 
                "complex eval" -> Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 6, "edges" -> {{"pq4", "pq7", "pq8"}}, "eval" -> 
                0., "complex eval" -> Complex[-2.2737367544323206`*^-16, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 2, "edges" -> {{"pq3", "pq4"}}, 
                "eval" -> -0.10494021150978745`, "complex eval" -> 
                Complex[-0.10494021150978768`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 1, "edges" -> {{"pq5", "pq6"}}, "eval" -> 
                0.17438392054247426`, "complex eval" -> 
                Complex[0.15502792305912136`, 0.8723137979725426], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.07258683533546861|>, <|
               "id" -> 11, "edges" -> {{"pq8", "pq9"}}, 
                "eval" -> -0.32149508223743894`, "complex eval" -> 
                Complex[-0.32149508223743883`, 0.], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                0.|>, <|"id" -> 8, "edges" -> {{"pq11", "pq12"}}, "eval" -> 
                11.940708511046187`, "complex eval" -> 
                Complex[11.938903818536987`, 10.346377995106218`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 3, "edges" -> {{"pq10", "pq12", "pq5"}}, 
                "eval" -> 12.03325538091291, "complex eval" -> 
                Complex[12.022675035916636`, 10.389806569126758`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.081955492089582|>, <|
               "id" -> 4, "edges" -> {{"pq10", "pq11", "pq6"}}, "eval" -> 
                12.03325538091291, "complex eval" -> 
                Complex[12.022675035916636`, 10.389806569126758`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.081955492089582|>, <|
               "id" -> 13, "edges" -> {{"pq11", "pq13", "pq9"}}, "eval" -> 
                12.10162534144965, "complex eval" -> 
                Complex[12.099033085274609`, 10.345451322342258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 16, "edges" -> {{"pq12", "pq13", "pq8"}}, 
                "eval" -> 12.10162534144965, "complex eval" -> 
                Complex[12.099033085274609`, 10.345451322342258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 7, 
                "edges" -> {{"pq10", "pq13", "pq5", "pq9"}}, "eval" -> 
                12.19417221131637, "complex eval" -> 
                Complex[12.182804302654255`, 10.388879896362797`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.0819684516020955`|>, <|
               "id" -> 10, "edges" -> {{"pq10", "pq13", "pq6", "pq8"}}, 
                "eval" -> 12.19417221131637, "complex eval" -> 
                Complex[12.182804302654255`, 10.388879896362797`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.0819684516020955`|>, <|
               "id" -> 9, "edges" -> {{"pq12", "pq13", "pq3", "pq7"}}, "eval" -> 
                12.423120423687088`, "complex eval" -> 
                Complex[12.420528167512046`, 10.345451322342258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 12, 
                "edges" -> {{"pq11", "pq13", "pq4", "pq7"}}, "eval" -> 
                12.423120423687088`, "complex eval" -> 
                Complex[12.420528167512046`, 10.345451322342258`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.|>, <|"id" -> 14, 
                "edges" -> {{"pq10", "pq13", "pq4", "pq5", "pq7"}}, "eval" -> 
                12.515667293553808`, "complex eval" -> 
                Complex[12.504299384891693`, 10.388879896362797`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.0819684516020955`|>, <|
               "id" -> 15, "edges" -> {{"pq10", "pq13", "pq3", "pq6", "pq7"}},
                 "eval" -> 12.515667293553808`, "complex eval" -> 
                Complex[12.504299384891693`, 10.388879896362797`], 
                "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \
\(\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                1.0819684516020955`|>}, "AllowEmbedding" -> True, 
             "InitialShape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "InitialType" -> 
             TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], 
             "Meta" -> <|
              DatasetTheme -> "Scientific", 
               ItemDisplayFunction -> {#& , $CellContext`ToStringFloat[#]& \
}|>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
             TypeSystem`PackageScope`HeaderShape[<|{All, "id"} -> 
                1, {All, "edges"} -> 1, {All, "eval"} -> 
                1, {All, "complex eval"} -> 
                1, {All, 
                  "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"} -> 1|>, 
               TypeSystem`PackageScope`Limited[
                TypeSystem`PackageScope`ColumnShape[
                 TypeSystem`PackageScope`Limited[
                  
                  TypeSystem`PackageScope`RowShape[<|
                   "id" -> TypeSystem`PackageScope`AtomShape[34], "edges" -> 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`UnknownShape[False]], 1, 
                    DirectedInfinity[1], {All, "edges"}], "eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], "complex eval" -> 
                    TypeSystem`PackageScope`AtomShape[60], 
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))" -> 
                    TypeSystem`PackageScope`AtomShape[60]|>], 
                  DirectedInfinity[1], 5, {All}]], 16, 
                DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "id", "edges", "eval", "complex eval", 
                 "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, {
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[
                  TypeSystem`Vector[
                   TypeSystem`Atom[String], TypeSystem`AnyLength], 1], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Real]}], 16], "Path" -> {}, 
             "DisplayedRowCount" -> 16, "DisplayedColumnCount" -> 5, 
             "DataRowCount" -> 16, "DataColumnCount" -> 5, "SortPaths" -> {}, 
             "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
             1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
            DynamicModule[{
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                Style[
                 Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["id", 
                    Style[
                    "id", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "id"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "id"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["edges", 
                    Style[
                    "edges", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "edges"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "edges"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["eval", 
                    Style[
                    "eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["complex eval", 
                    Style[
                    "complex eval", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "complex eval"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "complex eval"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))", 
                    Style[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \(\[RightVector]\)]\))",
                     FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> 
                    Directive[
                    
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}]], Background -> 
                    RGBColor[{0.9764705882352941, 0.8313725490196078, 
                    0.7490196078431373}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation["+5", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq7", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+6", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq4", "pq7", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-2.2737367544323206e-16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq3", "pq4"}, 
                    Item[
                    Pane[
                    Annotation["-0.10494021150978745", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.10494021150978768", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq5", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+0.17438392054247426", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(0.15502792305912136,0.8723137979725426)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.07258683533546861", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+11", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq8", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["-0.32149508223743894", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["-0.32149508223743883", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+0.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+8", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq12"}, 
                    Item[
                    Pane[
                    Annotation["+11.940708511046187", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(11.938903818536987,10.346377995106218)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq12", "pq5"}, 
                    Item[
                    Pane[
                    Annotation["+12.03325538091291", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.022675035916636,10.389806569126758)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.081955492089582", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq11", "pq6"}, 
                    Item[
                    Pane[
                    Annotation["+12.03325538091291", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.022675035916636,10.389806569126758)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.081955492089582", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+13", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+12.10162534144965", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.099033085274609,10.345451322342258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+16", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+12.10162534144965", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.099033085274609,10.345451322342258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+7", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq5", "pq9"}, 
                    Item[
                    Pane[
                    Annotation["+12.19417221131637", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.182804302654255,10.388879896362797)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.0819684516020955", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+10", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq6", "pq8"}, 
                    Item[
                    Pane[
                    Annotation["+12.19417221131637", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.182804302654255,10.388879896362797)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.0819684516020955", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+9", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq12", "pq13", "pq3", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+12.423120423687088", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.420528167512046,10.345451322342258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+12", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq11", "pq13", "pq4", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+12.423120423687088", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.420528167512046,10.345451322342258)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+14", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq4", "pq5", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+12.515667293553808", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.504299384891693,10.388879896362797)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.0819684516020955", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[1], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation["+15", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["id"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], {
                    "pq10", "pq13", "pq3", "pq6", "pq7"}, 
                    Item[
                    Pane[
                    Annotation["+12.515667293553808", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["(12.504299384891693,10.388879896362797)", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["complex eval"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation["+1.0819684516020955", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key[
                    "Normalised \!\(\*OverscriptBox[\(\[Kappa]\), \(\
\[RightVector]\)]\).\!\(\*SubscriptBox[\(\[Del]\), OverscriptBox[\(k\), \(\
\[RightVector]\)]]\)\[Eta](\!\(\*OverscriptBox[\(k\), \
\(\[RightVector]\)]\))"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[{0.9921568627450981, 0.9450980392156862, 
                    0.8745098039215686}], Frame -> 
                    RGBColor[{0.9019607843137255, 0.3607843137254902, 
                    0.054901960784313725`}], ItemSize -> {Full, Automatic}]}},
                   BaseStyle -> {
                   ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                  FrameStyle -> GrayLevel[0.7490196078431373], 
                  Spacings -> {0, 0}, Alignment -> Left, 
                  BaseStyle -> {
                   FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                 ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                 False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
              True}, 
             Dynamic[
              TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                 Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                 
                 Module[{
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                   TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                   TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                  TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
               TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
               TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                 
                 TypeSystem`SparseGrid[
                  TypeSystem`H["(data no longer present)"]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
             DynamicModuleValues :> {}], 
            TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
             TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
              TypeSystem`PackageScope`SubViewPathbar[
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
               TypeSystem`NestedGrid`PackagePrivate`updateState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
             TrackedSymbols :> {
              TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
            TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
             Framed[
              Dynamic[
               Replace[
               TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                   Blank[]] -> "", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                   Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                  Increment[
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                   TypeSystem`NestedGrid`PackagePrivate`path$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                   TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
                   TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                  TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                  TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                   TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                 Null :> Spacer[10], Blank[] :> Spacer[10]}], 
               TrackedSymbols :> {
                TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
              FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
              Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 1],
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
            "4a362147-066a-41e3-93b0-baeb8c3ddaa6"][{8, 
              Key["complex eval"]}, "Item", False]}, 
            DynamicWrapperBox[
             DynamicBox[ToBoxes[
               Dataset`DatasetContent[
               2, "Path" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], "Grid" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                "BottomBar" -> 
                Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                "OutputID" -> Hold[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
               StandardForm],
              ImageSizeCache->{760., {237.8544921875, 243.1455078125}},
              
              TrackedSymbols:>{
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
             MouseAnnotation[],
             ImageSizeCache->{760., {237.8544921875, 243.1455078125}}],
            BaseStyle->{LineBreakWithin -> False},
            DynamicModuleValues:>{},
            
            Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
             CreateUUID[]),
            
            UnsavedVariables:>{
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
           Deploy,
           DefaultBaseStyle->"Deploy"],
          Dataset`InterpretDataset[1],
          Editable->False,
          SelectWithContents->True,
          Selectable->False]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Print",
 CellChangeTimes->{3.872502590188264*^9, 3.872502835744377*^9, 
  3.872502973775361*^9},
 CellLabel->
  "During evaluation of \
In[139]:=",ExpressionUUID->"923ac337-f5ed-419e-9090-3c9aa15462df"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RefreshHooks", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DoubleSidedApproachData", "=", 
   RowBox[{"DoubleSidedApproach", "[", 
    RowBox[{
    "HookWithDeformation", ",", "maxWgtPoint", ",", "SGYAMLinfo", ",", 
     "WithDeformationHyperparams", ",", 
     RowBox[{"NPoints", "->", "100"}], ",", 
     RowBox[{"Seed", "->", "1"}], ",", " ", 
     RowBox[{"LambdaMax", "->", "5."}], ",", 
     RowBox[{"LambdaMin", "->", "0"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.872337559347337*^9, 3.872337667120802*^9}, {
   3.87233894516018*^9, 3.872338971657679*^9}, {3.872339823018753*^9, 
   3.872339850517316*^9}, 3.872503267316985*^9},
 CellLabel->
  "In[140]:=",ExpressionUUID->"f2fc852d-bb48-4fdc-8124-08ade031136a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"DoubleSidedMonitor", "[", 
   RowBox[{
   "DoubleSidedApproachData", ",", "SGYAMLinfo", ",", 
    "WithDeformationHyperparams", ",", 
    RowBox[{"cuts", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "4"}], "}"}]}], ",", 
    RowBox[{"IntegrandToPlot", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"SafeLog10", "[", 
        RowBox[{"Abs", "[", 
         RowBox[{"Re", "[", "#", "]"}], "]"}], "]"}], "&"}], ")"}]}]}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.872337718336713*^9, 3.872337718673345*^9}, 
   3.8723389511081457`*^9, {3.872338981680163*^9, 3.872338983462089*^9}, 
   3.872339022372488*^9},
 CellLabel->
  "In[142]:=",ExpressionUUID->"1ca4f841-740e-49db-915c-3412c4c03221"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.004]], 
            LineBox[CompressedData["
1:eJw90g9MlHUYB/DjgAOPA+5PqBuXcqUNRWSIAiH5PKdHdxcIaWqIKzRD0vMP
BIgQLqhABKeGwfH/7pKGFuxYNCsyeydLoImKJEFjIH8iBHIgqMAhBnjP79ne
vXv2Ps/n++59f4oPjm2P4fN4vJi5a/5OlVj/SmOhQcvpi+brMjTErx1PTtRy
xQv9z+DbcvZ89w4t57dQ9VA3+Y1gzS563gSZcvurR1douRfaHRjQL0/8r0bD
rV+Yb4WAu3vjG2I0XOyB+WoDrsX9yDVvDVeysN8B0eIbwcfsNVzzzfnqhPel
+ZGeQ2qrdx+6xWFTmna1Na8HDDnCYZs/1Fa/D9IfdChz69TW/X44t7j0tuWS
2po3AB7CcfcfC8gbBHnbkJs0h7wH4Jba+1u1mbxh+GvYPBtxiLwR8Nqz4YvA
GPIewoDEdfR4O3mjEFSUJbctp/lRcHPMrt6dRf4Y7Glbt/5wOu0/gs7tDoqf
PqW8cTD6WDaJMsibgJu3+sL8PydvApx3iC9WZ5L3GCZy6rp9ssl7Ah6Znf+U
5JD3FFb3qKp6zpA3CeMr9787fZa8SXDfekvWf568KVi1rrDZkEfeNLwct7Pf
5yvyLNB6MEGnzydvBryPOv3SUUDeDFTUjvpM68l7Bs8PdDnMFJI3Cz0ep8J7
i8h7Dv3+jX+ai8nj4bJfB71jS2ieh7lN+2qEpeTz8HRYxYnSuf7F+bPBwJbB
w8vKKM8Gu7oSlHll5PExoGEibaqMPD4GXW9K28n+Dx+PZzilVJbT+9hi1PDb
2aPl5Nliav2Ki74G8uzQP2lNpc5Anh2OfcKPMhjIs8OPrjTqmg3k2WN7a3LK
EwN59ujw4ZiLu5E8AebK/7600UieAPkm5ZVII3kC9OyQF39sJM8BR5L0VaeN
5Dmg0xAGlzPPEfXmpedqmOeIu6JP9nHMc8T9tTbxt5m3CCvfWX2wk3mL8Ov+
xZP/Mk+IGZVLQx4xT4hZpsAEC/OEGPGq2WRrIs8J44LDR4Qm8pxQpb+vk5jI
E+GRxyf9l5jIE+G+5LZouYk8EVZcTpryYJ4zbn1zVrqSec5ojIuu82SeC8Yq
7Ga8mOeCqYee9a5lngtKl3um+DLPFRV7wxv8mOeK8Z+F3NvAPDF61Tp+G2Ci
8yXG2h/uhL7OfDFuE6zigti+GKev8UXBLE+Mu6N+93uDeRKcML+3cRPzJJgX
GvoaME+CF7ZVPQXmSVC3RPM9Mk+CJy4URiqZJ8W4prsjSuZJsVz7MG4z86T4
Zfd3A5uZJ8XMUyURW5gnxcmriuotzJPh9YA0nop9Hxl6etx4S8U8Gbres5xR
MU+GBTjboGKeDNM78mdUzHsJ+Zokr5C5/n8x6shN
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxF0n9M1HUYB/DvHefdcQfH/UACRogmW0nTjXPZluN5yHNRrvnNktQ/jBgY
/mjAHUcH3YYoEqYHNEN+WFNm0SUg3JFhlval2E3zR8wrpHYMk0AK48d5EF6g
dbTv83m277777PM8r/dnn32WZ+dvyZVyHJf73xf6i5W6K/acqoEX6htD9Tm8
Wna3XF7LC02L66/A/81zqoOHecG4WN+Dw/OswVQh7l+BVxbGqwz7eeF/rQ9y
Xqz4ucfOC2sX+72wLEs/klzKC2/tClU/eNRJgwk2XjixOP8LDJS89NHhYl64
fi1UPnD2JMW9ZhW924BXnV/kFYl5v4HzamNNt0X0h0G/7Pa40SLO/w5vc7aT
XrOYNwrh1/c2VZtFbwzi1G1lO82i9wcsrMvYnGYWvXG4pJYkrTKL3j14flI2
mkjeBNiDF0zx5E0BJ+vaHU/9U7BlLGrycfKnIfk9Se8TNO+HFZuS4lMo7z5k
XnRlGskLQEWfWrGevAAMvWm5ZSJvBpRH/EdeJm8WVrRcDG4l72+wpHoVO8mb
gwP+Y8255M1BMCvx0j7yHsDKxg3bLeQFwXosYC4h7x+QVkdqysibh4lHe9ZU
kDcP+wbWDVaRtwC29LxEB3kPYakvM1hL3iNIOW63fUgeh1sn15+qp34Ovb/2
2JrI53CjfVj5sVl8fxIsvBn7+knKk2CGOn93M3lSjBAObTxNnhSvfVs99Ql5
Uox/g89vofOEYcLBpzyfkReGqh9jHjjJk2Ft+Xn1GfJkuNC2TdJKngzlR6d9
reQtwUqPsbmNvCU4XHmUbydPjk9uSvmrnTw5ZucoSs6SJ8dPE0ZmzpKnwO37
d+R2kKdAyw/eyx3kKbHEWr+8kzwltgSuFHSSp0RHXGF3J3nhuDLlndlO8sKx
tKt9tYs8FdrC+7Jc5Knw4YlDDhd5KiwLyznnIk+NsUNTAy7y1NhbfnqOeREY
XTQa7SYvAg/ciF3tJi8CYwpqTG7yIvFO9PFtbvIi0bq5YI+bPA2uzdtRyjwN
GpPfr2KeBmfta+qYF4WmZ6ynmBeF88XlZ5inxS83FHe56X1p0TNd+DXztShz
1HzH5rXYnXr3MsvToju7+gbzdCi80OBlng7T55YOME+HP3XE+Jinw16pc4h5
OhxT999hnh7r6lpHmKfHx9JSx5inR1OD+U/m6dGeUXSPeXr8IDFtgnkGvPV0
/yS7HwOe96VPM8+AGkmln3kGfHe05T7zDMhlOwPMi8bgoGMmtP4X+F3LSQ==

             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxF0g1M1GUYAPCD44Dj+LgPKqShYI4BgcP8oA/leWxzNMW78ygSLEeWQjEk
PkfDGC2EZagn3MeAhY6EEgLRzektkT8whftQWSkLPIZ8ZMiVIMIFBJRHvM89
27t3797n+T3P3r0hhzJVh115PN7h58uxs9iZU2aOaZJz+ipHXACh+Lszre1y
rnrlbACYuiyP/03ObV6JLhhazu4/N8PujVC5PkfQJ1Vw/2u9ULwpUpW8ScFt
Wcn/Fda9b5N+r1BwqUcc0QeigwET0qMKrmalvh/GPg3M/f2kgrttcYQVVGLd
6ZuXmPcQBqpSkgKGFav9hmFi2nXcFqZc9Ueh8ujo20oP5Wr9GGScVScO2li/
R5BnOLD3ByvzxsG+O0i/4x7zHkNtqv+WtrtsXhsUcO6zvNtsnj+BX6vZk2Bm
3hOYFlnzlSbmTUHUE2vedSPLn4LU+v60LCPzn8KVn+u0iUZWPw0fV/2Vc8DI
+j2DQw+aunONzJuBnh3pA9XkzUBRVlByD3mzEB1QUjNPnh3yoh4GRpqY9zck
pd3YcJDmmwN5cFzVKRPz5qCzKL/juol583B8uD563MS8BWj88WKL2My8f+CV
hPCwbWbmLcLoS3N1+83MW4Ts88JtBWbmLUHX6+/xtfRey2DvLNt8kbx/ISX2
8fQt8ngo/yIs00r5PAw51nt/knwetne8meBiUaz+PxfMlwxKJBbWzwXTVQNv
rLMwzxXPLXVNvWphnisOFhclxViY54p3PorV7LSwefioLtfd2E0eHws3VjxT
keeGavv9PcnkuWFj683BFPLcsEfwU9sR8gQIlpGldPIEOGZaaPmcPHeMjxwZ
yiXPHTesF9YWkOeOWz8rmS0kzwOHT0Q9LSLPA9+6ylV/RZ4nZnw4t/A1eZ6I
mQ1rSsnzxIgvzUtl5AlxtqOp+RvyhLgWRzZ+S54X1siyS8vJ80JbYN+1k+R5
YfMaP9Mp8kTYntfadpo8EcpbbDo1ed74SWP1/jPkeWPBwjuCCvK8UR26/WwF
eT54LLgwrJI8H7w6ea+ukjxfvNT4yE9Dni9m3A3O0pDni+0iS7eGPD90KfF5
QUueHx6vn0jSkifGEXW8Xkv/S4wzofw7WvLFmNDZveysF6N/A0ToqJ8Yr4Qv
K3XkSTDuQmmOjjwJvobyCh15z+/fbWvWkSfBGHv0LacnwfmXFx84PSnGGtIm
nZ4Uyw3XeHrypKgaChXryZNi74k/gvTkSTE3PTxCT54MhWtf3Kqn95HhZcMv
sU5Phg17i+Ocngx37duucHoyFHiGJDo9fywd2PWB4/wf5DbmDQ==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90gtMk1cUB/BSsJby6gMIblnBAcIgbouDCQvLPXHRtgaCMnGJj6BMXmOZ
MIUtY8KQaTYgEYsbgs6qdcVuoDXCoA7wg74olOCo4xGdo2xrNGLBguCE1a2s
557ky83Nd87v/+W7d232wYwcNovFyvnvca9Y6js6R4RRxjQ0uktNDlwaXsM6
I2OaVvZa0uz3ekdemYx5Y6V0xJogWd/2Ob43E/Ee1dTCVhnzv3aL2EeZppIx
KZOw0m8l8QL26fRaKZOX665R0sbvrt+yQ8qcWZmfIO+m572/GC9lhizuuksy
tr9ZoeFLPd4kGUl/FP6LS+LJs5F684+C6lmJx/+DHI4tyxfZJJ75P0lV5tsL
VcMST56dBMtObSLdEo93n/BDalOaNOg9IDJtlT1xFL2HxBi3PXq8Dr1pEt00
+gNTg56DNKRpQp+70JslvPGYd2r02D9LLFteuW1rQf8x2RBye9e8CuedpP3k
ZQmoMG+OFH10NudUM3rz5ELAsUM9avTmiV5+zZxIvSfEZN7N6byC3gKZ0B3x
j7qG3iK5F24fKbiO3lMiyvEpP9qO3lMirj341ocd6P1NUoqT52O06D0jUVcX
eJ030FsiXZeD5eFd6C2TyNYW2/5u9JbJeefJnUd70PuHeKsqXv3yJnou8ldW
bMkHDHrPSWtJwdLGXvRYsLz09Y6ZXuxnQS7Xe0zehz4LSms2K6J0Es/984I9
/Op6lQ7zvCBIHJL/gh49NkRzvlVW6tFjQ5JXofI3ej5sSGVaFK8Z8Hu8QRrn
vPKpAT1vqGMbzVoDej4Q1jY0NGdAzwfu3VB+EWNEzwfUTwrkmUb0VsGYcM35
ciN6q+DORXmi0ogeB+J2lw3rjOhxoOv3qbuT1OOAb1gP84x6q4HVnmQVmNBb
DdOxU9nrTOhxocWhbU8yoceF9efEPJkJPS7sc15seM+Eni9kyQdPHKCeL3wT
2Skuoh4PCu3aws+oxwPd5ERjFfV48GL2tv4a6vlBRNmMsJ56frD4a6W8kXr+
cCQhfK+Cev6Q+tMnxy9Rzx/q74dGqKkXAIeOKZJbqRcAp6+ybBrqBcK6fd+/
3Ea9QEhTn/PtoF4gPN5rVmipFwRCxcyjn6kXBLW99qVu6vFB4lTfumnC+8UH
1Vzxx73U58PWzQP2PjrPh3iXcoOe5vEhqzF3l4F6AmAcrv1G6gmgqHo61UQ9
ATTXpYn7qSeAtJ0PxvupJ4D8keQKM/WEUM49LBqgnhDOfnWiYYB6QigSpwUM
Uk8Im4wppYPUEwJ3uc86SD0RKEtfirHQ/yOCzKy8Ygv1RGAVfXfdQj0RaCoU
Dgv1RFAZtjFyiHrB8PB4aIZ7/y9jRONJ
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"F[\\!\\(\\*SuperscriptBox[\\(I\\), \\((LU)\\)]\\)]\"", 
            TraditionalForm]}, AxesOrigin -> {0, -42.87381398820685}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Local Unitarity integrands, F=(SafeLog10[Abs[Re[#1]]] & \
)( Left approach )\"", TraditionalForm], 
         PlotRange -> {{0, 5.}, {-70.29262678468919, -42.873813988206756`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Complete LU integrand (scaling: -0.001 )\"", 
           "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: -0.001 )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, BaselinePosition -> {\
1, 2}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Before"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.004]], 
            LineBox[CompressedData["
1:eJw90g9Q02UYB/C5MdgGso1ZEWrigdSdJXhyE4Or0zr2G3+EQcKxmYEHI9M7
AY0bh+YBdZclDQ/C+JftD4pEwQg0xPE+CE3iIEcm52yJsYWoyAlOoBAoaM/7
3P3ud++9z/P5vvfeu3H/4aQsNovFyvrvW/5jnTIuXt12hYEzVct1gaTXHu2w
lDJQvbLuINLAR9vlaga2rVQPmf64l6eKxv2fiaFw5+ALWxj4X7OSN1rkC5Hr
GQhf6b9BXmlmnzkmYSBbvVzDJFOgzreJGKhZmbeRlHOZXZPPMTA4sFx2Eraj
su+nYPTuEm9TSIb5bcz7kyjGj+R/1ou+g/CHlnZxE3DeSQr7Lf6OTZg3RpzV
G9ftFaI3TrKT8q1cFnr3ibLso4LDLpnbe0jOHpCEBjyUub0JUvVr+dhOh8zt
TZK7Ef5dGrvM7T0mQtApjg9j/2My1bD5WsiQzO1PEVNQbapyAOenSdo+9Qlu
H+Y9IXGOtxoCetFzkTo+X6oF9Fzk8xM3M5Rm9J6S5Nu12qOX0Zsh1oGWieFL
6M0SZ+qXOwrb0Zsj6c6FJtUP6M2Rzr2jzjwTen+Tft7Snc5m9P4hggdDrq3f
ozdPQrtHblmb0HtGije8WFHxLXrPyCG9rbigEb0Fwn+Sqjh2Ab1Fokn/Yraq
Ab0lMtZzue36efRYMNNfI1h7HvtZsH2i7MeCc+izgB9hvni/XuZ+f6sgyxq9
9UA95q2CotcsJTNG9NjQljcdXmZEjw3al8qnw43osaE1o7PUYcDzcCA3O3G2
2oAeByKrbFFKA3oeMKP66pNAA3oe8EuHQ/hIj54HrOnr2UL06HHhVnyfrFKP
HhcSuc8P5erR84S6qfoEhR49T5CmtO4Jp54n+L4cXxRAPS+4ylpXyKGeF/zO
kT6d1KHHA/vrgY12HXo8KMn9SzWgQ48HDy5F3zDr0OPDKIc90qJDjw9huleT
66knAPv+s7wa6gnAYMqzn6aeAIqvf9p8knrewFiC1cXU8wYf06l7hdTzgdzA
i+vzqecDlpPzrhzq+cBvfTbVIeqthq+tbbvep95qCBrU12RSzxfm5qOUGdTz
hXuGD4/so54vjFfn/aGinhDa7Qe1adQTwpXu0qJU6omgO+9O0x4dvi8R2KJC
vN+hvghM+bcrk+i8CHRtglgFzRPBNU5iUCL1xMCbM69NoJ4YQlU3w3ZTTwzv
xmnei6eeGI5/N2KMo54YAltPL8ZSzw8mNWkfxFLPD5JL3xyLoZ4f5ESU5MRQ
zw/atBVeMdTzg65gYaOcehJYimlPkdP7kUDk6EEfOfUkEFEu7WeoJwF/TbiW
oZ4EvtlQp2Sotwb8nebNy+t/ASAfBHA=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxF0ntM21UUB/C+KKUtpQ+Ki6CMLWM4F3GIGskq/gFsGTIqJsxpfKxjrGY6
XNttygREqMxAaEDHhuzF9o+b4uJKecM5ygqZKfHBpmEhArJuwFwZiGMtFBXM
Pfckv/xyc8/5fG9ubpypIGePSCAQ7PnvW/6zsnuutVRfNOLx+uW6ACHZD6H/
rBG/WFm3Q1lDlFlQb8SnVqoX+k9PxOyuZftXwWwoy52qMuL/2k+wL3JBkX/U
iMkr/YMQtHbom8qNuDd/uX6FNz9sKj1ZasSGlfkhuFz322hUiREHPMs1DPZY
SZ24iHmjcPxq7MbtR1jeGNh/FLZ7P2D+OETPVmd3vc/mb4JBWfJx32GWdwvK
KzzzgUPMmwDVt/OKnEPMm4SETd+XuQ8y7w5U7nJvMx5k3p8wnfy0wWdjng/u
jyUuNNiYdw92maOv5NpY/z1InOh8JcbG/BmozL3xx5SVzc+Cs7h4DK0s7y+o
MdxedcrKvDkQFznsxVbmzYEup+mlPCvz/oaMO5c9WeTdh73qgrwU8ubh8+1F
Zx4j7wG4Fe5V0eQ9APvqwSMq8vzQfWm8VExeAILxhdN+C/MWIHFuX+2MhXmL
oBza8sKUhXmL4NPLro9bmBeEqFhh0u8W5i3B6VeFhiHy/gHf+RMj18gToPfR
j6Q/U78A03bENA6QL8CKXyIbf7Cw9ydEX0LQ3095QvykUNnoJk+E0ZdGq3rJ
E6HinUzXd+SJsE+1Xod0HjFuzEw620OeGBezZnK7yZNg3+HPkrrIk2De9PAT
neRJcMO7uq0d5IWguutuYTt5IXis3H6ljTwptoZmrmkjT4qmkkBNK3lS1N+q
1bSSF4rnZrLOtJAXitn6+udayJOhOT9ixEWeDNem2apd5Mlw95ffZLjIC8Nh
uVvqIi8MX+8dGmgmT45jN9Y3NJMnxxSDYH8zeXJMTu1PbyZPge37Z+OayVPg
4HmpiHtKbNtW53WSp8SFkVSPkzwlTp342uUkLxzvJjkaneSF42bvOYeTPBXK
D1ws4Z4Kj75YcIB7Kmz1Yh73IvDlgHUn9yLQJDJlc0+Nb31lznDS+1Kj3vT2
89xXY9Hk1mf5vBrTg74neZ4ajy2lP849DS5eSInnngYrrnfGcU+Dymc6HuGe
Bm9vSHiYexp8z+GP4p4WP61ZG8k9LTqrTmq4p8VNk69FcE+LbUs7w7mnxTcC
DgX3dLijfz6M348O0wKVMu7psLtnSyj3dHizL17KPR32bF4Xwr1IXOdKlSyv
/wUdIP2D
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxF0ntMU3cUB/BSoZRC6QMDZhBch4sjG2Zv3BjrGNM/kNmrYcxlTpEFyQwT
yLpMM5SIsc2G448xKW0pVQc6wuoYmk3wcQ4PGWx9gDzsjKIgKzAmqxQsCs5R
4Hd6kpubk3vO53tz70+Rnb81h8/j8XIWLt+dVfIrOweFJRzq9L6qg6rN454r
Jg4Ni30TvB7bHFnzEYcvLVYbaDVvJBbGs+ddIH44UfxgNYdLWjfsblScvR7F
4cuL872gvv3VlmEph7m7fTUAw/1jCpeIQ+Pi/p8QMzOe1xrEoc3qqxsQHZTT
si2AebfB9PuqqNg51XLeEPSkHG8zTauW/TtQkai6G/Kvanl/BNK9vLSUv1XL
eS7Yu+9DxVqXatkbA/XhYz+eHGbeOOzyfl9WfYt5EzCZzc8S3mTeP1Cq+TKt
+zrzJiFm4MXGMSfz3JD8Qu/4hmts3g23trzlvtnP/HuwSVLy6g99bH8KVHND
eaZelucBy2x25q9XmTcNYaIbJ9w9zJuGCktU5zs9zJuB0Yt7Jn/qZt59GOVS
beu6mecFjTLJcNnBvFko06bObHcwbxaaxFpnsIN5D0DXXv/1JTvzHoKrX1Fe
ZGfeHEhPrW9ItTNvHnIPNtlldubNg369g++yMe8RGDNDSsDGvP+gT62qNtmY
9xg675pbim3M42F07/49OTTPwyOya89stjGfh5mNZuNrC/3S+QvAv6Bk71rK
C8AzOWu2RZHHxwOa8lUh5PHxPeXcF/NW5vHxu581G+5Z2fusQIkgP3PUyrwV
+Lb7uSODVuYF4srIzoYBK/MCseKM8qKDvEB8vkBY1kVeEG4qrZK0kxeEz3qf
SADyBPhkp6evmTwB5tWYvb+QJ8CPL2Rpz5IXjNyd0H0N5AVj+3nnZQt5Qpzo
SNxaT54Qk1yW+DryhKiIPZd8mrwQbCkwamvJC8EpsTqghjwRJh3w1p4kT4RZ
Oz4vOEGeCLlPW7cfJy8UvzkUn2smLxSdaTuOVpMXhmHHCrtM5IXh0yMd0Sby
wlCtDD1URZ4Y44QJXiN5YnRcyCgykheOJu1guJG8cPyjPMNiIC8ci6Y+yTSQ
J8HI1feFBvIkeOWRu01PnhRr0/M1vn7pfEmxcb9ZpSdfihuvdsTqaV+KcwFK
TyXlSfFN52fWSvJkWJY+VFdJngy1zbLSSvJkeFRVlV9JngyLa+Le93sybD2Y
keL35BhzbiTB78nxfMK3MX5PjpcET4n9nhz1bTsf68iT4xpzjEdHXgR+MLFu
TEffJwJ3HS4c1JEXgXHvtvXryItAQ6fA7vciUF2v+M3vrVz4H/Po6/8H78cd
4Q==
             "]]}, {
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90gtMm1UUB/C29AGlLX0MJ0MhA7f4CDK2MYQIcxXSLm6aIAyjCLrZTYRo
iFLYUMS5oGbgI+qWgYRXgmwzOpWHQ+GcDWdboKyljNfYgPLekLYDeWwMFOy5
J/ny5eae8/vf3NzNB9+J1/E4HI7uv2/tT3VipGzqd7sWT59Zq7MQf9136Pla
LRavry/CltTPU6yFWtyxXi0w1aILHcmgfRN802ifLUvQ4v+aBSIdt4L/fFaL
O9f7bbB1pqqJH6XFI4fXqhvS94pKX4/QYsn6fB88NSYY0z+tRXP7Wg1AQE6E
Y/9z5A1Bo8PwSVw65Q3DW0G+pcrb5I9AnawirSiL5kdhv9ebu9P3Ud44cPsv
q0fDyZuEoK82LhRtJW8KYq4Gli9sIu82mGtqEysV5E1DsyJc2upF3gxYsi+O
cjzIc4JpRZ0juK9x9zvhp4n2v39c0Lh9F1QfjM6z39G45+9ATqmoumhG486b
Bd+gsY7KWxq3Nwd52nPJGyfIm4MXmvWf2kfI+wc8/WLql4fIm4dR73hV6k3y
FqDl1K7XPAbIW4Q9wWW2kT7yFuF8ycfe93rIW4IvNOWC2G7y7oLt0Xf9G7vI
uwfjq/mrL9nIW4aMlMbGhzrJW4a04WNnuVby7sOVsKVsvoW8FUgsCw0Iukre
KvzKS76e1EEeBwPF0WFVZurnYNQT2we5ZvI5uKpPuZHZrnG/Py5m+kwmudoo
j4s5GUfO5bWRx8OGn79+5cE28niY9epOv6ZW8nhYVJ5cm95K5/HAkGrXw8Gt
5Hmgo+fYIbuJPD72Fkf+UGMij4+nFk/syjKRx8cNIl2ixkSeAJsL094OMJEn
wKzYhoUlI3lCvLRNo+8zkifE6G9ffP8PI3lCdOhmvq80kifC93Y3VZw0kifC
fnWPfzbzPLHj6CXLG8zzxLgLBccTmOeJV+YnluKY54W/qasEkczzwpAh89EQ
5onRWvFMaDDzxNjhVHlsYp4YD8se71YwzxujBX8VipnnjUJniIzPPAkmpCbF
rhjIk+Cg8Tv/JQN5EjSJco/PGciTYp3PgTSngTwpPiaJvTxtIE+Gk1E386eY
J0Oz/YHicebJEPpU/FHm+WCBv7R+mHk+2MsJrRlknhyFv3xou2Gg9yXHhlxD
2ADz5Vhcl9vUz+bl2DR7PrOP5clxWO3a28s8BfpGpKp7mKdAxxl9UjfzFLjv
pF/BNeYp8OXp/LYu5inQy7V9SxfzlOhquPuljXlKDG4fktiYp8Ts7EdOdzJP
idAR/mQn85RYcuiCxco8Fc5/duADK7sfFQZulu6wMk+F2zp7nBbmqXCl/lqd
hXkq3JMS85GFeRuwOSg1fm39L675FSs=
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"F[\\!\\(\\*SuperscriptBox[\\(I\\), \\((LU)\\)]\\)]\"", 
            TraditionalForm]}, AxesOrigin -> {0, -43.37902585954863}, 
         DisplayFunction :> Identity, 
         Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Local Unitarity integrands, F=(SafeLog10[Abs[Re[#1]]] & \
)( Right approach) \"", TraditionalForm], 
         PlotRange -> {{-5., 0}, {-70.54594970305412, -43.379025859548534`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Complete LU integrand (scaling: 0.001 )\"", 
           "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 0.001 )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.07200000000000001]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.004`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]},
    {
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxd0slJg1EAReE4z7MNWIPuYw2WIESXliNqBZbg2pWgIAiC4EJRRFEkzvOU
/+C75FwI4ZD/fS+EzCyuLDQ6a7Va4+/VevdW11rbrP/3etVbpWerbevznXq7
sl96rnr+oPTyUmuHpTeq80el93ZbO5Z3ovtO5Z/p/Lnuu5B3Ke9K3rW8G3m3
8pp6vin/Tufvdd+DvEd5j/Ke5D3Le5H3Ku9V3pu8d3kf8j7lfcr7kvct70de
bb79+TR+mv9fR2nuS7NOeWm8NN+nS16adctL46XxeuSlWa+8NF4ar09emvXL
S+Ol8QbkpdmgvDReGm9IXpoNy0vjpfFG5KXZqLw0XhpvTF6ajZfm/5XGT3M+
zX1pNiEvjZfGS+Ol2aS8NF4aL42XZlOl+X3SeGm8NF6aTZf+BSreMF4=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90g8snGccB/DDOf/1Do3ohHTNppbN6bktVLrfz6ha1mScrtOsdOuUrSEm
ZdVjNlqGaptY0aMhVrYqKVb7Y6MddtwJs47SxrT+F+V67q71n6HP7/0mb948
eZ/f5/vkzbPzeJzshDGPxzux8Wy+Kcd9vav21qxCoWIzlfBzcalLjHwFirbW
DTBf9tT1pu8yeG2lFfgvjab3PV1k39VwLTA39Ie8BXih/QPRpwc9/F3mQbq1
vwciPpsRB+U8g+iozfSB++nHHwo69FC8Nf8AdhX7hy2p5qCrczP/QU6vXt2g
1DBvCP4IaEhNKp1kfcMwuCY6yB98xPxRyPELkF/p6GDzY7BkJYu5pxtgfRMQ
JfZs+9xonHmTEOnwBfyWMMW8KXjjk+zG0W9nmPcErpaEhMs3+l94M/DdrXf3
HwUt8zQwMlzf8Z5GyzwtpKWWxG1PofNroUspaJnWzjF/Dgx1vdJYmY7N60Cz
8LbPtXId69PDPj+7nRnTOuYZwLH/WJnsVT3zDJDtFrlDfUTPvGfgaZwafiBT
z7zn4FpXYzJRrWfePIQ0dsdn/a1n3gIMpoSYTT0hbwGcwvmC700NzFuE9PNR
XlJnA/OWoLnEY9DK08C8ZYj4sfPWOT8D81agssulYybYwLwVKD/ioMuMIG8V
CvJ2lOSeJG8NrnsHRIoTyVsHT1e5d1EqeTzs5V+J1WXSfh52rsdnh10kn4eR
xROGycsGdv+M8OOvzC81FlGfEa5WPdg9VUqeMUYXjs2mlZNnjFkfODUVXifP
GPdIKhJ8quk8Juj9jk6SUEOeCTp75V0M/Yk8PsaOnW0briePj96ORjNuv5LH
R/e6ToFHA3mmGFjbLV3+nTxTVNTXKvMbyROg0Oe5zOQ2eQJMHnz9XtAd8gQo
O5P0y8k/yTPDDP/HIzHN5JlhSe7dPlkLeeaYdT+jyrWVPHMEcdLLfa3kmeO/
s7tqkv4izwLn1lRfWyjJs8ACg1tGjpI8S0wd+OjMqpI8SzStnhn/tI08S1zs
2eN+p408K1yOdkoWtpNnhfFGUXNh7eRZY7fzqbOKdvKssWf0gk1PO3nWOF2h
CRWoyLPBia5wU6mKPBvkD11oOqoizxYVGolZmoo8W3xr6WF4mYo8WzzUXym+
zXnbsCn+xsN+ztuGkquBLRrOE+J+04jdJmq6X0JMjDx0eLuafCGOp65lv6Km
eSHu25u45KWmPiE6Ku7eRzV5IrzxWm/wQc4TYbZYnn2Y80Rok5hecYzzRBhd
O9oazXki5Gnf5MVxnh1+mSs8lch5dvhoIFySzHl26KSsCPmG8+ywQRI8co7z
7LA3aEifxXn2+L6b++VcNf0feyyYTem+xHn2mFXaV5vHefZYLV/3y+c8e5T6
1p4v5DwHrG++ma/YWP8PUlno/g==
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw91H9M1HUYB/Djjl8H3O8YzVH+iEp06GGi6ajnadFwSDahFv2BksGhNiEl
CRVkBdkqZIIK8UOZJEYaBSUYY5B0M6CODAgIYiAnsTtOrzvuB3ffr3gJ3fN5
tu8+++z7PK/3d9999lm9LzspQygQCDIePUsrVcDJE8keSwhWVi3V16BpXX9K
Fy3B6uV9O1xOMggk2RJ8brm00Hk14MA3jfS+DzLz8ufrJiX4v/YHbMhJap+V
S3Hzcv8Q7H1ivPlTkGKmZqlGQNI5urbmoBRrlufHICb4kC2mXIr9uqWagMs3
tkJ+m9Tr3YGpt0pfrBiVevOmYbBvX1uzg/y7UDj62WleLvPOz8BDtc/hxkiZ
N28WBkSxtUaQeT0D+PwqvG1Jlnk9I4TJxt83Z8i8nglaQ2cn5bnk3QNjVoW6
uJg8M3x4/NKXh8vIs8Dal3uLPLXUb4Eh08aVu78i3wpDsSbdqWaan4cTco+o
60fKs4FTslCguEmeHTSHuLSqX8izQ1xpRNa7OvIcUFTaEF0zQJ4T4n2GN20f
IW8B+nfOrUkZJ88FyfJ8sWiSPBdEqV/Iip8mzw3cP02F6hnyODgddGVL7yx5
PAzs6soNM5L3ADZtvr7+GRN5D+BW7vw7/D3yFqH9XPb+C2byHsJfw2GDCgt5
HqhxuWpTreQJ0HwkfdvH89QvwD0d22tKbOQLMGKsNP4Du8x7/nzw/N3+tB0O
yvPBlvTyFqGTPCGaDPFtjU7yhHi86KeG2AXyhPj0z4N5Nxfoe0RoKNhojXGR
J8KSdel1F13k+eKrnS8ZeBd5vviGq0H8mps8Xywc63qyyk2eH3LKkaf+dpPn
h2d/b3GHcuT5Y3Vxxf4Ejjx/fDvNvuYYR54/dn/U11PPkReAkQe7Z3o48gLw
0sTjLgPzAjFiKvGIP09eIIaXVN9YxZMXiOOO11c/z5MnxtLvQj2JPHliFIXq
Kvfy5AXhLce3695jXhBqp1WWk8wLQr17w4oS5gWjaKRzuJJ5wdjUV5dQz7wQ
TDiTWnuNeSFoUdfP/cC8EGxqu7K7g3kS3BJVPtfNPAl+EXn7tx7mSbFBmCLu
Z54UpZ3c9QHmPbpXys9PDjNPhiP6xHNjzJNhb1yHfoJ5cvw8NXx4iqfzJcc8
Sc5RPfPlaDx6TTfD5uX45s52/SzLk6Nh/PsuA/MUWLDSqJljngKdWxfvmJin
wOlPbNH3mafATG3cHjPzFFi96v6Bf5mnxMbpYykW5ikxWBMaZWWeErtNZXNW
5ilxMSLn7DzzlCjWOiNtzFMhqsKbbez/qDC89+qzduapcIfftnI781So0aqt
duapsPXCn684mPcYBq6IK1va/wdadbZP
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[\\(Log\\), \\(10\\)]\\)[|\[Kappa]|]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Deformation magnitude( Left approach )\"", 
           TraditionalForm], 
         PlotRange -> {{0, 5.}, {-0.7996053952962492, 4.797632371777494}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 0. )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"], 
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 2}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "Before"}], "]"}]}], "]"}]& )], 
     TemplateBox[{
       GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJxd0slJg1EAReEY53lswBq0EksQokvLEbUCS3AVwZWgIAiC4EJRRFEkapzn
5OC75FwI4ZD/fS+EzC6uLNSqlUql9vdqvXura61t1v97vd1bpefa29Hnu/VO
5aD0fPv5w9LLS60dld5onz8uvb/X2om8U913Jv9c5y9036W8K3nX8m7k3cq7
k9fQ8w359zr/oPse5TXlNeU9yXuW9yLvVd6rvDd57/I+5H3K+5T3Je9b3o+8
ynbn82n8NP+/rtLcl2ZVeWm8NN+nW16a9chL46XxeuWlWZ+8NF4ar19emg3I
S+Ol8QblpdmQvDReGm9YXpqNyEvjpfFG5aXZmLw0XhpvXF6aTZTm/5XGT3M+
zX1pNikvjZfGS+Ol2ZS8NF4aL42XZtOl+X3SeGm8NF6azZT+BaYCYl4=
             "]]}, {
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90gtQlFUUB/DddRd2l9c+GLNIRTAzS8gVUgj9TBSKSVNx0WKZwobnONkk
iRSa9nAkZxKCQZBIoZFHDwoJhXC9p8nC3eUNre6ABAGbJiCPb1/sCgnd852Z
b765c8/5/e/cuSsOHNqTJODxeEmPvvk/VlnT5nXdz7uYc8XzVU3erPeMr8pw
MecX1o0kobb03W0/uJj1C/UbiUlb80lEIu7rSJXK0KgRuJj/tQ7y7XBn8dxF
JxOy0N9N9tfbXzux2cmkJM+Xkdzr2reR3zfDlCzMm0jcA2fu+x/MMK0t89VH
lnm91FD1xAz1BkhGRHVZpNZB8wbJ13XJws4DDuoPkW/6D1WCh4POD5P7R5WL
0xvsNM9MrmoCWO80O/Xukouva5fcWWqn3j0ynXInZ8Joo959cvaF7anqAhv1
Rkm7OblbEmej3jiJ9a/7Y87PRr0JUnEsd2yZ2Ur7J4jlVE1q1M9W6k+SLEHU
8Z2nrHR+ipiu3AqSaqw0b5qUZrZUvRxqpR5L+P/8VGiUo8cSp+it7R9NWqhn
ISIfeZlXj4V6VuKTqpXsaLRQz0Y2157jScss1LMTpSa6VnHGQj072dP8yhsb
MtFzkC8SmKKYJPRmSN1uRdEKNXpOcj3dtL4gCj0X+f3k6tnsMPRcJBZCmca1
6D0ksxcGzKsD0ZslBTlRR2oeR2+OhK0KHgqSo8eDnqKIzDwJ9vNg31TG90SA
Pg/M0oPiSy6Wvj8+FEXKbEE2lubx4Vrl4KVXp1jqCSBc+MzA+BhLPQG4rywZ
df+XpZ4AkvIuHzxjZul5FkGf/MGmd4bQWwSBF3wTKgbQE4Kad9iwph89Ifh8
rjoy3YueEAJeLF7uMKEnAueNkJjQ2+iJIDWn86lyI3puoLoeeDz8T/TcoDfe
7TtHN3puUDiu+ri3Cz13uHpWHdPXiZ47ZIkTf7R3oCeGvI3ihrUd6Inh5IbI
a0fb0RND5LM3Nbfa0JOAX0rih9Ft6EmgX+QZ0tyKnhSWtxqMe1vRk4KoIeDv
8Rb0pLDY/cnZ/Bb0PEC7tM+2tQU9DzDrK7UzBvQ8IfZ2XPwvBvQ8oWZwle2E
AT1PyP10uG2HAT0vaJxMDPU3oOcFT7eqcm169Lxh8rEKdbcePW8QfmWT1unR
8waZ6/LWQj16PlC/MrIkW4+eD0wnV2uTOE8GWfz9mt16fF8ySN/1nIrhfBkM
MZ/xg7l5GTQ53sv35/JkwC55eEXJeXKotmZvEXOeHE6bJZJZHXpyGD9sGWN1
6MmhakTdMapDTw7kWGnBiA49BXT5bgr4S4eeAjqMu942cZ4C1onjtvVwngIy
TXfr2jlPAflpOeUGzlNCW3CK4KYO70cJ5/1UzTc4TwlfGiZGfuU8JZze2buX
cJ4SEibCPLSc5wvh5dH8pkfr/wAUDhiF
             "]]}, {
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 90], 0.011111111111111112`]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6], 
             Thickness[0.002]], 
            LineBox[CompressedData["
1:eJw90g9MlHUYB/D3/nMcd/feHSLTiSnKv+pkHZDlmW8DsUhC1AjDxQIRshy5
4NqEJdSEZYMxoQRM/i3ciCLpL8TyeRIRTQGdZOefNAQNEm+AaMr9647z+T3b
u3ffvb/n8/z27lmWlb85R8xxXI7n8b6pHjSkrnzeohUO1XmrDdxZg5mWYa1Q
P5+74WDh3mNJBl4wzVcvhP6TnBocyz/+fgacphdCjSm84NPOg2TTWJz1LV6I
mT9/ESpbC0wju3khd6e3LkHc9acmNxTwwuH5/suw993++kALLwyc89Y1KB5U
KV8uIO9viE/KfWTNp3kjkOZ69r2mt8kfhYTshSHbsqh/DFaULjXXvEHzbkNx
kd8TPZvJG4f2RVXDga+QNwHH16/oHIgn7w4EX+3/1mUmbxLeKbtl+T6OPBtc
zWsftUWTNwXDJ83rO56k81PQmztUcyeM/Gn4Wh0507Cc+mdg1R8xRyCE5t2D
tLoNnycsJm8WFKdSxCuDyZuFE/3S3PQF5N2Hp3d+d+6SnrwHUH7q9GAtT95/
kLlua/MhDXkPQai3aAcCyHsIF+GLQpOKvEdQskbo7lOSNwfmH3LW7fMjzw4a
WePNDAV5Drjhz0+8LifPAdURfXP5MvKc8FPygeBmKXkuKLRmVI9LyHND0MfF
0gQJeRwqtz2T2Cmm8xxqrWG7jWLyOSy9kHWiW0T7J8JXa6/9miqieSK0KSpF
9znyxPj7EcVrLRx5Ymx1FDanc+SJ8a/PtLYgju4jwfKy37q73LTvEiz46ErK
Jk/2eVIcSVm79p5L+9iTom3HVGKTJ/s8Kc4e1m1N82SfJ8PUkKhdgS7yZLjm
09ttl53kyTFpPGJjq5M8OQZN72q0OMmT462NebJkJ3kKLFIrp8Od5CkwvGX/
mJx5fhi19Hj+hIM8P7RvB+OQgzw/jJfvOf2zgzwl/rsq726LgzwlHqi4klbl
IM8f66Cjbx/z/NFYe1S0h3n+uPqTJms281T4Y8/dJenMU6Gx5pe2ZOYFoHC0
PD2BeQHYk9Lpb2ZeAIbnSL+MYZ4aQ/e/qTIyT41bhtKjIpinwQ+u2yeXM0+D
hdLiF0OYp0HnTcfCRczToqkmIyuIeVpUf+MyGJjHI1ral/Ge7NsvHs2DmaVq
5vNYEhEdpWL9PJa9FBmoZPN4FAuxqxXM0+H7mZIqGfN0eKF3ZoGUeTpc/Jz7
pJh5OpyMPlYrYp4OY6qVFRzz9FgX+2GD206eHivOjp5x2cnT45KwvABv9nl6
lDWWZzvt5OmxqFI64LCTZ8CvOm4kerPv/xgweEvqkJ15BrRu791hZ54BtX+e
ldmZZ8CSyIjOOeYFYtf5rhxv/h+dBq59
             "]]}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {
           FormBox[
           "\"\\!\\(\\*SuperscriptBox[\\(10\\), \\(-\[Lambda]\\)]\\)\"", 
            TraditionalForm], 
           FormBox[
           "\"\\!\\(\\*SubscriptBox[\\(Log\\), \\(10\\)]\\)[|\[Kappa]|]\"", 
            TraditionalForm]}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 600, 
         Method -> {
          "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& )}}, PlotLabel -> 
         FormBox["\"Deformation magnitude( Right approach) \"", 
           TraditionalForm], 
         PlotRange -> {{-5., 0}, {-0.8230625950664252, 4.93837557039855}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
          "\"Cut #0 : pq10 pq13 pq4 pq5 pq7 (scaling: 0. )\"", 
           "\"Cut #2 : pq11 pq13 pq4 pq7 (scaling: 0. )\"", 
           "\"Cut #4 : pq3 pq7 pq9 (scaling: 0. )\""}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.036000000000000004`]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.002`", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.872503308664413*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"b9fd5bd1-2866-44e7-9f87-0eb176b80ffb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2254, 1368},
WindowMargins->{{917, Automatic}, {1280, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6e49494d-b116-4901-a7b5-ff4ffd30d35a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 965, 22, 74, "Input",ExpressionUUID->"75c08ad8-8742-429b-8916-fd7b9c44553e"],
Cell[1526, 44, 195, 3, 30, "Input",ExpressionUUID->"82a727b7-8c17-40c9-a126-8880c8440ead"],
Cell[CellGroupData[{
Cell[1746, 51, 204, 4, 67, "Section",ExpressionUUID->"995193f5-2a29-418a-88b6-a42a2ff82391"],
Cell[1953, 57, 223, 5, 35, "Text",ExpressionUUID->"71399c66-ab34-47e5-8230-0ce127e76510"],
Cell[2179, 64, 1036, 29, 30, "Input",ExpressionUUID->"550d253f-7838-424f-a957-318649a0d572"],
Cell[CellGroupData[{
Cell[3240, 97, 180, 3, 54, "Subsection",ExpressionUUID->"1383efc7-9f74-42ea-8b6e-d41c567ddec4"],
Cell[3423, 102, 824, 20, 73, "Input",ExpressionUUID->"890b7a9e-f9ee-40e6-8b46-116e7490aac5"],
Cell[CellGroupData[{
Cell[4272, 126, 588, 10, 30, "Input",ExpressionUUID->"c91f7964-d9ea-4293-905b-8d982f6a6243"],
Cell[4863, 138, 5126, 73, 70, "Print",ExpressionUUID->"61d919d0-f618-48b3-a2b6-48471bef847b"]
}, Open  ]],
Cell[10004, 214, 3037, 54, 840, "Text",ExpressionUUID->"659b5ef0-0580-4075-bd33-e60bc5de373c"],
Cell[13044, 270, 392, 9, 30, "Input",ExpressionUUID->"075bec9b-015a-4934-bd7b-f137de48ce2f"],
Cell[13439, 281, 184, 3, 35, "Text",ExpressionUUID->"7a0cbc1c-9a4d-465a-88f0-8cd1de359349"],
Cell[13626, 286, 236, 4, 30, "Input",ExpressionUUID->"afef17ed-f471-43b6-a67d-158d81621fc5"],
Cell[13865, 292, 239, 6, 35, "Text",ExpressionUUID->"60b274ed-1750-4cdb-b4ad-508af54feaaa"],
Cell[14107, 300, 1349, 33, 136, "Input",ExpressionUUID->"7e98d27b-c103-4f68-9437-ec7d2ca57a44"],
Cell[15459, 335, 793, 16, 115, "Input",ExpressionUUID->"5181b56b-ed9b-4092-a337-b6ec4b503361"],
Cell[16255, 353, 233, 3, 35, "Text",ExpressionUUID->"4b3ae137-7a9f-4e49-b68f-1a28e8e0c810"],
Cell[16491, 358, 564, 10, 30, "Input",ExpressionUUID->"dd42dd1a-68f8-456c-badf-e0bc3a8a15a9"],
Cell[17058, 370, 938, 17, 30, "Input",ExpressionUUID->"41954933-5f83-47af-8ff5-4c5ecd80cf34"],
Cell[17999, 389, 1046, 18, 30, "Input",ExpressionUUID->"71b0010e-ad51-4fe1-b309-5f629c178c4a"]
}, Closed]],
Cell[CellGroupData[{
Cell[19082, 412, 224, 4, 38, "Subsection",ExpressionUUID->"7939857b-8a83-497e-a4d4-1dc65547072c"],
Cell[19309, 418, 233, 4, 35, "Text",ExpressionUUID->"377b50d3-f259-4b2d-8497-50e060ff8ed5"],
Cell[19545, 424, 3458, 85, 241, "Input",ExpressionUUID->"3e6743e5-8179-4c48-9322-8d934723d0ef"],
Cell[23006, 511, 196, 3, 35, "Text",ExpressionUUID->"70900719-5713-4c2f-97ac-4ecda0e40b18"],
Cell[23205, 516, 174, 3, 35, "Text",ExpressionUUID->"614d5186-196d-4242-988f-0b4d8a230b32"],
Cell[23382, 521, 1548, 32, 178, "Input",ExpressionUUID->"f5fec1fe-74a9-4739-bf51-97f88e0513b6"],
Cell[24933, 555, 2521, 49, 241, "Input",ExpressionUUID->"794f0462-4572-4d86-b4f3-63021f660a7f"],
Cell[27457, 606, 10584, 244, 858, "Input",ExpressionUUID->"8ae92056-0856-4d2f-ba44-530dacfff392"],
Cell[38044, 852, 1747, 41, 94, "Input",ExpressionUUID->"2713bc21-6436-439c-8c1c-abadb21480a1"],
Cell[39794, 895, 5349, 124, 430, "Input",ExpressionUUID->"5e4328e7-127d-4214-b984-1967dd3afae0"],
Cell[45146, 1021, 26054, 550, 2121, "Input",ExpressionUUID->"7765daf2-d1b7-4cf8-a369-6a8a89f24d5a"],
Cell[71203, 1573, 3898, 92, 346, "Input",ExpressionUUID->"ab6eb50c-6659-4ada-a895-da73580c6d0a"],
Cell[75104, 1667, 4524, 100, 452, "Input",ExpressionUUID->"64dc4c1d-6f08-4120-95ef-15fbcaae3d9e"],
Cell[79631, 1769, 6907, 156, 615, "Input",ExpressionUUID->"70abfd8e-3cf6-4b0e-9490-dff2acc28208"],
Cell[86541, 1927, 27492, 615, 1431, "Input",ExpressionUUID->"e44629ca-561d-4ee2-b3f8-80e672fd6462"],
Cell[114036, 2544, 4509, 94, 367, "Input",ExpressionUUID->"e0f7f274-14cc-4fcb-8a98-9b11d67568e8"],
Cell[118548, 2640, 2969, 70, 199, "Input",ExpressionUUID->"4b21b7f7-cfe7-48c6-af83-4d75bff95b13"],
Cell[121520, 2712, 2961, 70, 157, "Input",ExpressionUUID->"6f17d930-b8b7-4106-a3e0-aa5d5813e952"],
Cell[124484, 2784, 9033, 209, 708, "Input",ExpressionUUID->"1d3f569c-9d91-487f-b8da-d483dcdac142"],
Cell[133520, 2995, 8313, 201, 580, "Input",ExpressionUUID->"fca95ff8-65c9-4ecf-94d7-8622802c2d48"],
Cell[141836, 3198, 4053, 96, 205, "Input",ExpressionUUID->"0869e065-b14d-46c9-8222-18d93b393f4b"]
}, Closed]],
Cell[CellGroupData[{
Cell[145926, 3299, 285, 4, 38, "Subsection",ExpressionUUID->"09280b95-664e-4508-ae9e-be413d6d6abb"],
Cell[146214, 3305, 1296, 31, 136, "Input",ExpressionUUID->"aa5cb4cc-bceb-42a7-abcf-49def91eb3ad"],
Cell[147513, 3338, 2182, 58, 115, "Input",ExpressionUUID->"04d0761f-15af-4426-a937-d107fbf15bee"],
Cell[149698, 3398, 4458, 104, 430, "Input",ExpressionUUID->"7cf73d5a-0621-4dbf-b025-f257c6252e73"],
Cell[154159, 3504, 37567, 811, 3036, "Input",ExpressionUUID->"1ee9318e-e52b-4a69-bfa0-8265d8a523c2"],
Cell[191729, 4317, 2898, 69, 199, "Input",ExpressionUUID->"05e17c16-60fc-4ae7-9db6-20cba9ff20ba"],
Cell[194630, 4388, 4511, 98, 241, "Input",ExpressionUUID->"a644d656-ce87-4df4-a7fc-b021db574304"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199190, 4492, 272, 4, 67, "Section",ExpressionUUID->"5630c070-370b-4ddc-8b53-1eee323cc833"],
Cell[199465, 4498, 227574, 3737, 284, "Text",ExpressionUUID->"59fbb144-36d6-46da-9a53-b9c4094a8cee"],
Cell[427042, 8237, 228, 6, 30, "Input",ExpressionUUID->"a25d7c53-5ea2-444c-82e1-99b43af23a4d"],
Cell[CellGroupData[{
Cell[427295, 8247, 299, 4, 54, "Subsection",ExpressionUUID->"0256b87e-a88f-412c-a86d-6a423c14740c"],
Cell[427597, 8253, 181, 3, 35, "Text",ExpressionUUID->"154d5605-24e2-4be2-9761-68d8a3436e3f"],
Cell[427781, 8258, 511, 10, 30, "Input",ExpressionUUID->"a6e6ee6b-cbbf-4c44-8e57-85b677dfd492"],
Cell[CellGroupData[{
Cell[428317, 8272, 306, 4, 30, "Input",ExpressionUUID->"bcf48534-cde7-4bcd-a927-ff800959984a"],
Cell[428626, 8278, 638, 10, 34, "Output",ExpressionUUID->"fe1eed83-e512-413a-82b1-7e95aeae6e37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429301, 8293, 537, 14, 30, "Input",ExpressionUUID->"f384539d-1f41-41a5-b69f-4864deba0311"],
Cell[429841, 8309, 1069, 24, 34, "Output",ExpressionUUID->"5f25383c-d856-48bc-95eb-7fac1419af8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430947, 8338, 416, 9, 30, "Input",ExpressionUUID->"6b6d8a9a-c503-4ae2-9d51-c06062875fae"],
Cell[431366, 8349, 274, 4, 34, "Output",ExpressionUUID->"dc490c1e-bc77-4881-a575-52ae152a7113"]
}, Open  ]],
Cell[431655, 8356, 165, 3, 35, "Text",ExpressionUUID->"fa56c3dc-c00e-4eab-b37c-4eca75dea69d"],
Cell[CellGroupData[{
Cell[431845, 8363, 210, 4, 30, "Input",ExpressionUUID->"aad7d31c-6599-47cb-b6ac-936fd5fff2e7"],
Cell[432058, 8369, 204, 5, 34, "Output",ExpressionUUID->"8f7a79dd-5f63-4106-b1a3-34b0314c0c9d"]
}, Open  ]],
Cell[432277, 8377, 162, 3, 35, "Text",ExpressionUUID->"7486ec49-09b1-4384-ad22-4f0cd178fe8f"],
Cell[432442, 8382, 490, 11, 33, "Input",ExpressionUUID->"8b320750-691e-44e3-ade8-a545f9b8a22c"]
}, Closed]],
Cell[CellGroupData[{
Cell[432969, 8398, 171, 3, 38, "Subsection",ExpressionUUID->"6b45f589-81bd-4e09-a060-2d850cbf1a34"],
Cell[433143, 8403, 200, 3, 35, "Text",ExpressionUUID->"607e2e10-14af-48f9-b341-4c639ae022a4"],
Cell[CellGroupData[{
Cell[433368, 8410, 765, 16, 30, "Input",ExpressionUUID->"c1d79114-fa11-4e30-a955-be00544c21d6"],
Cell[434136, 8428, 1049, 25, 34, "Output",ExpressionUUID->"e49c5368-96bd-4325-b62a-547d2f662557"]
}, Open  ]],
Cell[435200, 8456, 212, 5, 35, "Text",ExpressionUUID->"4452fc51-5cab-48de-ab04-7452af73a819"],
Cell[CellGroupData[{
Cell[435437, 8465, 344, 6, 30, "Input",ExpressionUUID->"6b5bd8b6-832e-41be-bb2d-e2b63b8d7ce7"],
Cell[435784, 8473, 104437, 1901, 525, "Output",ExpressionUUID->"5d843d27-2a09-44ab-a143-0f5b453da50b"]
}, Open  ]],
Cell[540236, 10377, 310, 5, 35, "Text",ExpressionUUID->"3ec0c776-5e8a-4214-991b-8a1e0d870808"],
Cell[CellGroupData[{
Cell[540571, 10386, 1482, 35, 136, "Input",ExpressionUUID->"e90449c2-f2c1-45ea-a490-b62d0889e63f"],
Cell[542056, 10423, 158907, 2928, 627, "Output",ExpressionUUID->"ffe67670-3d6a-4dc2-9cf7-7e955df283b2"]
}, Open  ]],
Cell[700978, 13354, 342, 5, 35, "Text",ExpressionUUID->"324a0852-7c80-45d9-a9f2-3456bff7b541"],
Cell[701323, 13361, 913, 20, 52, "Input",ExpressionUUID->"37c6b4fb-178d-4573-b26f-46c231681511"],
Cell[CellGroupData[{
Cell[702261, 13385, 795, 20, 30, "Input",ExpressionUUID->"4bf9d9e8-8491-4ddc-8b28-8d71357128ac"],
Cell[703059, 13407, 66241, 1360, 805, "Output",ExpressionUUID->"6a004d16-6f35-4841-9ebc-143a4650579a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[769349, 14773, 251, 4, 38, "Subsection",ExpressionUUID->"1f495613-cca4-4fc7-af00-f95a667ab1cb"],
Cell[769603, 14779, 171, 3, 35, "Text",ExpressionUUID->"e613583c-27f8-489f-b7f6-fcc686e34fe4"],
Cell[CellGroupData[{
Cell[769799, 14786, 389, 8, 30, "Input",ExpressionUUID->"48d699ea-361d-4a46-984f-fbdb8ac61fed"],
Cell[770191, 14796, 5007, 111, 170, "Output",ExpressionUUID->"82194084-84e5-4fc6-9a72-7e34f4fe52d1"]
}, Open  ]],
Cell[775213, 14910, 252, 4, 35, "Text",ExpressionUUID->"caaaaa24-b77c-47b6-8c3e-61ca186b51a9"],
Cell[CellGroupData[{
Cell[775490, 14918, 735, 20, 30, "Input",ExpressionUUID->"f0be899f-d5d7-4be1-8af3-2437d18849f5"],
Cell[776228, 14940, 67486, 1151, 119, "Output",ExpressionUUID->"744c9e76-336a-4e2f-a9f3-27d37bb6133f"]
}, Open  ]],
Cell[843729, 16094, 361, 7, 35, "Text",ExpressionUUID->"580d2e08-f19b-428e-9dbc-c5c76638e2d6"],
Cell[844093, 16103, 977, 19, 33, "Input",ExpressionUUID->"cc791a1a-cd94-42c5-aca3-de31a90a751e"],
Cell[845073, 16124, 210, 4, 35, "Text",ExpressionUUID->"b87c8d93-0256-451d-ac03-748890c3f84a"],
Cell[CellGroupData[{
Cell[845308, 16132, 302, 7, 30, "Input",ExpressionUUID->"fcd75b3f-ae5b-439b-b3b8-30e722166303"],
Cell[CellGroupData[{
Cell[845635, 16143, 398, 7, 24, "Print",ExpressionUUID->"6ccf46c1-f4a2-4543-888d-e52ca4f52546"],
Cell[846036, 16152, 100427, 1879, 164, "Print",ExpressionUUID->"9a28762e-efb7-4ad9-92de-14e76c497deb"],
Cell[946466, 18033, 393, 7, 24, "Print",ExpressionUUID->"3f342e69-bd3a-40cb-add0-8f445acfc1d1"],
Cell[946862, 18042, 76337, 1432, 112, "Print",ExpressionUUID->"c7b36718-4fed-4089-bac7-48891ba3c1a2"],
Cell[1023202, 19476, 397, 7, 24, "Print",ExpressionUUID->"ad4afcf9-0a6d-4633-b09f-9646ccface50"],
Cell[1023602, 19485, 175626, 3321, 270, "Print",ExpressionUUID->"dfd16b6a-cd7d-4d94-bfc2-2f04bd990df3"],
Cell[1199231, 22808, 400, 7, 24, "Print",ExpressionUUID->"2b80fc2e-bcf4-44dc-8b6c-de20ae006978"],
Cell[1199634, 22817, 206169, 3904, 270, "Print",ExpressionUUID->"a6bdfd46-a0c8-48d7-9c89-7e849f521328"]
}, Open  ]]
}, Open  ]],
Cell[1405830, 26725, 168, 3, 35, "Text",ExpressionUUID->"354fc605-ff3e-4bc1-a716-cd9f47588f72"],
Cell[CellGroupData[{
Cell[1406023, 26732, 640, 14, 30, "Input",ExpressionUUID->"1ccd6b63-61e7-4252-aed8-bbd5ce6017c8"],
Cell[1406666, 26748, 7803, 157, 170, "Output",ExpressionUUID->"e256f716-33ec-4d5d-80e4-faeee8770a2e"]
}, Open  ]],
Cell[1414484, 26908, 245, 4, 35, "Text",ExpressionUUID->"d0acc464-d31c-482b-a3b3-1ab7f94d0b38"],
Cell[CellGroupData[{
Cell[1414754, 26916, 435, 9, 30, "Input",ExpressionUUID->"69f31984-c64d-43cb-bc43-65395aaa199d"],
Cell[1415192, 26927, 66314, 1222, 573, "Output",ExpressionUUID->"a6d0b918-11b7-4ba0-a31a-2362b9d6bed4"]
}, Open  ]],
Cell[1481521, 28152, 278, 7, 35, "Text",ExpressionUUID->"d1659107-dfb8-4870-974e-6dce2666c26a"],
Cell[1481802, 28161, 1032, 21, 30, "Input",ExpressionUUID->"2baedf82-4980-4411-96d9-c8b9c729d3f7"],
Cell[1482837, 28184, 202, 3, 35, "Text",ExpressionUUID->"c280353a-3db2-4e93-b4ea-05e526c563ad"],
Cell[CellGroupData[{
Cell[1483064, 28191, 1096, 25, 33, "Input",ExpressionUUID->"e1a05e12-8639-4fd4-bbf6-095ae455682c"],
Cell[1484163, 28218, 1454, 32, 56, "Output",ExpressionUUID->"a2d550de-c505-49cd-8c24-38b147a80145"]
}, Open  ]],
Cell[1485632, 28253, 221, 5, 35, "Text",ExpressionUUID->"aafeb2cc-5b2a-4297-97f1-7b6030809354"],
Cell[CellGroupData[{
Cell[1485878, 28262, 763, 20, 30, "Input",ExpressionUUID->"40c8c02e-5ed1-44b5-8497-f226e01db19f"],
Cell[1486644, 28284, 67931, 1229, 471, "Output",ExpressionUUID->"132bd936-e6d2-4da1-99ca-cefa3fbc4d47"]
}, Open  ]],
Cell[1554590, 29516, 185, 3, 35, "Text",ExpressionUUID->"e553fa40-490e-47b5-b5f7-839bc0717614"],
Cell[CellGroupData[{
Cell[1554800, 29523, 331, 8, 30, "Input",ExpressionUUID->"ca390118-94a1-4ea8-96a6-31d81902f37e"],
Cell[1555134, 29533, 104472, 1901, 525, "Output",ExpressionUUID->"ffbecff9-8c16-431a-8b39-6c95dca00c29"]
}, Open  ]],
Cell[1659621, 31437, 268, 6, 35, "Text",ExpressionUUID->"0911bfde-02d0-4c43-8327-e711b04b097b"],
Cell[CellGroupData[{
Cell[1659914, 31447, 614, 14, 73, "Input",ExpressionUUID->"1fa486a7-bd7f-42c5-b681-752fcfdffcfb"],
Cell[1660531, 31463, 159359, 2939, 627, "Output",ExpressionUUID->"271ea2b8-d830-475d-acd2-49245ee04007"]
}, Open  ]],
Cell[1819905, 34405, 187, 3, 35, "Text",ExpressionUUID->"ea425c9c-6cbe-426b-97a5-a3d2c62dca03"],
Cell[1820095, 34410, 740, 16, 73, "Input",ExpressionUUID->"e416560f-c03f-457b-a602-885a0f358837"],
Cell[CellGroupData[{
Cell[1820860, 34430, 240, 4, 30, "Input",ExpressionUUID->"561d144b-52ed-4dbd-9026-63ddddd61fc3"],
Cell[1821103, 34436, 151347, 2510, 537, "Output",ExpressionUUID->"2a720300-a8cf-4d63-a1b2-afc847e04936"]
}, Open  ]],
Cell[1972465, 36949, 204, 3, 35, "Text",ExpressionUUID->"04c754c1-5323-486f-8c5e-54568be11bb6"],
Cell[CellGroupData[{
Cell[1972694, 36956, 434, 10, 30, "Input",ExpressionUUID->"365ac0a4-498d-412d-80e5-ba04e3e728f7"],
Cell[CellGroupData[{
Cell[1973153, 36970, 255, 5, 24, "Print",ExpressionUUID->"4c2919cc-4922-4b07-9ecd-b9c8b87eaebe"],
Cell[1973411, 36977, 237, 4, 24, "Print",ExpressionUUID->"b3d10f93-bbf7-47e2-a42c-95d399801d43"],
Cell[1973651, 36983, 256, 5, 24, "Print",ExpressionUUID->"1b26d73c-5dcb-47b0-a739-a0486d4a418a"],
Cell[1973910, 36990, 576989, 9846, 1524, "Print",ExpressionUUID->"8c123205-54d7-4b79-9500-636623cbfdeb"],
Cell[2550902, 46838, 256, 5, 24, "Print",ExpressionUUID->"a7c3daaf-e5c1-4310-822f-3245c6c3c677"],
Cell[2551161, 46845, 232, 4, 24, "Print",ExpressionUUID->"950fdb7e-b394-445c-a1ce-2287f55035bc"],
Cell[2551396, 46851, 256, 5, 24, "Print",ExpressionUUID->"4235a489-425e-45e7-999d-2cb4bab29228"],
Cell[2551655, 46858, 487941, 8347, 1200, "Print",ExpressionUUID->"ba575232-fb64-4213-a219-c53950314c0c"]
}, Open  ]]
}, Open  ]],
Cell[3039623, 55209, 277, 6, 35, "Text",ExpressionUUID->"b9c175cc-d9cf-470b-96c1-516f1294ef9f"],
Cell[3039903, 55217, 766, 17, 52, "Input",ExpressionUUID->"47115be0-06a3-4f9e-b1e1-09ca889a3723"],
Cell[CellGroupData[{
Cell[3040694, 55238, 799, 21, 30, "Input",ExpressionUUID->"7b340396-0ee8-4ecd-b4d2-0d3a79064eba"],
Cell[3041496, 55261, 66217, 1359, 805, "Output",ExpressionUUID->"1c2b95a4-b50f-47a1-a7b9-3fcb2fdec60c"]
}, Open  ]],
Cell[3107728, 56623, 273, 6, 35, "Text",ExpressionUUID->"fc1be356-7b7c-48e6-b721-f8d1a07c617c"],
Cell[CellGroupData[{
Cell[3108026, 56633, 1333, 37, 52, "Input",ExpressionUUID->"02b82632-eee2-432f-8c27-8b372966695c"],
Cell[3109362, 56672, 38529, 785, 411, "Output",ExpressionUUID->"89bb4ce5-8984-40d5-877f-076bbc74cbc5"],
Cell[3147894, 57459, 36324, 748, 411, "Output",ExpressionUUID->"6515e3c3-0e45-432b-b974-505b8427afda"]
}, Open  ]],
Cell[3184233, 58210, 237, 6, 35, "Text",ExpressionUUID->"c21d24e2-7785-4f65-9f5f-be9b1c633ec8"],
Cell[3184473, 58218, 1320, 25, 52, "Input",ExpressionUUID->"991e0a02-2716-4fa5-809a-dbb01e3714df"],
Cell[CellGroupData[{
Cell[3185818, 58247, 680, 19, 30, "Input",ExpressionUUID->"16697681-45ff-435e-a4f5-cef9b275ad7e"],
Cell[3186501, 58268, 51160, 975, 1299, "Output",ExpressionUUID->"2a87c388-bdf6-4e4e-8a38-63e7a10d5ef1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[3237710, 59249, 279, 4, 38, "Subsection",ExpressionUUID->"b41ee0da-4662-4e82-b32f-dcd1382e301d"],
Cell[3237992, 59255, 309, 7, 35, "Text",ExpressionUUID->"48f09def-0fc1-4c7b-a855-913187b84413"],
Cell[CellGroupData[{
Cell[3238326, 59266, 976, 19, 73, "Input",ExpressionUUID->"4b749813-faef-4b75-b2c2-2e9f8d043e0c"],
Cell[3239305, 59287, 1000, 26, 34, "Output",ExpressionUUID->"13327d86-27c8-4ae8-b561-541bb63aa930"]
}, Open  ]],
Cell[3240320, 59316, 196, 3, 35, "Text",ExpressionUUID->"33582afd-5615-45af-86cb-29237692cf73"],
Cell[CellGroupData[{
Cell[3240541, 59323, 373, 7, 30, "Input",ExpressionUUID->"6115b2ca-6b77-4b16-acb3-06ccffea0c12"],
Cell[3240917, 59332, 104554, 1901, 525, "Output",ExpressionUUID->"d8bdd29d-68a3-4063-bb3f-b54fea95f457"]
}, Open  ]],
Cell[3345486, 61236, 785, 17, 73, "Input",ExpressionUUID->"396688aa-d714-424c-82db-45a8bbc07f37"],
Cell[CellGroupData[{
Cell[3346296, 61257, 240, 4, 30, "Input",ExpressionUUID->"1005adae-3b30-42e9-b0d3-4529c38dd31d"],
Cell[3346539, 61263, 151062, 2520, 537, "Output",ExpressionUUID->"3b859323-bc7b-4768-abc6-553268fae090"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3497638, 63788, 389, 8, 30, "Input",ExpressionUUID->"2f9be270-2c59-460b-94a8-dcb6cf303092"],
Cell[CellGroupData[{
Cell[3498052, 63800, 281, 6, 24, "Print",ExpressionUUID->"ab2fcf67-6f3f-4568-ab45-1dca1f15c6e8"],
Cell[3498336, 63808, 262, 5, 24, "Print",ExpressionUUID->"8e0ae4a8-9313-4346-9ecb-3379430f87dd"],
Cell[3498601, 63815, 281, 6, 24, "Print",ExpressionUUID->"297acfa8-00f8-40c1-b01f-d674acafd1a8"],
Cell[3498885, 63823, 576439, 9842, 1524, "Print",ExpressionUUID->"923ac337-f5ed-419e-9090-3c9aa15462df"]
}, Open  ]]
}, Open  ]],
Cell[4075351, 73669, 786, 17, 52, "Input",ExpressionUUID->"f2fc852d-bb48-4fdc-8124-08ade031136a"],
Cell[CellGroupData[{
Cell[4076162, 73690, 799, 21, 30, "Input",ExpressionUUID->"1ca4f841-740e-49db-915c-3412c4c03221"],
Cell[4076964, 73713, 64960, 1339, 805, "Output",ExpressionUUID->"b9fd5bd1-2866-44e7-9f87-0eb176b80ffb"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

